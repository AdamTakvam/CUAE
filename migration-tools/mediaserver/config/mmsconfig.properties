# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
# 
# Metreos Media Server configuration file mmsconfig.properties
# 

Hmp.maxConnections = 16                        # max concurrent ip sessions

Media.agcDisableVox = 1

ServerLogger.globalMessageLevel = 3            # 3-debug 4-conx detail 5-normal  
ServerLogger.numThreads = 1                    # threads devoted to logging
ServerLogger.timestamp  = 1                    # timestamp logrecs 1/0

ServerLogger.destStdout = 1                    # log to console 1/0
ServerLogger.destDebug  = 0                    # log to debugger 1/0

ServerLogger.destFile   = 1                    # log to file 1/0
ServerLogger.isFullpath = 1                    # is path a full path 1/0
ServerLogger.filepath   = "c:\Program Files\Cisco Systems\Unified Application Environment\Logs\MediaServer\mms.log" 
ServerLogger.backup     = 1                    # backup existing log on boot 1/0
ServerLogger.flush      = 0                    # flush after write 1/0
ServerLogger.maxlines   = 4000                 # max lines in a server log

ServerLogger.destSocket = 0                    # install tcp logger 1/0
ServerLogger.port = 5554                       # tcp logger connect port

Media.remoteCoderFramesize = 20   

Server.cleanLogsAfterDays = 2                  # days to keep server logs
Server.commandTimeoutMsecsConnect = 30000      # give it more time in debugger 

Server.digitSequenceIntervalSeconds = 2        # digits considered sequence interval

Server.callStateDurationMsecs = 2000           # silence/nonsilence trigger duration                                              

Client.msmqMmsMachineName = "."                # media server receive queue
Client.msmqMmsQueueName   = "cuae-mediaserver"

Client.permitDefaultAppQueue = 1               # default if missing on connect
Client.respondOnAsyncExecute = 1               # send provisional async responses

Client.heartbeatAckExpected  = 1               # server expects heartbeat back 1/0
Client.heartbeatAcksMissable = 2               # max acks missed before disconnect

Server.cleanFilesIntervalMinutes = 30          # how often to monitor expired files  

Server.sessionTimeoutSecondsDefault = 300  



# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
#
# Conference hairpinning switches  
#
# promotion to HMP/demotion options (can be combined where appropriate)
# Server.hairpinPromotionOpts = 0: promotion off unless overridden by client param
# Server.hairpinPromotionOpts = 1: promotion on  unless overridden by client param
# Server.hairpinPromotionOpts = 2: demotion  on  unless overridden by client param
# Server.hairpinPromotionOpts = 4: promotion off regardless of client param 
# Server.hairpinPromotionOpts = 8: demotion  off regardless of client param 
#
# Server.hairpinOpts = 0: do not hairpin unless overridden by client param  
# Server.hairpinOpts = 1: always hairpin unless overridden by client param  
# Server.hairpinOpts = 2: never hairpin regardless of client param  

Server.hairpinOpts = 1 
Server.hairpinPromotionOpts = 1  # 3 = 1=promote + 2=demote



# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
#
# Text to speech configuration  
#  
                      
Media.ttsEnable = 1                            # Enable TTS on this server (1/0)
Media.ttsEngine = "neospeech"                  # TTS engine to use for TTS requests
Media.ttsServerIP = "127.0.0.1"                # TTS server IP address
Media.ttsServerPort = 7000                     # TTS server port  
Media.ttsVoice = 1                             # TTS default voice (ordinal)
Media.ttsVolume = 0                            # TTS default volume 
Media.ttsVoiceRate = 0                         # TTS default speak rate  
Media.ttsQualityBits = 8                       # TTS bit resolution (8 or 16)
Media.ttsExpireDays = 0                        # TTS WAV file expiration: 0 = immediate


# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
#
#  Speech to Text configuration
#
Media.asrEnable = 1                            # Enable Voice Recognition on this server
Media.asrEngine = "speechworks"                # Voice Recognition engine to use for ASR requests


# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
#
# Engineering diagnostics switches 
#
# 0x1         Log media/coder attributes   
# 0x2         Log file/data formats
# 0x4         Log effective termination conditions
# 0x8         Log registered events
# 0x10        Log state of each media device (if logResourceStatus = 1) 
# 0x20        Log state of each session (if logResourceStatus = 1)
# 0x40        Log bus timeslot assignments
# 0x80        Log listen/unlisten
# 0x100       Log hmp conference descriptor table
# 0x200       Log call state transition events
# 0x400       Log digit buffer state
# 0x800       Log map memory assign and free
# 0x1000      Log conference/conferee attributes
# 0x2000      Log volume/speed adjustments
# 0x4000      Log operation table content
# 0x8000      Log resource usage
# 0x10000     Log play/record file paths

Diagnostics.logResourceStatus = 0              # show resource stats 1/0
Diagnostics.flags = 0                          # engineering diagnostics



# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
#
# Configurable properties currently not overridden, showing embedded defaults
#
# Server.defaultBitRatePlay    = 8             # default bit rate for playback        
# Server.defaultFileTypePlay   = "vox"         # default file type for playback
              
# Server.defaultBitRateRecord  = 8             # default record sample rate in khz       
# Server.defaultFileTypeRecord = "vox"         # default file type for record  

# Media.remoteCoderType        = "g711ulaw"    # codec defaults may be overridden
# Media.remoteCoderFramesize   = 30            # via connect command parameters
# Media.remoteCoderVadEnable   = 0  

# Media.localCoderType         = "g711ulaw"    # to force a local property to
# Media.localCoderFramesize    = 30            # mirror the remote property, 
# Media.localCoderVadEnable    = 0             # do not configure the property
# Media.G723kbps = "5.3"                       # G.723 kbps "5.3" default, or "6.3"
# Media.G729type = "a"                         # G.729 annex: "a" default, or "ab"

# Media.recordFileExpirationDays = 10          # How many days to keep recording 

# Media.conferenceNotifyOnJoin = 1             # Sound tone on join conference
# Media.conferenceNoToneReceiveOnly = 1        # No tone for receive only parties

# Media.verifyRemotePortMod2 = 0               # Error if RTCP not modulo 2 (1/0) 
# Media.defaultToneFrequency = 600;            # Default frequency for playTone

# Media.ttsEnable = 1                          # Enable TTS on this server (1/0)
# Media.ttsEngine = "rvoice"                   # TTS engine to use for TTS requests
# Media.ttsServerIP = "localhost"              # TTS server IP address
# Media.ttsServerPort = 1314                   # TTS server port  
# Media.ttsVoice = 1                           # TTS default voice (ordinal)
# Media.ttsVoiceRate = 0                       # TTS default speak rate -10 < r < +10
# Media.ttsQualityKHz = 8                      # TTS sample rate (8 or 16)
# Media.ttsExpireDays = 0                      # TTS WAV file expiration: 0 = immediate

# Server.reassignIdleVoiceResources  = 1       # can reassign resources 1/0 
# Server.waitForVoiceResourceSeconds = 3       # timeout for vox resource acquire
# Server.waitForVoiceResourceMsecs   = 0       # timeout for vox resource acquire
# Server.idleDeviceSelectionStrategy = 0       # 0 = most recent, 1 = idle longest  
# Server.pendingCommandStrategy = 1            # enable media term result on barge disco

# Server.sessionTimeoutSecondsDefault = 180    # Non-conference session inactivity

# Server.eventWaitForDependencyMsecs = 2000    # term event wait for its dependency

# Server.setUnhandledExceptionTrap = 1         # Trap fatal excps/force server (1/0)
# Server.pointerValidationLevel = 1            # Ptr deref check level (0/1/2)

# Following are service thread timeouts, not media termination conditions:
Server.commandTimeoutMsecsDefault = 600000     # general command timeout default 
Server.commandTimeoutMsecsConnect = 10000      # default timeout on start media 
Server.commandTimeoutMsecsPlay    = 600000     # default timeout on play audio      
Server.commandTimeoutMsecsRecord  = 600000     # default timeout on record audio 
# Server.commandTimeoutMsecsGetDigits = 900000 # default timeout on get dtmf     

# Following are values used for termination conditions generated by media server:
# Server.defaultMaxSilenceSecondsPlay   = 20   # failsafe media termination play         
# Server.defaultMaxSilenceSecondsRecord = 300  # failsafe media termination record     
# Server.defaultMaxDelaySecondsReceive  = 15   # failsafe media termination dtmf  
# Server.defaultMaxSecsTone = 10               # failsafe media termination tone  
       
# Server.postProvisionalresult = 1             # post OK msg on async execute 1/0
# Server.connectAsync = 1                      # start media asynchronously 1/0                 
# Server.sessionMonitorIntervalSeconds = 5     # how often to police session pool 
# Server.cleanFilesIntervalMinutes = 240       # how often to police log/audio files
# Server.cleanLogsAfterDays = 3                # nbr of days to keep log files
                                               # play/rec paths are relative to:

Server.audioBasePath = "c:\Program Files\Cisco Systems\Unified Application Environment\MediaServer\audio" 

# Server.serverTimeoutSeconds = 60             # stop server after thread dead n secs 
# Server.threadMonitorIntervalSeconds = 10     # ping threads every n seconds

# Server.crashServerOnVoiceEvent = 0           # generate hard crash for testing (1/0)
Server.overwriteDumpFile = 1                   # overwrite previous dump or not (1/0)
Server.dumpBasePath = "c:\Program Files\Cisco Systems\Unified Application Environment\MediaServer\dump"

# Hmp.maxInitialResourcesIP    = 64            # Default min(maxconnect,ipavail)
# Hmp.maxInitialResourcesVoice = 64            # Default min(maxconnect,voxavail)
# Hmp.maxInitialResourcesConference = 1        # Default uses all available
# Hmp.startServiceMaxWaitSeconds = 15          # Max wait to start HMP service

# Server.serviceThreadPoolSizeFactor = 1       # (n+1)/8 * maxConnections, 1<=n<=4 

# Media.utilityPoolSizeFactor = 1              # n/8 * maxConnections, 1<=n<=4     

# Media.conferenceActiveTalkersEnabled = 0     # active talker monitoring on/off 
# Media.toneClampDisableIP = 0                 # disable tone clamping 
# Media.agcDisableIP = 0                       # disable IP gain control  
# Media.agcDisableVox = 0                      # disable vox gain control
# Media.agcDisableConferee = 0                 # disable conferee gain control                                  

# Client.maxMqMessageAgeSecs = 60                
# Client.heartbeatIntervalSecs = 10            # Default - client can override 
# Client.msmqTimeoutMsecs = 3000               # Wakeup interval for mq listener
# Client.protocolAdapters = 1800000            # Adapters mask: do not change

# Client.permitDefaultAppQueue = 1             # default if missing on connect
# Client.respondOnAsyncExecute = 1             # send provisional async responses

# Diagnostics.debugBreakAtAllocation = 0       # break at specific memory alloc 
 
# foobar = -12345



# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
#
# Utility parameters
#

# flood digits parameters:
#iparamA = 53441    # identifies these parameters as belonging to the digits test
#iParamB = 200      # number of iterations of the digits test to execute
#iparamC = 4        # number of connections to send digits through
#iparamD = 2        # number of digits to send to each connection on each iteration

# voiceTunnelLoop parameters:
# iparamA = 53442   # identifies these parameters as belonging to voice tunnel sim
# iParamB = 12      # number of iterations of the digits test to execute
# iparamC = 1       # number of digits to send as acct code and pin

# hairpin test parameters used in conjuction with
# Server.hairpinOpts and Server.hairpinPromotionOpts  
# iparamA = 53444   # identifies these parameters as belonging to hairpin test A
# iParamB = 1       # value of client connect command parameter 'hairpin' (0|1)
# iparamC = 1       # value of client connect command parameter 'hairpinPromote' (0|1|2|4)

# TTS test A parameters 
#iparamA = 53460    # identifies these parameters as belonging to tts test A
#iParamB = 16       # identifies test number (1-16)


# cparamA = "who cares"
      
