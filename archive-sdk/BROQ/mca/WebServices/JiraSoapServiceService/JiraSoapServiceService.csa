//------------------------------------------------------------------------------
// <autogenerated>
//     This code was generated by a tool.
//     Runtime Version: 1.1.4322.2032
//
//     Changes to this file may cause incorrect behavior and will be lost if 
//     the code is regenerated.
// </autogenerated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by wsdl, Version=1.1.4322.2032.
// 
namespace WebServices.Base.JiraSoapServiceService {
    using System.Diagnostics;
    using System.Xml.Serialization;
    using System;
    using System.Web.Services.Protocols;
    using System.ComponentModel;
    using System.Web.Services;
    
    
    /// <remarks/>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="jirasoapservice-v2SoapBinding", Namespace="http://forge.metreos.com:8080/jira/rpc/soap/jirasoapservice-v2")]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(RemoteFieldValue))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(RemoteCustomFieldValue))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(RemotePermissionMapping))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(AbstractRemoteEntity))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(RemoteEntity))]
    public class JiraSoapServiceService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        /// <remarks/>
        public JiraSoapServiceService() {
            this.Url = "http://forge.metreos.com:8080/jira/rpc/soap/jirasoapservice-v2";
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://soap.rpc.jira.atlassian.com", ResponseNamespace="http://forge.metreos.com:8080/jira/rpc/soap/jirasoapservice-v2")]
        [return: System.Xml.Serialization.SoapElementAttribute("createGroupReturn")]
        public RemoteGroup createGroup(string in0, string in1, RemoteUser in2) {
            object[] results = this.Invoke("createGroup", new object[] {
                        in0,
                        in1,
                        in2});
            return ((RemoteGroup)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegincreateGroup(string in0, string in1, RemoteUser in2, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("createGroup", new object[] {
                        in0,
                        in1,
                        in2}, callback, asyncState);
        }
        
        /// <remarks/>
        public RemoteGroup EndcreateGroup(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((RemoteGroup)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://soap.rpc.jira.atlassian.com", ResponseNamespace="http://forge.metreos.com:8080/jira/rpc/soap/jirasoapservice-v2")]
        [return: System.Xml.Serialization.SoapElementAttribute("getGroupReturn")]
        public RemoteGroup getGroup(string in0, string in1) {
            object[] results = this.Invoke("getGroup", new object[] {
                        in0,
                        in1});
            return ((RemoteGroup)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegingetGroup(string in0, string in1, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("getGroup", new object[] {
                        in0,
                        in1}, callback, asyncState);
        }
        
        /// <remarks/>
        public RemoteGroup EndgetGroup(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((RemoteGroup)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://soap.rpc.jira.atlassian.com", ResponseNamespace="http://forge.metreos.com:8080/jira/rpc/soap/jirasoapservice-v2")]
        [return: System.Xml.Serialization.SoapElementAttribute("createUserReturn")]
        public RemoteUser createUser(string in0, string in1, string in2, string in3, string in4) {
            object[] results = this.Invoke("createUser", new object[] {
                        in0,
                        in1,
                        in2,
                        in3,
                        in4});
            return ((RemoteUser)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegincreateUser(string in0, string in1, string in2, string in3, string in4, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("createUser", new object[] {
                        in0,
                        in1,
                        in2,
                        in3,
                        in4}, callback, asyncState);
        }
        
        /// <remarks/>
        public RemoteUser EndcreateUser(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((RemoteUser)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://soap.rpc.jira.atlassian.com", ResponseNamespace="http://forge.metreos.com:8080/jira/rpc/soap/jirasoapservice-v2")]
        [return: System.Xml.Serialization.SoapElementAttribute("getServerInfoReturn")]
        public RemoteServerInfo getServerInfo(string in0) {
            object[] results = this.Invoke("getServerInfo", new object[] {
                        in0});
            return ((RemoteServerInfo)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegingetServerInfo(string in0, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("getServerInfo", new object[] {
                        in0}, callback, asyncState);
        }
        
        /// <remarks/>
        public RemoteServerInfo EndgetServerInfo(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((RemoteServerInfo)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://soap.rpc.jira.atlassian.com", ResponseNamespace="http://forge.metreos.com:8080/jira/rpc/soap/jirasoapservice-v2")]
        public void addComment(string in0, string in1, RemoteComment in2) {
            this.Invoke("addComment", new object[] {
                        in0,
                        in1,
                        in2});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginaddComment(string in0, string in1, RemoteComment in2, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("addComment", new object[] {
                        in0,
                        in1,
                        in2}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndaddComment(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://soap.rpc.jira.atlassian.com", ResponseNamespace="http://forge.metreos.com:8080/jira/rpc/soap/jirasoapservice-v2")]
        [return: System.Xml.Serialization.SoapElementAttribute("getUserReturn")]
        public RemoteUser getUser(string in0, string in1) {
            object[] results = this.Invoke("getUser", new object[] {
                        in0,
                        in1});
            return ((RemoteUser)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegingetUser(string in0, string in1, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("getUser", new object[] {
                        in0,
                        in1}, callback, asyncState);
        }
        
        /// <remarks/>
        public RemoteUser EndgetUser(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((RemoteUser)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://soap.rpc.jira.atlassian.com", ResponseNamespace="http://forge.metreos.com:8080/jira/rpc/soap/jirasoapservice-v2")]
        [return: System.Xml.Serialization.SoapElementAttribute("getCommentsReturn")]
        public RemoteComment[] getComments(string in0, string in1) {
            object[] results = this.Invoke("getComments", new object[] {
                        in0,
                        in1});
            return ((RemoteComment[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegingetComments(string in0, string in1, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("getComments", new object[] {
                        in0,
                        in1}, callback, asyncState);
        }
        
        /// <remarks/>
        public RemoteComment[] EndgetComments(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((RemoteComment[])(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://soap.rpc.jira.atlassian.com", ResponseNamespace="http://forge.metreos.com:8080/jira/rpc/soap/jirasoapservice-v2")]
        [return: System.Xml.Serialization.SoapElementAttribute("getComponentsReturn")]
        public RemoteComponent[] getComponents(string in0, string in1) {
            object[] results = this.Invoke("getComponents", new object[] {
                        in0,
                        in1});
            return ((RemoteComponent[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegingetComponents(string in0, string in1, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("getComponents", new object[] {
                        in0,
                        in1}, callback, asyncState);
        }
        
        /// <remarks/>
        public RemoteComponent[] EndgetComponents(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((RemoteComponent[])(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://soap.rpc.jira.atlassian.com", ResponseNamespace="http://forge.metreos.com:8080/jira/rpc/soap/jirasoapservice-v2")]
        [return: System.Xml.Serialization.SoapElementAttribute("loginReturn")]
        public string login(string in0, string in1) {
            object[] results = this.Invoke("login", new object[] {
                        in0,
                        in1});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult Beginlogin(string in0, string in1, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("login", new object[] {
                        in0,
                        in1}, callback, asyncState);
        }
        
        /// <remarks/>
        public string Endlogin(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://soap.rpc.jira.atlassian.com", ResponseNamespace="http://forge.metreos.com:8080/jira/rpc/soap/jirasoapservice-v2")]
        [return: System.Xml.Serialization.SoapElementAttribute("logoutReturn")]
        public bool logout(string in0) {
            object[] results = this.Invoke("logout", new object[] {
                        in0});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult Beginlogout(string in0, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("logout", new object[] {
                        in0}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool Endlogout(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://soap.rpc.jira.atlassian.com", ResponseNamespace="http://forge.metreos.com:8080/jira/rpc/soap/jirasoapservice-v2")]
        [return: System.Xml.Serialization.SoapElementAttribute("getStatusesReturn")]
        public RemoteStatus[] getStatuses(string in0) {
            object[] results = this.Invoke("getStatuses", new object[] {
                        in0});
            return ((RemoteStatus[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegingetStatuses(string in0, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("getStatuses", new object[] {
                        in0}, callback, asyncState);
        }
        
        /// <remarks/>
        public RemoteStatus[] EndgetStatuses(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((RemoteStatus[])(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://soap.rpc.jira.atlassian.com", ResponseNamespace="http://forge.metreos.com:8080/jira/rpc/soap/jirasoapservice-v2")]
        public void addUserToGroup(string in0, RemoteGroup in1, RemoteUser in2) {
            this.Invoke("addUserToGroup", new object[] {
                        in0,
                        in1,
                        in2});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginaddUserToGroup(string in0, RemoteGroup in1, RemoteUser in2, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("addUserToGroup", new object[] {
                        in0,
                        in1,
                        in2}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndaddUserToGroup(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://soap.rpc.jira.atlassian.com", ResponseNamespace="http://forge.metreos.com:8080/jira/rpc/soap/jirasoapservice-v2")]
        public void removeUserFromGroup(string in0, RemoteGroup in1, RemoteUser in2) {
            this.Invoke("removeUserFromGroup", new object[] {
                        in0,
                        in1,
                        in2});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginremoveUserFromGroup(string in0, RemoteGroup in1, RemoteUser in2, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("removeUserFromGroup", new object[] {
                        in0,
                        in1,
                        in2}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndremoveUserFromGroup(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://soap.rpc.jira.atlassian.com", ResponseNamespace="http://forge.metreos.com:8080/jira/rpc/soap/jirasoapservice-v2")]
        [return: System.Xml.Serialization.SoapElementAttribute("getIssueReturn")]
        public RemoteIssue getIssue(string in0, string in1) {
            object[] results = this.Invoke("getIssue", new object[] {
                        in0,
                        in1});
            return ((RemoteIssue)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegingetIssue(string in0, string in1, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("getIssue", new object[] {
                        in0,
                        in1}, callback, asyncState);
        }
        
        /// <remarks/>
        public RemoteIssue EndgetIssue(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((RemoteIssue)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://soap.rpc.jira.atlassian.com", ResponseNamespace="http://forge.metreos.com:8080/jira/rpc/soap/jirasoapservice-v2")]
        [return: System.Xml.Serialization.SoapElementAttribute("createIssueReturn")]
        public RemoteIssue createIssue(string in0, RemoteIssue in1) {
            object[] results = this.Invoke("createIssue", new object[] {
                        in0,
                        in1});
            return ((RemoteIssue)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegincreateIssue(string in0, RemoteIssue in1, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("createIssue", new object[] {
                        in0,
                        in1}, callback, asyncState);
        }
        
        /// <remarks/>
        public RemoteIssue EndcreateIssue(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((RemoteIssue)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://soap.rpc.jira.atlassian.com", ResponseNamespace="http://forge.metreos.com:8080/jira/rpc/soap/jirasoapservice-v2")]
        [return: System.Xml.Serialization.SoapElementAttribute("getAvailableActionsReturn")]
        public RemoteNamedObject[] getAvailableActions(string in0, string in1) {
            object[] results = this.Invoke("getAvailableActions", new object[] {
                        in0,
                        in1});
            return ((RemoteNamedObject[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegingetAvailableActions(string in0, string in1, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("getAvailableActions", new object[] {
                        in0,
                        in1}, callback, asyncState);
        }
        
        /// <remarks/>
        public RemoteNamedObject[] EndgetAvailableActions(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((RemoteNamedObject[])(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://soap.rpc.jira.atlassian.com", ResponseNamespace="http://forge.metreos.com:8080/jira/rpc/soap/jirasoapservice-v2")]
        [return: System.Xml.Serialization.SoapElementAttribute("getProjectsReturn")]
        public RemoteProject[] getProjects(string in0) {
            object[] results = this.Invoke("getProjects", new object[] {
                        in0});
            return ((RemoteProject[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegingetProjects(string in0, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("getProjects", new object[] {
                        in0}, callback, asyncState);
        }
        
        /// <remarks/>
        public RemoteProject[] EndgetProjects(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((RemoteProject[])(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://soap.rpc.jira.atlassian.com", ResponseNamespace="http://forge.metreos.com:8080/jira/rpc/soap/jirasoapservice-v2")]
        [return: System.Xml.Serialization.SoapElementAttribute("updateIssueReturn")]
        public RemoteIssue updateIssue(string in0, string in1, RemoteFieldValue[] in2) {
            object[] results = this.Invoke("updateIssue", new object[] {
                        in0,
                        in1,
                        in2});
            return ((RemoteIssue)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginupdateIssue(string in0, string in1, RemoteFieldValue[] in2, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("updateIssue", new object[] {
                        in0,
                        in1,
                        in2}, callback, asyncState);
        }
        
        /// <remarks/>
        public RemoteIssue EndupdateIssue(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((RemoteIssue)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://soap.rpc.jira.atlassian.com", ResponseNamespace="http://forge.metreos.com:8080/jira/rpc/soap/jirasoapservice-v2")]
        [return: System.Xml.Serialization.SoapElementAttribute("updateProjectReturn")]
        public RemoteProject updateProject(string in0, RemoteProject in1) {
            object[] results = this.Invoke("updateProject", new object[] {
                        in0,
                        in1});
            return ((RemoteProject)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginupdateProject(string in0, RemoteProject in1, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("updateProject", new object[] {
                        in0,
                        in1}, callback, asyncState);
        }
        
        /// <remarks/>
        public RemoteProject EndupdateProject(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((RemoteProject)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://soap.rpc.jira.atlassian.com", ResponseNamespace="http://forge.metreos.com:8080/jira/rpc/soap/jirasoapservice-v2")]
        [return: System.Xml.Serialization.SoapElementAttribute("getIssueTypesReturn")]
        public RemoteIssueType[] getIssueTypes(string in0) {
            object[] results = this.Invoke("getIssueTypes", new object[] {
                        in0});
            return ((RemoteIssueType[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegingetIssueTypes(string in0, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("getIssueTypes", new object[] {
                        in0}, callback, asyncState);
        }
        
        /// <remarks/>
        public RemoteIssueType[] EndgetIssueTypes(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((RemoteIssueType[])(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://soap.rpc.jira.atlassian.com", ResponseNamespace="http://forge.metreos.com:8080/jira/rpc/soap/jirasoapservice-v2")]
        [return: System.Xml.Serialization.SoapElementAttribute("getPrioritiesReturn")]
        public RemotePriority[] getPriorities(string in0) {
            object[] results = this.Invoke("getPriorities", new object[] {
                        in0});
            return ((RemotePriority[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegingetPriorities(string in0, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("getPriorities", new object[] {
                        in0}, callback, asyncState);
        }
        
        /// <remarks/>
        public RemotePriority[] EndgetPriorities(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((RemotePriority[])(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://soap.rpc.jira.atlassian.com", ResponseNamespace="http://forge.metreos.com:8080/jira/rpc/soap/jirasoapservice-v2")]
        [return: System.Xml.Serialization.SoapElementAttribute("getResolutionsReturn")]
        public RemoteResolution[] getResolutions(string in0) {
            object[] results = this.Invoke("getResolutions", new object[] {
                        in0});
            return ((RemoteResolution[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegingetResolutions(string in0, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("getResolutions", new object[] {
                        in0}, callback, asyncState);
        }
        
        /// <remarks/>
        public RemoteResolution[] EndgetResolutions(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((RemoteResolution[])(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://soap.rpc.jira.atlassian.com", ResponseNamespace="http://forge.metreos.com:8080/jira/rpc/soap/jirasoapservice-v2")]
        [return: System.Xml.Serialization.SoapElementAttribute("getSubTaskIssueTypesReturn")]
        public RemoteIssueType[] getSubTaskIssueTypes(string in0) {
            object[] results = this.Invoke("getSubTaskIssueTypes", new object[] {
                        in0});
            return ((RemoteIssueType[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegingetSubTaskIssueTypes(string in0, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("getSubTaskIssueTypes", new object[] {
                        in0}, callback, asyncState);
        }
        
        /// <remarks/>
        public RemoteIssueType[] EndgetSubTaskIssueTypes(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((RemoteIssueType[])(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://soap.rpc.jira.atlassian.com", ResponseNamespace="http://forge.metreos.com:8080/jira/rpc/soap/jirasoapservice-v2")]
        [return: System.Xml.Serialization.SoapElementAttribute("getCustomFieldsReturn")]
        public RemoteField[] getCustomFields(string in0) {
            object[] results = this.Invoke("getCustomFields", new object[] {
                        in0});
            return ((RemoteField[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegingetCustomFields(string in0, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("getCustomFields", new object[] {
                        in0}, callback, asyncState);
        }
        
        /// <remarks/>
        public RemoteField[] EndgetCustomFields(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((RemoteField[])(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://soap.rpc.jira.atlassian.com", ResponseNamespace="http://forge.metreos.com:8080/jira/rpc/soap/jirasoapservice-v2")]
        [return: System.Xml.Serialization.SoapElementAttribute("getSavedFiltersReturn")]
        public RemoteFilter[] getSavedFilters(string in0) {
            object[] results = this.Invoke("getSavedFilters", new object[] {
                        in0});
            return ((RemoteFilter[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegingetSavedFilters(string in0, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("getSavedFilters", new object[] {
                        in0}, callback, asyncState);
        }
        
        /// <remarks/>
        public RemoteFilter[] EndgetSavedFilters(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((RemoteFilter[])(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://soap.rpc.jira.atlassian.com", ResponseNamespace="http://forge.metreos.com:8080/jira/rpc/soap/jirasoapservice-v2")]
        [return: System.Xml.Serialization.SoapElementAttribute("getVersionsReturn")]
        public RemoteVersion[] getVersions(string in0, string in1) {
            object[] results = this.Invoke("getVersions", new object[] {
                        in0,
                        in1});
            return ((RemoteVersion[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegingetVersions(string in0, string in1, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("getVersions", new object[] {
                        in0,
                        in1}, callback, asyncState);
        }
        
        /// <remarks/>
        public RemoteVersion[] EndgetVersions(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((RemoteVersion[])(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://soap.rpc.jira.atlassian.com", ResponseNamespace="http://forge.metreos.com:8080/jira/rpc/soap/jirasoapservice-v2")]
        [return: System.Xml.Serialization.SoapElementAttribute("createProjectReturn")]
        public RemoteProject createProject(string in0, string in1, string in2, string in3, string in4, string in5, RemotePermissionScheme in6, RemoteScheme in7, RemoteScheme in8) {
            object[] results = this.Invoke("createProject", new object[] {
                        in0,
                        in1,
                        in2,
                        in3,
                        in4,
                        in5,
                        in6,
                        in7,
                        in8});
            return ((RemoteProject)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegincreateProject(string in0, string in1, string in2, string in3, string in4, string in5, RemotePermissionScheme in6, RemoteScheme in7, RemoteScheme in8, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("createProject", new object[] {
                        in0,
                        in1,
                        in2,
                        in3,
                        in4,
                        in5,
                        in6,
                        in7,
                        in8}, callback, asyncState);
        }
        
        /// <remarks/>
        public RemoteProject EndcreateProject(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((RemoteProject)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://soap.rpc.jira.atlassian.com", ResponseNamespace="http://forge.metreos.com:8080/jira/rpc/soap/jirasoapservice-v2")]
        [return: System.Xml.Serialization.SoapElementAttribute("getFieldsForEditReturn")]
        public RemoteField[] getFieldsForEdit(string in0, string in1) {
            object[] results = this.Invoke("getFieldsForEdit", new object[] {
                        in0,
                        in1});
            return ((RemoteField[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegingetFieldsForEdit(string in0, string in1, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("getFieldsForEdit", new object[] {
                        in0,
                        in1}, callback, asyncState);
        }
        
        /// <remarks/>
        public RemoteField[] EndgetFieldsForEdit(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((RemoteField[])(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://soap.rpc.jira.atlassian.com", ResponseNamespace="http://forge.metreos.com:8080/jira/rpc/soap/jirasoapservice-v2")]
        public void deleteProject(string in0, string in1) {
            this.Invoke("deleteProject", new object[] {
                        in0,
                        in1});
        }
        
        /// <remarks/>
        public System.IAsyncResult BegindeleteProject(string in0, string in1, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("deleteProject", new object[] {
                        in0,
                        in1}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EnddeleteProject(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://soap.rpc.jira.atlassian.com", ResponseNamespace="http://forge.metreos.com:8080/jira/rpc/soap/jirasoapservice-v2")]
        public void deleteIssue(string in0, string in1) {
            this.Invoke("deleteIssue", new object[] {
                        in0,
                        in1});
        }
        
        /// <remarks/>
        public System.IAsyncResult BegindeleteIssue(string in0, string in1, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("deleteIssue", new object[] {
                        in0,
                        in1}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EnddeleteIssue(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://soap.rpc.jira.atlassian.com", ResponseNamespace="http://forge.metreos.com:8080/jira/rpc/soap/jirasoapservice-v2")]
        [return: System.Xml.Serialization.SoapElementAttribute("getNotificationSchemesReturn")]
        public RemoteScheme[] getNotificationSchemes(string in0) {
            object[] results = this.Invoke("getNotificationSchemes", new object[] {
                        in0});
            return ((RemoteScheme[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegingetNotificationSchemes(string in0, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("getNotificationSchemes", new object[] {
                        in0}, callback, asyncState);
        }
        
        /// <remarks/>
        public RemoteScheme[] EndgetNotificationSchemes(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((RemoteScheme[])(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://soap.rpc.jira.atlassian.com", ResponseNamespace="http://forge.metreos.com:8080/jira/rpc/soap/jirasoapservice-v2")]
        [return: System.Xml.Serialization.SoapElementAttribute("getPermissionSchemesReturn")]
        public RemotePermissionScheme[] getPermissionSchemes(string in0) {
            object[] results = this.Invoke("getPermissionSchemes", new object[] {
                        in0});
            return ((RemotePermissionScheme[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegingetPermissionSchemes(string in0, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("getPermissionSchemes", new object[] {
                        in0}, callback, asyncState);
        }
        
        /// <remarks/>
        public RemotePermissionScheme[] EndgetPermissionSchemes(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((RemotePermissionScheme[])(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://soap.rpc.jira.atlassian.com", ResponseNamespace="http://forge.metreos.com:8080/jira/rpc/soap/jirasoapservice-v2")]
        [return: System.Xml.Serialization.SoapElementAttribute("createPermissionSchemeReturn")]
        public RemotePermissionScheme createPermissionScheme(string in0, string in1, string in2) {
            object[] results = this.Invoke("createPermissionScheme", new object[] {
                        in0,
                        in1,
                        in2});
            return ((RemotePermissionScheme)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegincreatePermissionScheme(string in0, string in1, string in2, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("createPermissionScheme", new object[] {
                        in0,
                        in1,
                        in2}, callback, asyncState);
        }
        
        /// <remarks/>
        public RemotePermissionScheme EndcreatePermissionScheme(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((RemotePermissionScheme)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://soap.rpc.jira.atlassian.com", ResponseNamespace="http://forge.metreos.com:8080/jira/rpc/soap/jirasoapservice-v2")]
        public void deletePermissionScheme(string in0, string in1) {
            this.Invoke("deletePermissionScheme", new object[] {
                        in0,
                        in1});
        }
        
        /// <remarks/>
        public System.IAsyncResult BegindeletePermissionScheme(string in0, string in1, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("deletePermissionScheme", new object[] {
                        in0,
                        in1}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EnddeletePermissionScheme(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://soap.rpc.jira.atlassian.com", ResponseNamespace="http://forge.metreos.com:8080/jira/rpc/soap/jirasoapservice-v2")]
        [return: System.Xml.Serialization.SoapElementAttribute("getAllPermissionsReturn")]
        public RemotePermission[] getAllPermissions(string in0) {
            object[] results = this.Invoke("getAllPermissions", new object[] {
                        in0});
            return ((RemotePermission[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegingetAllPermissions(string in0, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("getAllPermissions", new object[] {
                        in0}, callback, asyncState);
        }
        
        /// <remarks/>
        public RemotePermission[] EndgetAllPermissions(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((RemotePermission[])(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://soap.rpc.jira.atlassian.com", ResponseNamespace="http://forge.metreos.com:8080/jira/rpc/soap/jirasoapservice-v2")]
        [return: System.Xml.Serialization.SoapElementAttribute("getFieldsForActionReturn")]
        public RemoteField[] getFieldsForAction(string in0, string in1, string in2) {
            object[] results = this.Invoke("getFieldsForAction", new object[] {
                        in0,
                        in1,
                        in2});
            return ((RemoteField[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegingetFieldsForAction(string in0, string in1, string in2, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("getFieldsForAction", new object[] {
                        in0,
                        in1,
                        in2}, callback, asyncState);
        }
        
        /// <remarks/>
        public RemoteField[] EndgetFieldsForAction(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((RemoteField[])(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://soap.rpc.jira.atlassian.com", ResponseNamespace="http://forge.metreos.com:8080/jira/rpc/soap/jirasoapservice-v2")]
        [return: System.Xml.Serialization.SoapElementAttribute("progressWorkflowActionReturn")]
        public RemoteIssue progressWorkflowAction(string in0, string in1, string in2, RemoteFieldValue[] in3) {
            object[] results = this.Invoke("progressWorkflowAction", new object[] {
                        in0,
                        in1,
                        in2,
                        in3});
            return ((RemoteIssue)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginprogressWorkflowAction(string in0, string in1, string in2, RemoteFieldValue[] in3, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("progressWorkflowAction", new object[] {
                        in0,
                        in1,
                        in2,
                        in3}, callback, asyncState);
        }
        
        /// <remarks/>
        public RemoteIssue EndprogressWorkflowAction(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((RemoteIssue)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://soap.rpc.jira.atlassian.com", ResponseNamespace="http://forge.metreos.com:8080/jira/rpc/soap/jirasoapservice-v2")]
        [return: System.Xml.Serialization.SoapElementAttribute("getIssueByIdReturn")]
        public RemoteIssue getIssueById(string in0, string in1) {
            object[] results = this.Invoke("getIssueById", new object[] {
                        in0,
                        in1});
            return ((RemoteIssue)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegingetIssueById(string in0, string in1, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("getIssueById", new object[] {
                        in0,
                        in1}, callback, asyncState);
        }
        
        /// <remarks/>
        public RemoteIssue EndgetIssueById(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((RemoteIssue)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://soap.rpc.jira.atlassian.com", ResponseNamespace="http://forge.metreos.com:8080/jira/rpc/soap/jirasoapservice-v2")]
        [return: System.Xml.Serialization.SoapElementAttribute("addAttachmentsToIssueReturn")]
        public bool addAttachmentsToIssue(string in0, string in1, string[] in2, System.SByte[] in3) {
            object[] results = this.Invoke("addAttachmentsToIssue", new object[] {
                        in0,
                        in1,
                        in2,
                        in3});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginaddAttachmentsToIssue(string in0, string in1, string[] in2, System.SByte[] in3, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("addAttachmentsToIssue", new object[] {
                        in0,
                        in1,
                        in2,
                        in3}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndaddAttachmentsToIssue(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://soap.rpc.jira.atlassian.com", ResponseNamespace="http://forge.metreos.com:8080/jira/rpc/soap/jirasoapservice-v2")]
        [return: System.Xml.Serialization.SoapElementAttribute("getIssueCountForFilterReturn")]
        public long getIssueCountForFilter(string in0, string in1) {
            object[] results = this.Invoke("getIssueCountForFilter", new object[] {
                        in0,
                        in1});
            return ((long)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegingetIssueCountForFilter(string in0, string in1, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("getIssueCountForFilter", new object[] {
                        in0,
                        in1}, callback, asyncState);
        }
        
        /// <remarks/>
        public long EndgetIssueCountForFilter(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((long)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://soap.rpc.jira.atlassian.com", ResponseNamespace="http://forge.metreos.com:8080/jira/rpc/soap/jirasoapservice-v2")]
        [return: System.Xml.Serialization.SoapElementAttribute("getIssuesFromTextSearchReturn")]
        public RemoteIssue[] getIssuesFromTextSearch(string in0, string in1) {
            object[] results = this.Invoke("getIssuesFromTextSearch", new object[] {
                        in0,
                        in1});
            return ((RemoteIssue[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegingetIssuesFromTextSearch(string in0, string in1, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("getIssuesFromTextSearch", new object[] {
                        in0,
                        in1}, callback, asyncState);
        }
        
        /// <remarks/>
        public RemoteIssue[] EndgetIssuesFromTextSearch(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((RemoteIssue[])(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://soap.rpc.jira.atlassian.com", ResponseNamespace="http://forge.metreos.com:8080/jira/rpc/soap/jirasoapservice-v2")]
        [return: System.Xml.Serialization.SoapElementAttribute("getIssuesFromTextSearchWithProjectReturn")]
        public RemoteIssue[] getIssuesFromTextSearchWithProject(string in0, string[] in1, string in2, int in3) {
            object[] results = this.Invoke("getIssuesFromTextSearchWithProject", new object[] {
                        in0,
                        in1,
                        in2,
                        in3});
            return ((RemoteIssue[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegingetIssuesFromTextSearchWithProject(string in0, string[] in1, string in2, int in3, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("getIssuesFromTextSearchWithProject", new object[] {
                        in0,
                        in1,
                        in2,
                        in3}, callback, asyncState);
        }
        
        /// <remarks/>
        public RemoteIssue[] EndgetIssuesFromTextSearchWithProject(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((RemoteIssue[])(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://soap.rpc.jira.atlassian.com", ResponseNamespace="http://forge.metreos.com:8080/jira/rpc/soap/jirasoapservice-v2")]
        public void deleteUser(string in0, string in1) {
            this.Invoke("deleteUser", new object[] {
                        in0,
                        in1});
        }
        
        /// <remarks/>
        public System.IAsyncResult BegindeleteUser(string in0, string in1, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("deleteUser", new object[] {
                        in0,
                        in1}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EnddeleteUser(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://soap.rpc.jira.atlassian.com", ResponseNamespace="http://forge.metreos.com:8080/jira/rpc/soap/jirasoapservice-v2")]
        [return: System.Xml.Serialization.SoapElementAttribute("updateGroupReturn")]
        public RemoteGroup updateGroup(string in0, RemoteGroup in1) {
            object[] results = this.Invoke("updateGroup", new object[] {
                        in0,
                        in1});
            return ((RemoteGroup)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginupdateGroup(string in0, RemoteGroup in1, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("updateGroup", new object[] {
                        in0,
                        in1}, callback, asyncState);
        }
        
        /// <remarks/>
        public RemoteGroup EndupdateGroup(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((RemoteGroup)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://soap.rpc.jira.atlassian.com", ResponseNamespace="http://forge.metreos.com:8080/jira/rpc/soap/jirasoapservice-v2")]
        public void deleteGroup(string in0, string in1, string in2) {
            this.Invoke("deleteGroup", new object[] {
                        in0,
                        in1,
                        in2});
        }
        
        /// <remarks/>
        public System.IAsyncResult BegindeleteGroup(string in0, string in1, string in2, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("deleteGroup", new object[] {
                        in0,
                        in1,
                        in2}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EnddeleteGroup(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://soap.rpc.jira.atlassian.com", ResponseNamespace="http://forge.metreos.com:8080/jira/rpc/soap/jirasoapservice-v2")]
        public void refreshCustomFields(string in0) {
            this.Invoke("refreshCustomFields", new object[] {
                        in0});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginrefreshCustomFields(string in0, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("refreshCustomFields", new object[] {
                        in0}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndrefreshCustomFields(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://soap.rpc.jira.atlassian.com", ResponseNamespace="http://forge.metreos.com:8080/jira/rpc/soap/jirasoapservice-v2")]
        [return: System.Xml.Serialization.SoapElementAttribute("getConfiguraionReturn")]
        public RemoteConfiguration getConfiguraion(string in0) {
            object[] results = this.Invoke("getConfiguraion", new object[] {
                        in0});
            return ((RemoteConfiguration)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegingetConfiguraion(string in0, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("getConfiguraion", new object[] {
                        in0}, callback, asyncState);
        }
        
        /// <remarks/>
        public RemoteConfiguration EndgetConfiguraion(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((RemoteConfiguration)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://soap.rpc.jira.atlassian.com", ResponseNamespace="http://forge.metreos.com:8080/jira/rpc/soap/jirasoapservice-v2")]
        [return: System.Xml.Serialization.SoapElementAttribute("getProjectsNoSchemesReturn")]
        public RemoteProject[] getProjectsNoSchemes(string in0) {
            object[] results = this.Invoke("getProjectsNoSchemes", new object[] {
                        in0});
            return ((RemoteProject[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegingetProjectsNoSchemes(string in0, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("getProjectsNoSchemes", new object[] {
                        in0}, callback, asyncState);
        }
        
        /// <remarks/>
        public RemoteProject[] EndgetProjectsNoSchemes(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((RemoteProject[])(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://soap.rpc.jira.atlassian.com", ResponseNamespace="http://forge.metreos.com:8080/jira/rpc/soap/jirasoapservice-v2")]
        [return: System.Xml.Serialization.SoapElementAttribute("addVersionReturn")]
        public RemoteVersion addVersion(string in0, string in1, RemoteVersion in2) {
            object[] results = this.Invoke("addVersion", new object[] {
                        in0,
                        in1,
                        in2});
            return ((RemoteVersion)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginaddVersion(string in0, string in1, RemoteVersion in2, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("addVersion", new object[] {
                        in0,
                        in1,
                        in2}, callback, asyncState);
        }
        
        /// <remarks/>
        public RemoteVersion EndaddVersion(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((RemoteVersion)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://soap.rpc.jira.atlassian.com", ResponseNamespace="http://forge.metreos.com:8080/jira/rpc/soap/jirasoapservice-v2")]
        [return: System.Xml.Serialization.SoapElementAttribute("createProjectFromObjectReturn")]
        public RemoteProject createProjectFromObject(string in0, RemoteProject in1) {
            object[] results = this.Invoke("createProjectFromObject", new object[] {
                        in0,
                        in1});
            return ((RemoteProject)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegincreateProjectFromObject(string in0, RemoteProject in1, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("createProjectFromObject", new object[] {
                        in0,
                        in1}, callback, asyncState);
        }
        
        /// <remarks/>
        public RemoteProject EndcreateProjectFromObject(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((RemoteProject)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://soap.rpc.jira.atlassian.com", ResponseNamespace="http://forge.metreos.com:8080/jira/rpc/soap/jirasoapservice-v2")]
        [return: System.Xml.Serialization.SoapElementAttribute("getSecuritySchemesReturn")]
        public RemoteScheme[] getSecuritySchemes(string in0) {
            object[] results = this.Invoke("getSecuritySchemes", new object[] {
                        in0});
            return ((RemoteScheme[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegingetSecuritySchemes(string in0, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("getSecuritySchemes", new object[] {
                        in0}, callback, asyncState);
        }
        
        /// <remarks/>
        public RemoteScheme[] EndgetSecuritySchemes(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((RemoteScheme[])(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://soap.rpc.jira.atlassian.com", ResponseNamespace="http://forge.metreos.com:8080/jira/rpc/soap/jirasoapservice-v2")]
        [return: System.Xml.Serialization.SoapElementAttribute("getIssuesFromFilterReturn")]
        public RemoteIssue[] getIssuesFromFilter(string in0, string in1) {
            object[] results = this.Invoke("getIssuesFromFilter", new object[] {
                        in0,
                        in1});
            return ((RemoteIssue[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegingetIssuesFromFilter(string in0, string in1, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("getIssuesFromFilter", new object[] {
                        in0,
                        in1}, callback, asyncState);
        }
        
        /// <remarks/>
        public RemoteIssue[] EndgetIssuesFromFilter(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((RemoteIssue[])(results[0]));
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapTypeAttribute("RemoteUser", "http://beans.soap.rpc.jira.atlassian.com")]
    public class RemoteUser : RemoteEntity {
        
        /// <remarks/>
        public string email;
        
        /// <remarks/>
        public string fullname;
        
        /// <remarks/>
        public string name;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapTypeAttribute("RemoteEntity", "http://beans.soap.rpc.jira.atlassian.com")]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(RemoteGroup))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(RemoteUser))]
    public class RemoteEntity {
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapTypeAttribute("RemoteConfiguration", "http://beans.soap.rpc.jira.atlassian.com")]
    public class RemoteConfiguration {
        
        /// <remarks/>
        public bool allowAttachments;
        
        /// <remarks/>
        public bool allowIssueLinking;
        
        /// <remarks/>
        public bool allowSubTasks;
        
        /// <remarks/>
        public bool allowTimeTracking;
        
        /// <remarks/>
        public bool allowUnassignedIssues;
        
        /// <remarks/>
        public bool allowVoting;
        
        /// <remarks/>
        public bool allowWatching;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapTypeAttribute("RemoteFieldValue", "http://beans.soap.rpc.jira.atlassian.com")]
    public class RemoteFieldValue {
        
        /// <remarks/>
        public string id;
        
        /// <remarks/>
        public string[] values;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapTypeAttribute("RemoteCustomFieldValue", "http://beans.soap.rpc.jira.atlassian.com")]
    public class RemoteCustomFieldValue {
        
        /// <remarks/>
        public string customfieldId;
        
        /// <remarks/>
        public string key;
        
        /// <remarks/>
        public string[] values;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapTypeAttribute("RemotePermission", "http://beans.soap.rpc.jira.atlassian.com")]
    public class RemotePermission {
        
        /// <remarks/>
        public string name;
        
        /// <remarks/>
        public long permission;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapTypeAttribute("RemotePermissionMapping", "http://beans.soap.rpc.jira.atlassian.com")]
    public class RemotePermissionMapping {
        
        /// <remarks/>
        public RemotePermission permission;
        
        /// <remarks/>
        public RemoteEntity[] remoteEntities;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapTypeAttribute("RemoteScheme", "http://beans.soap.rpc.jira.atlassian.com")]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(RemotePermissionScheme))]
    public class RemoteScheme {
        
        /// <remarks/>
        public string description;
        
        /// <remarks/>
        public long id;
        
        /// <remarks/>
        public string name;
        
        /// <remarks/>
        public string type;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapTypeAttribute("RemotePermissionScheme", "http://beans.soap.rpc.jira.atlassian.com")]
    public class RemotePermissionScheme : RemoteScheme {
        
        /// <remarks/>
        public RemotePermissionMapping[] permissionMappings;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapTypeAttribute("AbstractRemoteEntity", "http://beans.soap.rpc.jira.atlassian.com")]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(RemoteIssue))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(AbstractNamedRemoteEntity))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(RemoteFilter))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(RemoteField))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(RemoteProject))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(RemoteNamedObject))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(RemoteVersion))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(AbstractRemoteConstant))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(RemoteResolution))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(RemotePriority))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(RemoteIssueType))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(RemoteStatus))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(RemoteComponent))]
    public abstract class AbstractRemoteEntity {
        
        /// <remarks/>
        public string id;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapTypeAttribute("RemoteIssue", "http://beans.soap.rpc.jira.atlassian.com")]
    public class RemoteIssue : AbstractRemoteEntity {
        
        /// <remarks/>
        public RemoteVersion[] affectsVersions;
        
        /// <remarks/>
        public string assignee;
        
        /// <remarks/>
        public string[] attachmentNames;
        
        /// <remarks/>
        public RemoteComponent[] components;
        
        /// <remarks/>
        public System.DateTime created;
        
        /// <remarks/>
        public RemoteCustomFieldValue[] customFieldValues;
        
        /// <remarks/>
        public string description;
        
        /// <remarks/>
        public System.DateTime duedate;
        
        /// <remarks/>
        public string environment;
        
        /// <remarks/>
        public RemoteVersion[] fixVersions;
        
        /// <remarks/>
        public string key;
        
        /// <remarks/>
        public string priority;
        
        /// <remarks/>
        public string project;
        
        /// <remarks/>
        public string reporter;
        
        /// <remarks/>
        public string resolution;
        
        /// <remarks/>
        public string status;
        
        /// <remarks/>
        public string summary;
        
        /// <remarks/>
        public string type;
        
        /// <remarks/>
        public System.DateTime updated;
        
        /// <remarks/>
        public long votes;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapTypeAttribute("RemoteVersion", "http://beans.soap.rpc.jira.atlassian.com")]
    public class RemoteVersion : AbstractNamedRemoteEntity {
        
        /// <remarks/>
        public bool archived;
        
        /// <remarks/>
        public System.DateTime releaseDate;
        
        /// <remarks/>
        public bool released;
        
        /// <remarks/>
        public long sequence;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapTypeAttribute("AbstractNamedRemoteEntity", "http://beans.soap.rpc.jira.atlassian.com")]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(RemoteFilter))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(RemoteField))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(RemoteProject))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(RemoteNamedObject))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(RemoteVersion))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(AbstractRemoteConstant))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(RemoteResolution))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(RemotePriority))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(RemoteIssueType))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(RemoteStatus))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(RemoteComponent))]
    public abstract class AbstractNamedRemoteEntity : AbstractRemoteEntity {
        
        /// <remarks/>
        public string name;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapTypeAttribute("RemoteFilter", "http://beans.soap.rpc.jira.atlassian.com")]
    public class RemoteFilter : AbstractNamedRemoteEntity {
        
        /// <remarks/>
        public string author;
        
        /// <remarks/>
        public string description;
        
        /// <remarks/>
        public string project;
        
        /// <remarks/>
        public string xml;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapTypeAttribute("RemoteField", "http://beans.soap.rpc.jira.atlassian.com")]
    public class RemoteField : AbstractNamedRemoteEntity {
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapTypeAttribute("RemoteProject", "http://beans.soap.rpc.jira.atlassian.com")]
    public class RemoteProject : AbstractNamedRemoteEntity {
        
        /// <remarks/>
        public string description;
        
        /// <remarks/>
        public RemoteScheme issueSecurityScheme;
        
        /// <remarks/>
        public string key;
        
        /// <remarks/>
        public string lead;
        
        /// <remarks/>
        public RemoteScheme notificationScheme;
        
        /// <remarks/>
        public RemotePermissionScheme permissionScheme;
        
        /// <remarks/>
        public string projectUrl;
        
        /// <remarks/>
        public string url;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapTypeAttribute("RemoteNamedObject", "http://beans.soap.rpc.jira.atlassian.com")]
    public class RemoteNamedObject : AbstractNamedRemoteEntity {
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapTypeAttribute("AbstractRemoteConstant", "http://beans.soap.rpc.jira.atlassian.com")]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(RemoteResolution))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(RemotePriority))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(RemoteIssueType))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(RemoteStatus))]
    public abstract class AbstractRemoteConstant : AbstractNamedRemoteEntity {
        
        /// <remarks/>
        public string description;
        
        /// <remarks/>
        public string icon;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapTypeAttribute("RemoteResolution", "http://beans.soap.rpc.jira.atlassian.com")]
    public class RemoteResolution : AbstractRemoteConstant {
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapTypeAttribute("RemotePriority", "http://beans.soap.rpc.jira.atlassian.com")]
    public class RemotePriority : AbstractRemoteConstant {
        
        /// <remarks/>
        public string color;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapTypeAttribute("RemoteIssueType", "http://beans.soap.rpc.jira.atlassian.com")]
    public class RemoteIssueType : AbstractRemoteConstant {
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapTypeAttribute("RemoteStatus", "http://beans.soap.rpc.jira.atlassian.com")]
    public class RemoteStatus : AbstractRemoteConstant {
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapTypeAttribute("RemoteComponent", "http://beans.soap.rpc.jira.atlassian.com")]
    public class RemoteComponent : AbstractNamedRemoteEntity {
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapTypeAttribute("RemoteComment", "http://beans.soap.rpc.jira.atlassian.com")]
    public class RemoteComment {
        
        /// <remarks/>
        public string body;
        
        /// <remarks/>
        public string id;
        
        /// <remarks/>
        public string level;
        
        /// <remarks/>
        public System.DateTime timePerformed;
        
        /// <remarks/>
        public string username;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapTypeAttribute("RemoteServerInfo", "http://beans.soap.rpc.jira.atlassian.com")]
    public class RemoteServerInfo {
        
        /// <remarks/>
        public string baseUrl;
        
        /// <remarks/>
        public System.DateTime buildDate;
        
        /// <remarks/>
        public string buildNumber;
        
        /// <remarks/>
        public string edition;
        
        /// <remarks/>
        public string version;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapTypeAttribute("RemoteGroup", "http://beans.soap.rpc.jira.atlassian.com")]
    public class RemoteGroup : RemoteEntity {
        
        /// <remarks/>
        public string name;
        
        /// <remarks/>
        public RemoteUser[] users;
    }
}
