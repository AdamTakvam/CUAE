//------------------------------------------------------------------------------
// <autogenerated>
//     This code was generated by a tool.
//     Runtime Version: 1.1.4322.2032
//
//     Changes to this file may cause incorrect behavior and will be lost if 
//     the code is regenerated.
// </autogenerated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by wsdl, Version=1.1.4322.2032.
// 
using System.Diagnostics;
using System.Xml.Serialization;
using System;
using System.Web.Services.Protocols;
using System.ComponentModel;
using System.Web.Services;

namespace Metreos.Common.Reserve
{
    /// <remarks/>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="QuerySoapBinding", Namespace="urn:Query")]
    public class QueryActionsInterfaceService : System.Web.Services.Protocols.SoapHttpClientProtocol 
    {
    
        /// <remarks/>
        public QueryActionsInterfaceService() 
        {
            this.Url = "http://app1env51.prd.tririga.net:8001/services/Query";
        }
    
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="urn:Query", ResponseNamespace="urn:Query")]
        [return: System.Xml.Serialization.SoapElementAttribute("getModuleListReturn")]
        public string getModuleList(string securityToken, long userId, long companyId) 
        {
            object[] results = this.Invoke("getModuleList", new object[] {
                                                                             securityToken,
                                                                             userId,
                                                                             companyId});
            return ((string)(results[0]));
        }
    
        /// <remarks/>
        public System.IAsyncResult BegingetModuleList(string securityToken, long userId, long companyId, System.AsyncCallback callback, object asyncState) 
        {
            return this.BeginInvoke("getModuleList", new object[] {
                                                                      securityToken,
                                                                      userId,
                                                                      companyId}, callback, asyncState);
        }
    
        /// <remarks/>
        public string EndgetModuleList(System.IAsyncResult asyncResult) 
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
    
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="urn:Query", ResponseNamespace="urn:Query")]
        [return: System.Xml.Serialization.SoapElementAttribute("getBoListReturn")]
        public string getBoList(string securityToken, long userId, long companyId, int moduleId) 
        {
            object[] results = this.Invoke("getBoList", new object[] {
                                                                         securityToken,
                                                                         userId,
                                                                         companyId,
                                                                         moduleId});
            return ((string)(results[0]));
        }
    
        /// <remarks/>
        public System.IAsyncResult BegingetBoList(string securityToken, long userId, long companyId, int moduleId, System.AsyncCallback callback, object asyncState) 
        {
            return this.BeginInvoke("getBoList", new object[] {
                                                                  securityToken,
                                                                  userId,
                                                                  companyId,
                                                                  moduleId}, callback, asyncState);
        }
    
        /// <remarks/>
        public string EndgetBoList(System.IAsyncResult asyncResult) 
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
    
        /// <remarks/>
        [System.Web.Services.WebMethodAttribute(MessageName="getBoList1")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="urn:Query", ResponseNamespace="urn:Query")]
        [return: System.Xml.Serialization.SoapElementAttribute("getBoListAllReturn")]
        public string getBoList(string securityToken, long userId, long companyId, int moduleId, bool standAlone) 
        {
            object[] results = this.Invoke("getBoList1", new object[] {
                                                                          securityToken,
                                                                          userId,
                                                                          companyId,
                                                                          moduleId,
                                                                          standAlone});
            return ((string)(results[0]));
        }
    
        /// <remarks/>
        public System.IAsyncResult BegingetBoList1(string securityToken, long userId, long companyId, int moduleId, bool standAlone, System.AsyncCallback callback, object asyncState) 
        {
            return this.BeginInvoke("getBoList1", new object[] {
                                                                   securityToken,
                                                                   userId,
                                                                   companyId,
                                                                   moduleId,
                                                                   standAlone}, callback, asyncState);
        }
    
        /// <remarks/>
        public string EndgetBoList1(System.IAsyncResult asyncResult) 
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
    
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="urn:Query", ResponseNamespace="urn:Query")]
        [return: System.Xml.Serialization.SoapElementAttribute("getRecordsByKeywordsReturn")]
        public string getRecordsByKeywords(string securityToken, long userId, long companyId, int moduleId, long boId, string keywords) 
        {
            object[] results = this.Invoke("getRecordsByKeywords", new object[] {
                                                                                    securityToken,
                                                                                    userId,
                                                                                    companyId,
                                                                                    moduleId,
                                                                                    boId,
                                                                                    keywords});
            return ((string)(results[0]));
        }
    
        /// <remarks/>
        public System.IAsyncResult BegingetRecordsByKeywords(string securityToken, long userId, long companyId, int moduleId, long boId, string keywords, System.AsyncCallback callback, object asyncState) 
        {
            return this.BeginInvoke("getRecordsByKeywords", new object[] {
                                                                             securityToken,
                                                                             userId,
                                                                             companyId,
                                                                             moduleId,
                                                                             boId,
                                                                             keywords}, callback, asyncState);
        }
    
        /// <remarks/>
        public string EndgetRecordsByKeywords(System.IAsyncResult asyncResult) 
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
    
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="urn:Query", ResponseNamespace="urn:Query")]
        [return: System.Xml.Serialization.SoapElementAttribute("getQueryDefinationReturn")]
        public string getQueryDefination(string securityToken, long userId, long companyId, long queryId) 
        {
            object[] results = this.Invoke("getQueryDefination", new object[] {
                                                                                  securityToken,
                                                                                  userId,
                                                                                  companyId,
                                                                                  queryId});
            return ((string)(results[0]));
        }
    
        /// <remarks/>
        public System.IAsyncResult BegingetQueryDefination(string securityToken, long userId, long companyId, long queryId, System.AsyncCallback callback, object asyncState) 
        {
            return this.BeginInvoke("getQueryDefination", new object[] {
                                                                           securityToken,
                                                                           userId,
                                                                           companyId,
                                                                           queryId}, callback, asyncState);
        }
    
        /// <remarks/>
        public string EndgetQueryDefination(System.IAsyncResult asyncResult) 
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
    
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="urn:Query", ResponseNamespace="urn:Query")]
        [return: System.Xml.Serialization.SoapElementAttribute("getQueryResultsReturn")]
        public string getQueryResults(string securityToken, long userId, long companyId, long projectId, long queryId, string dataXML) 
        {
            object[] results = this.Invoke("getQueryResults", new object[] {
                                                                               securityToken,
                                                                               userId,
                                                                               companyId,
                                                                               projectId,
                                                                               queryId,
                                                                               dataXML});
            return ((string)(results[0]));
        }
    
        /// <remarks/>
        public System.IAsyncResult BegingetQueryResults(string securityToken, long userId, long companyId, long projectId, long queryId, string dataXML, System.AsyncCallback callback, object asyncState) 
        {
            return this.BeginInvoke("getQueryResults", new object[] {
                                                                        securityToken,
                                                                        userId,
                                                                        companyId,
                                                                        projectId,
                                                                        queryId,
                                                                        dataXML}, callback, asyncState);
        }
    
        /// <remarks/>
        public string EndgetQueryResults(System.IAsyncResult asyncResult) 
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
    
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="urn:Query", ResponseNamespace="urn:Query")]
        [return: System.Xml.Serialization.SoapElementAttribute("getQueryDefinationByNameReturn")]
        public string getQueryDefinationByName(string securityToken, long userId, long companyId, string queryName) 
        {
            object[] results = this.Invoke("getQueryDefinationByName", new object[] {
                                                                                        securityToken,
                                                                                        userId,
                                                                                        companyId,
                                                                                        queryName});
            return ((string)(results[0]));
        }
    
        /// <remarks/>
        public System.IAsyncResult BegingetQueryDefinationByName(string securityToken, long userId, long companyId, string queryName, System.AsyncCallback callback, object asyncState) 
        {
            return this.BeginInvoke("getQueryDefinationByName", new object[] {
                                                                                 securityToken,
                                                                                 userId,
                                                                                 companyId,
                                                                                 queryName}, callback, asyncState);
        }
    
        /// <remarks/>
        public string EndgetQueryDefinationByName(System.IAsyncResult asyncResult) 
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
    
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="urn:Query", ResponseNamespace="urn:Query")]
        [return: System.Xml.Serialization.SoapElementAttribute("getQueryResultsByNameReturn")]
        public string getQueryResultsByName(string securityToken, long userId, long companyId, long projectId, string queryName, string dataXML) 
        {
            object[] results = this.Invoke("getQueryResultsByName", new object[] {
                                                                                     securityToken,
                                                                                     userId,
                                                                                     companyId,
                                                                                     projectId,
                                                                                     queryName,
                                                                                     dataXML});
            return ((string)(results[0]));
        }
    
        /// <remarks/>
        public System.IAsyncResult BegingetQueryResultsByName(string securityToken, long userId, long companyId, long projectId, string queryName, string dataXML, System.AsyncCallback callback, object asyncState) 
        {
            return this.BeginInvoke("getQueryResultsByName", new object[] {
                                                                              securityToken,
                                                                              userId,
                                                                              companyId,
                                                                              projectId,
                                                                              queryName,
                                                                              dataXML}, callback, asyncState);
        }
    
        /// <remarks/>
        public string EndgetQueryResultsByName(System.IAsyncResult asyncResult) 
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
    
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="urn:Query", ResponseNamespace="urn:Query")]
        [return: System.Xml.Serialization.SoapElementAttribute("getDynamicQueryResultsReturn")]
        public string getDynamicQueryResults(string securityToken, long userId, long companyId, long projectId, string dataXML) 
        {
            object[] results = this.Invoke("getDynamicQueryResults", new object[] {
                                                                                      securityToken,
                                                                                      userId,
                                                                                      companyId,
                                                                                      projectId,
                                                                                      dataXML});
            return ((string)(results[0]));
        }
    
        /// <remarks/>
        public System.IAsyncResult BegingetDynamicQueryResults(string securityToken, long userId, long companyId, long projectId, string dataXML, System.AsyncCallback callback, object asyncState) 
        {
            return this.BeginInvoke("getDynamicQueryResults", new object[] {
                                                                               securityToken,
                                                                               userId,
                                                                               companyId,
                                                                               projectId,
                                                                               dataXML}, callback, asyncState);
        }
    
        /// <remarks/>
        public string EndgetDynamicQueryResults(System.IAsyncResult asyncResult) 
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
    
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="urn:Query", ResponseNamespace="urn:Query")]
        [return: System.Xml.Serialization.SoapElementAttribute("getDynamicQueryResultsXMLReturn")]
        public string getDynamicQueryResultsXML(string securityToken, long userId, long companyId, long projectId, string dataXML) 
        {
            object[] results = this.Invoke("getDynamicQueryResultsXML", new object[] {
                                                                                         securityToken,
                                                                                         userId,
                                                                                         companyId,
                                                                                         projectId,
                                                                                         dataXML});
            return ((string)(results[0]));
        }
    
        /// <remarks/>
        public System.IAsyncResult BegingetDynamicQueryResultsXML(string securityToken, long userId, long companyId, long projectId, string dataXML, System.AsyncCallback callback, object asyncState) 
        {
            return this.BeginInvoke("getDynamicQueryResultsXML", new object[] {
                                                                                  securityToken,
                                                                                  userId,
                                                                                  companyId,
                                                                                  projectId,
                                                                                  dataXML}, callback, asyncState);
        }
    
        /// <remarks/>
        public string EndgetDynamicQueryResultsXML(System.IAsyncResult asyncResult) 
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
    
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="urn:Query", ResponseNamespace="urn:Query")]
        [return: System.Xml.Serialization.SoapElementAttribute("getAssociatedObjectDataReturn")]
        public string getAssociatedObjectData(string securityToken, long userId, long companyId, long boId) 
        {
            object[] results = this.Invoke("getAssociatedObjectData", new object[] {
                                                                                       securityToken,
                                                                                       userId,
                                                                                       companyId,
                                                                                       boId});
            return ((string)(results[0]));
        }
    
        /// <remarks/>
        public System.IAsyncResult BegingetAssociatedObjectData(string securityToken, long userId, long companyId, long boId, System.AsyncCallback callback, object asyncState) 
        {
            return this.BeginInvoke("getAssociatedObjectData", new object[] {
                                                                                securityToken,
                                                                                userId,
                                                                                companyId,
                                                                                boId}, callback, asyncState);
        }
    
        /// <remarks/>
        public string EndgetAssociatedObjectData(System.IAsyncResult asyncResult) 
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
    
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="urn:Query", ResponseNamespace="urn:Query")]
        [return: System.Xml.Serialization.SoapElementAttribute("getAssociationRecordDataReturn")]
        public string getAssociationRecordData(string securityToken, long userId, long companyId, long boId, string recordIds) 
        {
            object[] results = this.Invoke("getAssociationRecordData", new object[] {
                                                                                        securityToken,
                                                                                        userId,
                                                                                        companyId,
                                                                                        boId,
                                                                                        recordIds});
            return ((string)(results[0]));
        }
    
        /// <remarks/>
        public System.IAsyncResult BegingetAssociationRecordData(string securityToken, long userId, long companyId, long boId, string recordIds, System.AsyncCallback callback, object asyncState) 
        {
            return this.BeginInvoke("getAssociationRecordData", new object[] {
                                                                                 securityToken,
                                                                                 userId,
                                                                                 companyId,
                                                                                 boId,
                                                                                 recordIds}, callback, asyncState);
        }
    
        /// <remarks/>
        public string EndgetAssociationRecordData(System.IAsyncResult asyncResult) 
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
    
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="urn:Query", ResponseNamespace="urn:Query")]
        [return: System.Xml.Serialization.SoapElementAttribute("makeAssociationReturn")]
        public string makeAssociation(string securityToken, long userId, long companyId, string dataXML) 
        {
            object[] results = this.Invoke("makeAssociation", new object[] {
                                                                               securityToken,
                                                                               userId,
                                                                               companyId,
                                                                               dataXML});
            return ((string)(results[0]));
        }
    
        /// <remarks/>
        public System.IAsyncResult BeginmakeAssociation(string securityToken, long userId, long companyId, string dataXML, System.AsyncCallback callback, object asyncState) 
        {
            return this.BeginInvoke("makeAssociation", new object[] {
                                                                        securityToken,
                                                                        userId,
                                                                        companyId,
                                                                        dataXML}, callback, asyncState);
        }
    
        /// <remarks/>
        public string EndmakeAssociation(System.IAsyncResult asyncResult) 
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
    
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="urn:Query", ResponseNamespace="urn:Query")]
        [return: System.Xml.Serialization.SoapElementAttribute("removeAssociationReturn")]
        public string removeAssociation(string securityToken, long userId, long companyId, string dataXML) 
        {
            object[] results = this.Invoke("removeAssociation", new object[] {
                                                                                 securityToken,
                                                                                 userId,
                                                                                 companyId,
                                                                                 dataXML});
            return ((string)(results[0]));
        }
    
        /// <remarks/>
        public System.IAsyncResult BeginremoveAssociation(string securityToken, long userId, long companyId, string dataXML, System.AsyncCallback callback, object asyncState) 
        {
            return this.BeginInvoke("removeAssociation", new object[] {
                                                                          securityToken,
                                                                          userId,
                                                                          companyId,
                                                                          dataXML}, callback, asyncState);
        }
    
        /// <remarks/>
        public string EndremoveAssociation(System.IAsyncResult asyncResult) 
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
    
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="urn:Query", ResponseNamespace="urn:Query")]
        [return: System.Xml.Serialization.SoapElementAttribute("getListDataReturn")]
        public string getListData(string securityToken, long userId, long companyId, long listId) 
        {
            object[] results = this.Invoke("getListData", new object[] {
                                                                           securityToken,
                                                                           userId,
                                                                           companyId,
                                                                           listId});
            return ((string)(results[0]));
        }
    
        /// <remarks/>
        public System.IAsyncResult BegingetListData(string securityToken, long userId, long companyId, long listId, System.AsyncCallback callback, object asyncState) 
        {
            return this.BeginInvoke("getListData", new object[] {
                                                                    securityToken,
                                                                    userId,
                                                                    companyId,
                                                                    listId}, callback, asyncState);
        }
    
        /// <remarks/>
        public string EndgetListData(System.IAsyncResult asyncResult) 
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
    
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="urn:Query", ResponseNamespace="urn:Query")]
        [return: System.Xml.Serialization.SoapElementAttribute("getBoListWithChildrenReturn")]
        public string getBoListWithChildren(string securityToken, long userId, long companyId, int moduleId) 
        {
            object[] results = this.Invoke("getBoListWithChildren", new object[] {
                                                                                     securityToken,
                                                                                     userId,
                                                                                     companyId,
                                                                                     moduleId});
            return ((string)(results[0]));
        }
    
        /// <remarks/>
        public System.IAsyncResult BegingetBoListWithChildren(string securityToken, long userId, long companyId, int moduleId, System.AsyncCallback callback, object asyncState) 
        {
            return this.BeginInvoke("getBoListWithChildren", new object[] {
                                                                              securityToken,
                                                                              userId,
                                                                              companyId,
                                                                              moduleId}, callback, asyncState);
        }
    
        /// <remarks/>
        public string EndgetBoListWithChildren(System.IAsyncResult asyncResult) 
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
    
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="urn:Query", ResponseNamespace="urn:Query")]
        [return: System.Xml.Serialization.SoapElementAttribute("getBoADOXMLReturn")]
        public string getBoADOXML(string securityToken, long userId, long companyId, long boId) 
        {
            object[] results = this.Invoke("getBoADOXML", new object[] {
                                                                           securityToken,
                                                                           userId,
                                                                           companyId,
                                                                           boId});
            return ((string)(results[0]));
        }
    
        /// <remarks/>
        public System.IAsyncResult BegingetBoADOXML(string securityToken, long userId, long companyId, long boId, System.AsyncCallback callback, object asyncState) 
        {
            return this.BeginInvoke("getBoADOXML", new object[] {
                                                                    securityToken,
                                                                    userId,
                                                                    companyId,
                                                                    boId}, callback, asyncState);
        }
    
        /// <remarks/>
        public string EndgetBoADOXML(System.IAsyncResult asyncResult) 
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
    
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="urn:Query", ResponseNamespace="urn:Query")]
        [return: System.Xml.Serialization.SoapElementAttribute("getRecordADOXMLReturn")]
        public string getRecordADOXML(string securityToken, long userId, long companyId, string recordIds) 
        {
            object[] results = this.Invoke("getRecordADOXML", new object[] {
                                                                               securityToken,
                                                                               userId,
                                                                               companyId,
                                                                               recordIds});
            return ((string)(results[0]));
        }
    
        /// <remarks/>
        public System.IAsyncResult BegingetRecordADOXML(string securityToken, long userId, long companyId, string recordIds, System.AsyncCallback callback, object asyncState) 
        {
            return this.BeginInvoke("getRecordADOXML", new object[] {
                                                                        securityToken,
                                                                        userId,
                                                                        companyId,
                                                                        recordIds}, callback, asyncState);
        }
    
        /// <remarks/>
        public string EndgetRecordADOXML(System.IAsyncResult asyncResult) 
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
    
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="urn:Query", ResponseNamespace="urn:Query")]
        [return: System.Xml.Serialization.SoapElementAttribute("getQueryDefinationAdoXMLReturn")]
        public string getQueryDefinationAdoXML(string securityToken, long userId, long companyId, string queryName) 
        {
            object[] results = this.Invoke("getQueryDefinationAdoXML", new object[] {
                                                                                        securityToken,
                                                                                        userId,
                                                                                        companyId,
                                                                                        queryName});
            return ((string)(results[0]));
        }
    
        /// <remarks/>
        public System.IAsyncResult BegingetQueryDefinationAdoXML(string securityToken, long userId, long companyId, string queryName, System.AsyncCallback callback, object asyncState) 
        {
            return this.BeginInvoke("getQueryDefinationAdoXML", new object[] {
                                                                                 securityToken,
                                                                                 userId,
                                                                                 companyId,
                                                                                 queryName}, callback, asyncState);
        }
    
        /// <remarks/>
        public string EndgetQueryDefinationAdoXML(System.IAsyncResult asyncResult) 
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
    
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="urn:Query", ResponseNamespace="urn:Query")]
        [return: System.Xml.Serialization.SoapElementAttribute("getQueryDataAdoXMLReturn")]
        public string getQueryDataAdoXML(string securityToken, long userId, long companyId, long projectId, string queryName, string filterData) 
        {
            object[] results = this.Invoke("getQueryDataAdoXML", new object[] {
                                                                                  securityToken,
                                                                                  userId,
                                                                                  companyId,
                                                                                  projectId,
                                                                                  queryName,
                                                                                  filterData});
            return ((string)(results[0]));
        }
    
        /// <remarks/>
        public System.IAsyncResult BegingetQueryDataAdoXML(string securityToken, long userId, long companyId, long projectId, string queryName, string filterData, System.AsyncCallback callback, object asyncState) 
        {
            return this.BeginInvoke("getQueryDataAdoXML", new object[] {
                                                                           securityToken,
                                                                           userId,
                                                                           companyId,
                                                                           projectId,
                                                                           queryName,
                                                                           filterData}, callback, asyncState);
        }
    
        /// <remarks/>
        public string EndgetQueryDataAdoXML(System.IAsyncResult asyncResult) 
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
    }
}