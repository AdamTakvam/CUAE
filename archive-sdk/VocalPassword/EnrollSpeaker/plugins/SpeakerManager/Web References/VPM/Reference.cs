//------------------------------------------------------------------------------
// <autogenerated>
//     This code was generated by a tool.
//     Runtime Version: 1.1.4322.2032
//
//     Changes to this file may cause incorrect behavior and will be lost if 
//     the code is regenerated.
// </autogenerated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 1.1.4322.2032.
// 
namespace SpeakerManager.VPM {
    using System.Diagnostics;
    using System.Xml.Serialization;
    using System;
    using System.Web.Services.Protocols;
    using System.ComponentModel;
    using System.Web.Services;
    
    
    /// <remarks/>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="VocalPasswordManagerSoap", Namespace="http://www.Persay.com/webservices/")]
    public class VocalPasswordManager : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        /// <remarks/>
        public VocalPasswordManager() {
            this.Url = "http://192.118.49.125/VocalPassword/VocalPasswordManager.asmx";
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.Persay.com/webservices/InitSystem", RequestNamespace="http://www.Persay.com/webservices/", ResponseNamespace="http://www.Persay.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("requestId")]
        public int InitSystem() {
            object[] results = this.Invoke("InitSystem", new object[0]);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginInitSystem(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("InitSystem", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public int EndInitSystem(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.Persay.com/webservices/TerminateSystem", RequestNamespace="http://www.Persay.com/webservices/", ResponseNamespace="http://www.Persay.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("requestId")]
        public int TerminateSystem() {
            object[] results = this.Invoke("TerminateSystem", new object[0]);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginTerminateSystem(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("TerminateSystem", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public int EndTerminateSystem(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.Persay.com/webservices/RunBIT", RequestNamespace="http://www.Persay.com/webservices/", ResponseNamespace="http://www.Persay.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("requestId")]
        public int RunBIT() {
            object[] results = this.Invoke("RunBIT", new object[0]);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginRunBIT(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("RunBIT", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public int EndRunBIT(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.Persay.com/webservices/RunFullBIT", RequestNamespace="http://www.Persay.com/webservices/", ResponseNamespace="http://www.Persay.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("requestId")]
        public int RunFullBIT() {
            object[] results = this.Invoke("RunFullBIT", new object[0]);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginRunFullBIT(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("RunFullBIT", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public int EndRunFullBIT(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.Persay.com/webservices/GetVersionName", RequestNamespace="http://www.Persay.com/webservices/", ResponseNamespace="http://www.Persay.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetVersionName(out string build, out int requestId) {
            object[] results = this.Invoke("GetVersionName", new object[0]);
            build = ((string)(results[1]));
            requestId = ((int)(results[2]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetVersionName(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetVersionName", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public string EndGetVersionName(System.IAsyncResult asyncResult, out string build, out int requestId) {
            object[] results = this.EndInvoke(asyncResult);
            build = ((string)(results[1]));
            requestId = ((int)(results[2]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.Persay.com/webservices/GetLicenseInfo", RequestNamespace="http://www.Persay.com/webservices/", ResponseNamespace="http://www.Persay.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetLicenseInfo(out int requestId) {
            object[] results = this.Invoke("GetLicenseInfo", new object[0]);
            requestId = ((int)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetLicenseInfo(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetLicenseInfo", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public string EndGetLicenseInfo(System.IAsyncResult asyncResult, out int requestId) {
            object[] results = this.EndInvoke(asyncResult);
            requestId = ((int)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.Persay.com/webservices/Calibrate", RequestNamespace="http://www.Persay.com/webservices/", ResponseNamespace="http://www.Persay.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public System.Byte[] Calibrate(CalAudioSegmentDetails[] calibrationSegments, string configSetName, out int requestId) {
            object[] results = this.Invoke("Calibrate", new object[] {
                        calibrationSegments,
                        configSetName});
            requestId = ((int)(results[1]));
            return ((System.Byte[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginCalibrate(CalAudioSegmentDetails[] calibrationSegments, string configSetName, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("Calibrate", new object[] {
                        calibrationSegments,
                        configSetName}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Byte[] EndCalibrate(System.IAsyncResult asyncResult, out int requestId) {
            object[] results = this.EndInvoke(asyncResult);
            requestId = ((int)(results[1]));
            return ((System.Byte[])(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.Persay.com/webservices/TuneBackgroundModel", RequestNamespace="http://www.Persay.com/webservices/", ResponseNamespace="http://www.Persay.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public System.Byte[] TuneBackgroundModel([System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] System.Byte[] bgModel, TuningAudioSegmentDetails[] tuningSegments, string configSetName, out int requestId) {
            object[] results = this.Invoke("TuneBackgroundModel", new object[] {
                        bgModel,
                        tuningSegments,
                        configSetName});
            requestId = ((int)(results[1]));
            return ((System.Byte[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginTuneBackgroundModel(System.Byte[] bgModel, TuningAudioSegmentDetails[] tuningSegments, string configSetName, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("TuneBackgroundModel", new object[] {
                        bgModel,
                        tuningSegments,
                        configSetName}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Byte[] EndTuneBackgroundModel(System.IAsyncResult asyncResult, out int requestId) {
            object[] results = this.EndInvoke(asyncResult);
            requestId = ((int)(results[1]));
            return ((System.Byte[])(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.Persay.com/webservices/TuneCurrentBackgroundModel", RequestNamespace="http://www.Persay.com/webservices/", ResponseNamespace="http://www.Persay.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public System.Byte[] TuneCurrentBackgroundModel(string bgModelType, TuningAudioSegmentDetails[] tuningSegments, string configSetName, out int requestId) {
            object[] results = this.Invoke("TuneCurrentBackgroundModel", new object[] {
                        bgModelType,
                        tuningSegments,
                        configSetName});
            requestId = ((int)(results[1]));
            return ((System.Byte[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginTuneCurrentBackgroundModel(string bgModelType, TuningAudioSegmentDetails[] tuningSegments, string configSetName, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("TuneCurrentBackgroundModel", new object[] {
                        bgModelType,
                        tuningSegments,
                        configSetName}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Byte[] EndTuneCurrentBackgroundModel(System.IAsyncResult asyncResult, out int requestId) {
            object[] results = this.EndInvoke(asyncResult);
            requestId = ((int)(results[1]));
            return ((System.Byte[])(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.Persay.com/webservices/GetCalibrationProgress", RequestNamespace="http://www.Persay.com/webservices/", ResponseNamespace="http://www.Persay.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetCalibrationProgress(out int requestId) {
            object[] results = this.Invoke("GetCalibrationProgress", new object[0]);
            requestId = ((int)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetCalibrationProgress(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetCalibrationProgress", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public int EndGetCalibrationProgress(System.IAsyncResult asyncResult, out int requestId) {
            object[] results = this.EndInvoke(asyncResult);
            requestId = ((int)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.Persay.com/webservices/UploadBackgroundModel", RequestNamespace="http://www.Persay.com/webservices/", ResponseNamespace="http://www.Persay.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("requestId")]
        public int UploadBackgroundModel(string bgModelType, BgModelSource bgModelSource, [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] System.Byte[] model, string description) {
            object[] results = this.Invoke("UploadBackgroundModel", new object[] {
                        bgModelType,
                        bgModelSource,
                        model,
                        description});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginUploadBackgroundModel(string bgModelType, BgModelSource bgModelSource, System.Byte[] model, string description, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("UploadBackgroundModel", new object[] {
                        bgModelType,
                        bgModelSource,
                        model,
                        description}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndUploadBackgroundModel(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.Persay.com/webservices/SetThreshold", RequestNamespace="http://www.Persay.com/webservices/", ResponseNamespace="http://www.Persay.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("requestId")]
        public int SetThreshold(string bgModelType, short bgModelVersion, int lowerThreshold, int upperThreshold, string configurationSet, string Description) {
            object[] results = this.Invoke("SetThreshold", new object[] {
                        bgModelType,
                        bgModelVersion,
                        lowerThreshold,
                        upperThreshold,
                        configurationSet,
                        Description});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginSetThreshold(string bgModelType, short bgModelVersion, int lowerThreshold, int upperThreshold, string configurationSet, string Description, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("SetThreshold", new object[] {
                        bgModelType,
                        bgModelVersion,
                        lowerThreshold,
                        upperThreshold,
                        configurationSet,
                        Description}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndSetThreshold(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.Persay.com/webservices/DownloadBackgroundModel", RequestNamespace="http://www.Persay.com/webservices/", ResponseNamespace="http://www.Persay.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public System.Byte[] DownloadBackgroundModel(string bgModelType, short bgModelVersion, out int requestId) {
            object[] results = this.Invoke("DownloadBackgroundModel", new object[] {
                        bgModelType,
                        bgModelVersion});
            requestId = ((int)(results[1]));
            return ((System.Byte[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginDownloadBackgroundModel(string bgModelType, short bgModelVersion, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("DownloadBackgroundModel", new object[] {
                        bgModelType,
                        bgModelVersion}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Byte[] EndDownloadBackgroundModel(System.IAsyncResult asyncResult, out int requestId) {
            object[] results = this.EndInvoke(asyncResult);
            requestId = ((int)(results[1]));
            return ((System.Byte[])(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.Persay.com/webservices/UploadConfiguration", RequestNamespace="http://www.Persay.com/webservices/", ResponseNamespace="http://www.Persay.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("requestId")]
        public int UploadConfiguration(string configData, string name, ConfigurationType type) {
            object[] results = this.Invoke("UploadConfiguration", new object[] {
                        configData,
                        name,
                        type});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginUploadConfiguration(string configData, string name, ConfigurationType type, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("UploadConfiguration", new object[] {
                        configData,
                        name,
                        type}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndUploadConfiguration(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.Persay.com/webservices/DownloadConfiguration", RequestNamespace="http://www.Persay.com/webservices/", ResponseNamespace="http://www.Persay.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string DownloadConfiguration(string name, ConfigurationType type, out int requestId) {
            object[] results = this.Invoke("DownloadConfiguration", new object[] {
                        name,
                        type});
            requestId = ((int)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginDownloadConfiguration(string name, ConfigurationType type, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("DownloadConfiguration", new object[] {
                        name,
                        type}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndDownloadConfiguration(System.IAsyncResult asyncResult, out int requestId) {
            object[] results = this.EndInvoke(asyncResult);
            requestId = ((int)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.Persay.com/webservices/UploadLicense", RequestNamespace="http://www.Persay.com/webservices/", ResponseNamespace="http://www.Persay.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("requestId")]
        public int UploadLicense([System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] System.Byte[] licenseData) {
            object[] results = this.Invoke("UploadLicense", new object[] {
                        licenseData});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginUploadLicense(System.Byte[] licenseData, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("UploadLicense", new object[] {
                        licenseData}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndUploadLicense(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.Persay.com/webservices/CreateSpeaker", RequestNamespace="http://www.Persay.com/webservices/", ResponseNamespace="http://www.Persay.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("requestId")]
        public int CreateSpeaker(string speakerId) {
            object[] results = this.Invoke("CreateSpeaker", new object[] {
                        speakerId});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginCreateSpeaker(string speakerId, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("CreateSpeaker", new object[] {
                        speakerId}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndCreateSpeaker(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.Persay.com/webservices/DeleteSpeaker", RequestNamespace="http://www.Persay.com/webservices/", ResponseNamespace="http://www.Persay.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("requestId")]
        public int DeleteSpeaker(string speakerId, string configSetName) {
            object[] results = this.Invoke("DeleteSpeaker", new object[] {
                        speakerId,
                        configSetName});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginDeleteSpeaker(string speakerId, string configSetName, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("DeleteSpeaker", new object[] {
                        speakerId,
                        configSetName}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndDeleteSpeaker(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.Persay.com/webservices/CreateGroup", RequestNamespace="http://www.Persay.com/webservices/", ResponseNamespace="http://www.Persay.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("requestId")]
        public int CreateGroup(string groupId, string description) {
            object[] results = this.Invoke("CreateGroup", new object[] {
                        groupId,
                        description});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginCreateGroup(string groupId, string description, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("CreateGroup", new object[] {
                        groupId,
                        description}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndCreateGroup(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.Persay.com/webservices/DeleteGroup", RequestNamespace="http://www.Persay.com/webservices/", ResponseNamespace="http://www.Persay.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("requestId")]
        public int DeleteGroup(string groupId, string configSetName) {
            object[] results = this.Invoke("DeleteGroup", new object[] {
                        groupId,
                        configSetName});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginDeleteGroup(string groupId, string configSetName, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("DeleteGroup", new object[] {
                        groupId,
                        configSetName}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndDeleteGroup(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.Persay.com/webservices/AddSpeakerToGroup", RequestNamespace="http://www.Persay.com/webservices/", ResponseNamespace="http://www.Persay.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("requestId")]
        public int AddSpeakerToGroup(string groupId, string speakerId) {
            object[] results = this.Invoke("AddSpeakerToGroup", new object[] {
                        groupId,
                        speakerId});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginAddSpeakerToGroup(string groupId, string speakerId, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("AddSpeakerToGroup", new object[] {
                        groupId,
                        speakerId}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndAddSpeakerToGroup(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.Persay.com/webservices/RemoveSpeakerFromGroup", RequestNamespace="http://www.Persay.com/webservices/", ResponseNamespace="http://www.Persay.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("requestId")]
        public int RemoveSpeakerFromGroup(string groupId, string speakerId) {
            object[] results = this.Invoke("RemoveSpeakerFromGroup", new object[] {
                        groupId,
                        speakerId});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginRemoveSpeakerFromGroup(string groupId, string speakerId, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("RemoveSpeakerFromGroup", new object[] {
                        groupId,
                        speakerId}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndRemoveSpeakerFromGroup(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.Persay.com/webservices/GetCurrentDataRepository", RequestNamespace="http://www.Persay.com/webservices/", ResponseNamespace="http://www.Persay.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public DataRepositoryPriority GetCurrentDataRepository(out int requestId) {
            object[] results = this.Invoke("GetCurrentDataRepository", new object[0]);
            requestId = ((int)(results[1]));
            return ((DataRepositoryPriority)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetCurrentDataRepository(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetCurrentDataRepository", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public DataRepositoryPriority EndGetCurrentDataRepository(System.IAsyncResult asyncResult, out int requestId) {
            object[] results = this.EndInvoke(asyncResult);
            requestId = ((int)(results[1]));
            return ((DataRepositoryPriority)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.Persay.com/webservices/SetSpeakersList", RequestNamespace="http://www.Persay.com/webservices/", ResponseNamespace="http://www.Persay.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("requestId")]
        public int SetSpeakersList(string SpeakersListFilePath, string configurationSet) {
            object[] results = this.Invoke("SetSpeakersList", new object[] {
                        SpeakersListFilePath,
                        configurationSet});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginSetSpeakersList(string SpeakersListFilePath, string configurationSet, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("SetSpeakersList", new object[] {
                        SpeakersListFilePath,
                        configurationSet}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndSetSpeakersList(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.Persay.com/webservices/GetSpeakersList", RequestNamespace="http://www.Persay.com/webservices/", ResponseNamespace="http://www.Persay.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("requestId")]
        public int GetSpeakersList(string SpeakersListFilePath, string configurationSet) {
            object[] results = this.Invoke("GetSpeakersList", new object[] {
                        SpeakersListFilePath,
                        configurationSet});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetSpeakersList(string SpeakersListFilePath, string configurationSet, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetSpeakersList", new object[] {
                        SpeakersListFilePath,
                        configurationSet}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndGetSpeakersList(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.Persay.com/webservices/GetEnrollAttributeList", RequestNamespace="http://www.Persay.com/webservices/", ResponseNamespace="http://www.Persay.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] GetEnrollAttributeList(out int requestId) {
            object[] results = this.Invoke("GetEnrollAttributeList", new object[0]);
            requestId = ((int)(results[1]));
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetEnrollAttributeList(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetEnrollAttributeList", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public string[] EndGetEnrollAttributeList(System.IAsyncResult asyncResult, out int requestId) {
            object[] results = this.EndInvoke(asyncResult);
            requestId = ((int)(results[1]));
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.Persay.com/webservices/GetConfigurationSetList", RequestNamespace="http://www.Persay.com/webservices/", ResponseNamespace="http://www.Persay.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] GetConfigurationSetList(out int requestId) {
            object[] results = this.Invoke("GetConfigurationSetList", new object[0]);
            requestId = ((int)(results[1]));
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetConfigurationSetList(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetConfigurationSetList", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public string[] EndGetConfigurationSetList(System.IAsyncResult asyncResult, out int requestId) {
            object[] results = this.EndInvoke(asyncResult);
            requestId = ((int)(results[1]));
            return ((string[])(results[0]));
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.Persay.com/webservices/")]
    public class CalAudioSegmentDetails {
        
        /// <remarks/>
        public string FileName;
        
        /// <remarks/>
        public int SpeakerIndex;
        
        /// <remarks/>
        public int GroupIndex;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.Persay.com/webservices/")]
    public class TuningAudioSegmentDetails {
        
        /// <remarks/>
        public string FileName;
        
        /// <remarks/>
        public int SpeakerIndex;
        
        /// <remarks/>
        public MissionName Type;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.Persay.com/webservices/")]
    public enum MissionName {
        
        /// <remarks/>
        Enroll,
        
        /// <remarks/>
        SegmentCheck,
        
        /// <remarks/>
        Verify,
        
        /// <remarks/>
        VoiceprintMatch,
        
        /// <remarks/>
        PlayBackDetection,
        
        /// <remarks/>
        Adaptation,
        
        /// <remarks/>
        Identify,
        
        /// <remarks/>
        Train,
        
        /// <remarks/>
        DeleteSpeaker,
        
        /// <remarks/>
        RemoveEnrollSegment,
        
        /// <remarks/>
        DeleteEnrollSegments,
        
        /// <remarks/>
        DeleteVoiceTemplate,
        
        /// <remarks/>
        DeleteVoiceprint,
        
        /// <remarks/>
        DeleteFootprints,
        
        /// <remarks/>
        UpdateSegmentValidity,
        
        /// <remarks/>
        UpdateAuthenticity,
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.Persay.com/webservices/")]
    public enum BgModelSource {
        
        /// <remarks/>
        OffSite,
        
        /// <remarks/>
        OnSite,
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.Persay.com/webservices/")]
    public enum ConfigurationType {
        
        /// <remarks/>
        ConfigurationSet,
        
        /// <remarks/>
        EnrollmentAttr,
        
        /// <remarks/>
        Internal,
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.Persay.com/webservices/")]
    public enum DataRepositoryPriority {
        
        /// <remarks/>
        Primary,
        
        /// <remarks/>
        Secondary,
    }
}
