//------------------------------------------------------------------------------
// <autogenerated>
//     This code was generated by a tool.
//     Runtime Version: 1.1.4322.573
//
//     Changes to this file may cause incorrect behavior and will be lost if 
//     the code is regenerated.
// </autogenerated>
//------------------------------------------------------------------------------

namespace ChatServer 
{
  using System;
  using RemObjects.SDK;
  using RemObjects.SDK.Types;
    
  [RemObjects.SDK.EventSink(Name="ChatEvents", InvokerClass=typeof(ChatEvents_EventSinkInvoker))]
  public interface IChatEvents : RemObjects.SDK.IROEventSink 
  {
    void OnUserEntered(string aUser);
    void OnUserLeft(string aUser);
    void OnMessage(string aFrom, string aMessage);
  }
  public class ChatEvents_EventSinkInvoker : RemObjects.SDK.EventSinkInvoker 
  {
    public static void Invoke_OnUserEntered(RemObjects.SDK.IROEventSink __Target, RemObjects.SDK.IMessage __Message) 
    {
      string aUser = __Message.ReadAnsiString("aUser");
      ((IChatEvents)(__Target)).OnUserEntered(aUser);
    }
    public static void Invoke_OnUserLeft(RemObjects.SDK.IROEventSink __Target, RemObjects.SDK.IMessage __Message) 
    {
      string aUser = __Message.ReadAnsiString("aUser");
      ((IChatEvents)(__Target)).OnUserLeft(aUser);
    }
    public static void Invoke_OnMessage(RemObjects.SDK.IROEventSink __Target, RemObjects.SDK.IMessage __Message) 
    {
      string aFrom = __Message.ReadAnsiString("aFrom");
      string aMessage = __Message.ReadAnsiString("aMessage");
      ((IChatEvents)(__Target)).OnMessage(aFrom, aMessage);
    }
  }
  public interface IChatService : RemObjects.SDK.IROService 
  {
    void Enter(string aUsername, string aPassword);
    void Leave();
    void SendMessage(string aMessage);
  }
  public class ChatService_Proxy : RemObjects.SDK.Proxy, IChatService 
  {
    public ChatService_Proxy(IMessage aMessage, IClientChannel aClientChannel) : 
      base(aMessage, aClientChannel) 
    {
    }
    protected override string __GetInterfaceName() 
    {
      return "ChatService";
    }
    public virtual void Enter(string aUsername, string aPassword) 
    {
      __Message.InitializeMessage(__ClientChannel, __GetInterfaceName(), "Enter");
      __Message.WriteAnsiString("aUsername", aUsername);
      __Message.WriteAnsiString("aPassword", aPassword);
      __Message.FinalizeMessage();
      __ClientChannel.Dispatch(__Message);
      __Message.Clear();
    }
    public virtual void Leave() 
    {
      __Message.InitializeMessage(__ClientChannel, __GetInterfaceName(), "Leave");
      __Message.FinalizeMessage();
      __ClientChannel.Dispatch(__Message);
      __Message.Clear();
    }
    public virtual void SendMessage(string aMessage) 
    {
      __Message.InitializeMessage(__ClientChannel, __GetInterfaceName(), "SendMessage");
      __Message.WriteAnsiString("aMessage", aMessage);
      __Message.FinalizeMessage();
      __ClientChannel.Dispatch(__Message);
      __Message.Clear();
    }
  }
  public class CoChatService 
  {
    public static IChatService Create(IMessage aMessage, IClientChannel aClientChannel) 
    {
      return new ChatService_Proxy(aMessage, aClientChannel);
    }
  }
}
