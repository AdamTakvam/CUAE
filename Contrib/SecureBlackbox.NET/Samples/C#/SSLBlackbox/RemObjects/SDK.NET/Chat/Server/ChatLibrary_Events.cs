//------------------------------------------------------------------------------
// <autogenerated>
//     This code was generated by a tool.
//     Runtime Version: 1.1.4322.573
//
//     Changes to this file may cause incorrect behavior and will be lost if 
//     the code is regenerated.
// </autogenerated>
//------------------------------------------------------------------------------

namespace ChatServer 
{
  using System;
  using RemObjects.SDK;
  using RemObjects.SDK.Types;
  using RemObjects.SDK.Server;
    
  [RemObjects.SDK.Server.EventSinkProxy(Name="ChatEvents", EventSink=typeof(IChatEvents))]
  public class ChatEvents_EventSinkProxy : RemObjects.SDK.Server.EventSinkProxy, IChatEvents 
  {
    public ChatEvents_EventSinkProxy(IMessage aMessage, IServerEventChannel aServerEventChannel, IEventTargets aEventTargets) : 
      base(aMessage, aServerEventChannel, aEventTargets) 
    {
    }
    protected override string __GetInterfaceName() 
    {
      return "ChatEvents";
    }
    protected override System.Type __GetEventSinkType() 
    {
      return typeof(IChatEvents);
    }
    public virtual void OnUserEntered(string aUser) 
    {
      __Message.InitializeEventMessage(__ServerEventChannel, __GetInterfaceName(), "OnUserEntered");
      __Message.WriteAnsiString("aUser", aUser);
      __Message.FinalizeMessage();
      __ServerEventChannel.DispatchEvent(__Message, __GetEventSinkType(), __EventTargets);
    }
    public virtual void OnUserLeft(string aUser) 
    {
      __Message.InitializeEventMessage(__ServerEventChannel, __GetInterfaceName(), "OnUserLeft");
      __Message.WriteAnsiString("aUser", aUser);
      __Message.FinalizeMessage();
      __ServerEventChannel.DispatchEvent(__Message, __GetEventSinkType(), __EventTargets);
    }
    public virtual void OnMessage(string aFrom, string aMessage) 
    {
      __Message.InitializeEventMessage(__ServerEventChannel, __GetInterfaceName(), "OnMessage");
      __Message.WriteAnsiString("aFrom", aFrom);
      __Message.WriteAnsiString("aMessage", aMessage);
      __Message.FinalizeMessage();
      __ServerEventChannel.DispatchEvent(__Message, __GetEventSinkType(), __EventTargets);
    }
  }
}
