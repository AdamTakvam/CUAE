/**************************************************************
    Copyright (C) 2000-2002.  Intel Corporation.
 
    All Rights Reserved.  All names, products,
    and services mentioned herein are the trademarks
    or registered trademarks of their respective organizations
    and are the sole property of their respective owners.
 **************************************************************/
 
/*
*    AUTO-VERSIONING HEADER  DO NOT HAND MODIFY
*    ===================================================================
*    %name:          dlg_sysgen_msgids.h %
*    %version:       14 %
*    %instance:      hsw_1 %
*    %created_by:    dunnm %
*    %date_modified: Wed Apr 23 17:28:54 2003 %
*    ===================================================================
*/

/*
        dlgsyserrors.h - This file contains all
        errors generated by the Admin Framework APIs and exposed to the client.

*/


#ifndef _DLG_EXT_SYSGEN_ERROR_H
#define _DLG_EXT_SYSGEN_ERROR_H


#include "dlgfacil.h"



/*  
    Generic System Framework Error Definition 
    Facility = DLG_SYS_GEN_FACILITY 
 */
const DlgSysResultType DLG_FAIL = 
( DLG_ERROR_CODE  | DLG_SYS_GEN_FACILITY | 0x00000000 );

const DlgSysResultType DLG_OK = 
( DLG_INFO_CODE   | DLG_SYS_GEN_FACILITY | 0x00000001 );

const DlgSysResultType DLG_INVALID_POINTER = 
( DLG_ERROR_CODE  | DLG_SYS_GEN_FACILITY | 0x00000002 );

const DlgSysResultType DLG_MEM_ALLOC_ERR = 
( DLG_ERROR_CODE  | DLG_SYS_GEN_FACILITY | 0x00000003 );

const DlgSysResultType DLG_INVALID_INDEX = 
( DLG_ERROR_CODE  | DLG_SYS_GEN_FACILITY | 0x00000004 );

const DlgSysResultType DLG_INVALID_PARAM = 
( DLG_ERROR_CODE  | DLG_SYS_GEN_FACILITY | 0x00000005 );

const DlgSysResultType DLG_ERR_OS_NOTSUPPORTED = 
( DLG_ERROR_CODE  | DLG_SYS_GEN_FACILITY | 0x00000006 ); 

const DlgSysResultType DLG_VALUE_UNINITIALIZED = 
( DLG_ERROR_CODE  | DLG_SYS_GEN_FACILITY | 0x00000007 ); 

const DlgSysResultType DLG_ERR_CTPLATFORM_REGISTERED = 
( DLG_ERROR_CODE  | DLG_SYS_GEN_FACILITY | 0x00000008 ); 

const DlgSysResultType DLG_INIT_ERR_CTPLATFORM = 
( DLG_ERROR_CODE  | DLG_SYS_GEN_FACILITY | 0x00000009 ); 

const DlgSysResultType DLG_INVALID_BUFFER_SIZE = 
( DLG_ERROR_CODE  | DLG_SYS_GEN_FACILITY | 0x0000000A ); 

const DlgSysResultType DLG_INVALID_AUID = 
( DLG_ERROR_CODE  | DLG_SYS_GEN_FACILITY | 0x0000000B );

const DlgSysResultType DLG_TIME_OUT = 
( DLG_ERROR_CODE  | DLG_SYS_GEN_FACILITY | 0x0000000C );

const DlgSysResultType DLG_INVALID_ADAPTOR = 
( DLG_ERROR_CODE  | DLG_SYS_GEN_FACILITY | 0x0000000D );

const DlgSysResultType DLG_ERR_NAMESERVICE = 
( DLG_ERROR_CODE  | DLG_SYS_GEN_FACILITY | 0x0000000E );

const DlgSysResultType DLG_ERR_SERVER = 
( DLG_ERROR_CODE  | DLG_SYS_GEN_FACILITY | 0x0000000F );

const DlgSysResultType DLG_INVALID_SERVER = 
( DLG_ERROR_CODE  | DLG_SYS_GEN_FACILITY | 0x000000010 );

const DlgSysResultType DLG_UNSUPPORTED_FUNCTION = 
( DLG_ERROR_CODE  | DLG_SYS_GEN_FACILITY | 0x000000011 );

const DlgSysResultType DLG_CORBA_ERROR = 
( DLG_ERROR_CODE  | DLG_SYS_GEN_FACILITY | 0x000000012 );

const DlgSysResultType DLG_UNKNOWN_EXCEPTION = 
( DLG_ERROR_CODE  | DLG_SYS_GEN_FACILITY | 0x000000013 );

const DlgSysResultType DLG_SERVICE_SHUTDOWN = 
( DLG_WARN_CODE | DLG_SYS_GEN_FACILITY | 0x000000014 );

const DlgSysResultType DLG_SERVICE_STOP = 
( DLG_WARN_CODE | DLG_SYS_GEN_FACILITY | 0x000000015 );

const DlgSysResultType DLG_SERVICE_START = 
( DLG_WARN_CODE | DLG_SYS_GEN_FACILITY | 0x000000016 );

const DlgSysResultType DLG_SERVICE_INIT = 
( DLG_WARN_CODE | DLG_SYS_GEN_FACILITY | 0x000000017 );


#endif
