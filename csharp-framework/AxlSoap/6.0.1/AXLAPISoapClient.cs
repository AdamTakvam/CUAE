//------------------------------------------------------------------------------
// <autogenerated>
//     This code was generated by a tool.
//     Runtime Version: 1.1.4322.2032
//
//     Changes to this file may cause incorrect behavior and will be lost if 
//     the code is regenerated.
// </autogenerated>
//------------------------------------------------------------------------------

// 
// InfoVersionComment, WseWsdl2, Version=2.0.2.0, Culture=neutral, PublicKeyToken=26ba029e599ec4f8, RunTime Version: 1.1.4322.2032
// 
using System;
using System.Xml;
using Microsoft.Web.Services2;
using Microsoft.Web.Services2.Addressing;
using Microsoft.Web.Services2.Messaging;
using System.Xml.Serialization;

using Metreos.Core;

namespace Metreos.AxlSoap601
{
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("addPhone", Namespace = "http://www.cisco.com/AXL/API/1.0", IsNullable = false)]
    public class AddPhoneReq : APIRequest
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XIPPhone newPhone;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(XPhoneProfile))]
    public class XIPPhone
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, DataType = "Name")]
        public string name;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string description;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("productInfo", typeof(XProductInfo), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("product", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public object Item;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("model", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("modelInfo", typeof(XModelInfo), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public object Item1;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string @class;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string protocol;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string protocolSide;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("callingSearchSpaceName", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified, DataType = "Name")]
        [System.Xml.Serialization.XmlElementAttribute("callingSearchSpace", typeof(XCallingSearchSpace), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public object Item2;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("devicePoolName", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("devicePool", typeof(XDevicePool), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public object Item3;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("commonDeviceConfig", typeof(XCommonDeviceConfig), Form = System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable = true)]
        [System.Xml.Serialization.XmlElementAttribute("commonDeviceConfigName", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable = true)]
        public object Item4;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string networkLocation;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("locationName", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("location", typeof(XLocation), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public object Item5;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("mediaResourceListName", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("mediaResourceList", typeof(XMediaResourceList), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public object Item6;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, DataType = "nonNegativeInteger")]
        public string networkHoldMOHAudioSourceId;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, DataType = "nonNegativeInteger")]
        public string userHoldMOHAudioSourceId;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("automatedAlternateRoutingCSS", typeof(XCallingSearchSpace), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("automatedAlternateRoutingCSSName", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public object Item7;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("aarNeighborhood", typeof(XAARNeighborhood), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("aarNeighborhoodName", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public object Item8;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XLoadInformation loadInformation;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XVendorConfig vendorConfig;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string versionStamp;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool traceFlag;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool traceFlagSpecified;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int mlppDomainId;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool mlppDomainIdSpecified;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string mlppIndicationStatus;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string preemption;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(true)]
        public bool retryVideoCallAsAudio = true;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("securityProfileName", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("securityProfile", typeof(object), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public object Item9;

        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute("blfDirectedCallPark", Form = System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable = false)]
        public XBLFDirectedCallPark[] blfDirectedCallParks;

        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable = true)]
        [System.Xml.Serialization.XmlArrayItemAttribute("addOnModule", Form = System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable = false)]
        public XAddOnModule[] addOnModules;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable = true)]
        public string userLocale;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable = true)]
        public string networkLocale;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, DataType = "nonNegativeInteger", IsNullable = true)]
        public string idleTimeout;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, DataType = "anyURI", IsNullable = true)]
        public string authenticationURL;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, DataType = "anyURI", IsNullable = true)]
        public string directoryURL;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, DataType = "anyURI", IsNullable = true)]
        public string idleURL;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, DataType = "anyURI", IsNullable = true)]
        public string informationURL;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, DataType = "anyURI", IsNullable = true)]
        public string messagesURL;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, DataType = "anyURI", IsNullable = true)]
        public string proxyServerURL;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, DataType = "anyURI", IsNullable = true)]
        public string servicesURL;

        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute("service", Form = System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable = false)]
        public XSubscribedService[] services;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("softkeyTemplate", typeof(XSoftkeyTemplate), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("softkeyTemplateName", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public object Item10;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string loginUserId;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("defaultProfile", typeof(XProfile), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("defaultProfileName", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public object Item11;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool enableExtensionMobility;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("currentProfile", typeof(XProfile), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("currentProfileName", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public object Item12;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, DataType = "nonNegativeInteger")]
        public string loginTime;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, DataType = "nonNegativeInteger")]
        public string loginDuration;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XIPPhoneCurrentConfig currentConfig;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string builtInBridgeStatus;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string callInfoPrivacyStatus;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string hlogStatus;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable = true)]
        public string ownerUserId;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(false)]
        public bool ignorePresentationIndicators = false;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string packetCaptureMode;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, DataType = "positiveInteger")]
        public string packetCaptureDuration;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("subscribeCallingSearchSpace", typeof(XCallingSearchSpace), Form = System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable = true)]
        [System.Xml.Serialization.XmlElementAttribute("subscribeCallingSearchSpaceName", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable = true)]
        public object Item13;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("rerouteCallingSearchSpaceName", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable = true)]
        [System.Xml.Serialization.XmlElementAttribute("rerouteCallingSearchSpace", typeof(XCallingSearchSpace), Form = System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable = true)]
        public object Item14;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(true)]
        public bool allowCtiControlFlag = true;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("presenceGroupName", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("presenceGroup", typeof(XPresenceGroup), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public object Item15;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string certificateOperation;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, DataType = "Name")]
        public string authenticationString;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string certificateStatus;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string upgradeFinishTime;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute("Default")]
        public string deviceMobilityMode = "Default";

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string roamingDevicePoolName;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(false)]
        public bool remoteDevice = false;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, DataType = "nonNegativeInteger", IsNullable = true)]
        public string dndTimeout;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XDNDOption dndOption;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool dndOptionSpecified;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable = true)]
        public string dndRingSetting;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool dndStatus;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool dndStatusSpecified;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string associatedPC;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XIPPhoneLines lines;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, DataType = "positiveInteger")]
        public string numberOfButtons;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("phoneTemplate", typeof(XPhoneTemplate), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("phoneTemplateName", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public object Item16;

        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute("speeddial", Form = System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable = false)]
        public XSpeeddial[] speeddials;

        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute("busyLampField", Form = System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable = false)]
        public XBusyLampField[] busyLampFields;

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute(DataType = "positiveInteger")]
        public string ctiid;

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string uuid;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class XProductInfo
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string model;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, DataType = "nonNegativeInteger")]
        public string maxPorts;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool showInDropDown;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool showInDropDownSpecified;

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string name;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class UpdatePhoneReqLines
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("lineIdentifier", typeof(XNumplanIdentifier), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("line", typeof(XLine), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public object[] Items;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class XNumplanIdentifier
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string directoryNumber;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string routePartitionName;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class XLine
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable = true)]
        public string label;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable = true)]
        public string display;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("dirn", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XNPDirectoryNumber Item;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute("Ring")]
        public string ringSetting = "Ring";

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute("Use System Default")]
        public string consecutiveRingSetting = "Use System Default";

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute("Use System Default")]
        public string ringSettingIdlePickupAlert = "Use System Default";

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute("Use System Default")]
        public string ringSettingActivePickupAlert = "Use System Default";

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable = true)]
        public string e164Mask;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, DataType = "nonNegativeInteger")]
        public string dialPlanWizardId;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string mwlPolicy;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, DataType = "nonNegativeInteger")]
        public string maxNumCalls;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, DataType = "nonNegativeInteger")]
        public string busyTrigger;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XLineCallInfoDisplay callInfoDisplay;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("recordingProfileName", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("recordingProfile", typeof(XRecordingProfile), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public object Item1;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("monitoringCSSName", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified, DataType = "Name")]
        [System.Xml.Serialization.XmlElementAttribute("monitoringCSS", typeof(XCallingSearchSpace), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public object Item2;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XRecordingFlag recordingFlag;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool recordingFlagSpecified;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable = true)]
        public string audibleMWI;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string speedDial;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XPartitionUsage partitionUsage;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool partitionUsageSpecified;

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string uuid;

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute(DataType = "positiveInteger")]
        public string index;

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute(DataType = "nonNegativeInteger")]
        public string ctiid;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(XNPMessageWaiting))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(XNPCTIDirectoryNumber))]
    public class XNPDirectoryNumber : XNumPlan
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("aarNeighborhood", typeof(XAARNeighborhood), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("aarNeighborhoodName", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public object Item1;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable = true)]
        public string aarDestinationMask;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool aarKeepCallHistory;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool aarKeepCallHistorySpecified;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool aarVoiceMailEnabled;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool aarVoiceMailEnabledSpecified;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XCallForwardInfo callForwardAll;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XCallForwardInfo callForwardBusy;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XCallForwardInfo callForwardBusyInt;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XCallForwardInfo callForwardNoAnswer;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XCallForwardInfo callForwardNoAnswerInt;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XCallForwardInfo callForwardNoCoverage;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XCallForwardInfo callForwardNoCoverageInt;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XCallForwardInfo callForwardOnFailure;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XCallForwardInfo callForwardAlternateParty;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XCallForwardInfo callForwardNotRegistered;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XCallForwardInfo callForwardNotRegisteredInt;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("callPickupGroup", typeof(XNPCallPickupGroup), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("callPickupGroupName", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public object Item2;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string autoAnswer;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, DataType = "nonNegativeInteger", IsNullable = true)]
        public string networkHoldMOHAudioSourceId;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, DataType = "nonNegativeInteger", IsNullable = true)]
        public string userHoldMOHAudioSourceId;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string cfaCSSClause;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable = true)]
        public string alertingName;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("shareLineAppearanceCSS", typeof(XNPDirectoryNumberShareLineAppearanceCSS), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("shareLineAppearanceCSSName", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public object Item3;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("voiceMailProfileName", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("voiceMailProfile", typeof(XVoiceMailProfile), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public object Item4;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string patternPrecedence;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string releaseCause;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public long hrDuration;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool hrDurationSpecified;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public long hrInterval;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool hrIntervalSpecified;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class XAARNeighborhood
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string name;

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string uuid;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class XCallForwardInfo
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(false)]
        public bool forwardToVoiceMail = false;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("callingSearchSpaceName", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("callingSearchSpace", typeof(XCallingSearchSpace), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public object Item;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string destination;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, DataType = "nonNegativeInteger")]
        public string duration;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(UpdateDirectedCallParkReqRevertCSS))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(XNPDirectedCallParkRevertCSS))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(XNPDirectoryNumberShareLineAppearanceCSS))]
    public class XCallingSearchSpace
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, DataType = "Name")]
        public string name;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string description;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string clause;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, DataType = "nonNegativeInteger")]
        public string dialPlanWizardGenId;

        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute("member", Form = System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable = false)]
        public XCallingSearchSpaceMember[] members;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XPartitionUsage partitionUsage;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool partitionUsageSpecified;

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string uuid;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class XCallingSearchSpaceMember
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("routePartitionId", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("routePartitionName", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("routePartition", typeof(XRoutePartition), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")]
        public object Item;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public ItemChoiceType2 ItemElementName;

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute(DataType = "positiveInteger")]
        public string index;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class XRoutePartition
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string name;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string description;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, DataType = "nonNegativeInteger")]
        public string dialPlanWizardGenId;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("timeScheduleId", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("timeScheduleName", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")]
        public string Item;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public ItemChoiceType1 ItemElementName;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool useOriginatingDeviceTimeZone;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool useOriginatingDeviceTimeZoneSpecified;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string timeZone;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XPartitionUsage partitionUsage;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool partitionUsageSpecified;

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string uuid;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0", IncludeInSchema = false)]
    public enum ItemChoiceType1
    {

        /// <remarks/>
        timeScheduleId,

        /// <remarks/>
        timeScheduleName,
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public enum XPartitionUsage
    {

        /// <remarks/>
        Intercom,

        /// <remarks/>
        General,
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0", IncludeInSchema = false)]
    public enum ItemChoiceType2
    {

        /// <remarks/>
        routePartitionId,

        /// <remarks/>
        routePartitionName,

        /// <remarks/>
        routePartition,
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class UpdateDirectedCallParkReqRevertCSS : XCallingSearchSpace
    {
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class XNPDirectedCallParkRevertCSS : XCallingSearchSpace
    {
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class XNPDirectoryNumberShareLineAppearanceCSS : XCallingSearchSpace
    {
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class XNPCallPickupGroup : XNumPlan
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, DataType = "Name")]
        public string name;

        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute("member", Form = System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable = false)]
        public XPickupGroupMember[] members;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(XPickupNotification.NoAlert)]
        public XPickupNotification pickupNotification = XPickupNotification.NoAlert;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, DataType = "nonNegativeInteger")]
        [System.ComponentModel.DefaultValueAttribute("6")]
        public string pickupNotificationTimer = "6";

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XNPCallPickupGroupCallInfoForPickupNotification callInfoForPickupNotification;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class XPickupGroupMember
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, DataType = "nonNegativeInteger")]
        public string priority;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("pickupGroupName", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("pickupDNAndPartition", typeof(XPickupGroupMemberPickupDNAndPartition), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("pickupGroup", typeof(XPickupGroupMemberPickupGroup), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public object Item;

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string uuid;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class XPickupGroupMemberPickupDNAndPartition
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string dnPattern;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("routePartitionId", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("routePartitionName", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("routePartition", typeof(XRoutePartition), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")]
        public object Item;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public ItemChoiceType3 ItemElementName;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0", IncludeInSchema = false)]
    public enum ItemChoiceType3
    {

        /// <remarks/>
        routePartitionId,

        /// <remarks/>
        routePartitionName,

        /// <remarks/>
        routePartition,
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class XPickupGroupMemberPickupGroup
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string uuid;

        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string Value;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public enum XPickupNotification
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("No Alert")]
        NoAlert,

        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Audio Alert")]
        AudioAlert,

        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Visual Alert")]
        VisualAlert,

        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Audio and Visual Alert")]
        AudioandVisualAlert,
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class XNPCallPickupGroupCallInfoForPickupNotification
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(false)]
        public bool callingPartyInfo = false;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(false)]
        public bool calledPartyInfo = false;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(XNPCallPark))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(XNPConference))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(XNPDirectedCallPark))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(XNPMeetMe))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(XNPPattern))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(XNPHuntPilot))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(XNPRoutePattern))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(XNPTransformationPattern))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(XNPCallPickupGroup))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(XNPDirectoryNumber))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(XNPMessageWaiting))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(XNPCTIDirectoryNumber))]
    public abstract class XNumPlan
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string pattern;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string description;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string usage;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("routePartitionName", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified, DataType = "Name")]
        [System.Xml.Serialization.XmlElementAttribute("routePartition", typeof(XRoutePartition), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public object Item;

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string uuid;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class XNPCallPark : XNumPlan
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("callManagerName", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("callManagerId", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("Item1ElementName")]
        public string Item1;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public Item1ChoiceType Item1ElementName;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0", IncludeInSchema = false)]
    public enum Item1ChoiceType
    {

        /// <remarks/>
        callManagerName,

        /// <remarks/>
        callManagerId,
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class XNPConference : XNumPlan
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string mixer;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class XNPDirectedCallPark : XNumPlan
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string retrievalPrefix;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string reversionPattern;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("revertCSSName", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("revertCSS", typeof(XNPDirectedCallParkRevertCSS), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public object Item1;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class XNPMeetMe : XNumPlan
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(XDeviceSecurityMode.NonSecure)]
        public XDeviceSecurityMode minimumSecurityLevel = XDeviceSecurityMode.NonSecure;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public enum XDeviceSecurityMode
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Non Secure")]
        NonSecure,

        /// <remarks/>
        Authenticated,

        /// <remarks/>
        Encrypted,
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(XNPHuntPilot))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(XNPRoutePattern))]
    public abstract class XNPPattern : XNumPlan
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool blockEnable;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string calledPartyTransformationMask;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string callingPartyTransformationMask;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string useCallingPartyPhoneMask;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string callingPartyPrefixDigits;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("dialPlanName", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("dialPlan", typeof(XDialPlan), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public object Item1;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, DataType = "nonNegativeInteger")]
        public string dialPlanWizardGenId;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("digitDiscardInstructionName", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("digitDiscardInstruction", typeof(XDigitDiscardInstruction), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public object Item2;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string messageWaiting;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string networkLocation;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool patternUrgency;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool patternUrgencySpecified;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string prefixDigitsOut;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("routeFilter", typeof(XRouteFilter), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("routeFilterName", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public object Item3;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string callingLinePresentationBit;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string callingNamePresentationBit;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string connectedLinePresentationBit;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string connectedNamePresentationBit;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool supportOverlapSending;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool supportOverlapSendingSpecified;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string patternPrecedence;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string releaseCause;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(true)]
        public bool allowDeviceOverride = true;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(true)]
        public bool provideOutsideDialtone = true;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class XDialPlan
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string name;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string description;

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string uuid;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class XDigitDiscardInstruction
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string name;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string clause;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("dialPlanName", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("dialPlan", typeof(XDialPlan), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public object Item;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, DataType = "nonNegativeInteger")]
        public string digitAnalysisId;

        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute("member", Form = System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable = false)]
        public XDigitDiscardInstructionMember[] members;

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string uuid;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class XDigitDiscardInstructionMember
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("dialPlanTagName", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("dialPlanTag", typeof(XDialPlanTag), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public object Item;

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string uuid;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class XDialPlanTag
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string name;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("dialPlanName", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("dialPlan", typeof(XDialPlan), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public object Item;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XOperator @operator;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool suppressFromRouteFilter;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool suppressFromRouteFilterSpecified;

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string uuid;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public enum XOperator
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("NOT-SELECTED")]
        NOTSELECTED,

        /// <remarks/>
        EXISTS,

        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("DOES-NOT-EXIST")]
        DOESNOTEXIST,

        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("==")]
        Item,
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class XRouteFilter
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string name;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string clause;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("dialPlanName", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("dialPlan", typeof(XDialPlan), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public object Item;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, DataType = "nonNegativeInteger")]
        public string dialPlanWizardGenId;

        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute("member", Form = System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable = false)]
        public XRouteFilterMember[] members;

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string uuid;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class XRouteFilterMember
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("dialPlanTagName", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("dialPlanTag", typeof(XDialPlanTag), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public object Item;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, DataType = "nonNegativeInteger")]
        public string digits;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XOperator @operator;

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string uuid;

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute(DataType = "nonNegativeInteger")]
        public string priority;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class XNPHuntPilot : XNPPattern
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XNPHuntPilotDestination destination;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XHuntForwardInfo ForwardHuntBusy;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XHuntForwardInfo ForwardHuntNoAnswer;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class XNPHuntPilotDestination
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("huntListName", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("huntList", typeof(XHuntList), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public object Item;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class XHuntList
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, DataType = "Name")]
        public string name;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string description;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("callManagerGroupName", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("callManagerGroup", typeof(XCallManagerGroup), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public object Item;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool routeListEnabled;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool routeListEnabledSpecified;

        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute("member", Form = System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable = false)]
        public XHuntListMember[] members;

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string uuid;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class XCallManagerGroup
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string name;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool tftpDefault;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool tftpDefaultSpecified;

        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute("member", Form = System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable = false)]
        public XCallManagerMember[] members;

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string uuid;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class XCallManagerMember
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("callManager", typeof(XCallManager), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("callManagerName", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public object Item;

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute(DataType = "nonNegativeInteger")]
        public string priority;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class XCallManager
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string name;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string description;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XCallManagerAutoRegistration autoRegistration;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XCallManagerPorts ports;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("processNode", typeof(XProcessNode), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("processNodeName", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public object Item;

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string uuid;

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute(DataType = "nonNegativeInteger")]
        public string ctiid;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class XCallManagerAutoRegistration
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string startDN;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string endDN;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string nextDN;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("routePartitionName", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("routePartition", typeof(XRoutePartition), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public object Item;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string e164Mask;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class XCallManagerPorts
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, DataType = "nonNegativeInteger")]
        public string analogAccessPort;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, DataType = "nonNegativeInteger")]
        public string digitalAccessPort;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, DataType = "nonNegativeInteger")]
        public string ethernetPhonePort;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XCallManagerPortsMgcpPorts mgcpPorts;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class XCallManagerPortsMgcpPorts
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, DataType = "nonNegativeInteger")]
        public string listen;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, DataType = "nonNegativeInteger")]
        public string keepAlive;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class XProcessNode
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string name;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string description;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string mac;

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string uuid;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class XHuntListMember
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("lineGroup", typeof(XLineGroup), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("lineGroupName", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public object Item;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, DataType = "nonNegativeInteger")]
        public string selectionOrder;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string calledPartyTransformationMask;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string callingPartyTransformationMask;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("callingSearchSpaceName", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified, DataType = "Name")]
        [System.Xml.Serialization.XmlElementAttribute("callingSearchSpace", typeof(XCallingSearchSpace), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public object Item1;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, DataType = "nonNegativeInteger")]
        public string dialPlanWizardGenId;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("digitDiscardInstructionName", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified, DataType = "Name")]
        [System.Xml.Serialization.XmlElementAttribute("digitDiscardInstruction", typeof(XDigitDiscardInstruction), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public object Item2;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string prefixDigitsOut;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string callingPartyPrefixDigits;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string useFullyQualifiedCallingPartyNumber;

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string uuid;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class XLineGroup
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, DataType = "Name")]
        public string name;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string distributionAlgorithm;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, DataType = "nonNegativeInteger")]
        [System.ComponentModel.DefaultValueAttribute("10")]
        public string rnaReversionTimeOut = "10";

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string huntAlgorithmNoAnswer;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string huntAlgorithmBusy;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string huntAlgorithmNotAvailable;

        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute("member", Form = System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable = false)]
        public XLineGroupMember[] members;

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string uuid;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class XLineGroupMember
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, DataType = "nonNegativeInteger")]
        public string lineSelectionOrder;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("dnPatternAndPartition", typeof(XLineGroupMemberDnPatternAndPartition), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("directoryNumberId", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("directoryNumber", typeof(XNPDirectoryNumber), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public object Item;

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string uuid;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class XLineGroupMemberDnPatternAndPartition
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string dnPattern;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("routePartitionId", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("routePartitionName", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("routePartition", typeof(XRoutePartition), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")]
        public object Item;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public ItemChoiceType5 ItemElementName;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0", IncludeInSchema = false)]
    public enum ItemChoiceType5
    {

        /// <remarks/>
        routePartitionId,

        /// <remarks/>
        routePartitionName,

        /// <remarks/>
        routePartition,
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class XHuntForwardInfo
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(false)]
        public bool usePersonalPreferences = false;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("callingSearchSpaceName", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("callingSearchSpace", typeof(XCallingSearchSpace), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public object Item;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string destination;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, DataType = "nonNegativeInteger")]
        public string maxHuntduration;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class XNPRoutePattern : XNPPattern
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XNPRoutePatternDestination destination;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool authorizationCodeRequired;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool authorizationCodeRequiredSpecified;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, DataType = "nonNegativeInteger")]
        public string authorizationLevelRequired;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool clientCodeRequired;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool clientCodeRequiredSpecified;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string withTag;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string withValueClause;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class XNPRoutePatternDestination
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("gatewayName", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("routeList", typeof(XRouteList), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("gateway", typeof(XDevice), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("routeListName", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")]
        public object Item;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public ItemChoiceType4 ItemElementName;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class XRouteList
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, DataType = "Name")]
        public string name;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string description;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("callManagerGroupName", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("callManagerGroup", typeof(XCallManagerGroup), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public object Item;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool routeListEnabled;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool routeListEnabledSpecified;

        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute("member", Form = System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable = false)]
        public XRouteListMember[] members;

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string uuid;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class XRouteListMember
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("routeGroupName", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("routeGroup", typeof(XRouteGroup), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public object Item;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, DataType = "nonNegativeInteger")]
        public string selectionOrder;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string calledPartyTransformationMask;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string callingPartyTransformationMask;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("callingSearchSpaceName", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified, DataType = "Name")]
        [System.Xml.Serialization.XmlElementAttribute("callingSearchSpace", typeof(XCallingSearchSpace), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public object Item1;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, DataType = "nonNegativeInteger")]
        public string dialPlanWizardGenId;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("digitDiscardInstructionName", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified, DataType = "Name")]
        [System.Xml.Serialization.XmlElementAttribute("digitDiscardInstruction", typeof(XDigitDiscardInstruction), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public object Item2;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string prefixDigitsOut;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string callingPartyPrefixDigits;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string useFullyQualifiedCallingPartyNumber;

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string uuid;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class XRouteGroup
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, DataType = "Name")]
        public string name;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, DataType = "nonNegativeInteger")]
        public string dialPlanWizardGenId;

        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute("member", Form = System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable = false)]
        public XRouteGroupMember[] members;

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string uuid;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class XRouteGroupMember
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, DataType = "nonNegativeInteger")]
        public string deviceSelectionOrder;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, DataType = "nonNegativeInteger")]
        public string dialPlanWizardGenId;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("deviceId", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("device", typeof(XDevice), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("deviceName", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")]
        public object Item;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public ItemChoiceType13 ItemElementName;

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string uuid;

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute(DataType = "nonNegativeInteger")]
        public string port;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(XMGCPEndpoint))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(AddMGCPEndpointReqEndpoint))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(XPhone))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(XServerDevice))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(XCTIRoutePoint))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(XSIPTrunk))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(XVoiceMailPort))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(XH323Device))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(XH323Phone))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(XH323Gateway))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(GetH323TrunkReturnTrunk))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(XH323Trunk))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(XProfile))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(XGateway))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(XMGCPEndpointsEndpoint))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(XDigitalGateway))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(XPRIGateway))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(XBRIGateway))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(XT1Gateway))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(XAnalogGateway))]
    public class XDevice
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, DataType = "Name")]
        public string name;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string description;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("productInfo", typeof(XProductInfo), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("product", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public object Item;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("model", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("modelInfo", typeof(XModelInfo), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public object Item1;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string @class;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string protocol;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string protocolSide;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("callingSearchSpaceName", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified, DataType = "Name")]
        [System.Xml.Serialization.XmlElementAttribute("callingSearchSpace", typeof(XCallingSearchSpace), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public object Item2;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("devicePoolName", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("devicePool", typeof(XDevicePool), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public object Item3;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("commonDeviceConfig", typeof(XCommonDeviceConfig), Form = System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable = true)]
        [System.Xml.Serialization.XmlElementAttribute("commonDeviceConfigName", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable = true)]
        public object Item4;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string networkLocation;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("locationName", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("location", typeof(XLocation), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public object Item5;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("mediaResourceListName", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("mediaResourceList", typeof(XMediaResourceList), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public object Item6;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, DataType = "nonNegativeInteger")]
        public string networkHoldMOHAudioSourceId;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, DataType = "nonNegativeInteger")]
        public string userHoldMOHAudioSourceId;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("automatedAlternateRoutingCSS", typeof(XCallingSearchSpace), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("automatedAlternateRoutingCSSName", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public object Item7;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("aarNeighborhood", typeof(XAARNeighborhood), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("aarNeighborhoodName", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public object Item8;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XLoadInformation loadInformation;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XVendorConfig vendorConfig;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string versionStamp;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool traceFlag;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool traceFlagSpecified;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int mlppDomainId;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool mlppDomainIdSpecified;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string mlppIndicationStatus;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string preemption;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(true)]
        public bool retryVideoCallAsAudio = true;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("securityProfileName", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("securityProfile", typeof(object), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public object Item9;

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute(DataType = "positiveInteger")]
        public string ctiid;

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string uuid;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class XModelInfo
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string @class;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, DataType = "nonNegativeInteger")]
        public string defaultDTMFCapability;

        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute("feature", Form = System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable = false)]
        public string[] features;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool hasFirmwardLoad;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool hasFirmwardLoadSpecified;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool hasPhoneTemplate;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool hasPhoneTemplateSpecified;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, DataType = "nonNegativeInteger")]
        public string numberOfButtons;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool phoneTemplateIsUserModifiable;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool phoneTemplateIsUserModifiableSpecified;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool showInDeviceDefaults;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool showInDeviceDefaultsSpecified;

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string name;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class XDevicePool
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string name;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("autoSearchSpaceName", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("autoSearchSpace", typeof(XCallingSearchSpace), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public object Item;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("dateTimeSetting", typeof(XDateTimeSetting), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("dateTimeSettingName", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public object Item1;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("callManagerGroupName", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("callManagerGroup", typeof(XCallManagerGroup), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public object Item2;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("mediaResourceListName", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("mediaResourceList", typeof(XMediaResourceList), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public object Item3;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("region", typeof(XRegion), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("regionName", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public object Item4;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string networkLocale;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("srstInfo", typeof(XSRSTInfo), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("srstName", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public object Item5;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int connectionMonitorDuration;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool connectionMonitorDurationSpecified;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("automatedAlternateRoutingCSS", typeof(XCallingSearchSpace), Form = System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable = true)]
        [System.Xml.Serialization.XmlElementAttribute("automatedAlternateRoutingCSSName", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable = true)]
        public object Item6;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("aarNeighborHood", typeof(XAARNeighborhood), Form = System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable = true)]
        [System.Xml.Serialization.XmlElementAttribute("arrNeighborHoodName", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable = true)]
        public object Item7;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("locationName", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable = true)]
        [System.Xml.Serialization.XmlElementAttribute("location", typeof(XLocation), Form = System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable = true)]
        public object Item8;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("mobilityCSS", typeof(XCallingSearchSpace), Form = System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable = true)]
        [System.Xml.Serialization.XmlElementAttribute("mobilityCSSName", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable = true)]
        public object Item9;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("physicalLocation", typeof(XPhysicalLocation), Form = System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable = true)]
        [System.Xml.Serialization.XmlElementAttribute("physicalLocationName", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable = true)]
        public object Item10;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("deviceMobilityGroupName", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable = true)]
        [System.Xml.Serialization.XmlElementAttribute("deviceMobilityGroup", typeof(XDeviceMobilityGroup), Form = System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable = true)]
        public object Item11;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XRevertPriority revertPriority;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool revertPrioritySpecified;

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string uuid;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class XDateTimeSetting
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string name;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string dateTemplate;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string timeZone;

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string uuid;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class XMediaResourceList
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string name;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string clause;

        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute("member", Form = System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable = false)]
        public XMediaResourceListMember[] members;

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string uuid;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class XMediaResourceListMember
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("mediaResourceGroupName", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("mediaResourceGroup", typeof(XMediaResourceGroup), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public object Item;

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string uuid;

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute(DataType = "nonNegativeInteger")]
        public string order;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class XMediaResourceGroup
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string name;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string description;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool multicast;

        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute("member", Form = System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable = false)]
        public XMediaResourceGroupMember[] members;

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string uuid;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class XMediaResourceGroupMember
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("device", typeof(XDevice), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("deviceName", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public object Item;

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string uuid;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(AddRegionReqRegion))]
    public class XRegion
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string name;

        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute("relatedRegion", Form = System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable = false)]
        public XRegionRelationship[] relatedRegions;

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string uuid;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class XRegionRelationship
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("name", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("region", typeof(XRegion), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public object Item;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute("G.711")]
        public string bandwidth = "G.711";

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, DataType = "nonNegativeInteger")]
        public string videoBandwidth;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XLossyNetwork lossyNetwork;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool lossyNetworkSpecified;

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string uuid;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public enum XLossyNetwork
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Keep Current Setting")]
        KeepCurrentSetting,

        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Use System Default")]
        UseSystemDefault,

        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Low Loss")]
        LowLoss,

        /// <remarks/>
        Lossy,
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class AddRegionReqRegion : XRegion
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute("G.711")]
        public string defaultCodec = "G.711";
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class XSRSTInfo
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, DataType = "Name")]
        public string name;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute("User Specific")]
        public string srstOption = "User Specific";

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(true)]
        public bool userModifiable = true;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string ipAddr1;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, DataType = "nonNegativeInteger")]
        [System.ComponentModel.DefaultValueAttribute("2000")]
        public string port1 = "2000";

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string ipAddr2;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, DataType = "nonNegativeInteger")]
        [System.ComponentModel.DefaultValueAttribute("2000")]
        public string port2 = "2000";

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string ipAddr3;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, DataType = "nonNegativeInteger")]
        [System.ComponentModel.DefaultValueAttribute("2000")]
        public string port3 = "2000";

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string certificate;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(false)]
        public bool isSecure = false;

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string uuid;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class XLocation
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string name;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, DataType = "nonNegativeInteger")]
        public string id;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, DataType = "nonNegativeInteger")]
        public string kbits;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, DataType = "nonNegativeInteger")]
        public string videoKbits;

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string uuid;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class XPhysicalLocation
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string name;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable = true)]
        public string description;

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string uuid;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class XDeviceMobilityGroup
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string name;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable = true)]
        public string description;

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string uuid;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public enum XRevertPriority
    {

        /// <remarks/>
        Default,

        /// <remarks/>
        Highest,
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class XCommonDeviceConfig
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string name;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("softkeyTemplate", typeof(XSoftkeyTemplate), Form = System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable = true)]
        [System.Xml.Serialization.XmlElementAttribute("softkeyTemplateName", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable = true)]
        public object Item;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable = true)]
        public string userLocale;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, DataType = "nonNegativeInteger", IsNullable = true)]
        public string networkHoldMOHAudioSourceId;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, DataType = "nonNegativeInteger", IsNullable = true)]
        public string userHoldMOHAudioSourceId;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int mlppDomainId;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool mlppDomainIdSpecified;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string mlppIndicationStatus;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string preemption;

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string uuid;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class XSoftkeyTemplate
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string name;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string description;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(true)]
        public bool isStandard = true;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable = true)]
        public string softkeyClause;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable = true)]
        public string softkeySetClause;

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string uuid;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class XLoadInformation
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool special;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool specialSpecified;

        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string Value;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class XVendorConfig
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute()]
        public System.Xml.XmlElement[] Any;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(AddMGCPEndpointReqEndpoint))]
    public class XMGCPEndpoint : XDevice
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute("None")]
        public string packetCaptureMode = "None";

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, DataType = "positiveInteger")]
        [System.ComponentModel.DefaultValueAttribute("60")]
        public string packetCaptureDuration = "60";
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class AddMGCPEndpointReqEndpoint : XMGCPEndpoint
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute(DataType = "nonNegativeInteger")]
        public string index;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class XPhone : XDevice
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string associatedPC;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XPhoneLines lines;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, DataType = "positiveInteger")]
        public string numberOfButtons;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("phoneTemplate", typeof(XPhoneTemplate), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("phoneTemplateName", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public object Item10;

        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute("speeddial", Form = System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable = false)]
        public XSpeeddial[] speeddials;

        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute("busyLampField", Form = System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable = false)]
        public XBusyLampField[] busyLampFields;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class XPhoneLines
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("lineIdentifier", typeof(XNumplanIdentifier), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("lineId", typeof(XLineId), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("lineLabel", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("line", typeof(XLine), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public object[] Items;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class XLineId
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute(DataType = "nonNegativeInteger")]
        public string index;

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute(DataType = "nonNegativeInteger")]
        public string ctiid;

        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string Value;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class XPhoneTemplate
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string name;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("basePhoneTemplateName", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("basePhoneTemplate", typeof(XPhoneTemplate), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public object Item;

        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute("button", Form = System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable = false)]
        public XButton[] buttons;

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string uuid;

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool userModifiable;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool userModifiableSpecified;

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool removeAtMigration;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool removeAtMigrationSpecified;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class XButton
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string feature;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string label;

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string uuid;

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute(DataType = "positiveInteger")]
        public string index;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class XSpeeddial
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string dirn;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string label;

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute(DataType = "positiveInteger")]
        public string index;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class XBusyLampField
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("blfDest", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified, DataType = "nonNegativeInteger")]
        [System.Xml.Serialization.XmlElementAttribute("blfDirn", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")]
        public string Item;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public ItemChoiceType6 ItemElementName;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string label;

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute(DataType = "positiveInteger")]
        public string index;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0", IncludeInSchema = false)]
    public enum ItemChoiceType6
    {

        /// <remarks/>
        blfDest,

        /// <remarks/>
        blfDirn,
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class XServerDevice : XDevice
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("processNodeId", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("processNode", typeof(XProcessNode), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("processNodeName", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified, DataType = "Name")]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("Item10ElementName")]
        public object Item10;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public Item10ChoiceType Item10ElementName;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0", IncludeInSchema = false)]
    public enum Item10ChoiceType
    {

        /// <remarks/>
        processNodeId,

        /// <remarks/>
        processNode,

        /// <remarks/>
        processNodeName,
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class XCTIRoutePoint : XDevice
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XCTIRoutePointLines lines;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class XCTIRoutePointLines
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("lineIdentifier", typeof(XNumplanIdentifier), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("lineId", typeof(XLineId), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("line", typeof(XLine), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public object[] Items;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class XSIPTrunk : XDevice
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("subscribeCallingSearchSpace", typeof(XCallingSearchSpace), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("subscribeCallingSearchSpaceName", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public object SubscribeItem;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("rerouteCallingSearchSpaceName", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("rerouteCallingSearchSpace", typeof(XCallingSearchSpace), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public object RerouteItem;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("referCallingSearchSpaceName", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("referCallingSearchSpace", typeof(XCallingSearchSpace), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public object ReferItem;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool mtpRequired;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool mtpRequiredSpecified;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string destinationaddress;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(false)]
        public bool destAddrIsSRV = false;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, DataType = "integer")]
        [System.ComponentModel.DefaultValueAttribute("0")]
        public string destinationport = "0";

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string tkSipCodec;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string OutgoingTransportType;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XSIPTrunkSigDigits sigDigits;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string connectedNamePresentation;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string connectedPartyIdPresentation;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string callingPartySelection;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string callingname;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string callingLineIdPresentation;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string prefixDN;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string callerName;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string callerIdDN;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool acceptInboundRDNIS;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool acceptInboundRDNISSpecified;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool acceptOutboundRDNIS;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool acceptOutboundRDNISSpecified;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class XSIPTrunkSigDigits
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool enable;

        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute(DataType = "nonNegativeInteger")]
        public string Value;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class XVoiceMailPort : XDevice
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XLine line;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(XH323Phone))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(XH323Gateway))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(GetH323TrunkReturnTrunk))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(XH323Trunk))]
    public class XH323Device : XDevice
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string packetCaptureMode;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, DataType = "positiveInteger", IsNullable = true)]
        [System.ComponentModel.DefaultValueAttribute("60")]
        public string packetCaptureDuration = "60";

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(false)]
        public bool srtpAllowed = false;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool waitForFarEndH245TerminalSet;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool waitForFarEndH245TerminalSetSpecified;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool mtpRequired;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool mtpRequiredSpecified;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string callerIdDN;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string callingPartySelection;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string callingLineIdPresentation;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool displayIEDelivery;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool displayIEDeliverySpecified;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool redirectOutboundNumberIE;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool redirectOutboundNumberIESpecified;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool redirectInboundNumberIE;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool redirectInboundNumberIESpecified;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool enableInboundFaststart;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool enableInboundFaststartSpecified;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool enableOutboundFaststart;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool enableOutboundFaststartSpecified;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string codecForOutboundFaststart;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class XH323Phone : XH323Device
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string hlogStatus;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("subscribeCallingSearchSpace", typeof(XCallingSearchSpace), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("subscribeCallingSearchSpaceName", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public object SubscribeItem;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable = true)]
        public string ownerUserId;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, DataType = "nonNegativeInteger")]
        public string signalingPort;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XH323PhoneGatekeeperInfo gatekeeperInfo;

        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute("line", Form = System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable = false)]
        public XLine[] lines;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(false)]
        public bool ignorePresentationIndicators = false;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class XH323PhoneGatekeeperInfo
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("gatekeeper", typeof(XGatekeeper), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("gatekeeperName", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public object Item;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string e164;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string technologyPrefix;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string zone;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class XGatekeeper
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string name;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string description;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, DataType = "nonNegativeInteger")]
        public string rrqTimeToLive;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, DataType = "nonNegativeInteger")]
        public string retryTimeout;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool enableDevice;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool enableDeviceSpecified;

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string uuid;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(GetH323TrunkReturnTrunk))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(XH323Trunk))]
    public class XH323Gateway : XH323Device
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XH323GatewaySignificantDigits significantDigits;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string prefixDN;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string calledPartyIENumberType;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string callingPartyIENumberType;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string calledNumberingPlan;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string callingNumberingPlan;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class XH323GatewaySignificantDigits
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool enable;

        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute(DataType = "nonNegativeInteger")]
        public string Value;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class GetH323TrunkReturnTrunk : XH323Gateway
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("remoteServerInfo", typeof(GetH323TrunkReturnTrunkRemoteServerInfo), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("gatekeeperInfo", typeof(GetH323TrunkReturnTrunkGatekeeperInfo), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public object RemoteItem;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class GetH323TrunkReturnTrunkRemoteServerInfo
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string server1;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string server2;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string server3;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class GetH323TrunkReturnTrunkGatekeeperInfo
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("gatekeeper", typeof(XGatekeeper), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("gatekeeperName", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public object Item;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string terminal;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string technologyPrefix;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string zone;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class XH323Trunk : XH323Gateway
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string tunneledProtocol;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(false)]
        public bool pathReplacementSupport = false;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("remoteServerInfo", typeof(XH323TrunkRemoteServerInfo), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("gatekeeperInfo", typeof(XH323TrunkGatekeeperInfo), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public object RemoteServerItem;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool ictPassingPrecedenceLevelThroughUUIE;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ictPassingPrecedenceLevelThroughUUIESpecified;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, DataType = "nonNegativeInteger")]
        public string ictSecurityAccessLevel;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class XH323TrunkRemoteServerInfo
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string server1;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string server2;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string server3;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class XH323TrunkGatekeeperInfo
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("gatekeeper", typeof(XGatekeeper), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("gatekeeperName", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public object Item;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string terminal;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string technologyPrefix;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string zone;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class XProfile : XDevice
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string deviceProfile;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string loginUserid;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string loginTime;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, DataType = "nonNegativeInteger")]
        public string loginDuration;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool allowHoteling;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string defaultProfileId;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(false)]
        public bool ignorePresentationIndicators = false;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(XMGCPEndpointsEndpoint))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(XDigitalGateway))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(XPRIGateway))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(XBRIGateway))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(XT1Gateway))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(XAnalogGateway))]
    public class XGateway : XDevice
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute("None")]
        public string packetCaptureMode = "None";

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, DataType = "positiveInteger")]
        [System.ComponentModel.DefaultValueAttribute("60")]
        public string packetCaptureDuration = "60";
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class XMGCPEndpointsEndpoint : XGateway
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute(DataType = "nonNegativeInteger")]
        public string index;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(XPRIGateway))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(XBRIGateway))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(XT1Gateway))]
    public abstract class XDigitalGateway : XGateway
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable = true)]
        public string country;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string trunkSelectionOrder;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class XPRIGateway : XDigitalGateway
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool acceptInboundRDNIS;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string calledPlan;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string calledPri;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string callerIDDN;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string callingPartySelection;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string callingPlan;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string callingPri;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, DataType = "nonNegativeInteger")]
        public string chanIE;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string clockReference;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string csuParam;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool dChannelEnable;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool direction;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool displayIE;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string encode;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string fdlChannel;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, DataType = "nonNegativeInteger")]
        public string firstDelay;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XPRIGatewayInterfaceId interfaceId;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, DataType = "nonNegativeInteger")]
        public string intraDelay;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool mcdnEnable;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool numberIE;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, DataType = "nonNegativeInteger")]
        public string numDigits;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool passingPrecedenceLevelThroughUUIE;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool passingPrecedenceLevelThroughUUIESpecified;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string prefix;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string callingLinePresentationBit;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string connectedLinePresentationBit;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string connectedPBX;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string priProtocol;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, DataType = "nonNegativeInteger")]
        public string securityAccessLevel;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool sendCallingNameInFacilityIE;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool sendEXLeadingCharInDispIE;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool sendRestart;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool setupNonISDNPI;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool sigDigits;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, DataType = "nonNegativeInteger")]
        public string span;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool statusPoll;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, DataType = "nonNegativeInteger")]
        public string stripCountOut;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string trunkPadRx;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string trunkPadTx;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string trunkLevel;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string yellowAlarm;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string zeroSuppression;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, DataType = "positiveInteger")]
        public string sMDIBasePort;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool protocolProfile91NameOnly;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, DataType = "anyURI")]
        public string helpURL;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class XPRIGatewayInterfaceId
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool present;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool presentSpecified;

        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute(DataType = "nonNegativeInteger")]
        public string Value;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class XBRIGateway : XDigitalGateway
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool acceptInboundRDNIS;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string briProtocol;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string calledPlan;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string calledPri;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string callerIDDN;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string callingPartySelection;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string callingPlan;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string callingPri;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, DataType = "nonNegativeInteger")]
        public string chanIE;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string clockReference;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string csuParam;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool dChannelEnable;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool direction;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool displayIE;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string encode;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string fdlChannel;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, DataType = "nonNegativeInteger")]
        public string firstDelay;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string framing;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, DataType = "nonNegativeInteger")]
        public string intraDelay;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool numberIE;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, DataType = "nonNegativeInteger")]
        public string numDigits;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string prefix;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string presentationBit;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool sendRestart;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool setupNonISDNPI;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool sigDigits;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool stableIn4;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool statusPoll;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, DataType = "nonNegativeInteger")]
        public string stripCountOut;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string trunkPadRx;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string trunkPadTx;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string trunkLevel;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string yellowAlarm;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string zeroSuppression;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class XT1Gateway : XDigitalGateway
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string clockReference;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string csuParam;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string digitSending;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string encode;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string fdlChannel;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, DataType = "positiveInteger")]
        public string maxPorts;

        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute("port", Form = System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable = false)]
        public XT1Port[] ports;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string yellowAlarm;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string zeroSuppression;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, DataType = "positiveInteger")]
        public string sMDIBasePort;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, DataType = "anyURI")]
        public string helpURL;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class XT1Port : XAnalogPort
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string callerId;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string endpointId;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(XT1Port))]
    public class XAnalogPort
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string attendantDN;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string callerIdDN;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool callerIdEnable;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string callingPartySelection;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string digitSending;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, DataType = "nonNegativeInteger")]
        public string expectedDigits;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XAnalogPortFinalDigits finalDigits;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("lineId", typeof(XLineId), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("line", typeof(XLine), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public object Item;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string prefixDN;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string presentationBit;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string silenceSuppressionThreshold;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, DataType = "nonNegativeInteger")]
        public string smdiPortNumber;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XStartDialProtocol startDialProtocol;

        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute("timer", Form = System.Xml.Schema.XmlSchemaForm.Unqualified, DataType = "nonNegativeInteger", IsNullable = false)]
        public string[] timers;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string trunk;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string trunkDirection;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string trunkLevel;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string trunkPadRx;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string trunkPadTx;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XVendorConfig vendorConfig;

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string uuid;

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute(DataType = "positiveInteger")]
        public string portNumber;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class XAnalogPortFinalDigits
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool significant;

        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute(DataType = "nonNegativeInteger")]
        public string Value;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public enum XStartDialProtocol
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Not Set")]
        NotSet,

        /// <remarks/>
        Immediate,

        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Wink Start Feature Group B")]
        WinkStartFeatureGroupB,

        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Delay Dial")]
        DelayDial,

        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Wink Start Feature Group D")]
        WinkStartFeatureGroupD,
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class XAnalogGateway : XGateway
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable = true)]
        public string country;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, DataType = "positiveInteger")]
        public string maxPorts;

        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute("port", Form = System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable = false)]
        public XAnalogPort[] ports;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string trunkSelectionOrder;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, DataType = "anyURI")]
        public string helpURL;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0", IncludeInSchema = false)]
    public enum ItemChoiceType13
    {

        /// <remarks/>
        deviceId,

        /// <remarks/>
        device,

        /// <remarks/>
        deviceName,
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0", IncludeInSchema = false)]
    public enum ItemChoiceType4
    {

        /// <remarks/>
        gatewayName,

        /// <remarks/>
        routeList,

        /// <remarks/>
        gateway,

        /// <remarks/>
        routeListName,
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class XNPTransformationPattern : XNumPlan
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable = true)]
        public string callingPartyTransformationMask;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string useCallingPartyPhoneMask;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("dialPlanName", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("dialPlan", typeof(XDialPlan), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public object Item1;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool patternUrgency;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable = true)]
        public string callingPartyPrefixDigits;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("routeFilter", typeof(XRouteFilter), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("routeFilterName", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public object Item2;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string callingLinePresentationBit;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string callingNamePresentationBit;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class XVoiceMailProfile
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string name;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable = true)]
        public string description;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(false)]
        public bool isDefault = false;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable = true)]
        public string voiceMailboxMask;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XVoiceMailPilot voiceMailPilot;

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string uuid;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class XVoiceMailPilot
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable = true)]
        public string dirn;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable = true)]
        public string description;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("CSS", typeof(XCallingSearchSpace), Form = System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable = true)]
        [System.Xml.Serialization.XmlElementAttribute("CSSName", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable = true)]
        public object Item;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(false)]
        public bool isDefault = false;

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string uuid;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class XNPMessageWaiting : XNPDirectoryNumber
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool isMessageWaitingOn;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XCallingSearchSpace mwiCSS;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class XNPCTIDirectoryNumber : XNPDirectoryNumber
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XCallForwardInfo callForwardCTIFailure;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class XLineCallInfoDisplay
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool callerName;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool callerNumber;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool redirectedNumber;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool dialedNumber;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class XRecordingProfile
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string name;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("recordingCSSName", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified, DataType = "Name")]
        [System.Xml.Serialization.XmlElementAttribute("recordingCSS", typeof(XCallingSearchSpace), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public object Item;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string recorderDestination;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public enum XRecordingFlag
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Call Recording Disabled")]
        CallRecordingDisabled,

        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Automatic Call Recording Enabled")]
        AutomaticCallRecordingEnabled,

        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Application Invoked Call Recording Enabled")]
        ApplicationInvokedCallRecordingEnabled,
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class UpdateHuntPilotReqDestination
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("huntListName", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("huntList", typeof(XHuntList), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public object Item;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class UpdateRoutePatternReqDestination
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("gatewayName", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("routeList", typeof(XRouteList), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("gateway", typeof(XDevice), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("routeListName", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")]
        public object Item;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public ItemChoiceType70 ItemElementName;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0", IncludeInSchema = false)]
    public enum ItemChoiceType70
    {

        /// <remarks/>
        gatewayName,

        /// <remarks/>
        routeList,

        /// <remarks/>
        gateway,

        /// <remarks/>
        routeListName,
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class UpdateUserReqPhoneProfiles
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("profile", typeof(XPhoneProfile), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("profileName", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public object[] Items;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class XPhoneProfile : XIPPhone
    {
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class RemoveMGCPEndpointReqEndpoint
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute(DataType = "nonNegativeInteger")]
        public string index;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class RemoveMGCPEndpointReqSubunit
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute(DataType = "nonNegativeInteger")]
        public string index;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class RemoveMGCPEndpointReqUnit
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute(DataType = "nonNegativeInteger")]
        public string index;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class AddMGCPSubunitReqUnit
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute(DataType = "nonNegativeInteger")]
        public string index;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class AddMGCPEndpointReqSubunit
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute(DataType = "nonNegativeInteger")]
        public string index;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class AddMGCPEndpointReqUnit
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute(DataType = "nonNegativeInteger")]
        public string index;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class UpdateSIPTrunkReqSigDigits
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool enable;

        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute(DataType = "nonNegativeInteger")]
        public string Value;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class UpdateGatewayEndpointReqT1
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string trunkSelectionOrder;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string clockReference;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string csuParam;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string digitSending;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string encode;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string fdlChannel;

        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute("port", Form = System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable = false)]
        public XT1Port[] ports;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string yellowAlarm;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string zeroSuppression;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, DataType = "positiveInteger")]
        public string sMDIBasePort;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class UpdateGatewayEndpointReqBri
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool acceptInboundRDNIS;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool acceptInboundRDNISSpecified;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string briProtocol;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string calledPlan;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string calledPri;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string callerIDDN;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string callingPartySelection;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string callingPlan;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string callingPri;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, DataType = "nonNegativeInteger")]
        public string chanIE;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string clockReference;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string csuParam;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool dChannelEnable;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool dChannelEnableSpecified;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool direction;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool directionSpecified;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool displayIE;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool displayIESpecified;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string encode;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string fdlChannel;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, DataType = "nonNegativeInteger")]
        public string firstDelay;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string framing;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, DataType = "nonNegativeInteger")]
        public string intraDelay;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool numberIE;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool numberIESpecified;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, DataType = "nonNegativeInteger")]
        public string numDigits;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string prefix;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string presentationBit;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool sendRestart;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool sendRestartSpecified;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool setupNonISDNPI;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool setupNonISDNPISpecified;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool sigDigits;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool sigDigitsSpecified;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool stableIn4;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool stableIn4Specified;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool statusPoll;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool statusPollSpecified;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, DataType = "nonNegativeInteger")]
        public string stripCountOut;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string trunkPadRx;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string trunkPadTx;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string trunkLevel;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string yellowAlarm;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string zeroSuppression;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class UpdateGatewayEndpointReqPriInterfaceId
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool present;

        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute(DataType = "nonNegativeInteger")]
        public string Value;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class UpdateGatewayEndpointReqPri
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool acceptInboundRDNIS;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool acceptInboundRDNISSpecified;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string calledPlan;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string calledPri;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string callerIDDN;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string callingPartySelection;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string callingPlan;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string callingPri;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, DataType = "nonNegativeInteger")]
        public string chanIE;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string clockReference;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string csuParam;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool dChannelEnable;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool dChannelEnableSpecified;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool direction;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool directionSpecified;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool displayIE;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool displayIESpecified;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string encode;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string fdlChannel;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, DataType = "nonNegativeInteger")]
        public string firstDelay;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public UpdateGatewayEndpointReqPriInterfaceId interfaceId;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, DataType = "nonNegativeInteger")]
        public string intraDelay;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool mcdnEnable;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool mcdnEnableSpecified;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool numberIE;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool numberIESpecified;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, DataType = "nonNegativeInteger")]
        public string numDigits;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool passingPrecedenceLevelThroughUUIE;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool passingPrecedenceLevelThroughUUIESpecified;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string prefix;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string callingLinePresentationBit;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string connectedLinePresentationBit;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string connectedPBX;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string priProtocol;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, DataType = "nonNegativeInteger")]
        public string securityAccessLevel;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool sendCallingNameInFacilityIE;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool sendCallingNameInFacilityIESpecified;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool sendEXLeadingCharInDispIE;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool sendEXLeadingCharInDispIESpecified;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool sendRestart;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool sendRestartSpecified;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool setupNonISDNPI;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool setupNonISDNPISpecified;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool sigDigits;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool sigDigitsSpecified;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, DataType = "nonNegativeInteger")]
        public string span;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool statusPoll;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool statusPollSpecified;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, DataType = "nonNegativeInteger")]
        public string stripCountOut;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string trunkPadRx;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string trunkPadTx;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string trunkLevel;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string yellowAlarm;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string zeroSuppression;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, DataType = "positiveInteger")]
        public string sMDIBasePort;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool protocolProfile91NameOnly;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool protocolProfile91NameOnlySpecified;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class UpdateGatewayEndpointReqAnalog
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute("port", Form = System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable = false)]
        public XAnalogPort[] ports;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string trunkSelectionOrder;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class UpdateH323PhoneReqGatekeeperInfo
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("gatekeeperName", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("gatekeeperId", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")]
        public string Item;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public ItemChoiceType58 ItemElementName;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string e164;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string technologyPrefix;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string zone;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0", IncludeInSchema = false)]
    public enum ItemChoiceType58
    {

        /// <remarks/>
        gatekeeperName,

        /// <remarks/>
        gatekeeperId,
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class UpdateH323TrunkReqRemoteServerInfo
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string server1;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string server2;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string server3;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class UpdateH323TrunkReqGatekeeperInfo
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("gatekeeperName", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("gatekeeperId", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")]
        public string Item;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public ItemChoiceType57 ItemElementName;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string terminal;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string technologyPrefix;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string zone;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0", IncludeInSchema = false)]
    public enum ItemChoiceType57
    {

        /// <remarks/>
        gatekeeperName,

        /// <remarks/>
        gatekeeperId,
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class UpdateH323GatewayReqSignificantDigits
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool enable;

        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute(DataType = "nonNegativeInteger")]
        public string Value;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class UpdateCallManagerReqPortsMgcpPorts
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, DataType = "nonNegativeInteger")]
        public string listen;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, DataType = "nonNegativeInteger")]
        public string keepAlive;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class UpdateCallManagerReqPorts
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, DataType = "nonNegativeInteger")]
        public string analogAccessPort;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, DataType = "nonNegativeInteger")]
        public string digitalAccessPort;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, DataType = "nonNegativeInteger")]
        public string ethernetPhonePort;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public UpdateCallManagerReqPortsMgcpPorts mgcpPorts;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class UpdateCallManagerReqAutoRegistration
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string startDN;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string endDN;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string nextDN;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("routePartitionId", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("routePartitionName", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")]
        public string Item;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public ItemChoiceType56 ItemElementName;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string e164Mask;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0", IncludeInSchema = false)]
    public enum ItemChoiceType56
    {

        /// <remarks/>
        routePartitionId,

        /// <remarks/>
        routePartitionName,
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class UpdateCallPickupGroupReqCallInfoForPickupNotification
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(false)]
        public bool callingPartyInfo = false;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(false)]
        public bool calledPartyInfo = false;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class RemoveMGCPSubunitReqSubunit
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute(DataType = "nonNegativeInteger")]
        public string index;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class RemoveMGCPSubunitReqUnit
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute(DataType = "nonNegativeInteger")]
        public string index;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class UpdateDeviceProfileReqLines
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("lineIdentifier", typeof(XNumplanIdentifier), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("line", typeof(XLine), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public object[] Items;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class RemoveMGCPUnitReqUnit
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute(DataType = "nonNegativeInteger")]
        public string index;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class UpdateCTIRoutePointReqLines
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("lineIdentifier", typeof(XNumplanIdentifier), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("line", typeof(XLine), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public object[] Items;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("addMeetMe", Namespace = "http://www.cisco.com/AXL/API/1.0", IsNullable = false)]
    public class AddMeetMeReq
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XNPMeetMe meetMe;

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public System.UInt64 sequence;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool sequenceSpecified;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class Error
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public long code;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string message;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string request;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, DataType = "anyURI")]
        public string url;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class XTrunkInfoPad
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string rx;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string tx;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class XTrunkInfo
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string kind;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string level;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string direction;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XTrunkInfoPad pad;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class XRuleInstance
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string name;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string description;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, DataType = "Name")]
        public string author;

        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute("rule", Form = System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable = false)]
        public XRule[] rules;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class XRule
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string name;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string description;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string author;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("integer", typeof(XIntegerRule), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("date", typeof(XDateRule), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("list", typeof(XListRule), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("string", typeof(XStringRule), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("uri", typeof(XURIRule), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("script", typeof(XScriptRule), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("boolean", typeof(XBooleanRule), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("dynamicList", typeof(XDynamicListRule), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("float", typeof(XFloatRule), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public object Item;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool nullable;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool nullableSpecified;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XRule subrule;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string enterpriseDefaultName;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class XIntegerRule
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string @default;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string min;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string max;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class XDateRule
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(XDateRuleDateFormat.ShortUS)]
        public XDateRuleDateFormat dateFormat = XDateRuleDateFormat.ShortUS;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("defaultNow", typeof(bool), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("default", typeof(System.DateTime), Form = System.Xml.Schema.XmlSchemaForm.Unqualified, DataType = "date")]
        public object Item;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, DataType = "date")]
        public System.DateTime min;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool minSpecified;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, DataType = "date")]
        public System.DateTime max;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool maxSpecified;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XDateRuleRestrictTo restrictTo;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool restrictToSpecified;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public enum XDateRuleDateFormat
    {

        /// <remarks/>
        Any,

        /// <remarks/>
        Long,

        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Short-US")]
        ShortUS,

        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Short-EU")]
        ShortEU,
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public enum XDateRuleRestrictTo
    {

        /// <remarks/>
        Past,

        /// <remarks/>
        Future,
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class XListRule
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string defaultKey;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(false)]
        public bool multiKey = false;

        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute("option", Form = System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable = false)]
        public XListRuleOption[] options;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class XListRuleOption
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string key;

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string text;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class XStringRule
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string @default;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string regexp;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, DataType = "integer")]
        public string length;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool trimWhiteSpace;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool trimWhiteSpaceSpecified;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string onValidationErrorShowMessage;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class XURIRule
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, DataType = "anyURI")]
        public string @default;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class XScriptRule
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string comment;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string script;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class XBooleanRule
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool @default;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class XDynamicListRule
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string defaultKey;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, DataType = "Name")]
        public string tableName;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XDynamicListRuleKeyFieldName keyFieldName;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, DataType = "Name")]
        public string descFieldName;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool Multikey;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string filter;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class XDynamicListRuleKeyFieldName
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("integerFieldName", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified, DataType = "Name")]
        [System.Xml.Serialization.XmlElementAttribute("stringFieldName", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified, DataType = "Name")]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")]
        public string Item;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public ItemChoiceType8 ItemElementName;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0", IncludeInSchema = false)]
    public enum ItemChoiceType8
    {

        /// <remarks/>
        integerFieldName,

        /// <remarks/>
        stringFieldName,
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class XFloatRule
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public System.Single @default;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool defaultSpecified;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public System.Single min;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool minSpecified;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public System.Single max;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool maxSpecified;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class XRuleError
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string invalidValue;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, DataType = "Name")]
        public string ruleBroken;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, DataType = "integer")]
        [System.ComponentModel.DefaultValueAttribute("0")]
        public string errorCode = "0";

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string errorText;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("updateMobility", Namespace = "http://www.cisco.com/AXL/API/1.0", IsNullable = false)]
    public class UpdateMobilityReq
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string handoffNumber;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("handoffPartition", typeof(XRoutePartition), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("handoffPartitionName", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public object Item;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string DTMFNumber;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("DTMFPartitionName", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("DTMFPartition", typeof(XRoutePartition), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public object Item1;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class ListPhoneTemplateResPhoneTemplate
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string name;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string model;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string protocol;

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string uuid;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("listPhoneTemplateByNameResponse", Namespace = "http://www.cisco.com/AXL/API/1.0", IsNullable = false)]
    public class ListPhoneTemplateRes
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute("phoneTemplate", Form = System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable = false)]
        public ListPhoneTemplateResPhoneTemplate[] @return;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("getDialPlanTag", Namespace = "http://www.cisco.com/AXL/API/1.0", IsNullable = false)]
    public class getDialPlanTagReq
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("name", typeof(object), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("dialPlanUuid", typeof(object), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("uuid", typeof(object), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("dialPlanName", typeof(object), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")]
        public object Item;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public ItemChoiceType12 ItemElementName;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0", IncludeInSchema = false)]
    public enum ItemChoiceType12
    {

        /// <remarks/>
        name,

        /// <remarks/>
        dialPlanUuid,

        /// <remarks/>
        uuid,

        /// <remarks/>
        dialPlanName,
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("getAttendantConsoleHuntGroup", Namespace = "http://www.cisco.com/AXL/API/1.0", IsNullable = false)]
    public class GetAttendantConsoleHuntGroupReq
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("pilotPointId", typeof(object), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("pilotPointName", typeof(object), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")]
        public object Item;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public ItemChoiceType11 ItemElementName;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0", IncludeInSchema = false)]
    public enum ItemChoiceType11
    {

        /// <remarks/>
        pilotPointId,

        /// <remarks/>
        pilotPointName,
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class GetMobileVoiceAccessResReturn
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XMobileVoiceAccess mobileVoiceAccess;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class XMobileVoiceAccess
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string pattern;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("routePartitionName", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified, DataType = "Name")]
        [System.Xml.Serialization.XmlElementAttribute("routePartition", typeof(XRoutePartition), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public object Item;

        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute("member", Form = System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable = false)]
        public XMobileVoiceAccessMember[] members;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class XMobileVoiceAccessMember
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string userLocale;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, DataType = "integer")]
        public string orderIndex;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("getMobileVoiceAccessResponse", Namespace = "http://www.cisco.com/AXL/API/1.0", IsNullable = false)]
    public class GetMobileVoiceAccessRes
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public GetMobileVoiceAccessResReturn @return;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class GetMeetMeResReturn
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XNPMeetMe meetMe;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("getMeetMeResponse", Namespace = "http://www.cisco.com/AXL/API/1.0", IsNullable = false)]
    public class GetMeetMeRes
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public GetMeetMeResReturn @return;

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public System.UInt64 sequence;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool sequenceSpecified;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("getMobileVoiceAccess", Namespace = "http://www.cisco.com/AXL/API/1.0", IsNullable = false)]
    public class GetMobileVoiceAccessReq
    {
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class XDisplayInstance
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string name;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string version;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string author;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string description;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("uses", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified, DataType = "anyURI")]
        [System.Xml.Serialization.XmlElementAttribute("parameters", typeof(XDisplayInstanceParameter[]), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public object Item;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class XDisplayInstanceParameter
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string name;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string description;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string moduleComponentName;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string nonClusterWideJustification;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, DataType = "normalizedString")]
        public string displayName;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string onChangeShowMessage;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string unit;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool hidden;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool hiddenSpecified;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, DataType = "nonNegativeInteger")]
        [System.ComponentModel.DefaultValueAttribute("0")]
        public string index = "0";

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool readOnly;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool readOnlySpecified;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("paramGroup", typeof(XDisplayInstanceParameter[]), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("label", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("rules", typeof(string[]), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public object Item;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("getDDI", Namespace = "http://www.cisco.com/AXL/API/1.0", IsNullable = false)]
    public class getDDIReq
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("name", typeof(object), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("dialPlanUuid", typeof(object), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("uuid", typeof(object), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("dialPlanName", typeof(object), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")]
        public object Item;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public ItemChoiceType10 ItemElementName;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0", IncludeInSchema = false)]
    public enum ItemChoiceType10
    {

        /// <remarks/>
        name,

        /// <remarks/>
        dialPlanUuid,

        /// <remarks/>
        uuid,

        /// <remarks/>
        dialPlanName,
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("getMobility", Namespace = "http://www.cisco.com/AXL/API/1.0", IsNullable = false)]
    public class GetMobilityReq
    {
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class XServiceDependency
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, DataType = "anyURI")]
        public string name;

        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute("dependency", Form = System.Xml.Schema.XmlSchemaForm.Unqualified, DataType = "nonNegativeInteger", IsNullable = false)]
        public string[] dependencies;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string help;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string warning;

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute(DataType = "nonNegativeInteger")]
        public string service;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("removeAttendantConsoleHuntGroup", Namespace = "http://www.cisco.com/AXL/API/1.0", IsNullable = false)]
    public class RemoveAttendantConsoleHuntGroupReq
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("pilotPointId", typeof(object), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("pilotPointName", typeof(object), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")]
        public object Item;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public ItemChoiceType9 ItemElementName;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0", IncludeInSchema = false)]
    public enum ItemChoiceType9
    {

        /// <remarks/>
        pilotPointId,

        /// <remarks/>
        pilotPointName,
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("updateMobileVoiceAccess", Namespace = "http://www.cisco.com/AXL/API/1.0", IsNullable = false)]
    public class UpdateMobileVoiceAccessReq
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string pattern;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("routePartitionName", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified, DataType = "Name")]
        [System.Xml.Serialization.XmlElementAttribute("routePartition", typeof(XRoutePartition), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public object Item;

        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute("member", Form = System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable = false)]
        public XMobileVoiceAccessMember[] members;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class UpdateMOHServerReqAudioSource
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public System.UInt64 sourceId;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(System.UInt64), "2")]
        public System.UInt64 maxHops = ((System.UInt64)(2m));
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("updateMOHServer", Namespace = "http://www.cisco.com/AXL/API/1.0", IsNullable = false)]
    public class UpdateMOHServerReq
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("name", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("uuid", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")]
        public string Item;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public ItemChoiceType7 ItemElementName;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, DataType = "Name")]
        public string newName;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable = true)]
        public string description;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string devicePoolId;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string devicePoolName;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable = true)]
        public string locationId;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable = true)]
        public string locationName;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public System.UInt64 maxUnicastConnections;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool maxUnicastConnectionsSpecified;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public System.UInt64 maxMulticastConnections;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool maxMulticastConnectionsSpecified;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public System.UInt64 fixedAudioSourceDevice;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool fixedAudioSourceDeviceSpecified;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool runFlag;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool runFlagSpecified;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool isMultiCastEnabled;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool isMultiCastEnabledSpecified;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string baseMulticastIPaddress;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public System.UInt64 baseMulticastPort;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool baseMulticastPortSpecified;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool multicastIncrementOnIP;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool multicastIncrementOnIPSpecified;

        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute("audioSource", Form = System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable = false)]
        public UpdateMOHServerReqAudioSource[] audioSources;

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public System.UInt64 sequence;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool sequenceSpecified;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0", IncludeInSchema = false)]
    public enum ItemChoiceType7
    {

        /// <remarks/>
        name,

        /// <remarks/>
        uuid,
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class GetPhoneTemplateResReturn
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XPhoneTemplate phoneTemplate;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class XSIPRealm
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string realm;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string userid;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string digestCredentials;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class GetSIPRealmResReturn
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XSIPRealm sipRealm;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class GetCallManagerResReturn
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XCallManager callManager;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class GetDialPlanResReturn
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XDialPlan dialPlan;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class XMOHServerAudioSource
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public System.UInt64 sourceId;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(System.UInt64), "2")]
        public System.UInt64 maxHops = ((System.UInt64)(2m));
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class XMOHServer
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, DataType = "Name")]
        public string mohServerName;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable = true)]
        public string description;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("processNode", typeof(XProcessNode), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("processNodeName", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public object Item;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("devicePoolName", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("devicePool", typeof(XDevicePool), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public object Item1;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("locationName", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable = true)]
        [System.Xml.Serialization.XmlElementAttribute("location", typeof(XLocation), Form = System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable = true)]
        public object Item2;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(System.UInt64), "250")]
        public System.UInt64 maxUnicastConnections = ((System.UInt64)(250m));

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(System.UInt64), "30")]
        public System.UInt64 maxMulticastConnections = ((System.UInt64)(30m));

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable = true)]
        public string fixedAudioSourceDevice;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(true)]
        public bool runFlag = true;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool isMultiCastEnabled;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool isMultiCastEnabledSpecified;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute("239.1.1.1")]
        public string baseMulticastIPaddress = "239.1.1.1";

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(System.UInt64), "16384")]
        public System.UInt64 baseMulticastPort = ((System.UInt64)(16384m));

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(false)]
        public bool multicastIncrementOnIP = false;

        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute("audioSource", Form = System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable = false)]
        public XMOHServerAudioSource[] audioSources;

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string uuid;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class GetMOHServerResReturn
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XMOHServer mohServer;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class XProcessNodeService
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("processNode", typeof(XProcessNode), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("processNodeName", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public object Item;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string service;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string fileName;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, DataType = "nonNegativeInteger")]
        [System.ComponentModel.DefaultValueAttribute("0")]
        public string traceLevel = "0";

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, DataType = "nonNegativeInteger")]
        [System.ComponentModel.DefaultValueAttribute("0")]
        public string userCategories = "0";

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(false)]
        public bool enable = false;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, DataType = "nonNegativeInteger")]
        [System.ComponentModel.DefaultValueAttribute("250")]
        public string numFiles = "250";

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, DataType = "nonNegativeInteger")]
        [System.ComponentModel.DefaultValueAttribute("10000")]
        public string numLines = "10000";

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, DataType = "nonNegativeInteger")]
        [System.ComponentModel.DefaultValueAttribute("1440")]
        public string numMinutes = "1440";

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(false)]
        public bool includeNonDeviceTraces = false;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool useXML;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string serverName;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(false)]
        public bool deviceNameMonitorFlag = false;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool deviceTypeMonitorFlag;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(false)]
        public bool fileTraceFlag = false;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(false)]
        public bool outputDebugStringFlag = false;

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string uuid;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class GetProcessNodeServiceResReturn
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XProcessNodeService processNodeService;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class ListMediaResourceListResMediaResourceList
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string name;

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string uuid;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class GetLineResReturn
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XNPDirectoryNumber directoryNumber;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class ListDevicePoolResDevicePool
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string name;

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string uuid;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class GetHuntPilotResReturn
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XNPHuntPilot pattern;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class XUserGroupMember
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("userId", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("user", typeof(XUser), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public object Item;

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string uuid;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class XUser
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string firstname;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string lastname;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string userid;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string password;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string pin;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string telephoneNumber;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string extension;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string department;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string manager;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string userLocale;

        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute("device", Form = System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable = false)]
        public string[] associatedDevices;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string associatedPC;

        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute("userGroup", Form = System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable = false)]
        public XUserUserGroup[] associatedGroups;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(true)]
        public bool enableCTI = true;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable = true)]
        public string digestCredentials;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string iaqExtension;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XUserPhoneProfiles phoneProfiles;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(false)]
        public bool enableMobility = false;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(false)]
        public bool enableMobileVoiceAccess = false;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(System.UInt64), "10000")]
        public System.UInt64 maxDeskPickupWaitTime = ((System.UInt64)(10000m));

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(System.UInt16), "4")]
        public System.UInt16 remoteDestinationLimit = ((System.UInt16)(4));

        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute("remoteDestinationProfile", Form = System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable = false)]
        public XUserRemoteDestinationProfile[] associatedRemoteDestinationProfiles;

        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute("accessList", Form = System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable = false)]
        public XUserAccessList[] associatedAccessLists;

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string uuid;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class XUserUserGroup
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string name;

        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable = true)]
        [System.Xml.Serialization.XmlArrayItemAttribute("userRole", typeof(XUserUserGroupUserRolesUserRole), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XUserUserGroupUserRolesUserRole[] userRoles;

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string uuid;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class XUserUserGroupUserRolesUserRole
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string uuid;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class XUserPhoneProfiles
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("profile", typeof(XPhoneProfile), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("profileName", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public object[] Items;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class XUserRemoteDestinationProfile
    {
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class XUserAccessList
    {
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class XUserGroup
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, DataType = "Name")]
        public string name;

        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable = true)]
        [System.Xml.Serialization.XmlArrayItemAttribute("member", Form = System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable = false)]
        public XUserGroupMember[] members;

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string uuid;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class GetUserGroupResReturn
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XUserGroup userGroup;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class ListMediaResourceGroupResMediaResourceGroup
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string name;

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string uuid;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class GetCTIRoutePointResReturn
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XCTIRoutePoint routePoint;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class XFACInfo
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string code;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string description;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, DataType = "nonNegativeInteger")]
        public string authorizationLevel;

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string uuid;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class GetFACInfoResReturn
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XFACInfo facInfo;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class GetRegionResReturn
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XRegion region;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class ListGatekeeperResGatekeeper
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string name;

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string uuid;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class XProcessConfig
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("processNode", typeof(XProcessNode), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("processNodeName", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public object Item;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string name;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string service;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable = true)]
        public string value;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string valueType;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(false)]
        public bool primaryData = false;

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string uuid;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class GetServiceParameterResReturn
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XProcessConfig serviceParameter;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class GetVoiceMailProfileResReturn
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XVoiceMailProfile voiceMailProfile;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class GetPhoneResReturn
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XIPPhone device;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class GetProcessNodeResReturn
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XProcessNode processNode;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class GetCSSResReturn
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XCallingSearchSpace callingSearchSpace;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class GetGatekeeperResReturn
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XGatekeeper gatekeeper;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class GetRouteListResReturn
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XRouteList routeList;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class GetRouteFilterResReturn
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XRouteFilter routeFilter;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class XPilotUser
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string userId;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable = true)]
        public string password;

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string uuid;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class GetAttendantConsoleUserResReturn
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XPilotUser pilotUser;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class ListServiceParametersResParam
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string name;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string value;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class XNPTranslationPattern
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string pattern;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string description;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string usage;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("routePartitionName", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified, DataType = "Name")]
        [System.Xml.Serialization.XmlElementAttribute("routePartition", typeof(XRoutePartition), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public object Item;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("callingSearchSpaceName", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("callingSearchSpace", typeof(XCallingSearchSpace), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public object Item1;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool blockEnable;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string calledPartyTransformationMask;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string callingPartyTransformationMask;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string useCallingPartyPhoneMask;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string callingPartyPrefixDigits;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("dialPlanName", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("dialPlan", typeof(XDialPlan), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public object Item2;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, DataType = "nonNegativeInteger")]
        public string dialPlanWizardGenId;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("digitDiscardInstructionName", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("digitDiscardInstruction", typeof(XDigitDiscardInstruction), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public object Item3;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string messageWaiting;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string networkLocation;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool patternUrgency;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool patternUrgencySpecified;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string prefixDigitsOut;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("routeFilter", typeof(XRouteFilter), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("routeFilterName", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public object Item4;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string callingLinePresentationBit;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string callingNamePresentationBit;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string connectedLinePresentationBit;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string connectedNamePresentationBit;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool supportOverlapSending;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool supportOverlapSendingSpecified;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string patternPrecedence;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string releaseCause;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(true)]
        public bool allowDeviceOverride = true;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(true)]
        public bool provideOutsideDialtone = true;

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string uuid;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class GetTransPatternResReturn
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XNPTranslationPattern pattern;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class GetMGCPResReturn
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XMGCP mgcp;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class XMGCP
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string domainName;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string description;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string product;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string model;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("callManagerGroupName", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("callManagerGroup", typeof(XCallManagerGroup), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public object Item;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XMGCPUnits units;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string scratch;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XVendorConfig vendorConfig;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string versionStamp;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XLoadInformation loadInformation;

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string uuid;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class XMGCPUnits
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("unit", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XMGCPUnit[] unit;

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute(DataType = "positiveInteger")]
        public string max;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class XMGCPUnit
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string product;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XMGCPSubunits subunits;

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute(DataType = "nonNegativeInteger")]
        public string index;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class XMGCPSubunits
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("subunit", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XMGCPSubunit[] subunit;

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute(DataType = "nonNegativeInteger")]
        public string index;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class XMGCPSubunit
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string product;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XMGCPEndpoints endpoints;

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute(DataType = "nonNegativeInteger")]
        public string index;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class XMGCPEndpoints
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("endpoint", typeof(XMGCPEndpointsEndpoint), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("deviceName", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public object[] Items;

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute(DataType = "positiveInteger")]
        public string max;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class GetRoutePatternResReturn
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XNPRoutePattern pattern;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class GetH323TrunkReturn
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public GetH323TrunkReturnTrunk trunk;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class GetDeviceMobilityGroupResReturn
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XDeviceMobilityGroup deviceMobilityGroup;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class XLicenseCapabilities
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string userid;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool enableUPS;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool enableUPSSpecified;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool enableUPC;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool enableUPCSpecified;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class GetLicenseCapabilitiesResReturn
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XLicenseCapabilities licenseCapabilities;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class ListDeviceByServiceNameResDevice
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string name;

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string uuid;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class GetVoiceMailPilotResReturn
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XVoiceMailPilot voiceMailPilot;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class ListDeviceResDevice
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string name;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string product;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string model;

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string uuid;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class GetMediaResourceListResReturn
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XMediaResourceList mediaResourceList;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class GetDialPlanTagResReturn
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XDialPlanTag dialPlanTag;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class GetDDIResReturn
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XDigitDiscardInstruction ddi;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class GetPhysicalLocationResReturn
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XPhysicalLocation physicalLocation;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class GetSIPTrunkReturn
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XSIPTrunk trunk;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class XMOHAudioSource
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, DataType = "nonNegativeInteger")]
        public string sourceId;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string name;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string sourceFile;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool multicast;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool repeat;

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string uuid;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class GetMOHAudioSourceResReturn
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XMOHAudioSource mohAudioSource;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class XPilotHuntGroupMemberUserMemberInfo
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, DataType = "nonNegativeInteger")]
        public string lineIndex;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public object pilotUserId;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class XPilotHuntGroupMemberDeviceMemberInfo
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool alwaysRoute;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool alwaysRouteSpecified;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XNPDirectoryNumber dirn;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class XPilotHuntGroupMember
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, DataType = "nonNegativeInteger")]
        public string sortOrder;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("deviceMemberInfo", typeof(XPilotHuntGroupMemberDeviceMemberInfo), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("userMemberInfo", typeof(XPilotHuntGroupMemberUserMemberInfo), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public object Item;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class XPilotHuntGroup
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("pilotPoint", typeof(XPilotHuntGroupPilotPoint), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("pilotPointName", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public object Item;

        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute("member", Form = System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable = false)]
        public XPilotHuntGroupMember[] members;

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string uuid;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class XPilotHuntGroupPilotPoint : XPilotPoint
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string uuid;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(XPilotHuntGroupPilotPoint))]
    public class XPilotPoint
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, DataType = "Name")]
        public string name;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("devicePoolName", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("devicePool", typeof(XDevicePool), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public object Item;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("routePartitionName", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("routePartition", typeof(XRoutePartition), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public object Item1;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("callingSearchSpaceName", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified, DataType = "Name")]
        [System.Xml.Serialization.XmlElementAttribute("callingSearchSpace", typeof(XCallingSearchSpace), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public object Item2;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string pilotNumber;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool useFirstAvailable;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("locationName", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("location", typeof(XLocation), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public object Item3;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class GetAttendantConsoleHuntGroupResReturn
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XPilotHuntGroup attendantConsoleHuntGroup;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class GetTransformationPatternResReturn
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XNPTransformationPattern pattern;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class GetRecordingProfileResReturn
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XRecordingProfile recordingProfile;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class GetTimePeriodResReturn
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XTimePeriod timePeriod;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class XTimePeriod
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string name;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string startTime;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string endTime;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string startDay;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string endDay;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string monthOfYear;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, DataType = "positiveInteger")]
        public string dayOfMonth;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class GetGatewayEndpointResReturn
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XGateway device;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class GetUserResReturn
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XUser user;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class ExecuteSQLUpdateResReturn
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, DataType = "integer")]
        public string rowsUpdated;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class GetDevicePoolResReturn
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XDevicePool devicePool;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class AuthenticateUserResponseReturn
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool userAuthenticated;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class XTimeScheduleTimePeriod
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("timePeriod", typeof(XTimePeriod), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("timePeriodName", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public object Item;

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string uuid;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class XTimeSchedule
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string name;

        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute("member", Form = System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable = false)]
        public XTimeScheduleTimePeriod[] members;

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string uuid;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class GetTimeScheduleResReturn
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XTimeSchedule timeSchedule;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class XDevicePoolDeviceMobilityDevicePoolName
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string uuid;

        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string Value;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class XDevicePoolDeviceMobility
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("devicePoolName", typeof(XDevicePoolDeviceMobilityDevicePoolName), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("devicePool", typeof(XDevicePool), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public object Item;

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string uuid;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class XDeviceMobility
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string name;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string subNet;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, DataType = "nonNegativeInteger")]
        public string subNetMaskSz;

        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute("member", Form = System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable = false)]
        public XDevicePoolDeviceMobility[] members;

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string uuid;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class GetDeviceMobilityResReturn
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XDeviceMobility deviceMobility;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class XMobility
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string handoffNumber;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("handoffPartition", typeof(XRoutePartition), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("handoffPartitionName", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public object Item;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string DTMFNumber;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("DTMFPartitionName", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("DTMFPartition", typeof(XRoutePartition), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public object Item1;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class GetMobilityResReturn
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XMobility mobility;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class GetHuntListResReturn
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XHuntList huntList;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class ListRoutePlanByTypeResRoutePlan
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string directoryNumber;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string routePartitionName;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string usage;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string routeFilterName;

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string uuid;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class GetCallerFilterListResReturn
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XCallerFilterList callerFilterList;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class XCallerFilterList
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string name;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable = true)]
        public string description;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool isAllowedType;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("endUserName", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified, DataType = "Name")]
        [System.Xml.Serialization.XmlElementAttribute("endUser", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")]
        public string Item;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public ItemChoiceType ItemElementName;

        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute("member", Form = System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable = false)]
        public XCallerFilterListMember[] members;

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string uuid;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0", IncludeInSchema = false)]
    public enum ItemChoiceType
    {

        /// <remarks/>
        endUserName,

        /// <remarks/>
        endUser,
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class XCallerFilterListMember
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string dnMask;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XCallerFilterMask callerFilterMask;

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string uuid;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public enum XCallerFilterMask
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Directory Number")]
        DirectoryNumber,

        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Not Available")]
        NotAvailable,

        /// <remarks/>
        Private,
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class GetDirectedCallParkResReturn
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XNPDirectedCallPark directedCallPark;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class ListUserByNameResUser
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string firstname;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string lastname;

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string userid;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class GetCommonDeviceConfigResReturn
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XCommonDeviceConfig commonDeviceConfig;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class GetMediaResourceGroupResReturn
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XMediaResourceGroup mediaResourceGroup;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class GetRoutePartitionResReturn
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XRoutePartition routePartition;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class GetCallManagerGroupResReturn
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XCallManagerGroup callManagerGroup;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class XConferenceBridge
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, DataType = "Name")]
        public string name;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable = true)]
        public string description;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string product;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("devicePoolName", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("devicePool", typeof(XDevicePool), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public object Item;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("locationName", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("location", typeof(XLocation), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public object Item1;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, DataType = "nonNegativeInteger")]
        public string subUnit;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable = true)]
        public XLoadInformation loadInformation;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable = true)]
        public XVendorConfig vendorConfig;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, DataType = "nonNegativeInteger")]
        [System.ComponentModel.DefaultValueAttribute("32")]
        public string maximumCapacity = "32";

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("securityProfileName", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("securityProfile", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("Item2ElementName")]
        public string Item2;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public Item2ChoiceType Item2ElementName;

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string uuid;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0", IncludeInSchema = false)]
    public enum Item2ChoiceType
    {

        /// <remarks/>
        securityProfileName,

        /// <remarks/>
        securityProfile,
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class GetConferenceBridgeResReturn
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XConferenceBridge device;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class XCMCInfo
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string code;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string description;

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string uuid;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class GetCMCInfoResReturn
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XCMCInfo cmcInfo;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class GetH323GatewayResReturn
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XH323Gateway gateway;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class GetCallPickupGroupResReturn
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XNPCallPickupGroup callPickup;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class GetVoiceMailPortResReturn
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XVoiceMailPort voiceMailPort;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class ListPhoneResponsePhone
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string name;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string product;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string model;

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string uuid;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class GetPilotPointResReturn
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XPilotPoint pilotPoint;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class GetCallParkResReturn
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XNPCallPark callPark;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class GetLineGroupResReturn
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XLineGroup lineGroup;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class GetLocationResReturn
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XLocation location;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class ListMOHAudioSourceResMohAudioSource
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, DataType = "nonNegativeInteger")]
        public string sourceId;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string name;

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string uuid;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class GetH323PhoneResReturn
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XH323Phone phone;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class XIPPhoneLines
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("lineIdentifier", typeof(XNumplanIdentifier), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("lineId", typeof(XLineId), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("lineLabel", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("line", typeof(XLine), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public object[] Items;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class XPresenceGroup
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string name;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string description;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string matrix;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool isStandard;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool isStandardSpecified;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class XIPPhoneCurrentConfig
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, DataType = "nonNegativeInteger")]
        public string userHoldMOHAudioSourceId;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("phoneTemplate", typeof(XPhoneTemplate), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("phoneTemplateName", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public object Item;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int mlppDomainId;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool mlppDomainIdSpecified;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string mlppIndicationStatus;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string preemption;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("softkeyTemplate", typeof(XSoftkeyTemplate), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("softkeyTemplateName", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public object Item1;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(false)]
        public bool ignorePresentationIndicators = false;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string callInfoPrivacyStatus;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable = true)]
        public string dndStatus;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class XTelecasterService
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string name;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string description;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, DataType = "anyURI")]
        public string templateURL;

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string uuid;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class XSubscribedService
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("telecasterService", typeof(XTelecasterService), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("telecasterServiceName", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public object Item;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string name;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, DataType = "anyURI")]
        public string url;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, DataType = "nonNegativeInteger")]
        public string urlButtonIndex;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string urlLabel;

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string uuid;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class XAddOnModule
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XLoadInformation loadInformation;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string model;

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string uuid;

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute(DataType = "nonNegativeInteger")]
        public string index;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class XBLFDirectedCallParkDirectedCallParkDNAndPartition
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string dnPattern;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("routePartitionName", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified, DataType = "Name", IsNullable = true)]
        [System.Xml.Serialization.XmlElementAttribute("routePartition", typeof(XRoutePartition), Form = System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable = true)]
        public object Item;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class XBLFDirectedCallPark
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable = true)]
        public string label;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("directedCallParkId", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("directedCallParkDNAndPartition", typeof(XBLFDirectedCallParkDirectedCallParkDNAndPartition), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public object Item;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable = true)]
        public string labelAscii;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class GetDeviceProfileResReturn
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XPhoneProfile profile;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class GetRouteGroupResReturn
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XRouteGroup routeGroup;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(GetPhoneTemplateRes))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(GetSIPRealmRes))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(GetCallManagerRes))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ListVoiceMailProfileRes))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(GetDialPlanRes))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(GetMOHServerRes))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(GetProcessNodeServiceRes))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ListMediaResourceListRes))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ListAllProcessNodesRes))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ListProcessNodesByServiceRes))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(GetLineRes))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ListDevicePoolRes))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(GetHuntPilotRes))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(GetUserGroupRes))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ListMediaResourceGroupRes))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(GetCTIRoutePointRes))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(GetFACInfoRes))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(GetRegionRes))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ListGatekeeperRes))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(GetServiceParameterRes))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(GetVoiceMailProfileRes))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(GetPhoneRes))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ListCSSResponse))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ListCSSByNameRes))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(GetProcessNodeRes))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(GetCSSRes))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(GetGatekeeperRes))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ListAARGroupRes))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(GetRouteListRes))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(GetRouteFilterRes))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(GetAttendantConsoleUserRes))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(StandardSIPRealmResponse))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ListServiceParametersRes))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(GetTransPatternRes))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(GetMGCPRes))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(GetRoutePatternRes))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(GetH323Trunk))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(GetDeviceMobilityGroupRes))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(GetLicenseCapabilitiesRes))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ListDeviceByServiceNameRes))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(GetVoiceMailPilotRes))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ListDeviceRes))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(GetMediaResourceListRes))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(GetDialPlanTagRes))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(GetDDIRes))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(GetPhysicalLocationRes))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(GetSIPTrunk))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(GetMOHAudioSourceRes))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(GetAttendantConsoleHuntGroupRes))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ListRoutePartitionRes))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(GetTransformationPatternRes))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(GetRecordingProfileRes))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(GetTimePeriodRes))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(GetGatewayEndpointRes))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(GetUserRes))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ListLocationRes))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ExecuteSQLUpdateRes))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(GetDevicePoolRes))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(AuthenticateUserResponse))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(GetTimeScheduleRes))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(GetDeviceMobilityRes))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(GetMobilityRes))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(GetHuntListRes))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ListRoutePlanByTypeRes))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(GetCallerFilterListRes))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(GetDirectedCallParkRes))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ListUserByNameRes))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(GetCommonDeviceConfigRes))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(GetMediaResourceGroupRes))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(GetRoutePartitionRes))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(GetCallManagerGroupRes))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(GetConferenceBridgeRes))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(GetCMCInfoRes))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(GetH323GatewayRes))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(GetCallPickupGroupRes))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(GetVoiceMailPortRes))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ListPhoneResponse))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ListPhoneByNameRes))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ListPhoneByDescriptionRes))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(GetPilotPointRes))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(GetCallParkRes))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ExecuteSQLQueryRes))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(GetLineGroupRes))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(GetLocationRes))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ListMOHAudioSourceRes))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(GetH323PhoneRes))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(GetNumDevicesRes))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(GetDeviceProfileRes))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(StandardResponse))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(DeviceLoginResponse))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(DeviceLogoutRes))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(DeviceResetRes))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(GetRouteGroupRes))]
    public abstract class APIResponse
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public System.UInt64 sequence;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool sequenceSpecified;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("getPhoneTemplateResponse", Namespace = "http://www.cisco.com/AXL/API/1.0", IsNullable = false)]
    public class GetPhoneTemplateRes : APIResponse
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public GetPhoneTemplateResReturn @return;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("getSIPRealmResponse", Namespace = "http://www.cisco.com/AXL/API/1.0", IsNullable = false)]
    public class GetSIPRealmRes : APIResponse
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public GetSIPRealmResReturn @return;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("getCallManagerResponse", Namespace = "http://www.cisco.com/AXL/API/1.0", IsNullable = false)]
    public class GetCallManagerRes : APIResponse
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public GetCallManagerResReturn @return;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("listVoiceMailProfileByNameResponse", Namespace = "http://www.cisco.com/AXL/API/1.0", IsNullable = false)]
    public class ListVoiceMailProfileRes : APIResponse
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute("voiceMailProfile", Form = System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable = false)]
        public XVoiceMailProfile[] @return;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("getDialPlanResponse", Namespace = "http://www.cisco.com/AXL/API/1.0", IsNullable = false)]
    public class GetDialPlanRes : APIResponse
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public GetDialPlanResReturn @return;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("getMOHServerResponse", Namespace = "http://www.cisco.com/AXL/API/1.0", IsNullable = false)]
    public class GetMOHServerRes : APIResponse
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public GetMOHServerResReturn @return;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("getProcessNodeServiceResponse", Namespace = "http://www.cisco.com/AXL/API/1.0", IsNullable = false)]
    public class GetProcessNodeServiceRes : APIResponse
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public GetProcessNodeServiceResReturn @return;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("listMediaResourceListByNameResponse", Namespace = "http://www.cisco.com/AXL/API/1.0", IsNullable = false)]
    public class ListMediaResourceListRes : APIResponse
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute("mediaResourceList", Form = System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable = false)]
        public ListMediaResourceListResMediaResourceList[] @return;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("listAllProcessNodesResponse", Namespace = "http://www.cisco.com/AXL/API/1.0", IsNullable = false)]
    public class ListAllProcessNodesRes : APIResponse
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute("processNode", Form = System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable = false)]
        public XProcessNode[] @return;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("listProcessNodesByServiceResponse", Namespace = "http://www.cisco.com/AXL/API/1.0", IsNullable = false)]
    public class ListProcessNodesByServiceRes : APIResponse
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute("processNode", Form = System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable = false)]
        public XProcessNode[] @return;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("getLineResponse", Namespace = "http://www.cisco.com/AXL/API/1.0", IsNullable = false)]
    public class GetLineRes : APIResponse
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public GetLineResReturn @return;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("listDevicePoolByNameResponse", Namespace = "http://www.cisco.com/AXL/API/1.0", IsNullable = false)]
    public class ListDevicePoolRes : APIResponse
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute("devicePool", Form = System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable = false)]
        public ListDevicePoolResDevicePool[] @return;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("getHuntPilotResponse", Namespace = "http://www.cisco.com/AXL/API/1.0", IsNullable = false)]
    public class GetHuntPilotRes : APIResponse
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public GetHuntPilotResReturn @return;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("getUserGroupResponse", Namespace = "http://www.cisco.com/AXL/API/1.0", IsNullable = false)]
    public class GetUserGroupRes : APIResponse
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public GetUserGroupResReturn @return;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("listMediaResourceGroupByNameResponse", Namespace = "http://www.cisco.com/AXL/API/1.0", IsNullable = false)]
    public class ListMediaResourceGroupRes : APIResponse
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute("mediaResourceGroup", Form = System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable = false)]
        public ListMediaResourceGroupResMediaResourceGroup[] @return;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("getCTIRoutePointResponse", Namespace = "http://www.cisco.com/AXL/API/1.0", IsNullable = false)]
    public class GetCTIRoutePointRes : APIResponse
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public GetCTIRoutePointResReturn @return;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("getFACInfoResponse", Namespace = "http://www.cisco.com/AXL/API/1.0", IsNullable = false)]
    public class GetFACInfoRes : APIResponse
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public GetFACInfoResReturn @return;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("getRegionResponse", Namespace = "http://www.cisco.com/AXL/API/1.0", IsNullable = false)]
    public class GetRegionRes : APIResponse
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public GetRegionResReturn @return;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("listGatekeeperByNameResponse", Namespace = "http://www.cisco.com/AXL/API/1.0", IsNullable = false)]
    public class ListGatekeeperRes : APIResponse
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute("gatekeeper", Form = System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable = false)]
        public ListGatekeeperResGatekeeper[] @return;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("getServiceParameterResponse", Namespace = "http://www.cisco.com/AXL/API/1.0", IsNullable = false)]
    public class GetServiceParameterRes : APIResponse
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public GetServiceParameterResReturn @return;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("getVoiceMailProfileResponse", Namespace = "http://www.cisco.com/AXL/API/1.0", IsNullable = false)]
    public class GetVoiceMailProfileRes : APIResponse
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public GetVoiceMailProfileResReturn @return;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("getPhoneResponse", Namespace = "http://www.cisco.com/AXL/API/1.0", IsNullable = false)]
    public class GetPhoneRes : APIResponse
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public GetPhoneResReturn @return;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ListCSSByNameRes))]
    public class ListCSSResponse : APIResponse
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute("callingSearchSpace", Form = System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable = false)]
        public XCallingSearchSpace[] @return;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("listCSSByNameResponse", Namespace = "http://www.cisco.com/AXL/API/1.0", IsNullable = false)]
    public class ListCSSByNameRes : ListCSSResponse
    {
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("getProcessNodeResponse", Namespace = "http://www.cisco.com/AXL/API/1.0", IsNullable = false)]
    public class GetProcessNodeRes : APIResponse
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public GetProcessNodeResReturn @return;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("getCSSResponse", Namespace = "http://www.cisco.com/AXL/API/1.0", IsNullable = false)]
    public class GetCSSRes : APIResponse
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public GetCSSResReturn @return;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("getGatekeeperResponse", Namespace = "http://www.cisco.com/AXL/API/1.0", IsNullable = false)]
    public class GetGatekeeperRes : APIResponse
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public GetGatekeeperResReturn @return;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("listAARGroupByNameResponse", Namespace = "http://www.cisco.com/AXL/API/1.0", IsNullable = false)]
    public class ListAARGroupRes : APIResponse
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute("aarGroup", Form = System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable = false)]
        public XAARNeighborhood[] @return;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("getRouteListResponse", Namespace = "http://www.cisco.com/AXL/API/1.0", IsNullable = false)]
    public class GetRouteListRes : APIResponse
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public GetRouteListResReturn @return;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("getRouteFilterResponse", Namespace = "http://www.cisco.com/AXL/API/1.0", IsNullable = false)]
    public class GetRouteFilterRes : APIResponse
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public GetRouteFilterResReturn @return;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("getAttendantConsoleUserResponse", Namespace = "http://www.cisco.com/AXL/API/1.0", IsNullable = false)]
    public class GetAttendantConsoleUserRes : APIResponse
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public GetAttendantConsoleUserResReturn @return;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class StandardSIPRealmResponse : APIResponse
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string @return;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("listServiceParametersResponse", Namespace = "http://www.cisco.com/AXL/API/1.0", IsNullable = false)]
    public class ListServiceParametersRes : APIResponse
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute("param", Form = System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable = false)]
        public ListServiceParametersResParam[] @return;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("getTransPatternResponse", Namespace = "http://www.cisco.com/AXL/API/1.0", IsNullable = false)]
    public class GetTransPatternRes : APIResponse
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public GetTransPatternResReturn @return;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("getMGCPResponse", Namespace = "http://www.cisco.com/AXL/API/1.0", IsNullable = false)]
    public class GetMGCPRes : APIResponse
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public GetMGCPResReturn @return;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("getRoutePatternResponse", Namespace = "http://www.cisco.com/AXL/API/1.0", IsNullable = false)]
    public class GetRoutePatternRes : APIResponse
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public GetRoutePatternResReturn @return;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("getH323TrunkResponse", Namespace = "http://www.cisco.com/AXL/API/1.0", IsNullable = false)]
    public class GetH323Trunk : APIResponse
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public GetH323TrunkReturn @return;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("getDeviceMobilityGroupResponse", Namespace = "http://www.cisco.com/AXL/API/1.0", IsNullable = false)]
    public class GetDeviceMobilityGroupRes : APIResponse
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public GetDeviceMobilityGroupResReturn @return;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("getLicenseCapabilitiesResponse", Namespace = "http://www.cisco.com/AXL/API/1.0", IsNullable = false)]
    public class GetLicenseCapabilitiesRes : APIResponse
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public GetLicenseCapabilitiesResReturn @return;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("listDeviceByServiceNameResponse", Namespace = "http://www.cisco.com/AXL/API/1.0", IsNullable = false)]
    public class ListDeviceByServiceNameRes : APIResponse
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute("device", Form = System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable = false)]
        public ListDeviceByServiceNameResDevice[] @return;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("getVoiceMailPilotResponse", Namespace = "http://www.cisco.com/AXL/API/1.0", IsNullable = false)]
    public class GetVoiceMailPilotRes : APIResponse
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public GetVoiceMailPilotResReturn @return;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("listDeviceByNameAndClassResponse", Namespace = "http://www.cisco.com/AXL/API/1.0", IsNullable = false)]
    public class ListDeviceRes : APIResponse
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute("device", Form = System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable = false)]
        public ListDeviceResDevice[] @return;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("getMediaResourceListResponse", Namespace = "http://www.cisco.com/AXL/API/1.0", IsNullable = false)]
    public class GetMediaResourceListRes : APIResponse
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public GetMediaResourceListResReturn @return;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("getDialPlanTagResponse", Namespace = "http://www.cisco.com/AXL/API/1.0", IsNullable = false)]
    public class GetDialPlanTagRes : APIResponse
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public GetDialPlanTagResReturn @return;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("getDDIResponse", Namespace = "http://www.cisco.com/AXL/API/1.0", IsNullable = false)]
    public class GetDDIRes : APIResponse
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public GetDDIResReturn @return;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("getPhysicalLocationResponse", Namespace = "http://www.cisco.com/AXL/API/1.0", IsNullable = false)]
    public class GetPhysicalLocationRes : APIResponse
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public GetPhysicalLocationResReturn @return;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("getSIPTrunkResponse", Namespace = "http://www.cisco.com/AXL/API/1.0", IsNullable = false)]
    public class GetSIPTrunk : APIResponse
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public GetSIPTrunkReturn @return;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("getMOHAudioSourceResponse", Namespace = "http://www.cisco.com/AXL/API/1.0", IsNullable = false)]
    public class GetMOHAudioSourceRes : APIResponse
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public GetMOHAudioSourceResReturn @return;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("getAttendantConsoleHuntGroupResponse", Namespace = "http://www.cisco.com/AXL/API/1.0", IsNullable = false)]
    public class GetAttendantConsoleHuntGroupRes : APIResponse
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public GetAttendantConsoleHuntGroupResReturn @return;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("listRoutePartitionByNameResponse", Namespace = "http://www.cisco.com/AXL/API/1.0", IsNullable = false)]
    public class ListRoutePartitionRes : APIResponse
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute("routePartition", Form = System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable = false)]
        public XRoutePartition[] @return;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("getTransformationPatternResponse", Namespace = "http://www.cisco.com/AXL/API/1.0", IsNullable = false)]
    public class GetTransformationPatternRes : APIResponse
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public GetTransformationPatternResReturn @return;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("getRecordingProfileResponse", Namespace = "http://www.cisco.com/AXL/API/1.0", IsNullable = false)]
    public class GetRecordingProfileRes : APIResponse
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public GetRecordingProfileResReturn @return;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("getTimePeriodResponse", Namespace = "http://www.cisco.com/AXL/API/1.0", IsNullable = false)]
    public class GetTimePeriodRes : APIResponse
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public GetTimePeriodResReturn @return;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("getGatewayEndpointResponse", Namespace = "http://www.cisco.com/AXL/API/1.0", IsNullable = false)]
    public class GetGatewayEndpointRes : APIResponse
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public GetGatewayEndpointResReturn @return;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("getUserResponse", Namespace = "http://www.cisco.com/AXL/API/1.0", IsNullable = false)]
    public class GetUserRes : APIResponse
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public GetUserResReturn @return;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("listLocationByNameResponse", Namespace = "http://www.cisco.com/AXL/API/1.0", IsNullable = false)]
    public class ListLocationRes : APIResponse
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute("location", Form = System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable = false)]
        public XLocation[] @return;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("executeSQLUpdateResponse", Namespace = "http://www.cisco.com/AXL/API/1.0", IsNullable = false)]
    public class ExecuteSQLUpdateRes : APIResponse
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public ExecuteSQLUpdateResReturn @return;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("getDevicePoolResponse", Namespace = "http://www.cisco.com/AXL/API/1.0", IsNullable = false)]
    public class GetDevicePoolRes : APIResponse
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public GetDevicePoolResReturn @return;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("doAuthenticateUserResponse", Namespace = "http://www.cisco.com/AXL/API/1.0", IsNullable = false)]
    public class AuthenticateUserResponse : APIResponse
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public AuthenticateUserResponseReturn @return;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("getTimeScheduleResponse", Namespace = "http://www.cisco.com/AXL/API/1.0", IsNullable = false)]
    public class GetTimeScheduleRes : APIResponse
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public GetTimeScheduleResReturn @return;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("getDeviceMobilityResponse", Namespace = "http://www.cisco.com/AXL/API/1.0", IsNullable = false)]
    public class GetDeviceMobilityRes : APIResponse
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public GetDeviceMobilityResReturn @return;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("getMobilityResponse", Namespace = "http://www.cisco.com/AXL/API/1.0", IsNullable = false)]
    public class GetMobilityRes : APIResponse
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public GetMobilityResReturn @return;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("getHuntListResponse", Namespace = "http://www.cisco.com/AXL/API/1.0", IsNullable = false)]
    public class GetHuntListRes : APIResponse
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public GetHuntListResReturn @return;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("listRoutePlanByTypeResponse", Namespace = "http://www.cisco.com/AXL/API/1.0", IsNullable = false)]
    public class ListRoutePlanByTypeRes : APIResponse
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute("routePlan", Form = System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable = false)]
        public ListRoutePlanByTypeResRoutePlan[] @return;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("getCallerFilterListResponse", Namespace = "http://www.cisco.com/AXL/API/1.0", IsNullable = false)]
    public class GetCallerFilterListRes : APIResponse
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public GetCallerFilterListResReturn @return;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("getDirectedCallParkResponse", Namespace = "http://www.cisco.com/AXL/API/1.0", IsNullable = false)]
    public class GetDirectedCallParkRes : APIResponse
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public GetDirectedCallParkResReturn @return;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("listUserByNameResponse", Namespace = "http://www.cisco.com/AXL/API/1.0", IsNullable = false)]
    public class ListUserByNameRes : APIResponse
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute("user", Form = System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable = false)]
        public ListUserByNameResUser[] @return;

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string userid;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("getCommonDeviceConfigResponse", Namespace = "http://www.cisco.com/AXL/API/1.0", IsNullable = false)]
    public class GetCommonDeviceConfigRes : APIResponse
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public GetCommonDeviceConfigResReturn @return;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("getMediaResourceGroupResponse", Namespace = "http://www.cisco.com/AXL/API/1.0", IsNullable = false)]
    public class GetMediaResourceGroupRes : APIResponse
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public GetMediaResourceGroupResReturn @return;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("getRoutePartitionResponse", Namespace = "http://www.cisco.com/AXL/API/1.0", IsNullable = false)]
    public class GetRoutePartitionRes : APIResponse
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public GetRoutePartitionResReturn @return;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("getCallManagerGroupResponse", Namespace = "http://www.cisco.com/AXL/API/1.0", IsNullable = false)]
    public class GetCallManagerGroupRes : APIResponse
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public GetCallManagerGroupResReturn @return;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("getConferenceBridgeResponse", Namespace = "http://www.cisco.com/AXL/API/1.0", IsNullable = false)]
    public class GetConferenceBridgeRes : APIResponse
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public GetConferenceBridgeResReturn @return;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("getCMCInfoResponse", Namespace = "http://www.cisco.com/AXL/API/1.0", IsNullable = false)]
    public class GetCMCInfoRes : APIResponse
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public GetCMCInfoResReturn @return;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("getH323GatewayResponse", Namespace = "http://www.cisco.com/AXL/API/1.0", IsNullable = false)]
    public class GetH323GatewayRes : APIResponse
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public GetH323GatewayResReturn @return;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("getCallPickupGroupResponse", Namespace = "http://www.cisco.com/AXL/API/1.0", IsNullable = false)]
    public class GetCallPickupGroupRes : APIResponse
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public GetCallPickupGroupResReturn @return;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("getVoiceMailPortResponse", Namespace = "http://www.cisco.com/AXL/API/1.0", IsNullable = false)]
    public class GetVoiceMailPortRes : APIResponse
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public GetVoiceMailPortResReturn @return;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ListPhoneByNameRes))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ListPhoneByDescriptionRes))]
    public class ListPhoneResponse : APIResponse
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute("phone", Form = System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable = false)]
        public ListPhoneResponsePhone[] @return;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("listPhoneByNameResponse", Namespace = "http://www.cisco.com/AXL/API/1.0", IsNullable = false)]
    public class ListPhoneByNameRes : ListPhoneResponse
    {
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("listPhoneByDescriptionResponse", Namespace = "http://www.cisco.com/AXL/API/1.0", IsNullable = false)]
    public class ListPhoneByDescriptionRes : ListPhoneResponse
    {
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("getPilotPointResponse", Namespace = "http://www.cisco.com/AXL/API/1.0", IsNullable = false)]
    public class GetPilotPointRes : APIResponse
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public GetPilotPointResReturn @return;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("getCallParkResponse", Namespace = "http://www.cisco.com/AXL/API/1.0", IsNullable = false)]
    public class GetCallParkRes : APIResponse
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public GetCallParkResReturn @return;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("executeSQLQueryResponse", Namespace = "http://www.cisco.com/AXL/API/1.0", IsNullable = false)]
    public class ExecuteSQLQueryRes : APIResponse
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute("row", Form = System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable = false)]
        public object[] @return;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("getLineGroupResponse", Namespace = "http://www.cisco.com/AXL/API/1.0", IsNullable = false)]
    public class GetLineGroupRes : APIResponse
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public GetLineGroupResReturn @return;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("getLocationResponse", Namespace = "http://www.cisco.com/AXL/API/1.0", IsNullable = false)]
    public class GetLocationRes : APIResponse
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public GetLocationResReturn @return;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("listMOHAudioSourceByNameResponse", Namespace = "http://www.cisco.com/AXL/API/1.0", IsNullable = false)]
    public class ListMOHAudioSourceRes : APIResponse
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute("mohAudioSource", Form = System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable = false)]
        public ListMOHAudioSourceResMohAudioSource[] @return;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("getH323PhoneResponse", Namespace = "http://www.cisco.com/AXL/API/1.0", IsNullable = false)]
    public class GetH323PhoneRes : APIResponse
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public GetH323PhoneResReturn @return;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("getNumDevicesResponse", Namespace = "http://www.cisco.com/AXL/API/1.0", IsNullable = false)]
    public class GetNumDevicesRes : APIResponse
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, DataType = "nonNegativeInteger")]
        public string @return;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("getDeviceProfileResponse", Namespace = "http://www.cisco.com/AXL/API/1.0", IsNullable = false)]
    public class GetDeviceProfileRes : APIResponse
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public GetDeviceProfileResReturn @return;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(DeviceLoginResponse))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(DeviceLogoutRes))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(DeviceResetRes))]
    [System.Xml.Serialization.XmlRootAttribute("addPhoneResponse", Namespace = "http://www.cisco.com/AXL/API/1.0", IsNullable = false)]
    public class StandardResponse : APIResponse
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string @return;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("doDeviceLoginResponse", Namespace = "http://www.cisco.com/AXL/API/1.0", IsNullable = false)]
    public class DeviceLoginResponse : StandardResponse
    {
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("doDeviceLogoutResponse", Namespace = "http://www.cisco.com/AXL/API/1.0", IsNullable = false)]
    public class DeviceLogoutRes : StandardResponse
    {
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("doDeviceResetResponse", Namespace = "http://www.cisco.com/AXL/API/1.0", IsNullable = false)]
    public class DeviceResetRes : StandardResponse
    {
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("getRouteGroupResponse", Namespace = "http://www.cisco.com/AXL/API/1.0", IsNullable = false)]
    public class GetRouteGroupRes : APIResponse
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public GetRouteGroupResReturn @return;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("addPhysicalLocation", Namespace = "http://www.cisco.com/AXL/API/1.0", IsNullable = false)]
    public class AddPhysicalLocationReq
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XPhysicalLocation physicalLocation;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(AddRegionReq))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(AddLineGroupReq))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(UpdatePhoneReq))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(AddDialPlanReq))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(AddGatewayEndpointReq))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(AddDialPlanTagReq))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(GUIDRequest))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(UpdateFACInfoReq))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(UpdateCMCInfoReq))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(GetVoiceMailPilotReq))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ExecuteSQLUpdateReq))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(GetNumPlanPattern))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(GetTransformationPatternReq))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(RemoveDirectedCallParkReq))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(GetLineReq))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(GetHuntPilotReq))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(RemoveCallParkReq))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(GetRoutePatternReq))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(UpdateLineReq))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(UpdateCallParkReq))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(UpdateNumPlanPattern))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(UpdateTransformationPatternReq))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(UpdateHuntPilotReq))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(UpdateMeetMeReq))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(UpdateRoutePatternReq))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(UpdateTransPatternReq))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(RemoveLineReq))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(UpdateDirectedCallParkReq))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(RemoveRoutePatternReq))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(GetDirectedCallParkReq))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(GetMeetMeReq))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(RemoveHuntPilotReq))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(RemoveMeetMeReq))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(RemoveTransformationPatternReq))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(GetCallParkReq))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(GetTransPatternReq))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(RemoveTransPatternReq))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(RemoveRoutePartitionReq))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(UpdateConferenceBridgeReq))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(DeviceLoginReq))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ListAllProcessNodesReq))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(AddSIPTrunkReq))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(AddLocationReq))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(AddDevicePoolReq))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(UpdateUserReq))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(RemoveMGCPEndpointReq))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(AddCMCInfoReq))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(AddMGCPSubunitReq))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(GetPhoneReq))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(GetUserReq))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(AddH323TrunkReq))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(AddVoiceMailPilotReq))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(AddMGCPEndpointReq))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(AddSIPRealmReq))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(RemovePhoneReq))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(UpdateRecordingProfileReq))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(GetServiceParameterReq))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(UpdateServiceParameterReq))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(UpdateRegionMatrixReq))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(AddMediaResourceListReq))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(AddCallManagerReq))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(AddH323GatewayReq))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(AddVoiceMailPortReq))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(NameAndGUIDRequest))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(UpdateVoiceMailProfileReq))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(UpdatePhysicalLocationReq))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(UpdateSIPTrunkReq))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(UpdateDeviceMobilityGroupReq))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(UpdateUserGroupReq))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(UpdateDDIReq))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(UpdateCallManagerGroupReq))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(UpdateRouteFilterReq))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(UpdateVoiceMailPortReq))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(UpdateLocationReq))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(UpdateTimeScheduleReq))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(UpdateGatekeeperReq))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(UpdateProcessNodeReq))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(UpdateCommonDeviceConfigReq))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(UpdateGatewayEndpointReq))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(UpdateH323DeviceReq))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(UpdateH323PhoneReq))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(UpdateH323GatewayReq))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(UpdateH323TrunkReq))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(UpdateTimePeriodReq))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(UpdateCallManagerReq))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(UpdateDialPlanTagReq))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(UpdateMediaResourceListReq))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(UpdateMediaResourceGroupReq))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(UpdateDialPlanReq))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(UpdateDeviceMobilityReq))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(GetSIPRealmReq))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(GetMOHAudioSourceByIDAndSourceReq))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(UpdateMOHAudioSourceReq))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(AddH323PhoneReq))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(AddLineReq))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(UpdateRouteListReq))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(UpdateAttendantConsoleUserReq))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(AddRoutePatternReq))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(AddMediaResourceGroupReq))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(UpdateRouteGroupReq))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(RemoveMGCPReq))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(GetCallPickupGroup))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(RemoveCallPickupGroupReq))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(GetCallPickupGroupReq))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(UpdateCallPickupGroupReq))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(AddCallParkReq))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(GetAttendantConsoleUserReq))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(AddDDIReq))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ListServiceParametersReq))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(AddDeviceProfileReq))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(AddCTIRoutePointReq))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(AddRecordingProfileReq))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(RemoveConferenceBridgeReq))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(AddRouteFilterReq))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(UpdateLineGroupReq))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ListBySearchString))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ListPhoneByNameReq))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ListDeviceByNameAndClassReq))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ListDeviceByServiceNameReq))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ListPhoneByDescriptionReq))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ListCSSByNameReq))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(DeviceLogoutReq))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(AddFACInfoReq))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(UpdateAppUserReq))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(AddHuntPilotReq))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(AddAttendantConsoleUserReq))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(UpdateAttendantConsoleHuntGroupReq))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(RemoveMGCPSubunitReq))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(AddVoiceMailProfileReq))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(GetLicenseCapabilitiesReq))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(AddMOHServerReq))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(UpdateSIPRealmReq))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ListRoutePlanByTypeReq))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(AddMGCPUnitReq))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(RemoveAttendantConsoleUserReq))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(UpdatePilotPointReq))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(GetRecordingProfileReq))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(UpdateDeviceProfileReq))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(AuthenticateUserReq))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(AddPhoneTemplateReq))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(AddGatekeeperReq))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(GetMGCPReq))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(AddCommonDeviceConfigReq))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ListProcessNodesByServiceReq))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(AddMGCPReq))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ListUserByNameReq))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(AddDeviceMobilityGroupReq))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(UpdateRegionReq))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(AddRouteListReq))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(AddUserReq))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(UpdateLicenseCapabilitiesReq))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(UpdateVoiceMailPilotReq))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(AddTransformationPatternReq))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(GetRoutePartitionReq))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ExecuteSQLQueryReq))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(AddCSSReq))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(UpdateRoutePartitionReq))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(RemoveVoiceMailPilotReq))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(AddUserGroupReq))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(UpdateDevicePoolReq))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(GetProcessNodeServiceReq))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(UpdateProcessNodeServiceReq))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(AddTimeScheduleReq))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(UpdateCSSReq))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(RemoveDeviceProfileReq))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(AddTransPatternReq))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(AddConferenceBridgeReq))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(AddPilotPointReq))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(GetNumDevicesReq))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(RemoveUserReq))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(UpdateMGCPReq))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(GetConferenceBridgeReq))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(AddCallPickupGroupReq))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(AddTimePeriodReq))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(AddPhoneReq))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(RemoveRecordingProfileReq))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(RemoveMGCPUnitReq))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(CreateAutogeneratedProfileReq))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(UpdateHuntListReq))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(AddRoutePartitionReq))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(AddDeviceMobilityReq))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(AddProcessNodeReq))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(RemoveSIPRealmReq))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(AddAttendantConsoleHuntGroupReq))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(AddCallManagerGroupReq))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(AddDirectedCallParkReq))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(UpdateCTIRoutePointReq))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(AddHuntListReq))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(UpdatePhoneTemplateReq))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(DeviceResetReq))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(GetDeviceProfileReq))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(UpdateCallerFilterListReq))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(AddRouteGroupReq))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(AddCallerFilterListReq))]
    public abstract class APIRequest
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public System.UInt64 sequence;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool sequenceSpecified;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("addRegion", Namespace = "http://www.cisco.com/AXL/API/1.0", IsNullable = false)]
    public class AddRegionReq : APIRequest
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public AddRegionReqRegion region;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("addLineGroup", Namespace = "http://www.cisco.com/AXL/API/1.0", IsNullable = false)]
    public class AddLineGroupReq : APIRequest
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XLineGroup lineGroup;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("updatePhone", Namespace = "http://www.cisco.com/AXL/API/1.0", IsNullable = false)]
    public class UpdatePhoneReq : APIRequest
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("name", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("uuid", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")]
        public string Item;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public ItemChoiceType72 ItemElementName;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, DataType = "Name")]
        public string newName;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string description;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("callingSearchSpaceId", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("callingSearchSpaceName", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified, DataType = "Name")]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("Item1ElementName")]
        public string Item1;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public Item1ChoiceType18 Item1ElementName;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("devicePoolName", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("devicePoolId", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("Item2ElementName")]
        public string Item2;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public Item2ChoiceType17 Item2ElementName;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("commonDeviceConfigName", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable = true)]
        [System.Xml.Serialization.XmlElementAttribute("commonDeviceConfigId", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable = true)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("Item3ElementName")]
        public string Item3;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public Item3ChoiceType13 Item3ElementName;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("locationName", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified, DataType = "Name")]
        [System.Xml.Serialization.XmlElementAttribute("locationId", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("Item4ElementName")]
        public string Item4;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public Item4ChoiceType9 Item4ElementName;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("mediaResourceListId", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("mediaResourceListName", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified, DataType = "Name")]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("Item5ElementName")]
        public string Item5;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public Item5ChoiceType9 Item5ElementName;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, DataType = "nonNegativeInteger")]
        public string networkHoldMOHAudioSourceId;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, DataType = "nonNegativeInteger")]
        public string userHoldMOHAudioSourceId;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("automatedAlternateRoutingCSSId", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("automatedAlternateRoutingCSSName", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("Item6ElementName")]
        public string Item6;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public Item6ChoiceType7 Item6ElementName;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("aarNeighborhoodName", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("aarNeighborhoodId", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("Item7ElementName")]
        public string Item7;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public Item7ChoiceType4 Item7ElementName;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XLoadInformation loadInformation;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XVendorConfig vendorConfig;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool traceFlag;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool traceFlagSpecified;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int mlppDomainId;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool mlppDomainIdSpecified;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string mlppIndicationStatus;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string preemption;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool retryVideoCallAsVoice;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool retryVideoCallAsVoiceSpecified;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string associatedPC;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public UpdatePhoneReqLines lines;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("phoneTemplateId", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("phoneTemplateName", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("Item8ElementName")]
        public string Item8;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public Item8ChoiceType2 Item8ElementName;

        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute("speeddial", Form = System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable = false)]
        public XSpeeddial[] speeddials;

        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute("busyLampFields", Form = System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable = false)]
        public XBusyLampField[] busyLampFields;

        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute("blfDirectedCallPark", Form = System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable = false)]
        public XBLFDirectedCallPark[] blfDirectedCallParks;

        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute("addOnModule", Form = System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable = false)]
        public XAddOnModule[] addOnModules;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable = true)]
        public string userLocale;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable = true)]
        public string networkLocale;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("securityProfileName", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("securityProfileId", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("Item9ElementName")]
        public string Item9;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public Item9ChoiceType2 Item9ElementName;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, DataType = "nonNegativeInteger")]
        public string idleTimeout;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, DataType = "anyURI")]
        public string authenticationURL;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, DataType = "anyURI")]
        public string directoryURL;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, DataType = "anyURI")]
        public string idleURL;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, DataType = "anyURI")]
        public string informationURL;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, DataType = "anyURI")]
        public string messagesURL;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, DataType = "anyURI")]
        public string proxyServerURL;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, DataType = "anyURI")]
        public string servicesURL;

        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute("service", Form = System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable = false)]
        public XSubscribedService[] services;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("softkeyTemplateName", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("softkeyTemplateId", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("Item10ElementName")]
        public string Item10;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public Item10ChoiceType3 Item10ElementName;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("defaultProfileId", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("defaultProfileName", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("Item11ElementName")]
        public string Item11;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public Item11ChoiceType1 Item11ElementName;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool enableExtensionMobility;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string builtInBridgeStatus;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string callInfoPrivacyStatus;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string hlogStatus;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable = true)]
        public string ownerUserId;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(false)]
        public bool ignorePresentationIndicators = false;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string packetCaptureMode;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, DataType = "positiveInteger", IsNullable = true)]
        public string packetCaptureDuration;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("subscribeCallingSearchSpaceId", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable = true)]
        [System.Xml.Serialization.XmlElementAttribute("subscribeCallingSearchSpaceName", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable = true)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("Item12ElementName")]
        public string Item12;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public Item12ChoiceType1 Item12ElementName;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("rerouteCallingSearchSpaceName", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable = true)]
        [System.Xml.Serialization.XmlElementAttribute("rerouteCallingSearchSpaceId", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable = true)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("Item13ElementName")]
        public string Item13;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public Item13ChoiceType Item13ElementName;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool allowCtiControlFlag;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool allowCtiControlFlagSpecified;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("presenceGroupName", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("presenceGroupId", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("Item14ElementName")]
        public string Item14;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public Item14ChoiceType Item14ElementName;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string certificateOperation;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, DataType = "Name", IsNullable = true)]
        public string authenticationString;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string certificateStatus;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable = true)]
        public string upgradeFinishTime;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string deviceMobilityMode;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool remoteDevice;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool remoteDeviceSpecified;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, DataType = "nonNegativeInteger")]
        public string dndTimeout;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XDNDOption dndOption;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool dndOptionSpecified;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable = true)]
        public string dndRingSetting;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool dndStatus;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool dndStatusSpecified;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0", IncludeInSchema = false)]
    public enum ItemChoiceType72
    {

        /// <remarks/>
        name,

        /// <remarks/>
        uuid,
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0", IncludeInSchema = false)]
    public enum Item1ChoiceType18
    {

        /// <remarks/>
        callingSearchSpaceId,

        /// <remarks/>
        callingSearchSpaceName,
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0", IncludeInSchema = false)]
    public enum Item2ChoiceType17
    {

        /// <remarks/>
        devicePoolName,

        /// <remarks/>
        devicePoolId,
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0", IncludeInSchema = false)]
    public enum Item3ChoiceType13
    {

        /// <remarks/>
        commonDeviceConfigName,

        /// <remarks/>
        commonDeviceConfigId,
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0", IncludeInSchema = false)]
    public enum Item4ChoiceType9
    {

        /// <remarks/>
        locationName,

        /// <remarks/>
        locationId,
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0", IncludeInSchema = false)]
    public enum Item5ChoiceType9
    {

        /// <remarks/>
        mediaResourceListId,

        /// <remarks/>
        mediaResourceListName,
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0", IncludeInSchema = false)]
    public enum Item6ChoiceType7
    {

        /// <remarks/>
        automatedAlternateRoutingCSSId,

        /// <remarks/>
        automatedAlternateRoutingCSSName,
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0", IncludeInSchema = false)]
    public enum Item7ChoiceType4
    {

        /// <remarks/>
        aarNeighborhoodName,

        /// <remarks/>
        aarNeighborhoodId,
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0", IncludeInSchema = false)]
    public enum Item8ChoiceType2
    {

        /// <remarks/>
        phoneTemplateId,

        /// <remarks/>
        phoneTemplateName,
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0", IncludeInSchema = false)]
    public enum Item9ChoiceType2
    {

        /// <remarks/>
        securityProfileName,

        /// <remarks/>
        securityProfileId,
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0", IncludeInSchema = false)]
    public enum Item10ChoiceType3
    {

        /// <remarks/>
        softkeyTemplateName,

        /// <remarks/>
        softkeyTemplateId,
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0", IncludeInSchema = false)]
    public enum Item11ChoiceType1
    {

        /// <remarks/>
        defaultProfileId,

        /// <remarks/>
        defaultProfileName,
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0", IncludeInSchema = false)]
    public enum Item12ChoiceType1
    {

        /// <remarks/>
        subscribeCallingSearchSpaceId,

        /// <remarks/>
        subscribeCallingSearchSpaceName,
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0", IncludeInSchema = false)]
    public enum Item13ChoiceType
    {

        /// <remarks/>
        rerouteCallingSearchSpaceName,

        /// <remarks/>
        rerouteCallingSearchSpaceId,
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0", IncludeInSchema = false)]
    public enum Item14ChoiceType
    {

        /// <remarks/>
        presenceGroupName,

        /// <remarks/>
        presenceGroupId,
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public enum XDNDOption
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Ringer Off")]
        RingerOff,
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class AddDialPlanReq : APIRequest
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XDialPlan dialPlan;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("addGatewayEndpoint", Namespace = "http://www.cisco.com/AXL/API/1.0", IsNullable = false)]
    public class AddGatewayEndpointReq : APIRequest
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XGateway gateway;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class AddDialPlanTagReq : APIRequest
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XDialPlanTag dialPlanTag;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(UpdateFACInfoReq))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(UpdateCMCInfoReq))]
    [System.Xml.Serialization.XmlRootAttribute("getCMCInfo", Namespace = "http://www.cisco.com/AXL/API/1.0", IsNullable = false)]
    public class GUIDRequest : APIRequest
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string uuid;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("updateFACInfo", Namespace = "http://www.cisco.com/AXL/API/1.0", IsNullable = false)]
    public class UpdateFACInfoReq : GUIDRequest
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string code;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string description;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, DataType = "nonNegativeInteger")]
        public string authorizationLevel;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("updateCMCInfo", Namespace = "http://www.cisco.com/AXL/API/1.0", IsNullable = false)]
    public class UpdateCMCInfoReq : GUIDRequest
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string code;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string description;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, DataType = "nonNegativeInteger")]
        public string authorizationLevel;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("getVoiceMailPilot", Namespace = "http://www.cisco.com/AXL/API/1.0", IsNullable = false)]
    public class GetVoiceMailPilotReq : APIRequest
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("dirn", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable = true)]
        [System.Xml.Serialization.XmlElementAttribute("uuid", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("CSS", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable = true)]
        [System.Xml.Serialization.XmlElementAttribute("CSSName", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified, DataType = "Name", IsNullable = true)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")]
        public string Item;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public ItemChoiceType71 ItemElementName;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0", IncludeInSchema = false)]
    public enum ItemChoiceType71
    {

        /// <remarks/>
        dirn,

        /// <remarks/>
        uuid,

        /// <remarks/>
        CSS,

        /// <remarks/>
        CSSName,
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("executeSQLUpdate", Namespace = "http://www.cisco.com/AXL/API/1.0", IsNullable = false)]
    public class ExecuteSQLUpdateReq : APIRequest
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string sql;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(GetTransformationPatternReq))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(RemoveDirectedCallParkReq))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(GetLineReq))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(GetHuntPilotReq))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(RemoveCallParkReq))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(GetRoutePatternReq))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(UpdateLineReq))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(UpdateCallParkReq))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(UpdateNumPlanPattern))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(UpdateTransformationPatternReq))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(UpdateHuntPilotReq))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(UpdateMeetMeReq))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(UpdateRoutePatternReq))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(UpdateTransPatternReq))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(RemoveLineReq))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(UpdateDirectedCallParkReq))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(RemoveRoutePatternReq))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(GetDirectedCallParkReq))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(GetMeetMeReq))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(RemoveHuntPilotReq))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(RemoveMeetMeReq))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(RemoveTransformationPatternReq))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(GetCallParkReq))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(GetTransPatternReq))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(RemoveTransPatternReq))]
    public abstract class GetNumPlanPattern : APIRequest
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string uuid;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string pattern;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("routePartitionId", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("routePartitionName", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")]
        public string Item;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public ItemChoiceType69 ItemElementName;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("routeFilterId", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("routeFilterName", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("Item1ElementName")]
        public string Item1;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public Item1ChoiceType17 Item1ElementName;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0", IncludeInSchema = false)]
    public enum ItemChoiceType69
    {

        /// <remarks/>
        routePartitionId,

        /// <remarks/>
        routePartitionName,
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0", IncludeInSchema = false)]
    public enum Item1ChoiceType17
    {

        /// <remarks/>
        routeFilterId,

        /// <remarks/>
        routeFilterName,
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("getTransformationPattern", Namespace = "http://www.cisco.com/AXL/API/1.0", IsNullable = false)]
    public class GetTransformationPatternReq : GetNumPlanPattern
    {
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("removeDirectedCallPark", Namespace = "http://www.cisco.com/AXL/API/1.0", IsNullable = false)]
    public class RemoveDirectedCallParkReq : GetNumPlanPattern
    {
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("getLine", Namespace = "http://www.cisco.com/AXL/API/1.0", IsNullable = false)]
    public class GetLineReq : GetNumPlanPattern
    {
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("getHuntPilot", Namespace = "http://www.cisco.com/AXL/API/1.0", IsNullable = false)]
    public class GetHuntPilotReq : GetNumPlanPattern
    {
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("removeCallPark", Namespace = "http://www.cisco.com/AXL/API/1.0", IsNullable = false)]
    public class RemoveCallParkReq : GetNumPlanPattern
    {
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("getRoutePattern", Namespace = "http://www.cisco.com/AXL/API/1.0", IsNullable = false)]
    public class GetRoutePatternReq : GetNumPlanPattern
    {
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("updateLine", Namespace = "http://www.cisco.com/AXL/API/1.0", IsNullable = false)]
    public class UpdateLineReq : GetNumPlanPattern
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string newPattern;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string description;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("newRoutePartitionId", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("newRoutePartitionName", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("Item2ElementName")]
        public string Item2;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public Item2ChoiceType16 Item2ElementName;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("aarNeighborhoodName", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("aarNeighborhoodId", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("Item3ElementName")]
        public string Item3;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public Item3ChoiceType12 Item3ElementName;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string aarDestinationMask;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool aarKeepCallHistory;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool aarKeepCallHistorySpecified;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool aarVoiceMailEnabled;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool aarVoiceMailEnabledSpecified;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable = true)]
        public XCallForwardInfo callForwardAll;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable = true)]
        public XCallForwardInfo callForwardBusy;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable = true)]
        public XCallForwardInfo callForwardBusyInt;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable = true)]
        public XCallForwardInfo callForwardNoAnswer;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable = true)]
        public XCallForwardInfo callForwardNoAnswerInt;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable = true)]
        public XCallForwardInfo callForwardNoCoverage;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable = true)]
        public XCallForwardInfo callForwardNoCoverageInt;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XCallForwardInfo callForwardOnFailure;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XCallForwardInfo callForwardAlternateParty;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XCallForwardInfo callForwardNotRegistered;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XCallForwardInfo callForwardNotRegisteredInt;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("callPickupGroup", typeof(XNPCallPickupGroup), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("callPickupGroupName", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public object Item4;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string autoAnswer;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, DataType = "nonNegativeInteger")]
        public string networkHoldMOHAudioSourceId;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, DataType = "nonNegativeInteger")]
        public string userHoldMOHAudioSourceId;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable = true)]
        public string alertingName;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("shareLineAppearanceCSSId", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("shareLineAppearanceCSSName", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("Item5ElementName")]
        public string Item5;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public Item5ChoiceType8 Item5ElementName;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("voiceMailProfileId", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("voiceMailProfileName", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("Item6ElementName")]
        public string Item6;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public Item6ChoiceType6 Item6ElementName;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string patternPrecedence;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string releaseCause;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public long hrDuration;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool hrDurationSpecified;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public long hrInterval;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool hrIntervalSpecified;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0", IncludeInSchema = false)]
    public enum Item2ChoiceType16
    {

        /// <remarks/>
        newRoutePartitionId,

        /// <remarks/>
        newRoutePartitionName,
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0", IncludeInSchema = false)]
    public enum Item3ChoiceType12
    {

        /// <remarks/>
        aarNeighborhoodName,

        /// <remarks/>
        aarNeighborhoodId,
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0", IncludeInSchema = false)]
    public enum Item5ChoiceType8
    {

        /// <remarks/>
        shareLineAppearanceCSSId,

        /// <remarks/>
        shareLineAppearanceCSSName,
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0", IncludeInSchema = false)]
    public enum Item6ChoiceType6
    {

        /// <remarks/>
        voiceMailProfileId,

        /// <remarks/>
        voiceMailProfileName,
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("updateCallPark", Namespace = "http://www.cisco.com/AXL/API/1.0", IsNullable = false)]
    public class UpdateCallParkReq : GetNumPlanPattern
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string newPattern;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string description;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("newRoutePartitionId", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("newRoutePartitionName", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("Item2ElementName")]
        public string Item2;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public Item2ChoiceType15 Item2ElementName;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("callManagerName", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("callManagerId", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("Item3ElementName")]
        public string Item3;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public Item3ChoiceType11 Item3ElementName;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0", IncludeInSchema = false)]
    public enum Item2ChoiceType15
    {

        /// <remarks/>
        newRoutePartitionId,

        /// <remarks/>
        newRoutePartitionName,
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0", IncludeInSchema = false)]
    public enum Item3ChoiceType11
    {

        /// <remarks/>
        callManagerName,

        /// <remarks/>
        callManagerId,
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(UpdateTransformationPatternReq))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(UpdateHuntPilotReq))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(UpdateMeetMeReq))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(UpdateRoutePatternReq))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(UpdateTransPatternReq))]
    public abstract class UpdateNumPlanPattern : GetNumPlanPattern
    {
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("updateTransformationPattern", Namespace = "http://www.cisco.com/AXL/API/1.0", IsNullable = false)]
    public class UpdateTransformationPatternReq : UpdateNumPlanPattern
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string newPattern;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string description;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("newRoutePartitionId", typeof(XRoutePartition), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("newRoutePartitionName", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public object Item2;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable = true)]
        public string callingPartyTransformationMask;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string useCallingPartyPhoneMask;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("dialPlanName", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("dialPlanId", typeof(XDialPlan), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public object Item3;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable = true)]
        public string callingPartyPrefixDigits;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("newRouteFilterName", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("newRouteFilterId", typeof(XRouteFilter), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public object Item4;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string callingLinePresentationBit;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string callingNamePresentationBit;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("updateHuntPilot", Namespace = "http://www.cisco.com/AXL/API/1.0", IsNullable = false)]
    public class UpdateHuntPilotReq : UpdateNumPlanPattern
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string newPattern;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string description;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("newRoutePartitionId", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("newRoutePartitionName", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("Item2ElementName")]
        public string Item2;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public Item2ChoiceType14 Item2ElementName;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool blockEnable;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool blockEnableSpecified;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string calledPartyTransformationMask;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string callingPartyTransformationMask;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string useCallingPartyPhoneMask;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable = true)]
        public string callingPartyPrefixDigits;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("dialPlanName", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("dialPlanId", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("Item3ElementName")]
        public string Item3;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public Item3ChoiceType10 Item3ElementName;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("digitDiscardInstructionName", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("digitDiscardInstructionId", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("Item4ElementName")]
        public string Item4;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public Item4ChoiceType8 Item4ElementName;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string messageWaiting;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string networkLocation;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool patternUrgency;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool patternUrgencySpecified;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string prefixDigitsOut;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("newRouteFilterName", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("newRouteFilterId", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("Item5ElementName")]
        public string Item5;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public Item5ChoiceType7 Item5ElementName;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string callingLinePresentationBit;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string callingNamePresentationBit;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string connectedLinePresentationBit;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string connectedNamePresentationBit;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string patternPrecedence;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string releaseCause;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public UpdateHuntPilotReqDestination destination;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XHuntForwardInfo ForwardHuntBusy;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XHuntForwardInfo ForwardHuntNoAnswer;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0", IncludeInSchema = false)]
    public enum Item2ChoiceType14
    {

        /// <remarks/>
        newRoutePartitionId,

        /// <remarks/>
        newRoutePartitionName,
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0", IncludeInSchema = false)]
    public enum Item3ChoiceType10
    {

        /// <remarks/>
        dialPlanName,

        /// <remarks/>
        dialPlanId,
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0", IncludeInSchema = false)]
    public enum Item4ChoiceType8
    {

        /// <remarks/>
        digitDiscardInstructionName,

        /// <remarks/>
        digitDiscardInstructionId,
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0", IncludeInSchema = false)]
    public enum Item5ChoiceType7
    {

        /// <remarks/>
        newRouteFilterName,

        /// <remarks/>
        newRouteFilterId,
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("updateMeetMe", Namespace = "http://www.cisco.com/AXL/API/1.0", IsNullable = false)]
    public class UpdateMeetMeReq : UpdateNumPlanPattern
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string newPattern;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable = true)]
        public string description;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("newRoutePartitionId", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable = true)]
        [System.Xml.Serialization.XmlElementAttribute("newRoutePartitionName", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable = true)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("Item2ElementName")]
        public string Item2;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public Item2ChoiceType13 Item2ElementName;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XDeviceSecurityMode minimumSecurityLevel;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool minimumSecurityLevelSpecified;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0", IncludeInSchema = false)]
    public enum Item2ChoiceType13
    {

        /// <remarks/>
        newRoutePartitionId,

        /// <remarks/>
        newRoutePartitionName,
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("updateRoutePattern", Namespace = "http://www.cisco.com/AXL/API/1.0", IsNullable = false)]
    public class UpdateRoutePatternReq : UpdateNumPlanPattern
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string newPattern;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string description;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("newRoutePartitionId", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("newRoutePartitionName", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("Item2ElementName")]
        public string Item2;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public Item2ChoiceType12 Item2ElementName;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool blockEnable;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool blockEnableSpecified;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string calledPartyTransformationMask;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string callingPartyTransformationMask;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string useCallingPartyPhoneMask;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable = true)]
        public string callingPartyPrefixDigits;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("dialPlanName", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("dialPlanId", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("Item3ElementName")]
        public string Item3;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public Item3ChoiceType9 Item3ElementName;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("digitDiscardInstructionName", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("digitDiscardInstructionId", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("Item4ElementName")]
        public string Item4;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public Item4ChoiceType7 Item4ElementName;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string messageWaiting;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string networkLocation;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool patternUrgency;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool patternUrgencySpecified;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string prefixDigitsOut;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("newRouteFilterName", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("newRouteFilterId", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("Item5ElementName")]
        public string Item5;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public Item5ChoiceType6 Item5ElementName;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string callingLinePresentationBit;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string callingNamePresentationBit;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string connectedLinePresentationBit;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string connectedNamePresentationBit;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool supportOverlapSending;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool supportOverlapSendingSpecified;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string patternPrecedence;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string releaseCause;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool allowDeviceOverride;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool allowDeviceOverrideSpecified;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool provideOutsideDialtone;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool provideOutsideDialtoneSpecified;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public UpdateRoutePatternReqDestination destination;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool authorizationCodeRequired;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool authorizationCodeRequiredSpecified;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, DataType = "nonNegativeInteger")]
        public string authorizationLevelRequired;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool clientCodeRequired;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool clientCodeRequiredSpecified;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string withTag;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string withValueClause;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0", IncludeInSchema = false)]
    public enum Item2ChoiceType12
    {

        /// <remarks/>
        newRoutePartitionId,

        /// <remarks/>
        newRoutePartitionName,
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0", IncludeInSchema = false)]
    public enum Item3ChoiceType9
    {

        /// <remarks/>
        dialPlanName,

        /// <remarks/>
        dialPlanId,
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0", IncludeInSchema = false)]
    public enum Item4ChoiceType7
    {

        /// <remarks/>
        digitDiscardInstructionName,

        /// <remarks/>
        digitDiscardInstructionId,
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0", IncludeInSchema = false)]
    public enum Item5ChoiceType6
    {

        /// <remarks/>
        newRouteFilterName,

        /// <remarks/>
        newRouteFilterId,
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("updateTransPattern", Namespace = "http://www.cisco.com/AXL/API/1.0", IsNullable = false)]
    public class UpdateTransPatternReq : UpdateNumPlanPattern
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string newPattern;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string description;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("newRoutePartitionId", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("newRoutePartitionName", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("Item2ElementName")]
        public string Item2;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public Item2ChoiceType11 Item2ElementName;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool blockEnable;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool blockEnableSpecified;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string calledPartyTransformationMask;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string callingPartyTransformationMask;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string useCallingPartyPhoneMask;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable = true)]
        public string callingPartyPrefixDigits;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string callingPartyPresentation;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("dialPlanName", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("dialPlanId", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("Item3ElementName")]
        public string Item3;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public Item3ChoiceType8 Item3ElementName;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("digitDiscardInstructionName", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("digitDiscardInstructionId", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("Item4ElementName")]
        public string Item4;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public Item4ChoiceType6 Item4ElementName;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string messageWaiting;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string networkLocation;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool patternUrgency;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool patternUrgencySpecified;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string prefixDigitsOut;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("newRouteFilterName", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("newRouteFilterId", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("Item5ElementName")]
        public string Item5;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public Item5ChoiceType5 Item5ElementName;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string callingLinePresentationBit;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string callingNamePresentationBit;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string connectedLinePresentationBit;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string connectedNamePresentationBit;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool supportOverlapSending;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool supportOverlapSendingSpecified;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string patternPrecedence;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string releaseCause;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("callingSearchSpaceId", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("callingSearchSpaceName", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("Item6ElementName")]
        public string Item6;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public Item6ChoiceType5 Item6ElementName;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0", IncludeInSchema = false)]
    public enum Item2ChoiceType11
    {

        /// <remarks/>
        newRoutePartitionId,

        /// <remarks/>
        newRoutePartitionName,
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0", IncludeInSchema = false)]
    public enum Item3ChoiceType8
    {

        /// <remarks/>
        dialPlanName,

        /// <remarks/>
        dialPlanId,
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0", IncludeInSchema = false)]
    public enum Item4ChoiceType6
    {

        /// <remarks/>
        digitDiscardInstructionName,

        /// <remarks/>
        digitDiscardInstructionId,
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0", IncludeInSchema = false)]
    public enum Item5ChoiceType5
    {

        /// <remarks/>
        newRouteFilterName,

        /// <remarks/>
        newRouteFilterId,
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0", IncludeInSchema = false)]
    public enum Item6ChoiceType5
    {

        /// <remarks/>
        callingSearchSpaceId,

        /// <remarks/>
        callingSearchSpaceName,
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("removeLine", Namespace = "http://www.cisco.com/AXL/API/1.0", IsNullable = false)]
    public class RemoveLineReq : GetNumPlanPattern
    {
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("updateDirectedCallPark", Namespace = "http://www.cisco.com/AXL/API/1.0", IsNullable = false)]
    public class UpdateDirectedCallParkReq : GetNumPlanPattern
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string newPattern;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string description;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("newRoutePartitionId", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("newRoutePartitionName", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("Item2ElementName")]
        public string Item2;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public Item2ChoiceType10 Item2ElementName;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string retrievalPrefix;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string reversionPattern;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("revertCSSName", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("revertCSS", typeof(UpdateDirectedCallParkReqRevertCSS), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public object Item3;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0", IncludeInSchema = false)]
    public enum Item2ChoiceType10
    {

        /// <remarks/>
        newRoutePartitionId,

        /// <remarks/>
        newRoutePartitionName,
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("removeRoutePattern", Namespace = "http://www.cisco.com/AXL/API/1.0", IsNullable = false)]
    public class RemoveRoutePatternReq : GetNumPlanPattern
    {
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("getDirectedCallPark", Namespace = "http://www.cisco.com/AXL/API/1.0", IsNullable = false)]
    public class GetDirectedCallParkReq : GetNumPlanPattern
    {
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("getMeetMe", Namespace = "http://www.cisco.com/AXL/API/1.0", IsNullable = false)]
    public class GetMeetMeReq : GetNumPlanPattern
    {
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("removeHuntPilot", Namespace = "http://www.cisco.com/AXL/API/1.0", IsNullable = false)]
    public class RemoveHuntPilotReq : GetNumPlanPattern
    {
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("removeMeetMe", Namespace = "http://www.cisco.com/AXL/API/1.0", IsNullable = false)]
    public class RemoveMeetMeReq : GetNumPlanPattern
    {
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("removeTransformationPattern", Namespace = "http://www.cisco.com/AXL/API/1.0", IsNullable = false)]
    public class RemoveTransformationPatternReq : GetNumPlanPattern
    {
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("getCallPark", Namespace = "http://www.cisco.com/AXL/API/1.0", IsNullable = false)]
    public class GetCallParkReq : GetNumPlanPattern
    {
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("getTransPattern", Namespace = "http://www.cisco.com/AXL/API/1.0", IsNullable = false)]
    public class GetTransPatternReq : GetNumPlanPattern
    {
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("removeTransPattern", Namespace = "http://www.cisco.com/AXL/API/1.0", IsNullable = false)]
    public class RemoveTransPatternReq : GetNumPlanPattern
    {
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("removeRoutePartition", Namespace = "http://www.cisco.com/AXL/API/1.0", IsNullable = false)]
    public class RemoveRoutePartitionReq : APIRequest
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("partitionId", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("partitionName", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")]
        public string Item;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public ItemChoiceType68 ItemElementName;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0", IncludeInSchema = false)]
    public enum ItemChoiceType68
    {

        /// <remarks/>
        partitionId,

        /// <remarks/>
        partitionName,
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("updateConferenceBridge", Namespace = "http://www.cisco.com/AXL/API/1.0", IsNullable = false)]
    public class UpdateConferenceBridgeReq : APIRequest
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("name", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("uuid", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")]
        public string Item;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public ItemChoiceType67 ItemElementName;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, DataType = "Name")]
        public string newName;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable = true)]
        public string description;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("devicePoolName", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("devicePoolId", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("Item1ElementName")]
        public string Item1;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public Item1ChoiceType16 Item1ElementName;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("locationName", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified, DataType = "Name")]
        [System.Xml.Serialization.XmlElementAttribute("locationId", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("Item2ElementName")]
        public string Item2;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public Item2ChoiceType9 Item2ElementName;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable = true)]
        public XVendorConfig vendorConfig;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable = true)]
        public XLoadInformation loadInformation;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, DataType = "nonNegativeInteger")]
        [System.ComponentModel.DefaultValueAttribute("32")]
        public string maximumCapacity = "32";

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("securityProfileName", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("securityProfileId", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("Item3ElementName")]
        public string Item3;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public Item3ChoiceType7 Item3ElementName;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0", IncludeInSchema = false)]
    public enum ItemChoiceType67
    {

        /// <remarks/>
        name,

        /// <remarks/>
        uuid,
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0", IncludeInSchema = false)]
    public enum Item1ChoiceType16
    {

        /// <remarks/>
        devicePoolName,

        /// <remarks/>
        devicePoolId,
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0", IncludeInSchema = false)]
    public enum Item2ChoiceType9
    {

        /// <remarks/>
        locationName,

        /// <remarks/>
        locationId,
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0", IncludeInSchema = false)]
    public enum Item3ChoiceType7
    {

        /// <remarks/>
        securityProfileName,

        /// <remarks/>
        securityProfileId,
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("doDeviceLogin", Namespace = "http://www.cisco.com/AXL/API/1.0", IsNullable = false)]
    public class DeviceLoginReq : APIRequest
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("deviceId", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("deviceName", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")]
        public string Item;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public ItemChoiceType66 ItemElementName;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, DataType = "nonNegativeInteger")]
        public string loginDuration;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("profileName", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("profileId", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("Item1ElementName")]
        public string Item1;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public Item1ChoiceType15 Item1ElementName;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string userId;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0", IncludeInSchema = false)]
    public enum ItemChoiceType66
    {

        /// <remarks/>
        deviceId,

        /// <remarks/>
        deviceName,
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0", IncludeInSchema = false)]
    public enum Item1ChoiceType15
    {

        /// <remarks/>
        profileName,

        /// <remarks/>
        profileId,
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("listAllProcessNodes", Namespace = "http://www.cisco.com/AXL/API/1.0", IsNullable = false)]
    public class ListAllProcessNodesReq : APIRequest
    {
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("addSIPTrunk", Namespace = "http://www.cisco.com/AXL/API/1.0", IsNullable = false)]
    public class AddSIPTrunkReq : APIRequest
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XSIPTrunk trunk;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("addLocation", Namespace = "http://www.cisco.com/AXL/API/1.0", IsNullable = false)]
    public class AddLocationReq : APIRequest
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XLocation location;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("addDevicePool", Namespace = "http://www.cisco.com/AXL/API/1.0", IsNullable = false)]
    public class AddDevicePoolReq : APIRequest
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XDevicePool devicePool;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("updateUser", Namespace = "http://www.cisco.com/AXL/API/1.0", IsNullable = false)]
    public class UpdateUserReq : APIRequest
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string userid;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string firstname;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string lastname;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string password;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string pin;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string telephoneNumber;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string extension;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string department;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string manager;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string userLocale;

        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute("device", Form = System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable = false)]
        public string[] associatedDevices;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string associatedPC;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool authenticationProxyRights;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool authenticationProxyRightsSpecified;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool enableCTI;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool enableCTISpecified;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable = true)]
        public string digestCredentials;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool enableCTISuperProvider;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool enableCTISuperProviderSpecified;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool allowCallParkRetrieval;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool allowCallParkRetrievalSpecified;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool callingNumberModAllowed;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool callingNumberModAllowedSpecified;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string iaqExtension;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public UpdateUserReqPhoneProfiles phoneProfiles;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool enableMobility;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool enableMobilitySpecified;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool enableMobileVoiceAccess;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool enableMobileVoiceAccessSpecified;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public System.UInt64 maxDeskPickupWaitTime;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool maxDeskPickupWaitTimeSpecified;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public System.UInt16 remoteDestinationLimit;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool remoteDestinationLimitSpecified;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("removeMGCPEndpoint", Namespace = "http://www.cisco.com/AXL/API/1.0", IsNullable = false)]
    public class RemoveMGCPEndpointReq : APIRequest
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("uuid", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("domainName", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")]
        public string Item;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public ItemChoiceType65 ItemElementName;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public RemoveMGCPEndpointReqUnit unit;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public RemoveMGCPEndpointReqSubunit subunit;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public RemoveMGCPEndpointReqEndpoint endpoint;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0", IncludeInSchema = false)]
    public enum ItemChoiceType65
    {

        /// <remarks/>
        uuid,

        /// <remarks/>
        domainName,
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("addCMCInfo", Namespace = "http://www.cisco.com/AXL/API/1.0", IsNullable = false)]
    public class AddCMCInfoReq : APIRequest
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XCMCInfo cmcInfo;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("addMGCPSubunit", Namespace = "http://www.cisco.com/AXL/API/1.0", IsNullable = false)]
    public class AddMGCPSubunitReq : APIRequest
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("uuid", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("domainName", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")]
        public string Item;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public ItemChoiceType64 ItemElementName;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public AddMGCPSubunitReqUnit unit;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XMGCPSubunit subunit;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0", IncludeInSchema = false)]
    public enum ItemChoiceType64
    {

        /// <remarks/>
        uuid,

        /// <remarks/>
        domainName,
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("getPhone", Namespace = "http://www.cisco.com/AXL/API/1.0", IsNullable = false)]
    public class GetPhoneReq : APIRequest
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("phoneId", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("phoneName", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")]
        public string Item;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public ItemChoiceType63 ItemElementName;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0", IncludeInSchema = false)]
    public enum ItemChoiceType63
    {

        /// <remarks/>
        phoneId,

        /// <remarks/>
        phoneName,
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("getUser", Namespace = "http://www.cisco.com/AXL/API/1.0", IsNullable = false)]
    public class GetUserReq : APIRequest
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string userid;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("addH323Trunk", Namespace = "http://www.cisco.com/AXL/API/1.0", IsNullable = false)]
    public class AddH323TrunkReq : APIRequest
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XH323Trunk trunk;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("addVoiceMailPilot", Namespace = "http://www.cisco.com/AXL/API/1.0", IsNullable = false)]
    public class AddVoiceMailPilotReq : APIRequest
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XVoiceMailPilot voiceMailPilot;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("addMGCPEndpoint", Namespace = "http://www.cisco.com/AXL/API/1.0", IsNullable = false)]
    public class AddMGCPEndpointReq : APIRequest
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("uuid", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("domainName", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")]
        public string Item;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public ItemChoiceType62 ItemElementName;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public AddMGCPEndpointReqUnit unit;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public AddMGCPEndpointReqSubunit subunit;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public AddMGCPEndpointReqEndpoint endpoint;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0", IncludeInSchema = false)]
    public enum ItemChoiceType62
    {

        /// <remarks/>
        uuid,

        /// <remarks/>
        domainName,
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("addSIPRealm", Namespace = "http://www.cisco.com/AXL/API/1.0", IsNullable = false)]
    public class AddSIPRealmReq : APIRequest
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XSIPRealm newSIPRealm;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("removePhone", Namespace = "http://www.cisco.com/AXL/API/1.0", IsNullable = false)]
    public class RemovePhoneReq : APIRequest
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("phoneId", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("phoneName", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")]
        public string Item;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public ItemChoiceType61 ItemElementName;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0", IncludeInSchema = false)]
    public enum ItemChoiceType61
    {

        /// <remarks/>
        phoneId,

        /// <remarks/>
        phoneName,
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("updateRecordingProfile", Namespace = "http://www.cisco.com/AXL/API/1.0", IsNullable = false)]
    public class UpdateRecordingProfileReq : APIRequest
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("name", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("uuid", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")]
        public string Item;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public ItemChoiceType60 ItemElementName;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string newName;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("recordingCSSName", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified, DataType = "Name")]
        [System.Xml.Serialization.XmlElementAttribute("recordingCSS", typeof(XCallingSearchSpace), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public object Item1;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string recorderDestination;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0", IncludeInSchema = false)]
    public enum ItemChoiceType60
    {

        /// <remarks/>
        name,

        /// <remarks/>
        uuid,
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(UpdateServiceParameterReq))]
    [System.Xml.Serialization.XmlRootAttribute("getServiceParameter", Namespace = "http://www.cisco.com/AXL/API/1.0", IsNullable = false)]
    public class GetServiceParameterReq : APIRequest
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("name", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("uuid", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("processNodeId", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("processNodeName", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("service", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")]
        public string Item;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public ItemChoiceType59 ItemElementName;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0", IncludeInSchema = false)]
    public enum ItemChoiceType59
    {

        /// <remarks/>
        name,

        /// <remarks/>
        uuid,

        /// <remarks/>
        processNodeId,

        /// <remarks/>
        processNodeName,

        /// <remarks/>
        service,
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("updateServiceParameter", Namespace = "http://www.cisco.com/AXL/API/1.0", IsNullable = false)]
    public class UpdateServiceParameterReq : GetServiceParameterReq
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable = true)]
        public string newValue;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("updateRegionMatrix", Namespace = "http://www.cisco.com/AXL/API/1.0", IsNullable = false)]
    public class UpdateRegionMatrixReq : APIRequest
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string uuid;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string bandwidth;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, DataType = "nonNegativeInteger")]
        public string videoBandwidth;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XLossyNetwork lossyNetwork;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool lossyNetworkSpecified;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("addMediaResourceList", Namespace = "http://www.cisco.com/AXL/API/1.0", IsNullable = false)]
    public class AddMediaResourceListReq : APIRequest
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XMediaResourceList mediaResourceList;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("addCallManager", Namespace = "http://www.cisco.com/AXL/API/1.0", IsNullable = false)]
    public class AddCallManagerReq : APIRequest
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XCallManager callManager;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("addH323Gateway", Namespace = "http://www.cisco.com/AXL/API/1.0", IsNullable = false)]
    public class AddH323GatewayReq : APIRequest
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XH323Gateway gateway;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("addVoiceMailPort", Namespace = "http://www.cisco.com/AXL/API/1.0", IsNullable = false)]
    public class AddVoiceMailPortReq : APIRequest
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XVoiceMailPort voiceMailPort;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(UpdateVoiceMailProfileReq))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(UpdatePhysicalLocationReq))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(UpdateSIPTrunkReq))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(UpdateDeviceMobilityGroupReq))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(UpdateUserGroupReq))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(UpdateDDIReq))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(UpdateCallManagerGroupReq))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(UpdateRouteFilterReq))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(UpdateVoiceMailPortReq))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(UpdateLocationReq))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(UpdateTimeScheduleReq))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(UpdateGatekeeperReq))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(UpdateProcessNodeReq))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(UpdateCommonDeviceConfigReq))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(UpdateGatewayEndpointReq))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(UpdateH323DeviceReq))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(UpdateH323PhoneReq))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(UpdateH323GatewayReq))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(UpdateH323TrunkReq))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(UpdateTimePeriodReq))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(UpdateCallManagerReq))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(UpdateDialPlanTagReq))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(UpdateMediaResourceListReq))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(UpdateMediaResourceGroupReq))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(UpdateDialPlanReq))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(UpdateDeviceMobilityReq))]
    [System.Xml.Serialization.XmlRootAttribute("getCallerFilterList", Namespace = "http://www.cisco.com/AXL/API/1.0", IsNullable = false)]
    public class NameAndGUIDRequest : APIRequest
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("name", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("uuid", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")]
        public string Item;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public ItemChoiceType55 ItemElementName;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0", IncludeInSchema = false)]
    public enum ItemChoiceType55
    {

        /// <remarks/>
        name,

        /// <remarks/>
        uuid,
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("updateVoiceMailProfile", Namespace = "http://www.cisco.com/AXL/API/1.0", IsNullable = false)]
    public class UpdateVoiceMailProfileReq : NameAndGUIDRequest
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string newName;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable = true)]
        public string description;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(false)]
        public bool isDefault = false;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable = true)]
        public string voiceMailboxMask;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string voiceMailPilot;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("updatePhysicalLocation", Namespace = "http://www.cisco.com/AXL/API/1.0", IsNullable = false)]
    public class UpdatePhysicalLocationReq : NameAndGUIDRequest
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string newName;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string description;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("updateSIPTrunk", Namespace = "http://www.cisco.com/AXL/API/1.0", IsNullable = false)]
    public class UpdateSIPTrunkReq : NameAndGUIDRequest
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string newName;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string description;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("callingSearchSpaceId", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("callingSearchSpaceName", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("Item1ElementName")]
        public string Item1;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public Item1ChoiceType14 Item1ElementName;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("devicePoolName", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("devicePoolId", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("Item2ElementName")]
        public string Item2;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public Item2ChoiceType8 Item2ElementName;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string networkLocation;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("locationName", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("locationId", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("Item3ElementName")]
        public string Item3;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public Item3ChoiceType6 Item3ElementName;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("mediaResourceListId", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("mediaResourceListName", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("Item4ElementName")]
        public string Item4;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public Item4ChoiceType5 Item4ElementName;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, DataType = "nonNegativeInteger")]
        public string networkHoldMOHAudioSourceId;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, DataType = "nonNegativeInteger")]
        public string userHoldMOHAudioSourceId;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("automatedAlternateRoutingCSSId", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("automatedAlternateRoutingCSSName", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("Item5ElementName")]
        public string Item5;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public Item5ChoiceType4 Item5ElementName;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("aarNeighborhoodName", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("aarNeighborhoodId", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("Item6ElementName")]
        public string Item6;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public Item6ChoiceType4 Item6ElementName;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int mlppDomainId;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool mlppDomainIdSpecified;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string mlppIndicationStatus;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string preemption;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool retryVideoCallAsAudio;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool retryVideoCallAsAudioSpecified;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("subscribeCallingSearchSpaceId", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("subscribeCallingSearchSpaceName", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("Item7ElementName")]
        public string Item7;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public Item7ChoiceType3 Item7ElementName;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("rerouteCallingSearchSpaceName", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("rerouteCallingSearchSpaceId", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("Item8ElementName")]
        public string Item8;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public Item8ChoiceType1 Item8ElementName;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("referCallingSearchSpaceName", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("referCallingSearchSpaceId", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("Item9ElementName")]
        public string Item9;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public Item9ChoiceType1 Item9ElementName;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool mtpRequired;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool mtpRequiredSpecified;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string destinationaddress;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool destAddrIsSRV;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool destAddrIsSRVSpecified;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, DataType = "integer")]
        [System.ComponentModel.DefaultValueAttribute("0")]
        public string destinationport = "0";

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("securityProfileName", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("securityProfileId", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("Item10ElementName")]
        public string Item10;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public Item10ChoiceType2 Item10ElementName;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string tkSipCodec;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string OutgoingTransportType;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public UpdateSIPTrunkReqSigDigits sigDigits;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string connectedNamePresentation;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string connectedPartyIdPresentation;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string callingPartySelection;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string callingname;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string callingLineIdPresentation;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string prefixDN;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string callerName;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string callerIdDN;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool acceptInboundRDNIS;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool acceptInboundRDNISSpecified;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool acceptOutboundRDNIS;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool acceptOutboundRDNISSpecified;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0", IncludeInSchema = false)]
    public enum Item1ChoiceType14
    {

        /// <remarks/>
        callingSearchSpaceId,

        /// <remarks/>
        callingSearchSpaceName,
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0", IncludeInSchema = false)]
    public enum Item2ChoiceType8
    {

        /// <remarks/>
        devicePoolName,

        /// <remarks/>
        devicePoolId,
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0", IncludeInSchema = false)]
    public enum Item3ChoiceType6
    {

        /// <remarks/>
        locationName,

        /// <remarks/>
        locationId,
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0", IncludeInSchema = false)]
    public enum Item4ChoiceType5
    {

        /// <remarks/>
        mediaResourceListId,

        /// <remarks/>
        mediaResourceListName,
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0", IncludeInSchema = false)]
    public enum Item5ChoiceType4
    {

        /// <remarks/>
        automatedAlternateRoutingCSSId,

        /// <remarks/>
        automatedAlternateRoutingCSSName,
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0", IncludeInSchema = false)]
    public enum Item6ChoiceType4
    {

        /// <remarks/>
        aarNeighborhoodName,

        /// <remarks/>
        aarNeighborhoodId,
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0", IncludeInSchema = false)]
    public enum Item7ChoiceType3
    {

        /// <remarks/>
        subscribeCallingSearchSpaceId,

        /// <remarks/>
        subscribeCallingSearchSpaceName,
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0", IncludeInSchema = false)]
    public enum Item8ChoiceType1
    {

        /// <remarks/>
        rerouteCallingSearchSpaceName,

        /// <remarks/>
        rerouteCallingSearchSpaceId,
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0", IncludeInSchema = false)]
    public enum Item9ChoiceType1
    {

        /// <remarks/>
        referCallingSearchSpaceName,

        /// <remarks/>
        referCallingSearchSpaceId,
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0", IncludeInSchema = false)]
    public enum Item10ChoiceType2
    {

        /// <remarks/>
        securityProfileName,

        /// <remarks/>
        securityProfileId,
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("updateDeviceMobilityGroup", Namespace = "http://www.cisco.com/AXL/API/1.0", IsNullable = false)]
    public class UpdateDeviceMobilityGroupReq : NameAndGUIDRequest
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string newName;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable = true)]
        public string description;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("updateUserGroup", Namespace = "http://www.cisco.com/AXL/API/1.0", IsNullable = false)]
    public class UpdateUserGroupReq : NameAndGUIDRequest
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string newName;

        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable = true)]
        [System.Xml.Serialization.XmlArrayItemAttribute("member", Form = System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable = false)]
        public XUserGroupMember[] members;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class UpdateDDIReq : NameAndGUIDRequest
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, DataType = "Name")]
        public string newName;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("dialPlanName", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("dialPlanId", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("Item1ElementName")]
        public string Item1;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public Item1ChoiceType13 Item1ElementName;

        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute("member", Form = System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable = false)]
        public XDigitDiscardInstructionMember[] members;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0", IncludeInSchema = false)]
    public enum Item1ChoiceType13
    {

        /// <remarks/>
        dialPlanName,

        /// <remarks/>
        dialPlanId,
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("updateCallManagerGroup", Namespace = "http://www.cisco.com/AXL/API/1.0", IsNullable = false)]
    public class UpdateCallManagerGroupReq : NameAndGUIDRequest
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string newName;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool tftpDefault;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool tftpDefaultSpecified;

        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute("member", Form = System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable = false)]
        public XCallManagerMember[] members;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("updateRouteFilter", Namespace = "http://www.cisco.com/AXL/API/1.0", IsNullable = false)]
    public class UpdateRouteFilterReq : NameAndGUIDRequest
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string newName;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("dialPlanName", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified, DataType = "Name")]
        [System.Xml.Serialization.XmlElementAttribute("dialPlanId", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("Item1ElementName")]
        public string Item1;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public Item1ChoiceType12 Item1ElementName;

        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute("member", Form = System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable = false)]
        public XRouteFilterMember[] members;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0", IncludeInSchema = false)]
    public enum Item1ChoiceType12
    {

        /// <remarks/>
        dialPlanName,

        /// <remarks/>
        dialPlanId,
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("updateVoiceMailPort", Namespace = "http://www.cisco.com/AXL/API/1.0", IsNullable = false)]
    public class UpdateVoiceMailPortReq : NameAndGUIDRequest
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string newName;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string description;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("callingSearchSpaceId", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("callingSearchSpaceName", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified, DataType = "Name")]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("Item1ElementName")]
        public string Item1;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public Item1ChoiceType11 Item1ElementName;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("devicePoolName", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("devicePoolId", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("Item2ElementName")]
        public string Item2;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public Item2ChoiceType7 Item2ElementName;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("locationName", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified, DataType = "Name")]
        [System.Xml.Serialization.XmlElementAttribute("locationId", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("Item3ElementName")]
        public string Item3;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public Item3ChoiceType5 Item3ElementName;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("mediaResourceListId", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("mediaResourceListName", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified, DataType = "Name")]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("Item4ElementName")]
        public string Item4;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public Item4ChoiceType4 Item4ElementName;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("automatedAlternateRoutingCSSId", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("automatedAlternateRoutingCSSName", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("Item5ElementName")]
        public string Item5;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public Item5ChoiceType3 Item5ElementName;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("aarNeighborhoodName", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("aarNeighborhoodId", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("Item6ElementName")]
        public string Item6;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public Item6ChoiceType3 Item6ElementName;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XLoadInformation loadInformation;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XVendorConfig vendorConfig;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool traceFlag;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool traceFlagSpecified;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("securityProfileName", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("securityProfileId", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("Item7ElementName")]
        public string Item7;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public Item7ChoiceType2 Item7ElementName;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable = true)]
        public XLine line;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0", IncludeInSchema = false)]
    public enum Item1ChoiceType11
    {

        /// <remarks/>
        callingSearchSpaceId,

        /// <remarks/>
        callingSearchSpaceName,
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0", IncludeInSchema = false)]
    public enum Item2ChoiceType7
    {

        /// <remarks/>
        devicePoolName,

        /// <remarks/>
        devicePoolId,
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0", IncludeInSchema = false)]
    public enum Item3ChoiceType5
    {

        /// <remarks/>
        locationName,

        /// <remarks/>
        locationId,
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0", IncludeInSchema = false)]
    public enum Item4ChoiceType4
    {

        /// <remarks/>
        mediaResourceListId,

        /// <remarks/>
        mediaResourceListName,
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0", IncludeInSchema = false)]
    public enum Item5ChoiceType3
    {

        /// <remarks/>
        automatedAlternateRoutingCSSId,

        /// <remarks/>
        automatedAlternateRoutingCSSName,
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0", IncludeInSchema = false)]
    public enum Item6ChoiceType3
    {

        /// <remarks/>
        aarNeighborhoodName,

        /// <remarks/>
        aarNeighborhoodId,
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0", IncludeInSchema = false)]
    public enum Item7ChoiceType2
    {

        /// <remarks/>
        securityProfileName,

        /// <remarks/>
        securityProfileId,
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("updateLocation", Namespace = "http://www.cisco.com/AXL/API/1.0", IsNullable = false)]
    public class UpdateLocationReq : NameAndGUIDRequest
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string newName;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, DataType = "nonNegativeInteger")]
        public string kbits;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, DataType = "nonNegativeInteger")]
        public string videoKbits;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("updateTimeSchedule", Namespace = "http://www.cisco.com/AXL/API/1.0", IsNullable = false)]
    public class UpdateTimeScheduleReq : NameAndGUIDRequest
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string newName;

        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute("member", Form = System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable = false)]
        public XTimeScheduleTimePeriod[] members;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("updateGatekeeper", Namespace = "http://www.cisco.com/AXL/API/1.0", IsNullable = false)]
    public class UpdateGatekeeperReq : NameAndGUIDRequest
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string newName;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string description;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, DataType = "nonNegativeInteger")]
        public string rrqTimeToLive;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, DataType = "nonNegativeInteger")]
        public string retryTimeout;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool enableDevice;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool enableDeviceSpecified;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("updateProcessNode", Namespace = "http://www.cisco.com/AXL/API/1.0", IsNullable = false)]
    public class UpdateProcessNodeReq : NameAndGUIDRequest
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, DataType = "Name")]
        public string newName;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string description;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string mac;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("updateCommonDeviceConfig", Namespace = "http://www.cisco.com/AXL/API/1.0", IsNullable = false)]
    public class UpdateCommonDeviceConfigReq : NameAndGUIDRequest
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string newName;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("softkeyTemplateName", typeof(object), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("sofkeyTemplate", typeof(object), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("Item1ElementName")]
        public object Item1;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public Item1ChoiceType10 Item1ElementName;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, DataType = "nonNegativeInteger")]
        public string networkHoldMOHAudioSourceId;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, DataType = "nonNegativeInteger")]
        public string userHoldMOHAudioSourceId;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int mlppDomainId;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool mlppDomainIdSpecified;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string mlppIndicationStatus;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string preemption;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0", IncludeInSchema = false)]
    public enum Item1ChoiceType10
    {

        /// <remarks/>
        softkeyTemplateName,

        /// <remarks/>
        sofkeyTemplate,
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("updateGatewayEndpoint", Namespace = "http://www.cisco.com/AXL/API/1.0", IsNullable = false)]
    public class UpdateGatewayEndpointReq : NameAndGUIDRequest
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string newName;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string description;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string protocolSide;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("callingSearchSpaceId", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("callingSearchSpaceName", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified, DataType = "Name")]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("Item1ElementName")]
        public string Item1;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public Item1ChoiceType9 Item1ElementName;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("devicePoolName", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("devicePoolId", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("Item2ElementName")]
        public string Item2;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public Item2ChoiceType6 Item2ElementName;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string networkLocation;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("locationName", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified, DataType = "Name")]
        [System.Xml.Serialization.XmlElementAttribute("locationId", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("Item3ElementName")]
        public string Item3;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public Item3ChoiceType4 Item3ElementName;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("mediaResourceListId", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("mediaResourceListName", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified, DataType = "Name")]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("Item4ElementName")]
        public string Item4;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public Item4ChoiceType3 Item4ElementName;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, DataType = "nonNegativeInteger")]
        public string networkHoldMOHAudioSourceId;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, DataType = "nonNegativeInteger")]
        public string userHoldMOHAudioSourceId;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("automatedAlternateRoutingCSSId", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("automatedAlternateRoutingCSSName", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("Item5ElementName")]
        public string Item5;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public Item5ChoiceType2 Item5ElementName;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("aarNeighborhoodName", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("aarNeighborhoodId", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("Item6ElementName")]
        public string Item6;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public Item6ChoiceType2 Item6ElementName;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XLoadInformation loadInformation;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XVendorConfig vendorConfig;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool traceFlag;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool traceFlagSpecified;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int mlppDomainId;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool mlppDomainIdSpecified;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string mlppIndicationStatus;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string preemption;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable = true)]
        public string country;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string packetCaptureMode;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, DataType = "positiveInteger")]
        public string packetCaptureDuration;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("pri", typeof(UpdateGatewayEndpointReqPri), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("analog", typeof(UpdateGatewayEndpointReqAnalog), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("bri", typeof(UpdateGatewayEndpointReqBri), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("t1", typeof(UpdateGatewayEndpointReqT1), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public object Item7;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0", IncludeInSchema = false)]
    public enum Item1ChoiceType9
    {

        /// <remarks/>
        callingSearchSpaceId,

        /// <remarks/>
        callingSearchSpaceName,
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0", IncludeInSchema = false)]
    public enum Item2ChoiceType6
    {

        /// <remarks/>
        devicePoolName,

        /// <remarks/>
        devicePoolId,
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0", IncludeInSchema = false)]
    public enum Item3ChoiceType4
    {

        /// <remarks/>
        locationName,

        /// <remarks/>
        locationId,
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0", IncludeInSchema = false)]
    public enum Item4ChoiceType3
    {

        /// <remarks/>
        mediaResourceListId,

        /// <remarks/>
        mediaResourceListName,
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0", IncludeInSchema = false)]
    public enum Item5ChoiceType2
    {

        /// <remarks/>
        automatedAlternateRoutingCSSId,

        /// <remarks/>
        automatedAlternateRoutingCSSName,
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0", IncludeInSchema = false)]
    public enum Item6ChoiceType2
    {

        /// <remarks/>
        aarNeighborhoodName,

        /// <remarks/>
        aarNeighborhoodId,
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(UpdateH323PhoneReq))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(UpdateH323GatewayReq))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(UpdateH323TrunkReq))]
    public class UpdateH323DeviceReq : NameAndGUIDRequest
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string newName;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string description;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("callingSearchSpaceId", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("callingSearchSpaceName", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("Item1ElementName")]
        public string Item1;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public Item1ChoiceType8 Item1ElementName;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("devicePoolName", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("devicePoolId", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("Item2ElementName")]
        public string Item2;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public Item2ChoiceType5 Item2ElementName;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string networkLocation;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("locationName", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("locationId", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("Item3ElementName")]
        public string Item3;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public Item3ChoiceType3 Item3ElementName;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("mediaResourceListId", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("mediaResourceListName", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("Item4ElementName")]
        public string Item4;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public Item4ChoiceType2 Item4ElementName;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, DataType = "nonNegativeInteger")]
        public string networkHoldMOHAudioSourceId;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, DataType = "nonNegativeInteger")]
        public string userHoldMOHAudioSourceId;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("automatedAlternateRoutingCSSId", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("automatedAlternateRoutingCSSName", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("Item5ElementName")]
        public string Item5;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public Item5ChoiceType1 Item5ElementName;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("aarNeighborhoodName", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("aarNeighborhoodId", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("Item6ElementName")]
        public string Item6;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public Item6ChoiceType1 Item6ElementName;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool retryVideoCallAsAudio;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool retryVideoCallAsAudioSpecified;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable = true)]
        public string packetCaptureMode;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, DataType = "positiveInteger", IsNullable = true)]
        public string packetCaptureDuration;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool srtpAllowed;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool srtpAllowedSpecified;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool waitForFarEndH245TerminalSet;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool waitForFarEndH245TerminalSetSpecified;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool mtpRequired;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool mtpRequiredSpecified;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string callerIdDN;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string callingPartySelection;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string callingLineIdPresentation;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool displayIEDelivery;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool displayIEDeliverySpecified;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool redirectOutboundNumberIE;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool redirectOutboundNumberIESpecified;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool redirectInboundNumberIE;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool redirectInboundNumberIESpecified;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool enableInboundFaststart;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool enableInboundFaststartSpecified;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool enableOutboundFaststart;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool enableOutboundFaststartSpecified;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string codecForOutboundFaststart;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0", IncludeInSchema = false)]
    public enum Item1ChoiceType8
    {

        /// <remarks/>
        callingSearchSpaceId,

        /// <remarks/>
        callingSearchSpaceName,
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0", IncludeInSchema = false)]
    public enum Item2ChoiceType5
    {

        /// <remarks/>
        devicePoolName,

        /// <remarks/>
        devicePoolId,
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0", IncludeInSchema = false)]
    public enum Item3ChoiceType3
    {

        /// <remarks/>
        locationName,

        /// <remarks/>
        locationId,
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0", IncludeInSchema = false)]
    public enum Item4ChoiceType2
    {

        /// <remarks/>
        mediaResourceListId,

        /// <remarks/>
        mediaResourceListName,
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0", IncludeInSchema = false)]
    public enum Item5ChoiceType1
    {

        /// <remarks/>
        automatedAlternateRoutingCSSId,

        /// <remarks/>
        automatedAlternateRoutingCSSName,
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0", IncludeInSchema = false)]
    public enum Item6ChoiceType1
    {

        /// <remarks/>
        aarNeighborhoodName,

        /// <remarks/>
        aarNeighborhoodId,
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("updateH323Phone", Namespace = "http://www.cisco.com/AXL/API/1.0", IsNullable = false)]
    public class UpdateH323PhoneReq : UpdateH323DeviceReq
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string hlogStatus;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("subscribeCallingSearchSpaceId", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("subscribeCallingSearchSpaceName", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("Item7ElementName")]
        public string Item7;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public Item7ChoiceType1 Item7ElementName;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string ownerUserId;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, DataType = "nonNegativeInteger")]
        public string signalingPort;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public UpdateH323PhoneReqGatekeeperInfo gatekeeperInfo;

        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute("line", Form = System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable = false)]
        public XLine[] lines;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(false)]
        public bool ignorePresentationIndicators = false;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0", IncludeInSchema = false)]
    public enum Item7ChoiceType1
    {

        /// <remarks/>
        subscribeCallingSearchSpaceId,

        /// <remarks/>
        subscribeCallingSearchSpaceName,
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(UpdateH323TrunkReq))]
    [System.Xml.Serialization.XmlRootAttribute("updateH323Gateway", Namespace = "http://www.cisco.com/AXL/API/1.0", IsNullable = false)]
    public class UpdateH323GatewayReq : UpdateH323DeviceReq
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public UpdateH323GatewayReqSignificantDigits significantDigits;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string prefixDN;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string calledPartyIENumberType;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string callingPartyIENumberType;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string calledNumberingPlan;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string callingNumberingPlan;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("updateH323Trunk", Namespace = "http://www.cisco.com/AXL/API/1.0", IsNullable = false)]
    public class UpdateH323TrunkReq : UpdateH323GatewayReq
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string tunneledProtocol;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(false)]
        public bool pathReplacementSupport = false;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("remoteServerInfo", typeof(UpdateH323TrunkReqRemoteServerInfo), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("gatekeeperInfo", typeof(UpdateH323TrunkReqGatekeeperInfo), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public object Item7;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool ictPassingPrecedenceLevelThroughUUIE;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ictPassingPrecedenceLevelThroughUUIESpecified;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, DataType = "nonNegativeInteger")]
        public string ictSecurityAccessLevel;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("updateTimePeriod", Namespace = "http://www.cisco.com/AXL/API/1.0", IsNullable = false)]
    public class UpdateTimePeriodReq : NameAndGUIDRequest
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string newName;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string startTime;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string endTime;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string startDay;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string endDay;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string monthOfYear;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, DataType = "nonNegativeInteger")]
        public string dayOfMonth;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("updateCallManager", Namespace = "http://www.cisco.com/AXL/API/1.0", IsNullable = false)]
    public class UpdateCallManagerReq : NameAndGUIDRequest
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string newName;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string description;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public UpdateCallManagerReqAutoRegistration autoRegistration;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public UpdateCallManagerReqPorts ports;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class UpdateDialPlanTagReq : NameAndGUIDRequest
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, DataType = "Name")]
        public string newName;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("dialPlanName", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("dialPlan", typeof(XDialPlan), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public object Item1;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XOperator @operator;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool operatorSpecified;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool suppressFromRouteFilter;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool suppressFromRouteFilterSpecified;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("updateMediaResourceList", Namespace = "http://www.cisco.com/AXL/API/1.0", IsNullable = false)]
    public class UpdateMediaResourceListReq : NameAndGUIDRequest
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string newName;

        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute("member", Form = System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable = false)]
        public XMediaResourceListMember[] members;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("updateMediaResourceGroup", Namespace = "http://www.cisco.com/AXL/API/1.0", IsNullable = false)]
    public class UpdateMediaResourceGroupReq : NameAndGUIDRequest
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string newName;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string description;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool multicast;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool multicastSpecified;

        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute("member", Form = System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable = false)]
        public XMediaResourceGroupMember[] members;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class UpdateDialPlanReq : NameAndGUIDRequest
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string newName;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string description;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("updateDeviceMobility", Namespace = "http://www.cisco.com/AXL/API/1.0", IsNullable = false)]
    public class UpdateDeviceMobilityReq : NameAndGUIDRequest
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string newName;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string subNet;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, DataType = "nonNegativeInteger")]
        public string subNetMaskSz;

        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute("members", Form = System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable = false)]
        public XDevicePoolDeviceMobility[] members;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("getSIPRealm", Namespace = "http://www.cisco.com/AXL/API/1.0", IsNullable = false)]
    public class GetSIPRealmReq : APIRequest
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("realm", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("uuid", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")]
        public string Item;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public ItemChoiceType54 ItemElementName;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0", IncludeInSchema = false)]
    public enum ItemChoiceType54
    {

        /// <remarks/>
        realm,

        /// <remarks/>
        uuid,
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(UpdateMOHAudioSourceReq))]
    [System.Xml.Serialization.XmlRootAttribute("getMOHAudioSource", Namespace = "http://www.cisco.com/AXL/API/1.0", IsNullable = false)]
    public class GetMOHAudioSourceByIDAndSourceReq : APIRequest
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("sourceId", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified, DataType = "nonNegativeInteger")]
        [System.Xml.Serialization.XmlElementAttribute("uuid", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")]
        public string Item;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public ItemChoiceType53 ItemElementName;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0", IncludeInSchema = false)]
    public enum ItemChoiceType53
    {

        /// <remarks/>
        sourceId,

        /// <remarks/>
        uuid,
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("updateMOHAudioSource", Namespace = "http://www.cisco.com/AXL/API/1.0", IsNullable = false)]
    public class UpdateMOHAudioSourceReq : GetMOHAudioSourceByIDAndSourceReq
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string name;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string sourceFile;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool multicast;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool multicastSpecified;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool repeat;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool repeatSpecified;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("addH323Phone", Namespace = "http://www.cisco.com/AXL/API/1.0", IsNullable = false)]
    public class AddH323PhoneReq : APIRequest
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XH323Phone phone;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("addLine", Namespace = "http://www.cisco.com/AXL/API/1.0", IsNullable = false)]
    public class AddLineReq : APIRequest
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XNPDirectoryNumber newLine;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("updateRouteList", Namespace = "http://www.cisco.com/AXL/API/1.0", IsNullable = false)]
    public class UpdateRouteListReq : APIRequest
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("name", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("uuid", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")]
        public string Item;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public ItemChoiceType52 ItemElementName;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string newName;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string description;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("callManagerGroupName", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("callManagerGroup", typeof(XCallManagerGroup), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public object Item1;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool routeListEnabled;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool routeListEnabledSpecified;

        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute("member", Form = System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable = false)]
        public XRouteListMember[] members;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0", IncludeInSchema = false)]
    public enum ItemChoiceType52
    {

        /// <remarks/>
        name,

        /// <remarks/>
        uuid,
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("updateAttendantConsoleUser", Namespace = "http://www.cisco.com/AXL/API/1.0", IsNullable = false)]
    public class UpdateAttendantConsoleUserReq : APIRequest
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("userId", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("uuid", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")]
        public string Item;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public ItemChoiceType51 ItemElementName;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public object newUserId;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable = true)]
        public string password;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0", IncludeInSchema = false)]
    public enum ItemChoiceType51
    {

        /// <remarks/>
        userId,

        /// <remarks/>
        uuid,
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("addRoutePattern", Namespace = "http://www.cisco.com/AXL/API/1.0", IsNullable = false)]
    public class AddRoutePatternReq : APIRequest
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XNPRoutePattern newPattern;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("addMediaResourceGroup", Namespace = "http://www.cisco.com/AXL/API/1.0", IsNullable = false)]
    public class AddMediaResourceGroupReq : APIRequest
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XMediaResourceGroup mediaResourceGroup;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("updateRouteGroup", Namespace = "http://www.cisco.com/AXL/API/1.0", IsNullable = false)]
    public class UpdateRouteGroupReq : APIRequest
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("name", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("uuid", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")]
        public string Item;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public ItemChoiceType50 ItemElementName;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string newName;

        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute("member", Form = System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable = false)]
        public XRouteGroupMember[] members;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0", IncludeInSchema = false)]
    public enum ItemChoiceType50
    {

        /// <remarks/>
        name,

        /// <remarks/>
        uuid,
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("removeMGCP", Namespace = "http://www.cisco.com/AXL/API/1.0", IsNullable = false)]
    public class RemoveMGCPReq : APIRequest
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("uuid", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("domainName", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")]
        public string Item;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public ItemChoiceType49 ItemElementName;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0", IncludeInSchema = false)]
    public enum ItemChoiceType49
    {

        /// <remarks/>
        uuid,

        /// <remarks/>
        domainName,
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(RemoveCallPickupGroupReq))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(GetCallPickupGroupReq))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(UpdateCallPickupGroupReq))]
    public abstract class GetCallPickupGroup : APIRequest
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string uuid;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string name;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string pattern;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("routePartitionId", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("routePartitionName", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")]
        public string Item;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public ItemChoiceType48 ItemElementName;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("routeFilterId", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("routeFilterName", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("Item1ElementName")]
        public string Item1;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public Item1ChoiceType7 Item1ElementName;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0", IncludeInSchema = false)]
    public enum ItemChoiceType48
    {

        /// <remarks/>
        routePartitionId,

        /// <remarks/>
        routePartitionName,
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0", IncludeInSchema = false)]
    public enum Item1ChoiceType7
    {

        /// <remarks/>
        routeFilterId,

        /// <remarks/>
        routeFilterName,
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("removeCallPickupGroup", Namespace = "http://www.cisco.com/AXL/API/1.0", IsNullable = false)]
    public class RemoveCallPickupGroupReq : GetCallPickupGroup
    {
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("getCallPickupGroup", Namespace = "http://www.cisco.com/AXL/API/1.0", IsNullable = false)]
    public class GetCallPickupGroupReq : GetCallPickupGroup
    {
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("updateCallPickupGroup", Namespace = "http://www.cisco.com/AXL/API/1.0", IsNullable = false)]
    public class UpdateCallPickupGroupReq : GetCallPickupGroup
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string newPattern;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string description;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("newRoutePartitionId", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("newRoutePartitionName", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("Item2ElementName")]
        public string Item2;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public Item2ChoiceType4 Item2ElementName;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string newName;

        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute("member", Form = System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable = false)]
        public XPickupGroupMember[] members;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(XPickupNotification.NoAlert)]
        public XPickupNotification pickupNotification = XPickupNotification.NoAlert;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, DataType = "nonNegativeInteger")]
        [System.ComponentModel.DefaultValueAttribute("6")]
        public string pickupNotificationTimer = "6";

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public UpdateCallPickupGroupReqCallInfoForPickupNotification callInfoForPickupNotification;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0", IncludeInSchema = false)]
    public enum Item2ChoiceType4
    {

        /// <remarks/>
        newRoutePartitionId,

        /// <remarks/>
        newRoutePartitionName,
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("addCallPark", Namespace = "http://www.cisco.com/AXL/API/1.0", IsNullable = false)]
    public class AddCallParkReq : APIRequest
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XNPCallPark callPark;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("getAttendantConsoleUser", Namespace = "http://www.cisco.com/AXL/API/1.0", IsNullable = false)]
    public class GetAttendantConsoleUserReq : APIRequest
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("userId", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("uuid", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")]
        public string Item;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public ItemChoiceType47 ItemElementName;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0", IncludeInSchema = false)]
    public enum ItemChoiceType47
    {

        /// <remarks/>
        userId,

        /// <remarks/>
        uuid,
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class AddDDIReq : APIRequest
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XDigitDiscardInstruction ddi;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("listServiceParameters", Namespace = "http://www.cisco.com/AXL/API/1.0", IsNullable = false)]
    public class ListServiceParametersReq : APIRequest
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string nodeName;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string serviceType;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("addDeviceProfile", Namespace = "http://www.cisco.com/AXL/API/1.0", IsNullable = false)]
    public class AddDeviceProfileReq : APIRequest
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XPhoneProfile newProfile;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("addCTIRoutePoint", Namespace = "http://www.cisco.com/AXL/API/1.0", IsNullable = false)]
    public class AddCTIRoutePointReq : APIRequest
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XCTIRoutePoint routePoint;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("addRecordingProfile", Namespace = "http://www.cisco.com/AXL/API/1.0", IsNullable = false)]
    public class AddRecordingProfileReq : APIRequest
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XRecordingProfile newRecordingProfile;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("removeConferenceBridge", Namespace = "http://www.cisco.com/AXL/API/1.0", IsNullable = false)]
    public class RemoveConferenceBridgeReq : APIRequest
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("name", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("uuid", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")]
        public string Item;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public ItemChoiceType46 ItemElementName;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0", IncludeInSchema = false)]
    public enum ItemChoiceType46
    {

        /// <remarks/>
        name,

        /// <remarks/>
        uuid,
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("addRouteFilter", Namespace = "http://www.cisco.com/AXL/API/1.0", IsNullable = false)]
    public class AddRouteFilterReq : APIRequest
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XRouteFilter routeFilter;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("updateLineGroup", Namespace = "http://www.cisco.com/AXL/API/1.0", IsNullable = false)]
    public class UpdateLineGroupReq : APIRequest
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("name", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("uuid", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")]
        public string Item;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public ItemChoiceType45 ItemElementName;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string newName;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string distributionAlgorithm;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, DataType = "nonNegativeInteger")]
        [System.ComponentModel.DefaultValueAttribute("10")]
        public string rnaReversionTimeOut = "10";

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string huntAlgorithmNoAnswer;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string huntAlgorithmBusy;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string huntAlgorithmNotAvailable;

        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute("member", Form = System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable = false)]
        public XLineGroupMember[] members;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0", IncludeInSchema = false)]
    public enum ItemChoiceType45
    {

        /// <remarks/>
        name,

        /// <remarks/>
        uuid,
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ListPhoneByNameReq))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ListDeviceByNameAndClassReq))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ListDeviceByServiceNameReq))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ListPhoneByDescriptionReq))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ListCSSByNameReq))]
    [System.Xml.Serialization.XmlRootAttribute("listRoutePartitionByName", Namespace = "http://www.cisco.com/AXL/API/1.0", IsNullable = false)]
    public class ListBySearchString : APIRequest
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string searchString;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("listPhoneByName", Namespace = "http://www.cisco.com/AXL/API/1.0", IsNullable = false)]
    public class ListPhoneByNameReq : ListBySearchString
    {
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("listDeviceByNameAndClass", Namespace = "http://www.cisco.com/AXL/API/1.0", IsNullable = false)]
    public class ListDeviceByNameAndClassReq : ListBySearchString
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string @class;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class ListDeviceByServiceNameReq : ListBySearchString
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string serviceName;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("listPhoneByDescription", Namespace = "http://www.cisco.com/AXL/API/1.0", IsNullable = false)]
    public class ListPhoneByDescriptionReq : ListBySearchString
    {
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("listCSSByName", Namespace = "http://www.cisco.com/AXL/API/1.0", IsNullable = false)]
    public class ListCSSByNameReq : ListBySearchString
    {
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("doDeviceLogout", Namespace = "http://www.cisco.com/AXL/API/1.0", IsNullable = false)]
    public class DeviceLogoutReq : APIRequest
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("deviceId", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("deviceName", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")]
        public string Item;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public ItemChoiceType44 ItemElementName;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0", IncludeInSchema = false)]
    public enum ItemChoiceType44
    {

        /// <remarks/>
        deviceId,

        /// <remarks/>
        deviceName,
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("addFACInfo", Namespace = "http://www.cisco.com/AXL/API/1.0", IsNullable = false)]
    public class AddFACInfoReq : APIRequest
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XFACInfo facInfo;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("updateAppUser", Namespace = "http://www.cisco.com/AXL/API/1.0", IsNullable = false)]
    public class UpdateAppUserReq : APIRequest
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string userid;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string password;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable = true)]
        public string digestCredentials;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("addHuntPilot", Namespace = "http://www.cisco.com/AXL/API/1.0", IsNullable = false)]
    public class AddHuntPilotReq : APIRequest
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XNPHuntPilot newPattern;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("addAttendantConsoleUser", Namespace = "http://www.cisco.com/AXL/API/1.0", IsNullable = false)]
    public class AddAttendantConsoleUserReq : APIRequest
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XPilotUser pilotUser;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("updateAttendantConsoleHuntGroup", Namespace = "http://www.cisco.com/AXL/API/1.0", IsNullable = false)]
    public class UpdateAttendantConsoleHuntGroupReq : APIRequest
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("pilotPointId", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("pilotPointName", typeof(object), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public object Item;

        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute("member", Form = System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable = false)]
        public XPilotHuntGroupMember[] members;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("removeMGCPSubunit", Namespace = "http://www.cisco.com/AXL/API/1.0", IsNullable = false)]
    public class RemoveMGCPSubunitReq : APIRequest
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("uuid", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("domainName", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")]
        public string Item;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public ItemChoiceType43 ItemElementName;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public RemoveMGCPSubunitReqUnit unit;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public RemoveMGCPSubunitReqSubunit subunit;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0", IncludeInSchema = false)]
    public enum ItemChoiceType43
    {

        /// <remarks/>
        uuid,

        /// <remarks/>
        domainName,
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("addVoiceMailProfile", Namespace = "http://www.cisco.com/AXL/API/1.0", IsNullable = false)]
    public class AddVoiceMailProfileReq : APIRequest
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XVoiceMailProfile voiceMailProfile;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("getLicenseCapabilities", Namespace = "http://www.cisco.com/AXL/API/1.0", IsNullable = false)]
    public class GetLicenseCapabilitiesReq : APIRequest
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string userid;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("addMOHServer", Namespace = "http://www.cisco.com/AXL/API/1.0", IsNullable = false)]
    public class AddMOHServerReq : APIRequest
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XMOHServer mohServer;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("updateSIPRealm", Namespace = "http://www.cisco.com/AXL/API/1.0", IsNullable = false)]
    public class UpdateSIPRealmReq : APIRequest
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("realm", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("uuid", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")]
        public string Item;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public ItemChoiceType42 ItemElementName;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string newRealm;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string userid;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string digestCredentials;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0", IncludeInSchema = false)]
    public enum ItemChoiceType42
    {

        /// <remarks/>
        realm,

        /// <remarks/>
        uuid,
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("listRoutePlanByType", Namespace = "http://www.cisco.com/AXL/API/1.0", IsNullable = false)]
    public class ListRoutePlanByTypeReq : APIRequest
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string usage;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("addMGCPUnit", Namespace = "http://www.cisco.com/AXL/API/1.0", IsNullable = false)]
    public class AddMGCPUnitReq : APIRequest
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("uuid", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("domainName", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")]
        public string Item;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public ItemChoiceType41 ItemElementName;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XMGCPUnit unit;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0", IncludeInSchema = false)]
    public enum ItemChoiceType41
    {

        /// <remarks/>
        uuid,

        /// <remarks/>
        domainName,
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("removeAttendantConsoleUser", Namespace = "http://www.cisco.com/AXL/API/1.0", IsNullable = false)]
    public class RemoveAttendantConsoleUserReq : APIRequest
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("userId", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("uuid", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")]
        public string Item;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public ItemChoiceType40 ItemElementName;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0", IncludeInSchema = false)]
    public enum ItemChoiceType40
    {

        /// <remarks/>
        userId,

        /// <remarks/>
        uuid,
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("updatePilotPoint", Namespace = "http://www.cisco.com/AXL/API/1.0", IsNullable = false)]
    public class UpdatePilotPointReq : APIRequest
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("name", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("uuid", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")]
        public string Item;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public ItemChoiceType39 ItemElementName;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string newName;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("devicePoolName", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("devicePool", typeof(XDevicePool), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public object Item1;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("routePartitionName", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("routePartition", typeof(XRoutePartition), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public object Item2;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("callingSearchSpaceName", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified, DataType = "Name")]
        [System.Xml.Serialization.XmlElementAttribute("callingSearchSpace", typeof(XCallingSearchSpace), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public object Item3;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string pilotNumber;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool useFirstAvailable;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool useFirstAvailableSpecified;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("locationName", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("location", typeof(XLocation), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public object Item4;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0", IncludeInSchema = false)]
    public enum ItemChoiceType39
    {

        /// <remarks/>
        name,

        /// <remarks/>
        uuid,
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("getRecordingProfile", Namespace = "http://www.cisco.com/AXL/API/1.0", IsNullable = false)]
    public class GetRecordingProfileReq : APIRequest
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("name", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("uuid", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")]
        public string Item;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public ItemChoiceType38 ItemElementName;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0", IncludeInSchema = false)]
    public enum ItemChoiceType38
    {

        /// <remarks/>
        name,

        /// <remarks/>
        uuid,
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("updateDeviceProfile", Namespace = "http://www.cisco.com/AXL/API/1.0", IsNullable = false)]
    public class UpdateDeviceProfileReq : APIRequest
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("name", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("uuid", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")]
        public string Item;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public ItemChoiceType37 ItemElementName;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, DataType = "Name")]
        public string newName;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string description;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, DataType = "nonNegativeInteger")]
        public string networkHoldMOHAudioSourceId;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, DataType = "nonNegativeInteger")]
        public string userHoldMOHAudioSourceId;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int mlppDomainId;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool mlppDomainIdSpecified;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string mlppIndicationStatus;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string preemption;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("subscribeCallingSearchSpaceId", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable = true)]
        [System.Xml.Serialization.XmlElementAttribute("subscribeCallingSearchSpaceName", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable = true)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("Item1ElementName")]
        public string Item1;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public Item1ChoiceType6 Item1ElementName;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool allowCtiControlFlag;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool allowCtiControlFlagSpecified;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("presenceGroupID", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("PresenceGroupName", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("Item2ElementName")]
        public string Item2;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public Item2ChoiceType3 Item2ElementName;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public UpdateDeviceProfileReqLines lines;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("phoneTemplateId", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("phoneTemplateName", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("Item3ElementName")]
        public string Item3;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public Item3ChoiceType2 Item3ElementName;

        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute("speeddial", Form = System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable = false)]
        public XSpeeddial[] speeddials;

        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute("busyLampField", Form = System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable = false)]
        public XBusyLampField[] busyLampFields;

        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute("addOnModule", Form = System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable = false)]
        public XAddOnModule[] addOnModules;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable = true)]
        public string userLocale;

        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute("service", Form = System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable = false)]
        public XSubscribedService[] services;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("softkeyTemplateName", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("softkeyTemplateId", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("Item4ElementName")]
        public string Item4;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public Item4ChoiceType1 Item4ElementName;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string loginUserId;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(false)]
        public bool ignorePresentationIndicators = false;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0", IncludeInSchema = false)]
    public enum ItemChoiceType37
    {

        /// <remarks/>
        name,

        /// <remarks/>
        uuid,
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0", IncludeInSchema = false)]
    public enum Item1ChoiceType6
    {

        /// <remarks/>
        subscribeCallingSearchSpaceId,

        /// <remarks/>
        subscribeCallingSearchSpaceName,
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0", IncludeInSchema = false)]
    public enum Item2ChoiceType3
    {

        /// <remarks/>
        presenceGroupID,

        /// <remarks/>
        PresenceGroupName,
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0", IncludeInSchema = false)]
    public enum Item3ChoiceType2
    {

        /// <remarks/>
        phoneTemplateId,

        /// <remarks/>
        phoneTemplateName,
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0", IncludeInSchema = false)]
    public enum Item4ChoiceType1
    {

        /// <remarks/>
        softkeyTemplateName,

        /// <remarks/>
        softkeyTemplateId,
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("doAuthenticateUser", Namespace = "http://www.cisco.com/AXL/API/1.0", IsNullable = false)]
    public class AuthenticateUserReq : APIRequest
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string userid;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("pin", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("password", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")]
        public string Item;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public ItemChoiceType36 ItemElementName;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0", IncludeInSchema = false)]
    public enum ItemChoiceType36
    {

        /// <remarks/>
        pin,

        /// <remarks/>
        password,
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("addPhoneTemplate", Namespace = "http://www.cisco.com/AXL/API/1.0", IsNullable = false)]
    public class AddPhoneTemplateReq : APIRequest
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XPhoneTemplate phoneTemplate;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("addGatekeeper", Namespace = "http://www.cisco.com/AXL/API/1.0", IsNullable = false)]
    public class AddGatekeeperReq : APIRequest
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XGatekeeper gatekeeper;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("getMGCP", Namespace = "http://www.cisco.com/AXL/API/1.0", IsNullable = false)]
    public class GetMGCPReq : APIRequest
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("uuid", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("domainName", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")]
        public string Item;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public ItemChoiceType35 ItemElementName;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0", IncludeInSchema = false)]
    public enum ItemChoiceType35
    {

        /// <remarks/>
        uuid,

        /// <remarks/>
        domainName,
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("addCommonDeviceConfig", Namespace = "http://www.cisco.com/AXL/API/1.0", IsNullable = false)]
    public class AddCommonDeviceConfigReq : APIRequest
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XCommonDeviceConfig commonDeviceConfig;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("listProcessNodesByService", Namespace = "http://www.cisco.com/AXL/API/1.0", IsNullable = false)]
    public class ListProcessNodesByServiceReq : APIRequest
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string service;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("addMGCP", Namespace = "http://www.cisco.com/AXL/API/1.0", IsNullable = false)]
    public class AddMGCPReq : APIRequest
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XMGCP newMGCP;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("listUserByName", Namespace = "http://www.cisco.com/AXL/API/1.0", IsNullable = false)]
    public class ListUserByNameReq : APIRequest
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string firstname;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string lastname;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int searchLimit;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("addDeviceMobilityGroup", Namespace = "http://www.cisco.com/AXL/API/1.0", IsNullable = false)]
    public class AddDeviceMobilityGroupReq : APIRequest
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XDeviceMobilityGroup deviceMobilityGroup;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("updateRegion", Namespace = "http://www.cisco.com/AXL/API/1.0", IsNullable = false)]
    public class UpdateRegionReq : APIRequest
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("name", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("uuid", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")]
        public string Item;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public ItemChoiceType34 ItemElementName;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string newName;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0", IncludeInSchema = false)]
    public enum ItemChoiceType34
    {

        /// <remarks/>
        name,

        /// <remarks/>
        uuid,
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("addRouteList", Namespace = "http://www.cisco.com/AXL/API/1.0", IsNullable = false)]
    public class AddRouteListReq : APIRequest
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XRouteList routeList;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("addUser", Namespace = "http://www.cisco.com/AXL/API/1.0", IsNullable = false)]
    public class AddUserReq : APIRequest
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XUser newUser;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("updateLicenseCapabilities", Namespace = "http://www.cisco.com/AXL/API/1.0", IsNullable = false)]
    public class UpdateLicenseCapabilitiesReq : APIRequest
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string userid;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool enableUPS;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool enableUPSSpecified;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool enableUPC;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool enableUPCSpecified;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("updateVoiceMailPilot", Namespace = "http://www.cisco.com/AXL/API/1.0", IsNullable = false)]
    public class UpdateVoiceMailPilotReq : APIRequest
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("dirn", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable = true)]
        [System.Xml.Serialization.XmlElementAttribute("uuid", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("CSS", typeof(XCallingSearchSpace), Form = System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable = true)]
        [System.Xml.Serialization.XmlElementAttribute("CSSName", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified, DataType = "Name", IsNullable = true)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")]
        public object Item;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public ItemChoiceType33 ItemElementName;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable = true)]
        public string newdirn;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("newCSSName", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified, DataType = "Name", IsNullable = true)]
        [System.Xml.Serialization.XmlElementAttribute("newCSS", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable = true)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("Item1ElementName")]
        public string Item1;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public Item1ChoiceType5 Item1ElementName;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable = true)]
        public string description;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(false)]
        public bool isDefault = false;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0", IncludeInSchema = false)]
    public enum ItemChoiceType33
    {

        /// <remarks/>
        dirn,

        /// <remarks/>
        uuid,

        /// <remarks/>
        CSS,

        /// <remarks/>
        CSSName,
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0", IncludeInSchema = false)]
    public enum Item1ChoiceType5
    {

        /// <remarks/>
        newCSSName,

        /// <remarks/>
        newCSS,
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("addTransformationPattern", Namespace = "http://www.cisco.com/AXL/API/1.0", IsNullable = false)]
    public class AddTransformationPatternReq : APIRequest
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XNPTransformationPattern newPattern;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("getRoutePartition", Namespace = "http://www.cisco.com/AXL/API/1.0", IsNullable = false)]
    public class GetRoutePartitionReq : APIRequest
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("partitionId", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("partitionName", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")]
        public string Item;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public ItemChoiceType32 ItemElementName;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0", IncludeInSchema = false)]
    public enum ItemChoiceType32
    {

        /// <remarks/>
        partitionId,

        /// <remarks/>
        partitionName,
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("executeSQLQuery", Namespace = "http://www.cisco.com/AXL/API/1.0", IsNullable = false)]
    public class ExecuteSQLQueryReq : APIRequest
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string sql;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("addCSS", Namespace = "http://www.cisco.com/AXL/API/1.0", IsNullable = false)]
    public class AddCSSReq : APIRequest
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XCallingSearchSpace newCSS;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("updateRoutePartition", Namespace = "http://www.cisco.com/AXL/API/1.0", IsNullable = false)]
    public class UpdateRoutePartitionReq : APIRequest
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("name", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("uuid", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")]
        public string Item;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public ItemChoiceType31 ItemElementName;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string newName;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string description;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("newTimeScheduleName", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("newTimeScheduleId", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("Item1ElementName")]
        public string Item1;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public Item1ChoiceType4 Item1ElementName;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool useOriginatingDeviceTimeZone;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool useOriginatingDeviceTimeZoneSpecified;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string timeZone;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0", IncludeInSchema = false)]
    public enum ItemChoiceType31
    {

        /// <remarks/>
        name,

        /// <remarks/>
        uuid,
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0", IncludeInSchema = false)]
    public enum Item1ChoiceType4
    {

        /// <remarks/>
        newTimeScheduleName,

        /// <remarks/>
        newTimeScheduleId,
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("removeVoiceMailPilot", Namespace = "http://www.cisco.com/AXL/API/1.0", IsNullable = false)]
    public class RemoveVoiceMailPilotReq : APIRequest
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("dirn", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable = true)]
        [System.Xml.Serialization.XmlElementAttribute("uuid", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("CSS", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable = true)]
        [System.Xml.Serialization.XmlElementAttribute("CSSName", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified, DataType = "Name", IsNullable = true)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")]
        public string Item;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public ItemChoiceType30 ItemElementName;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0", IncludeInSchema = false)]
    public enum ItemChoiceType30
    {

        /// <remarks/>
        dirn,

        /// <remarks/>
        uuid,

        /// <remarks/>
        CSS,

        /// <remarks/>
        CSSName,
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("addUserGroup", Namespace = "http://www.cisco.com/AXL/API/1.0", IsNullable = false)]
    public class AddUserGroupReq : APIRequest
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XUserGroup userGroup;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("updateDevicePool", Namespace = "http://www.cisco.com/AXL/API/1.0", IsNullable = false)]
    public class UpdateDevicePoolReq : APIRequest
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("name", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("uuid", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")]
        public string Item;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public ItemChoiceType29 ItemElementName;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string newName;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("autoSearchSpaceName", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable = true)]
        [System.Xml.Serialization.XmlElementAttribute("autoSearchSpaceId", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable = true)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("Item1ElementName")]
        public string Item1;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public Item1ChoiceType3 Item1ElementName;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("dateTimeSettingId", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("dateTimeSettingName", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("Item2ElementName")]
        public string Item2;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public Item2ChoiceType2 Item2ElementName;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("callManagerGroupId", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("callManagerGroupName", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("Item3ElementName")]
        public string Item3;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public Item3ChoiceType1 Item3ElementName;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("mediaResourceListId", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable = true)]
        [System.Xml.Serialization.XmlElementAttribute("mediaResourceListName", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable = true)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("Item4ElementName")]
        public string Item4;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public Item4ChoiceType Item4ElementName;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("regionId", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("regionName", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("Item5ElementName")]
        public string Item5;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public Item5ChoiceType Item5ElementName;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string networkLocale;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("srstName", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("srstInfoId", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("Item6ElementName")]
        public string Item6;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public Item6ChoiceType Item6ElementName;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int connectionMonitorDuration;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool connectionMonitorDurationSpecified;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("automatedAlternateRoutingCSSId", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable = true)]
        [System.Xml.Serialization.XmlElementAttribute("automatedAlternateRoutingCSSName", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable = true)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("Item7ElementName")]
        public string Item7;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public Item7ChoiceType Item7ElementName;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("aarNeighborhoodName", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable = true)]
        [System.Xml.Serialization.XmlElementAttribute("aarNeighborhoodId", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable = true)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("Item8ElementName")]
        public string Item8;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public Item8ChoiceType Item8ElementName;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("locationName", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable = true)]
        [System.Xml.Serialization.XmlElementAttribute("locationId", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable = true)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("Item9ElementName")]
        public string Item9;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public Item9ChoiceType Item9ElementName;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("mobilityCSSId", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable = true)]
        [System.Xml.Serialization.XmlElementAttribute("mobilityCSSName", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable = true)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("Item10ElementName")]
        public string Item10;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public Item10ChoiceType1 Item10ElementName;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("physicalLocationId", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable = true)]
        [System.Xml.Serialization.XmlElementAttribute("physicalLocationName", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable = true)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("Item11ElementName")]
        public string Item11;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public Item11ChoiceType Item11ElementName;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("deviceMobilityGroupId", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable = true)]
        [System.Xml.Serialization.XmlElementAttribute("deviceMobilityGroupName", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable = true)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("Item12ElementName")]
        public string Item12;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public Item12ChoiceType Item12ElementName;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XRevertPriority revertPriority;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool revertPrioritySpecified;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0", IncludeInSchema = false)]
    public enum ItemChoiceType29
    {

        /// <remarks/>
        name,

        /// <remarks/>
        uuid,
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0", IncludeInSchema = false)]
    public enum Item1ChoiceType3
    {

        /// <remarks/>
        autoSearchSpaceName,

        /// <remarks/>
        autoSearchSpaceId,
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0", IncludeInSchema = false)]
    public enum Item2ChoiceType2
    {

        /// <remarks/>
        dateTimeSettingId,

        /// <remarks/>
        dateTimeSettingName,
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0", IncludeInSchema = false)]
    public enum Item3ChoiceType1
    {

        /// <remarks/>
        callManagerGroupId,

        /// <remarks/>
        callManagerGroupName,
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0", IncludeInSchema = false)]
    public enum Item4ChoiceType
    {

        /// <remarks/>
        mediaResourceListId,

        /// <remarks/>
        mediaResourceListName,
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0", IncludeInSchema = false)]
    public enum Item5ChoiceType
    {

        /// <remarks/>
        regionId,

        /// <remarks/>
        regionName,
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0", IncludeInSchema = false)]
    public enum Item6ChoiceType
    {

        /// <remarks/>
        srstName,

        /// <remarks/>
        srstInfoId,
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0", IncludeInSchema = false)]
    public enum Item7ChoiceType
    {

        /// <remarks/>
        automatedAlternateRoutingCSSId,

        /// <remarks/>
        automatedAlternateRoutingCSSName,
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0", IncludeInSchema = false)]
    public enum Item8ChoiceType
    {

        /// <remarks/>
        aarNeighborhoodName,

        /// <remarks/>
        aarNeighborhoodId,
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0", IncludeInSchema = false)]
    public enum Item9ChoiceType
    {

        /// <remarks/>
        locationName,

        /// <remarks/>
        locationId,
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0", IncludeInSchema = false)]
    public enum Item10ChoiceType1
    {

        /// <remarks/>
        mobilityCSSId,

        /// <remarks/>
        mobilityCSSName,
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0", IncludeInSchema = false)]
    public enum Item11ChoiceType
    {

        /// <remarks/>
        physicalLocationId,

        /// <remarks/>
        physicalLocationName,
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0", IncludeInSchema = false)]
    public enum Item12ChoiceType
    {

        /// <remarks/>
        deviceMobilityGroupId,

        /// <remarks/>
        deviceMobilityGroupName,
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(UpdateProcessNodeServiceReq))]
    [System.Xml.Serialization.XmlRootAttribute("getProcessNodeService", Namespace = "http://www.cisco.com/AXL/API/1.0", IsNullable = false)]
    public class GetProcessNodeServiceReq : APIRequest
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("uuid", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("processNodeId", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("processNodeName", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("service", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")]
        public string Item;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public ItemChoiceType28 ItemElementName;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0", IncludeInSchema = false)]
    public enum ItemChoiceType28
    {

        /// <remarks/>
        uuid,

        /// <remarks/>
        processNodeId,

        /// <remarks/>
        processNodeName,

        /// <remarks/>
        service,
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("updateProcessNodeService", Namespace = "http://www.cisco.com/AXL/API/1.0", IsNullable = false)]
    public class UpdateProcessNodeServiceReq : GetProcessNodeServiceReq
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable = true)]
        public string fileName;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, DataType = "nonNegativeInteger")]
        public string traceLevel;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, DataType = "nonNegativeInteger")]
        public string userCategories;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool enable;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool enableSpecified;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, DataType = "nonNegativeInteger")]
        public string numFiles;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, DataType = "nonNegativeInteger")]
        public string numLines;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, DataType = "nonNegativeInteger")]
        public string numMinutes;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool includeNonDeviceTraces;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool includeNonDeviceTracesSpecified;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool useXML;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool useXMLSpecified;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable = true)]
        public string serverName;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool deviceNameMonitorFlag;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool deviceNameMonitorFlagSpecified;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool deviceTypeMonitorFlag;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool deviceTypeMonitorFlagSpecified;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool fileTraceFlag;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool fileTraceFlagSpecified;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool outputDebugStringFlag;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool outputDebugStringFlagSpecified;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("addTimeSchedule", Namespace = "http://www.cisco.com/AXL/API/1.0", IsNullable = false)]
    public class AddTimeScheduleReq : APIRequest
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XTimeSchedule timeSchedule;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("updateCSS", Namespace = "http://www.cisco.com/AXL/API/1.0", IsNullable = false)]
    public class UpdateCSSReq : APIRequest
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("name", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("uuid", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")]
        public string Item;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public ItemChoiceType27 ItemElementName;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string newName;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string description;

        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute("member", Form = System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable = false)]
        public XCallingSearchSpaceMember[] members;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0", IncludeInSchema = false)]
    public enum ItemChoiceType27
    {

        /// <remarks/>
        name,

        /// <remarks/>
        uuid,
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("removeDeviceProfile", Namespace = "http://www.cisco.com/AXL/API/1.0", IsNullable = false)]
    public class RemoveDeviceProfileReq : APIRequest
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("profileName", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("profileId", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")]
        public string Item;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public ItemChoiceType26 ItemElementName;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0", IncludeInSchema = false)]
    public enum ItemChoiceType26
    {

        /// <remarks/>
        profileName,

        /// <remarks/>
        profileId,
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("addTransPattern", Namespace = "http://www.cisco.com/AXL/API/1.0", IsNullable = false)]
    public class AddTransPatternReq : APIRequest
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XNPTranslationPattern newPattern;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("addConferenceBridge", Namespace = "http://www.cisco.com/AXL/API/1.0", IsNullable = false)]
    public class AddConferenceBridgeReq : APIRequest
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XConferenceBridge newCFB;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("addPilotPoint", Namespace = "http://www.cisco.com/AXL/API/1.0", IsNullable = false)]
    public class AddPilotPointReq : APIRequest
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XPilotPoint pilotPoint;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("getNumDevices", Namespace = "http://www.cisco.com/AXL/API/1.0", IsNullable = false)]
    public class GetNumDevicesReq : APIRequest
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string @class;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("removeUser", Namespace = "http://www.cisco.com/AXL/API/1.0", IsNullable = false)]
    public class RemoveUserReq : APIRequest
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string userid;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("updateMGCP", Namespace = "http://www.cisco.com/AXL/API/1.0", IsNullable = false)]
    public class UpdateMGCPReq : APIRequest
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("uuid", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("domainName", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")]
        public string Item;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public ItemChoiceType25 ItemElementName;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string newDomainName;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string description;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string product;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string model;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("callManagerGroupName", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("callManagerGroup", typeof(XCallManagerGroup), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public object Item1;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, DataType = "Name")]
        public string scratch;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XVendorConfig vendorConfig;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string versionStamp;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XLoadInformation loadInformation;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0", IncludeInSchema = false)]
    public enum ItemChoiceType25
    {

        /// <remarks/>
        uuid,

        /// <remarks/>
        domainName,
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("getConferenceBridge", Namespace = "http://www.cisco.com/AXL/API/1.0", IsNullable = false)]
    public class GetConferenceBridgeReq : APIRequest
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("name", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("uuid", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")]
        public string Item;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public ItemChoiceType24 ItemElementName;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0", IncludeInSchema = false)]
    public enum ItemChoiceType24
    {

        /// <remarks/>
        name,

        /// <remarks/>
        uuid,
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("addCallPickupGroup", Namespace = "http://www.cisco.com/AXL/API/1.0", IsNullable = false)]
    public class AddCallPickupGroupReq : APIRequest
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XNPCallPickupGroup callPickup;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("addTimePeriod", Namespace = "http://www.cisco.com/AXL/API/1.0", IsNullable = false)]
    public class AddTimePeriodReq : APIRequest
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XTimePeriod timePeriod;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("removeRecordingProfile", Namespace = "http://www.cisco.com/AXL/API/1.0", IsNullable = false)]
    public class RemoveRecordingProfileReq : APIRequest
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("name", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("uuid", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")]
        public string Item;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public ItemChoiceType23 ItemElementName;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0", IncludeInSchema = false)]
    public enum ItemChoiceType23
    {

        /// <remarks/>
        name,

        /// <remarks/>
        uuid,
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("removeMGCPUnit", Namespace = "http://www.cisco.com/AXL/API/1.0", IsNullable = false)]
    public class RemoveMGCPUnitReq : APIRequest
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("uuid", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("domainName", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")]
        public string Item;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public ItemChoiceType22 ItemElementName;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public RemoveMGCPUnitReqUnit unit;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0", IncludeInSchema = false)]
    public enum ItemChoiceType22
    {

        /// <remarks/>
        uuid,

        /// <remarks/>
        domainName,
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("createAutogeneratedProfile", Namespace = "http://www.cisco.com/AXL/API/1.0", IsNullable = false)]
    public class CreateAutogeneratedProfileReq : APIRequest
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("phoneId", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("phoneName", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")]
        public string Item;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public ItemChoiceType21 ItemElementName;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0", IncludeInSchema = false)]
    public enum ItemChoiceType21
    {

        /// <remarks/>
        phoneId,

        /// <remarks/>
        phoneName,
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("updateHuntList", Namespace = "http://www.cisco.com/AXL/API/1.0", IsNullable = false)]
    public class UpdateHuntListReq : APIRequest
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("name", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("uuid", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")]
        public string Item;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public ItemChoiceType20 ItemElementName;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string newName;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string description;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("callManagerGroupName", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("callManagerGroup", typeof(XCallManagerGroup), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public object Item1;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool routeListEnabled;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool routeListEnabledSpecified;

        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute("member", Form = System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable = false)]
        public XHuntListMember[] members;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0", IncludeInSchema = false)]
    public enum ItemChoiceType20
    {

        /// <remarks/>
        name,

        /// <remarks/>
        uuid,
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("addRoutePartition", Namespace = "http://www.cisco.com/AXL/API/1.0", IsNullable = false)]
    public class AddRoutePartitionReq : APIRequest
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XRoutePartition newRoutePartition;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("addDeviceMobility", Namespace = "http://www.cisco.com/AXL/API/1.0", IsNullable = false)]
    public class AddDeviceMobilityReq : APIRequest
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XDeviceMobility deviceMobility;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("addProcessNode", Namespace = "http://www.cisco.com/AXL/API/1.0", IsNullable = false)]
    public class AddProcessNodeReq : APIRequest
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XProcessNode processNode;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("removeSIPRealm", Namespace = "http://www.cisco.com/AXL/API/1.0", IsNullable = false)]
    public class RemoveSIPRealmReq : APIRequest
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("realm", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("uuid", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")]
        public string Item;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public ItemChoiceType19 ItemElementName;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0", IncludeInSchema = false)]
    public enum ItemChoiceType19
    {

        /// <remarks/>
        realm,

        /// <remarks/>
        uuid,
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("addAttendantConsoleHuntGroup", Namespace = "http://www.cisco.com/AXL/API/1.0", IsNullable = false)]
    public class AddAttendantConsoleHuntGroupReq : APIRequest
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XPilotHuntGroup newHuntGroup;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("addCallManagerGroup", Namespace = "http://www.cisco.com/AXL/API/1.0", IsNullable = false)]
    public class AddCallManagerGroupReq : APIRequest
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XCallManagerGroup callManagerGroup;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("addDirectedCallPark", Namespace = "http://www.cisco.com/AXL/API/1.0", IsNullable = false)]
    public class AddDirectedCallParkReq : APIRequest
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XNPDirectedCallPark directedCallPark;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("updateCTIRoutePoint", Namespace = "http://www.cisco.com/AXL/API/1.0", IsNullable = false)]
    public class UpdateCTIRoutePointReq : APIRequest
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("name", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified, DataType = "Name")]
        [System.Xml.Serialization.XmlElementAttribute("uuid", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")]
        public string Item;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public ItemChoiceType18 ItemElementName;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, DataType = "Name")]
        public string newName;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string description;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("callingSearchSpaceId", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("callingSearchSpaceName", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified, DataType = "Name")]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("Item1ElementName")]
        public string Item1;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public Item1ChoiceType2 Item1ElementName;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("devicePoolName", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified, DataType = "Name")]
        [System.Xml.Serialization.XmlElementAttribute("devicePoolId", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("Item2ElementName")]
        public string Item2;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public Item2ChoiceType1 Item2ElementName;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("locationName", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("locationId", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("Item3ElementName")]
        public string Item3;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public Item3ChoiceType Item3ElementName;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public UpdateCTIRoutePointReqLines lines;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0", IncludeInSchema = false)]
    public enum ItemChoiceType18
    {

        /// <remarks/>
        name,

        /// <remarks/>
        uuid,
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0", IncludeInSchema = false)]
    public enum Item1ChoiceType2
    {

        /// <remarks/>
        callingSearchSpaceId,

        /// <remarks/>
        callingSearchSpaceName,
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0", IncludeInSchema = false)]
    public enum Item2ChoiceType1
    {

        /// <remarks/>
        devicePoolName,

        /// <remarks/>
        devicePoolId,
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0", IncludeInSchema = false)]
    public enum Item3ChoiceType
    {

        /// <remarks/>
        locationName,

        /// <remarks/>
        locationId,
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("addHuntList", Namespace = "http://www.cisco.com/AXL/API/1.0", IsNullable = false)]
    public class AddHuntListReq : APIRequest
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XHuntList huntList;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("updatePhoneTemplate", Namespace = "http://www.cisco.com/AXL/API/1.0", IsNullable = false)]
    public class UpdatePhoneTemplateReq : APIRequest
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("name", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("uuid", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")]
        public string Item;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public ItemChoiceType17 ItemElementName;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string newName;

        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute("button", Form = System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable = false)]
        public XButton[] buttons;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0", IncludeInSchema = false)]
    public enum ItemChoiceType17
    {

        /// <remarks/>
        name,

        /// <remarks/>
        uuid,
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("doDeviceReset", Namespace = "http://www.cisco.com/AXL/API/1.0", IsNullable = false)]
    public class DeviceResetReq : APIRequest
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("deviceId", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("deviceName", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")]
        public string Item;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public ItemChoiceType16 ItemElementName;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool isHardReset;

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(false)]
        public bool isMGCP = false;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0", IncludeInSchema = false)]
    public enum ItemChoiceType16
    {

        /// <remarks/>
        deviceId,

        /// <remarks/>
        deviceName,
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("getDeviceProfile", Namespace = "http://www.cisco.com/AXL/API/1.0", IsNullable = false)]
    public class GetDeviceProfileReq : APIRequest
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("profileName", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("profileId", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")]
        public string Item;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public ItemChoiceType15 ItemElementName;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0", IncludeInSchema = false)]
    public enum ItemChoiceType15
    {

        /// <remarks/>
        profileName,

        /// <remarks/>
        profileId,
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("updateCallerFilterList", Namespace = "http://www.cisco.com/AXL/API/1.0", IsNullable = false)]
    public class UpdateCallerFilterListReq : APIRequest
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("name", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("uuid", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")]
        public string Item;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public ItemChoiceType14 ItemElementName;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string newName;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable = true)]
        public string description;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool isAllowedType;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool isAllowedTypeSpecified;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("endUserId", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("endUserName", typeof(string), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("Item1ElementName")]
        public string Item1;

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public Item1ChoiceType1 Item1ElementName;

        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute("member", Form = System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable = false)]
        public XCallerFilterListMember[] members;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0", IncludeInSchema = false)]
    public enum ItemChoiceType14
    {

        /// <remarks/>
        name,

        /// <remarks/>
        uuid,
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0", IncludeInSchema = false)]
    public enum Item1ChoiceType1
    {

        /// <remarks/>
        endUserId,

        /// <remarks/>
        endUserName,
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("addRouteGroup", Namespace = "http://www.cisco.com/AXL/API/1.0", IsNullable = false)]
    public class AddRouteGroupReq : APIRequest
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XRouteGroup routeGroup;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("addCallerFilterList", Namespace = "http://www.cisco.com/AXL/API/1.0", IsNullable = false)]
    public class AddCallerFilterListReq : APIRequest
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XCallerFilterList newCallerFilterList;
    }

    [System.Xml.Serialization.XmlRootAttribute("getCallerFilterListResponse", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class getCallerFilterListResponse : GetCallerFilterListRes
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("removeDeviceMobilityGroupResponse", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class removeDeviceMobilityGroupResponse : StandardResponse
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("addVoiceMailPilotResponse", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class addVoiceMailPilotResponse : StandardResponse
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("addPhoneTemplate", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class addPhoneTemplate : AddPhoneTemplateReq
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("removePhoneResponse", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class removePhoneResponse : StandardResponse
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("removeCSSResponse", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class removeCSSResponse : StandardResponse
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("removeGatewayEndpoint", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class removeGatewayEndpoint : NameAndGUIDRequest
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("getPilotPointResponse", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class getPilotPointResponse : GetPilotPointRes
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("getTimePeriod", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class getTimePeriod : NameAndGUIDRequest
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("getTransPattern", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class getTransPattern : GetTransPatternReq
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("getMGCP", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class getMGCP : GetMGCPReq
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("addCallManager", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class addCallManager : AddCallManagerReq
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("updateMGCPResponse", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class updateMGCPResponse : StandardResponse
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("getPhone", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class getPhone : GetPhoneReq
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("updateLocation", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class updateLocation : UpdateLocationReq
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("addLine", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class addLine : AddLineReq
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("addMOHServerResponse", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class addMOHServerResponse : StandardResponse
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("getRouteListResponse", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class getRouteListResponse : GetRouteListRes
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("addCallManagerGroup", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class addCallManagerGroup : AddCallManagerGroupReq
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("addH323TrunkResponse", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class addH323TrunkResponse : StandardResponse
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("listCSSByName", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class listCSSByName : ListCSSByNameReq
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("updateProcessNodeServiceResponse", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class updateProcessNodeServiceResponse : StandardResponse
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("removeVoiceMailPilotResponse", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class removeVoiceMailPilotResponse : StandardResponse
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("listGatekeeperByName", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class listGatekeeperByName : ListBySearchString
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("getMeetMeResponse", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class getMeetMeResponse : GetMeetMeRes
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("getUser", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class getUser : GetUserReq
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("addMeetMeResponse", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class addMeetMeResponse : StandardResponse
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("updateMeetMeResponse", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class updateMeetMeResponse : StandardResponse
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("removeAttendantConsoleHuntGroupResponse", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class removeAttendantConsoleHuntGroupResponse : StandardResponse
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("updateCallPickupGroup", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class updateCallPickupGroup : UpdateCallPickupGroupReq
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("updateGatewayEndpoint", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class updateGatewayEndpoint : UpdateGatewayEndpointReq
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("removeDeviceProfile", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class removeDeviceProfile : RemoveDeviceProfileReq
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("updateMobileVoiceAccessResponse", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class updateMobileVoiceAccessResponse : StandardResponse
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("removePilotPointResponse", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class removePilotPointResponse : StandardResponse
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("addSIPTrunk", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class addSIPTrunk : AddSIPTrunkReq
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("removeCallManagerGroupResponse", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class removeCallManagerGroupResponse : StandardResponse
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("updateDeviceMobility", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class updateDeviceMobility : UpdateDeviceMobilityReq
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("updateVoiceMailProfile", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class updateVoiceMailProfile : UpdateVoiceMailProfileReq
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("addH323Trunk", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class addH323Trunk : AddH323TrunkReq
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("addRecordingProfileResponse", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class addRecordingProfileResponse : StandardResponse
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("addCallParkResponse", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class addCallParkResponse : StandardResponse
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("updateDeviceMobilityResponse", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class updateDeviceMobilityResponse : StandardResponse
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("updateFACInfo", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class updateFACInfo : UpdateFACInfoReq
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("addPhysicalLocationResponse", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class addPhysicalLocationResponse : StandardResponse
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("removeMediaResourceList", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class removeMediaResourceList : NameAndGUIDRequest
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("updateAttendantConsoleHuntGroupResponse", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class updateAttendantConsoleHuntGroupResponse : StandardResponse
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("addPhoneTemplateResponse", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class addPhoneTemplateResponse : StandardResponse
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("addRoutePartition", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class addRoutePartition : AddRoutePartitionReq
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("getVoiceMailPort", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class getVoiceMailPort : NameAndGUIDRequest
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("getVoiceMailPilotResponse", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class getVoiceMailPilotResponse : GetVoiceMailPilotRes
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("removeVoiceMailPilot", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class removeVoiceMailPilot : RemoveVoiceMailPilotReq
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("updateMediaResourceListResponse", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class updateMediaResourceListResponse : StandardResponse
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("updateMobilityResponse", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class updateMobilityResponse : StandardResponse
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("addTimeScheduleResponse", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class addTimeScheduleResponse : StandardResponse
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("removeHuntPilotResponse", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class removeHuntPilotResponse : StandardResponse
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("updateRegionMatrix", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class updateRegionMatrix : UpdateRegionMatrixReq
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("getDDI", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class getDDI : getDDIReq
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("getMediaResourceGroupResponse", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class getMediaResourceGroupResponse : GetMediaResourceGroupRes
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("getSIPTrunk", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class getSIPTrunk : NameAndGUIDRequest
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("updateCSS", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class updateCSS : UpdateCSSReq
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("listServiceParametersResponse", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class listServiceParametersResponse : ListServiceParametersRes
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("updateRegion", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class updateRegion : UpdateRegionReq
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("listCSSByNameResponse", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class listCSSByNameResponse : ListCSSByNameRes
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("removeCallManager", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class removeCallManager : NameAndGUIDRequest
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("listAllProcessNodesResponse", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class listAllProcessNodesResponse : ListAllProcessNodesRes
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("addTransformationPattern", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class addTransformationPattern : AddTransformationPatternReq
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("updateProcessNode", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class updateProcessNode : UpdateProcessNodeReq
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("removeDeviceMobility", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class removeDeviceMobility : NameAndGUIDRequest
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("getLineResponse", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class getLineResponse : GetLineRes
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("addHuntList", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class addHuntList : AddHuntListReq
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("removeCallManagerGroup", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class removeCallManagerGroup : NameAndGUIDRequest
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("addUser", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class addUser : AddUserReq
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("listUserByNameResponse", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class listUserByNameResponse : ListUserByNameRes
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("removeCSS", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class removeCSS : NameAndGUIDRequest
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("updateRegionResponse", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class updateRegionResponse : StandardResponse
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("addVoiceMailPilot", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class addVoiceMailPilot : AddVoiceMailPilotReq
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("updatePhoneTemplateResponse", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class updatePhoneTemplateResponse : StandardResponse
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("updateMediaResourceGroup", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class updateMediaResourceGroup : UpdateMediaResourceGroupReq
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("addMGCPSubunitResponse", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class addMGCPSubunitResponse : StandardResponse
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("getMediaResourceList", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class getMediaResourceList : NameAndGUIDRequest
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("removeTransformationPatternResponse", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class removeTransformationPatternResponse : StandardResponse
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("getDeviceMobilityGroupResponse", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class getDeviceMobilityGroupResponse : GetDeviceMobilityGroupRes
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("getH323Gateway", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class getH323Gateway : NameAndGUIDRequest
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("getDialPlanResponse", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class getDialPlanResponse : GetDialPlanRes
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("updateRouteGroupResponse", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class updateRouteGroupResponse : StandardResponse
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("createAutogeneratedProfileResponse", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class createAutogeneratedProfileResponse : StandardResponse
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("removeCallPickupGroupResponse", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class removeCallPickupGroupResponse : StandardResponse
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("addHuntListResponse", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class addHuntListResponse : StandardResponse
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("updateLicenseCapabilities", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class updateLicenseCapabilities : UpdateLicenseCapabilitiesReq
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("updateRoutePatternResponse", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class updateRoutePatternResponse : StandardResponse
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("addMediaResourceGroup", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class addMediaResourceGroup : AddMediaResourceGroupReq
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("getLine", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class getLine : GetLineReq
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("getMOHAudioSource", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class getMOHAudioSource : GetMOHAudioSourceByIDAndSourceReq
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("getGatekeeperResponse", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class getGatekeeperResponse : GetGatekeeperRes
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("removeDevicePool", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class removeDevicePool : NameAndGUIDRequest
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("addDeviceMobilityGroup", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class addDeviceMobilityGroup : AddDeviceMobilityGroupReq
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("addDeviceMobilityResponse", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class addDeviceMobilityResponse : StandardResponse
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("updateRouteGroup", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class updateRouteGroup : UpdateRouteGroupReq
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("updateRoutePattern", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class updateRoutePattern : UpdateRoutePatternReq
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("addCallerFilterListResponse", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class addCallerFilterListResponse : StandardResponse
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("updatePhysicalLocation", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class updatePhysicalLocation : UpdatePhysicalLocationReq
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("updateAttendantConsoleUser", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class updateAttendantConsoleUser : UpdateAttendantConsoleUserReq
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("listVoiceMailProfileByName", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class listVoiceMailProfileByName : ListBySearchString
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("removeLineResponse", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class removeLineResponse : StandardResponse
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("getCallManagerResponse", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class getCallManagerResponse : GetCallManagerRes
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("removeLocationResponse", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class removeLocationResponse : StandardResponse
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("removeRoutePattern", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class removeRoutePattern : RemoveRoutePatternReq
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("listAARGroupByNameResponse", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class listAARGroupByNameResponse : ListAARGroupRes
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("getConferenceBridgeResponse", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class getConferenceBridgeResponse : GetConferenceBridgeRes
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("updateSIPRealm", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class updateSIPRealm : UpdateSIPRealmReq
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("getServiceParameter", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class getServiceParameter : GetServiceParameterReq
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("getGatewayEndpointResponse", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class getGatewayEndpointResponse : GetGatewayEndpointRes
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("getSIPTrunkResponse", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class getSIPTrunkResponse : GetSIPTrunk
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("updateLineGroup", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class updateLineGroup : UpdateLineGroupReq
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("getProcessNode", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class getProcessNode : NameAndGUIDRequest
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("updateTimePeriod", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class updateTimePeriod : UpdateTimePeriodReq
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("removeMediaResourceListResponse", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class removeMediaResourceListResponse : StandardResponse
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("getCallManager", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class getCallManager : NameAndGUIDRequest
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("getVoiceMailProfileResponse", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class getVoiceMailProfileResponse : GetVoiceMailProfileRes
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("listVoiceMailProfileByNameResponse", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class listVoiceMailProfileByNameResponse : ListVoiceMailProfileRes
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("updateTransformationPattern", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class updateTransformationPattern : UpdateTransformationPatternReq
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("updateDeviceProfileResponse", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class updateDeviceProfileResponse : StandardResponse
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("removeRouteList", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class removeRouteList : NameAndGUIDRequest
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("addDeviceProfile", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class addDeviceProfile : AddDeviceProfileReq
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("updateDevicePoolResponse", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class updateDevicePoolResponse : StandardResponse
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("getH323Trunk", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class getH323Trunk : NameAndGUIDRequest
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("getH323Phone", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class getH323Phone : NameAndGUIDRequest
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("updateVoiceMailPilotResponse", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class updateVoiceMailPilotResponse : StandardResponse
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("addCommonDeviceConfigResponse", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class addCommonDeviceConfigResponse : StandardResponse
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("updateCMCInfo", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class updateCMCInfo : UpdateCMCInfoReq
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("removeCommonDeviceConfig", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class removeCommonDeviceConfig : NameAndGUIDRequest
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("createAutogeneratedProfile", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class createAutogeneratedProfile : CreateAutogeneratedProfileReq
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("getMobileVoiceAccessResponse", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class getMobileVoiceAccessResponse : GetMobileVoiceAccessRes
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("getMOHServerResponse", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class getMOHServerResponse : GetMOHServerRes
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("addCallManagerResponse", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class addCallManagerResponse : StandardResponse
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("addPilotPoint", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class addPilotPoint : AddPilotPointReq
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("listDeviceByServiceName", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class listDeviceByServiceName : ListDeviceByNameAndClassReq
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("executeSQLUpdate", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class executeSQLUpdate : ExecuteSQLUpdateReq
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("removeAttendantConsoleUser", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class removeAttendantConsoleUser : RemoveAttendantConsoleUserReq
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("listProcessNodesByServiceResponse", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class listProcessNodesByServiceResponse : ListProcessNodesByServiceRes
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("addAttendantConsoleHuntGroup", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class addAttendantConsoleHuntGroup : AddAttendantConsoleHuntGroupReq
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("addH323PhoneResponse", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class addH323PhoneResponse : StandardResponse
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("updateCommonDeviceConfigResponse", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class updateCommonDeviceConfigResponse : StandardResponse
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("addPilotPointResponse", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class addPilotPointResponse : StandardResponse
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("addRouteFilter", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class addRouteFilter : AddRouteFilterReq
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("updatePhoneResponse", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class updatePhoneResponse : StandardResponse
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("updateDirectedCallPark", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class updateDirectedCallPark : UpdateDirectedCallParkReq
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("removeRouteListResponse", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class removeRouteListResponse : StandardResponse
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("removeFACInfoResponse", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class removeFACInfoResponse : StandardResponse
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("updateH323Gateway", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class updateH323Gateway : UpdateH323GatewayReq
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("getLocation", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class getLocation : NameAndGUIDRequest
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("addFACInfo", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class addFACInfo : AddFACInfoReq
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("removeUserGroupResponse", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class removeUserGroupResponse : StandardResponse
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("removeCMCInfoResponse", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class removeCMCInfoResponse : StandardResponse
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("getDeviceProfile", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class getDeviceProfile : GetDeviceProfileReq
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("listMOHAudioSourceByNameResponse", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class listMOHAudioSourceByNameResponse : ListMOHAudioSourceRes
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("removeMGCPResponse", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class removeMGCPResponse : StandardResponse
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("getPhysicalLocation", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class getPhysicalLocation : NameAndGUIDRequest
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("updateCallManagerGroupResponse", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class updateCallManagerGroupResponse : StandardResponse
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("removeCallParkResponse", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class removeCallParkResponse : StandardResponse
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("addMGCPUnit", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class addMGCPUnit : AddMGCPUnitReq
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("addGatekeeperResponse", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class addGatekeeperResponse : StandardResponse
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("removeTransformationPattern", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class removeTransformationPattern : RemoveTransformationPatternReq
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("getLicenseCapabilitiesResponse", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class getLicenseCapabilitiesResponse : GetLicenseCapabilitiesRes
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("removeH323Trunk", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class removeH323Trunk : NameAndGUIDRequest
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("getTimePeriodResponse", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class getTimePeriodResponse : GetTimePeriodRes
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("addAttendantConsoleHuntGroupResponse", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class addAttendantConsoleHuntGroupResponse : StandardResponse
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("getVoiceMailProfile", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class getVoiceMailProfile : NameAndGUIDRequest
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("addDevicePoolResponse", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class addDevicePoolResponse : StandardResponse
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("removeRoutePatternResponse", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class removeRoutePatternResponse : StandardResponse
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("removeAttendantConsoleHuntGroup", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class removeAttendantConsoleHuntGroup : RemoveAttendantConsoleHuntGroupReq
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("getDevicePoolResponse", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class getDevicePoolResponse : GetDevicePoolRes
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("removeRouteGroupResponse", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class removeRouteGroupResponse : StandardResponse
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("addCTIRoutePointResponse", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class addCTIRoutePointResponse : StandardResponse
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("getLicenseCapabilities", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class getLicenseCapabilities : GetLicenseCapabilitiesReq
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("addRouteGroupResponse", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class addRouteGroupResponse : StandardResponse
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("removeH323PhoneResponse", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class removeH323PhoneResponse : StandardResponse
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("getMGCPResponse", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class getMGCPResponse : GetMGCPRes
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("removeTimeScheduleResponse", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class removeTimeScheduleResponse : StandardResponse
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("addRegionResponse", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class addRegionResponse : StandardResponse
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("removeMeetMe", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class removeMeetMe : RemoveMeetMeReq
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("getCMCInfo", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class getCMCInfo : GUIDRequest
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("getCommonDeviceConfigResponse", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class getCommonDeviceConfigResponse : GetCommonDeviceConfigRes
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("getCallManagerGroupResponse", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class getCallManagerGroupResponse : GetCallManagerGroupRes
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("removePhoneTemplateResponse", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class removePhoneTemplateResponse : StandardResponse
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("updateRouteFilter", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class updateRouteFilter : UpdateRouteFilterReq
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("updateCallerFilterList", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class updateCallerFilterList : UpdateCallerFilterListReq
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("removeRecordingProfileResponse", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class removeRecordingProfileResponse : StandardResponse
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("removeMGCPUnit", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class removeMGCPUnit : RemoveMGCPUnitReq
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("removeSIPTrunk", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class removeSIPTrunk : NameAndGUIDRequest
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("updateAttendantConsoleHuntGroup", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class updateAttendantConsoleHuntGroup : UpdateAttendantConsoleHuntGroupReq
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("updateCMCInfoResponse", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class updateCMCInfoResponse : StandardResponse
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("updateRouteListResponse", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class updateRouteListResponse : StandardResponse
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("getCSSResponse", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class getCSSResponse : GetCSSRes
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("updateUserGroup", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class updateUserGroup : UpdateUserGroupReq
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("addMOHServer", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class addMOHServer : AddMOHServerReq
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("addSIPRealmResponse", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class addSIPRealmResponse : StandardResponse
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("getProcessNodeService", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class getProcessNodeService : GetProcessNodeServiceReq
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("getMOHServer", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class getMOHServer : NameAndGUIDRequest
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("getPhoneTemplate", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class getPhoneTemplate : NameAndGUIDRequest
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("removeMGCPEndpoint", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class removeMGCPEndpoint : RemoveMGCPEndpointReq
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("updatePhone", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class updatePhone : UpdatePhoneReq
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("listDeviceByServiceNameResponse", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class listDeviceByServiceNameResponse : ListDeviceByServiceNameRes
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("removeVoiceMailPort", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class removeVoiceMailPort : NameAndGUIDRequest
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("addTimePeriodResponse", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class addTimePeriodResponse : StandardResponse
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("removeCallPickupGroup", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class removeCallPickupGroup : RemoveCallPickupGroupReq
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("listRoutePartitionByName", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class listRoutePartitionByName : ListBySearchString
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("updateHuntList", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class updateHuntList : UpdateHuntListReq
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("removeCallManagerResponse", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class removeCallManagerResponse : StandardResponse
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("getCallPickupGroup", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class getCallPickupGroup : GetCallPickupGroupReq
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("updateLineGroupResponse", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class updateLineGroupResponse : StandardResponse
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("doDeviceLoginResponse", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class doDeviceLoginResponse : DeviceLoginResponse
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("getRoutePartition", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class getRoutePartition : GetRoutePartitionReq
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("removeTimeSchedule", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class removeTimeSchedule : NameAndGUIDRequest
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("listPhoneTemplateByNameResponse", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class listPhoneTemplateByNameResponse : ListPhoneTemplateRes
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("updateRoutePartitionResponse", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class updateRoutePartitionResponse : StandardResponse
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("listAARGroupByName", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class listAARGroupByName : ListBySearchString
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("removeMGCPSubunit", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class removeMGCPSubunit : RemoveMGCPSubunitReq
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("removeHuntList", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class removeHuntList : NameAndGUIDRequest
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("removeTimePeriod", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class removeTimePeriod : NameAndGUIDRequest
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("getRoutePartitionResponse", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class getRoutePartitionResponse : GetRoutePartitionRes
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("getMobility", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class getMobility : GetMobilityReq
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("updateMOHServerResponse", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class updateMOHServerResponse : StandardResponse
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("removeMediaResourceGroupResponse", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class removeMediaResourceGroupResponse : StandardResponse
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("addRecordingProfile", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class addRecordingProfile : AddRecordingProfileReq
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("listDevicePoolByNameResponse", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class listDevicePoolByNameResponse : ListDevicePoolRes
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("addH323Phone", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class addH323Phone : AddH323PhoneReq
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("updateCallParkResponse", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class updateCallParkResponse : StandardResponse
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("getHuntPilotResponse", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class getHuntPilotResponse : GetHuntPilotRes
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("executeSQLQuery", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class executeSQLQuery : ExecuteSQLQueryReq
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("getMobilityResponse", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class getMobilityResponse : GetMobilityRes
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("updateHuntPilot", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class updateHuntPilot : UpdateHuntPilotReq
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("addLocation", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class addLocation : AddLocationReq
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("addCallPickupGroup", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class addCallPickupGroup : AddCallPickupGroupReq
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("getGatewayEndpoint", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class getGatewayEndpoint : NameAndGUIDRequest
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("listMOHAudioSourceByName", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class listMOHAudioSourceByName : ListBySearchString
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("updateMeetMe", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class updateMeetMe : UpdateMeetMeReq
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("updateSIPRealmResponse", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class updateSIPRealmResponse : StandardResponse
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("updateFACInfoResponse", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class updateFACInfoResponse : StandardResponse
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("getCallPark", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class getCallPark : GetCallParkReq
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("updateLocationResponse", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class updateLocationResponse : StandardResponse
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("updateRoutePartition", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class updateRoutePartition : UpdateRoutePartitionReq
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("getPhoneTemplateResponse", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class getPhoneTemplateResponse : GetPhoneTemplateRes
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("getAttendantConsoleHuntGroupResponse", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class getAttendantConsoleHuntGroupResponse : GetAttendantConsoleHuntGroupRes
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("addDeviceMobility", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class addDeviceMobility : AddDeviceMobilityReq
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("addMGCP", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class addMGCP : AddMGCPReq
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("getDirectedCallParkResponse", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class getDirectedCallParkResponse : GetDirectedCallParkRes
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("updateGatewayEndpointResponse", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class updateGatewayEndpointResponse : StandardResponse
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("getHuntList", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class getHuntList : NameAndGUIDRequest
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("removeGatekeeper", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class removeGatekeeper : NameAndGUIDRequest
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("removeRoutePartition", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class removeRoutePartition : RemoveRoutePartitionReq
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("getPilotPoint", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class getPilotPoint : NameAndGUIDRequest
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("getRoutePattern", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class getRoutePattern : GetRoutePatternReq
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("removeMOHAudioSourceResponse", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class removeMOHAudioSourceResponse : StandardResponse
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("removeDeviceMobilityResponse", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class removeDeviceMobilityResponse : StandardResponse
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("addRoutePatternResponse", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class addRoutePatternResponse : StandardResponse
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("getRouteFilterResponse", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class getRouteFilterResponse : GetRouteFilterRes
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("removeVoiceMailProfileResponse", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class removeVoiceMailProfileResponse : StandardResponse
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("addDeviceMobilityGroupResponse", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class addDeviceMobilityGroupResponse : StandardResponse
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("listLocationByName", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class listLocationByName : ListBySearchString
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("removeLineGroup", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class removeLineGroup : NameAndGUIDRequest
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("doAuthenticateUserResponse", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class doAuthenticateUserResponse : AuthenticateUserResponse
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("updateAttendantConsoleUserResponse", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class updateAttendantConsoleUserResponse : StandardResponse
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("removeDeviceMobilityGroup", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class removeDeviceMobilityGroup : NameAndGUIDRequest
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("getHuntPilot", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class getHuntPilot : GetHuntPilotReq
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("getRouteGroup", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class getRouteGroup : NameAndGUIDRequest
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("getAttendantConsoleHuntGroup", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class getAttendantConsoleHuntGroup : GetAttendantConsoleHuntGroupReq
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("addCallPark", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class addCallPark : AddCallParkReq
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("addTransPatternResponse", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class addTransPatternResponse : StandardResponse
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("addProcessNodeResponse", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class addProcessNodeResponse : StandardResponse
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("removeLocation", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class removeLocation : NameAndGUIDRequest
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("removeMGCPSubunitResponse", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class removeMGCPSubunitResponse : StandardResponse
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("getRecordingProfile", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class getRecordingProfile : GetRecordingProfileReq
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("removeRouteGroup", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class removeRouteGroup : NameAndGUIDRequest
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("listPhoneByNameResponse", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class listPhoneByNameResponse : ListPhoneByNameRes
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("removeUserResponse", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class removeUserResponse : StandardResponse
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("updateGatekeeper", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class updateGatekeeper : UpdateGatekeeperReq
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("updateCallManagerResponse", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class updateCallManagerResponse : StandardResponse
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("removeRegionResponse", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class removeRegionResponse : StandardResponse
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("updateConferenceBridgeResponse", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class updateConferenceBridgeResponse : StandardResponse
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("removePhoneTemplate", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class removePhoneTemplate : NameAndGUIDRequest
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("removeMGCPUnitResponse", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class removeMGCPUnitResponse : StandardResponse
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("removeLineGroupResponse", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class removeLineGroupResponse : StandardResponse
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("getMediaResourceGroup", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class getMediaResourceGroup : NameAndGUIDRequest
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("removeH323TrunkResponse", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class removeH323TrunkResponse : StandardResponse
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("addAttendantConsoleUser", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class addAttendantConsoleUser : AddAttendantConsoleUserReq
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("addMGCPEndpointResponse", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class addMGCPEndpointResponse : StandardResponse
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("addGatekeeper", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class addGatekeeper : AddGatekeeperReq
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("getCommonDeviceConfig", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class getCommonDeviceConfig : NameAndGUIDRequest
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("addDeviceProfileResponse", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class addDeviceProfileResponse : StandardResponse
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("updatePhysicalLocationResponse", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class updatePhysicalLocationResponse : StandardResponse
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("addRoutePartitionResponse", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class addRoutePartitionResponse : StandardResponse
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("updateConferenceBridge", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class updateConferenceBridge : UpdateConferenceBridgeReq
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("removeVoiceMailPortResponse", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class removeVoiceMailPortResponse : StandardResponse
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("removeSIPTrunkResponse", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class removeSIPTrunkResponse : StandardResponse
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("updateH323PhoneResponse", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class updateH323PhoneResponse : StandardResponse
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("updatePilotPoint", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class updatePilotPoint : UpdatePilotPointReq
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("getDeviceProfileResponse", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class getDeviceProfileResponse : GetDeviceProfileRes
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("updateMobileVoiceAccess", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class updateMobileVoiceAccess : UpdateMobileVoiceAccessReq
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("addAttendantConsoleUserResponse", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class addAttendantConsoleUserResponse : StandardResponse
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("executeSQLQueryResponse", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class executeSQLQueryResponse : ExecuteSQLQueryRes
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("removeMOHServerResponse", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class removeMOHServerResponse : StandardResponse
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("updateH323Phone", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class updateH323Phone : UpdateH323PhoneReq
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("doDeviceLogin", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class doDeviceLogin : DeviceLoginReq
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("addCMCInfoResponse", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class addCMCInfoResponse : StandardResponse
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("addHuntPilot", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class addHuntPilot : AddHuntPilotReq
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("addCallPickupGroupResponse", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class addCallPickupGroupResponse : StandardResponse
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("getCTIRoutePoint", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class getCTIRoutePoint : NameAndGUIDRequest
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("updateUser", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class updateUser : UpdateUserReq
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("listMediaResourceListByNameResponse", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class listMediaResourceListByNameResponse : ListMediaResourceListRes
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("removeRouteFilter", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class removeRouteFilter : NameAndGUIDRequest
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("addMGCPEndpoint", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class addMGCPEndpoint : AddMGCPEndpointReq
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("updateTransPattern", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class updateTransPattern : UpdateTransPatternReq
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("removeGatewayEndpointResponse", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class removeGatewayEndpointResponse : StandardResponse
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("getLocationResponse", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class getLocationResponse : GetLocationRes
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("removeCallPark", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class removeCallPark : RemoveCallParkReq
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("getDeviceMobilityGroup", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class getDeviceMobilityGroup : NameAndGUIDRequest
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("getH323GatewayResponse", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class getH323GatewayResponse : GetH323GatewayRes
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("getVoiceMailPortResponse", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class getVoiceMailPortResponse : GetVoiceMailPortRes
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("addMGCPSubunit", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class addMGCPSubunit : AddMGCPSubunitReq
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("addCommonDeviceConfig", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class addCommonDeviceConfig : AddCommonDeviceConfigReq
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("getCallerFilterList", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class getCallerFilterList : NameAndGUIDRequest
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("getCSS", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class getCSS : NameAndGUIDRequest
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("getTimeSchedule", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class getTimeSchedule : NameAndGUIDRequest
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("getCMCInfoResponse", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class getCMCInfoResponse : GetCMCInfoRes
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("updateAppUserResponse", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class updateAppUserResponse : StandardResponse
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("addVoiceMailPort", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class addVoiceMailPort : AddVoiceMailPortReq
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("updateRouteList", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class updateRouteList : UpdateRouteListReq
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("getMOHAudioSourceResponse", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class getMOHAudioSourceResponse : GetMOHAudioSourceRes
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("addVoiceMailPortResponse", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class addVoiceMailPortResponse : StandardResponse
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("addCallManagerGroupResponse", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class addCallManagerGroupResponse : StandardResponse
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("listDeviceByNameAndClassResponse", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class listDeviceByNameAndClassResponse : ListDeviceRes
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("listRoutePartitionByNameResponse", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class listRoutePartitionByNameResponse : ListRoutePartitionRes
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("getLineGroup", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class getLineGroup : NameAndGUIDRequest
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("addPhysicalLocation", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class addPhysicalLocation : AddPhysicalLocationReq
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("addRoutePattern", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class addRoutePattern : AddRoutePatternReq
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("removeVoiceMailProfile", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class removeVoiceMailProfile : NameAndGUIDRequest
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("getServiceParameterResponse", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class getServiceParameterResponse : GetServiceParameterRes
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("addConferenceBridgeResponse", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class addConferenceBridgeResponse : StandardResponse
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("listServiceParameters", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class listServiceParameters : ListServiceParametersReq
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("getRouteGroupResponse", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class getRouteGroupResponse : GetRouteGroupRes
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("getFACInfo", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class getFACInfo : GUIDRequest
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("doDeviceLogout", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class doDeviceLogout : DeviceLogoutReq
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("removePilotPoint", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class removePilotPoint : NameAndGUIDRequest
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("executeSQLUpdateResponse", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class executeSQLUpdateResponse : ExecuteSQLUpdateRes
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("updateMediaResourceGroupResponse", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class updateMediaResourceGroupResponse : StandardResponse
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("addVoiceMailProfile", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class addVoiceMailProfile : AddVoiceMailProfileReq
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("getAttendantConsoleUserResponse", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class getAttendantConsoleUserResponse : GetAttendantConsoleUserRes
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("addTransformationPatternResponse", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class addTransformationPatternResponse : StandardResponse
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("removeUser", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class removeUser : RemoveUserReq
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("updateHuntPilotResponse", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class updateHuntPilotResponse : StandardResponse
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("removeDirectedCallParkResponse", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class removeDirectedCallParkResponse : StandardResponse
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("getSIPRealm", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class getSIPRealm : GetSIPRealmReq
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("addVoiceMailProfileResponse", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class addVoiceMailProfileResponse : StandardResponse
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("listAllProcessNodes", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class listAllProcessNodes : ListAllProcessNodesReq
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("updateUserResponse", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class updateUserResponse : StandardResponse
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("listUserByName", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class listUserByName : ListUserByNameReq
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("addGatewayEndpointResponse", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class addGatewayEndpointResponse : StandardResponse
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("removeSIPRealm", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class removeSIPRealm : RemoveSIPRealmReq
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("updateTimeSchedule", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class updateTimeSchedule : UpdateTimeScheduleReq
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("addRouteListResponse", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class addRouteListResponse : StandardResponse
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("getVoiceMailPilot", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class getVoiceMailPilot : GetVoiceMailPilotReq
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("addMGCPUnitResponse", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class addMGCPUnitResponse : StandardResponse
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("updateVoiceMailPilot", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class updateVoiceMailPilot : UpdateVoiceMailPilotReq
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("removeCallerFilterList", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class removeCallerFilterList : NameAndGUIDRequest
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("updateVoiceMailPortResponse", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class updateVoiceMailPortResponse : StandardResponse
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("updateSIPTrunkResponse", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class updateSIPTrunkResponse : StandardResponse
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("removeMOHServer", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class removeMOHServer : NameAndGUIDRequest
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("updatePilotPointResponse", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class updatePilotPointResponse : StandardResponse
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("updateGatekeeperResponse", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class updateGatekeeperResponse : StandardResponse
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("updateCallPark", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class updateCallPark : UpdateCallParkReq
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("removeConferenceBridge", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class removeConferenceBridge : RemoveConferenceBridgeReq
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("updateCallerFilterListResponse", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class updateCallerFilterListResponse : StandardResponse
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("getH323TrunkResponse", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class getH323TrunkResponse : GetH323Trunk
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("addMediaResourceListResponse", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class addMediaResourceListResponse : StandardResponse
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("addRouteFilterResponse", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class addRouteFilterResponse : StandardResponse
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("removeAttendantConsoleUserResponse", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class removeAttendantConsoleUserResponse : StandardResponse
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("updateH323GatewayResponse", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class updateH323GatewayResponse : StandardResponse
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("getFACInfoResponse", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class getFACInfoResponse : GetFACInfoRes
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("removeProcessNodeResponse", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class removeProcessNodeResponse : StandardResponse
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("addH323GatewayResponse", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class addH323GatewayResponse : StandardResponse
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("removeDeviceProfileResponse", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class removeDeviceProfileResponse : StandardResponse
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("addGatewayEndpoint", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class addGatewayEndpoint : AddGatewayEndpointReq
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("getDirectedCallPark", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class getDirectedCallPark : GetDirectedCallParkReq
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("removeDirectedCallPark", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class removeDirectedCallPark : RemoveDirectedCallParkReq
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("addCallerFilterList", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class addCallerFilterList : AddCallerFilterListReq
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("removeH323Phone", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class removeH323Phone : NameAndGUIDRequest
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("updateTimeScheduleResponse", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class updateTimeScheduleResponse : StandardResponse
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("updateTransformationPatternResponse", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class updateTransformationPatternResponse : StandardResponse
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("listPhoneTemplateByName", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class listPhoneTemplateByName : ListBySearchString
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("getProcessNodeServiceResponse", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class getProcessNodeServiceResponse : GetProcessNodeServiceRes
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("getCTIRoutePointResponse", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class getCTIRoutePointResponse : GetCTIRoutePointRes
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("removeCMCInfo", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class removeCMCInfo : GUIDRequest
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("getHuntListResponse", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class getHuntListResponse : GetHuntListRes
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("addLineGroup", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class addLineGroup : AddLineGroupReq
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("addLocationResponse", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class addLocationResponse : StandardResponse
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("doAuthenticateUser", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class doAuthenticateUser : AuthenticateUserReq
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("removeSIPRealmResponse", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class removeSIPRealmResponse : StandardResponse
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("updateRouteFilterResponse", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class updateRouteFilterResponse : StandardResponse
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("getTransformationPatternResponse", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class getTransformationPatternResponse : GetTransformationPatternRes
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("listPhoneByDescription", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class listPhoneByDescription : ListPhoneByDescriptionReq
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("listDeviceByNameAndClass", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class listDeviceByNameAndClass : ListDeviceByNameAndClassReq
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("addFACInfoResponse", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class addFACInfoResponse : StandardResponse
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("addMGCPResponse", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class addMGCPResponse : StandardResponse
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("listMediaResourceGroupByName", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class listMediaResourceGroupByName : ListBySearchString
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("addRouteList", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class addRouteList : AddRouteListReq
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("addProcessNode", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class addProcessNode : AddProcessNodeReq
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("updateH323TrunkResponse", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class updateH323TrunkResponse : StandardResponse
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("listMediaResourceListByName", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class listMediaResourceListByName : ListBySearchString
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("removeHuntPilot", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class removeHuntPilot : RemoveHuntPilotReq
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("addPhoneResponse", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class addPhoneResponse : StandardResponse
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("addUserResponse", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class addUserResponse : StandardResponse
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("updateMOHServer", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class updateMOHServer : UpdateMOHServerReq
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("getNumDevicesResponse", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class getNumDevicesResponse : GetNumDevicesRes
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("updateRecordingProfile", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class updateRecordingProfile : UpdateRecordingProfileReq
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("removeHuntListResponse", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class removeHuntListResponse : StandardResponse
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("addMediaResourceGroupResponse", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class addMediaResourceGroupResponse : StandardResponse
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("updateCTIRoutePoint", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class updateCTIRoutePoint : UpdateCTIRoutePointReq
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("getRouteFilter", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class getRouteFilter : NameAndGUIDRequest
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("addUserGroup", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class addUserGroup : AddUserGroupReq
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("removeProcessNode", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class removeProcessNode : NameAndGUIDRequest
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("removeTimePeriodResponse", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class removeTimePeriodResponse : StandardResponse
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("removeTransPatternResponse", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class removeTransPatternResponse : StandardResponse
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("getRoutePatternResponse", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class getRoutePatternResponse : GetRoutePatternRes
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("addLineGroupResponse", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class addLineGroupResponse : StandardResponse
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("removeDevicePoolResponse", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class removeDevicePoolResponse : StandardResponse
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("removeRoutePartitionResponse", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class removeRoutePartitionResponse : StandardResponse
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("updateAppUser", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class updateAppUser : UpdateAppUserReq
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("updateRecordingProfileResponse", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class updateRecordingProfileResponse : StandardResponse
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("getCallParkResponse", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class getCallParkResponse : GetCallParkRes
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("updateVoiceMailProfileResponse", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class updateVoiceMailProfileResponse : StandardResponse
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("getPhysicalLocationResponse", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class getPhysicalLocationResponse : GetPhysicalLocationRes
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("addPhone", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class addPhone : AddPhoneReq
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("updateMOHAudioSourceResponse", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class updateMOHAudioSourceResponse : StandardResponse
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("updateRegionMatrixResponse", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class updateRegionMatrixResponse : StandardResponse
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("getAttendantConsoleUser", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class getAttendantConsoleUser : GetAttendantConsoleUserReq
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("addCSSResponse", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class addCSSResponse : StandardResponse
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("addCSS", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class addCSS : AddCSSReq
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("updateSIPTrunk", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class updateSIPTrunk : UpdateSIPTrunkReq
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("updateTransPatternResponse", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class updateTransPatternResponse : StandardResponse
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("getDeviceMobilityResponse", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class getDeviceMobilityResponse : GetDeviceMobilityRes
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("addSIPTrunkResponse", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class addSIPTrunkResponse : StandardResponse
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("addCMCInfo", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class addCMCInfo : AddCMCInfoReq
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("getMeetMe", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class getMeetMe : GetMeetMeReq
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("removeCTIRoutePointResponse", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class removeCTIRoutePointResponse : StandardResponse
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("getTransformationPattern", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class getTransformationPattern : GetTransformationPatternReq
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("listLocationByNameResponse", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class listLocationByNameResponse : ListLocationRes
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("doDeviceLogoutResponse", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class doDeviceLogoutResponse : DeviceLogoutRes
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("updateVoiceMailPort", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class updateVoiceMailPort : UpdateVoiceMailPortReq
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("removeLine", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class removeLine : RemoveLineReq
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("listRoutePlanByTypeResponse", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class listRoutePlanByTypeResponse : ListRoutePlanByTypeRes
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("removePhone", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class removePhone : RemovePhoneReq
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("updateTimePeriodResponse", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class updateTimePeriodResponse : StandardResponse
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("getTimeScheduleResponse", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class getTimeScheduleResponse : GetTimeScheduleRes
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("getDeviceMobility", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class getDeviceMobility : NameAndGUIDRequest
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("addLineResponse", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class addLineResponse : StandardResponse
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("updateDevicePool", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class updateDevicePool : UpdateDevicePoolReq
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("listMediaResourceGroupByNameResponse", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class listMediaResourceGroupByNameResponse : ListMediaResourceGroupRes
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("getDevicePool", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class getDevicePool : NameAndGUIDRequest
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("updateDeviceMobilityGroup", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class updateDeviceMobilityGroup : UpdateDeviceMobilityGroupReq
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("updateCallPickupGroupResponse", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class updateCallPickupGroupResponse : StandardResponse
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("getDDIResponse", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class getDDIResponse : GetDDIRes
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("addTransPattern", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class addTransPattern : AddTransPatternReq
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("listDevicePoolByName", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class listDevicePoolByName : ListBySearchString
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("updateMOHAudioSource", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class updateMOHAudioSource : UpdateMOHAudioSourceReq
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("updateMGCP", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class updateMGCP : UpdateMGCPReq
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("removeRecordingProfile", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class removeRecordingProfile : RemoveRecordingProfileReq
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("addDirectedCallPark", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class addDirectedCallPark : AddDirectedCallParkReq
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("updateHuntListResponse", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class updateHuntListResponse : StandardResponse
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("listPhoneByDescriptionResponse", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class listPhoneByDescriptionResponse : ListPhoneByDescriptionRes
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("getUserGroup", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class getUserGroup : NameAndGUIDRequest
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("listGatekeeperByNameResponse", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class listGatekeeperByNameResponse : ListGatekeeperRes
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("addRouteGroup", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class addRouteGroup : AddRouteGroupReq
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("updateCSSResponse", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class updateCSSResponse : StandardResponse
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("getUserResponse", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class getUserResponse : GetUserRes
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("removePhysicalLocationResponse", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class removePhysicalLocationResponse : StandardResponse
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("getGatekeeper", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class getGatekeeper : NameAndGUIDRequest
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("removePhysicalLocation", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class removePhysicalLocation : NameAndGUIDRequest
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("getDialPlanTagResponse", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class getDialPlanTagResponse : GetDialPlanTagRes
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("removeMGCPEndpointResponse", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class removeMGCPEndpointResponse : StandardResponse
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("getCallManagerGroup", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class getCallManagerGroup : NameAndGUIDRequest
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("addTimeSchedule", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class addTimeSchedule : AddTimeScheduleReq
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("removeCallerFilterListResponse", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class removeCallerFilterListResponse : StandardResponse
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("getH323PhoneResponse", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class getH323PhoneResponse : GetH323PhoneRes
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("getDialPlan", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class getDialPlan : NameAndGUIDRequest
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("updateDeviceProfile", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class updateDeviceProfile : UpdateDeviceProfileReq
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("removeRegion", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class removeRegion : NameAndGUIDRequest
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("removeUserGroup", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class removeUserGroup : NameAndGUIDRequest
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("getRegion", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class getRegion : NameAndGUIDRequest
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("getNumDevices", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class getNumDevices : GetNumDevicesReq
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("updateDeviceMobilityGroupResponse", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class updateDeviceMobilityGroupResponse : StandardResponse
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("updateCallManager", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class updateCallManager : UpdateCallManagerReq
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("getMobileVoiceAccess", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class getMobileVoiceAccess : GetMobileVoiceAccessReq
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("addSIPRealm", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class addSIPRealm : AddSIPRealmReq
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("getDialPlanTag", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class getDialPlanTag : getDialPlanTagReq
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("removeFACInfo", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class removeFACInfo : GUIDRequest
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("getCallPickupGroupResponse", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class getCallPickupGroupResponse : GetCallPickupGroupRes
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("updateProcessNodeService", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class updateProcessNodeService : UpdateProcessNodeServiceReq
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("addRegion", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class addRegion : AddRegionReq
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("getMediaResourceListResponse", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class getMediaResourceListResponse : GetMediaResourceListRes
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("removeCTIRoutePoint", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class removeCTIRoutePoint : NameAndGUIDRequest
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("getRouteList", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class getRouteList : NameAndGUIDRequest
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("getProcessNodeResponse", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class getProcessNodeResponse : GetProcessNodeRes
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("addConferenceBridge", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class addConferenceBridge : AddConferenceBridgeReq
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("updateH323Trunk", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class updateH323Trunk : UpdateH323TrunkReq
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("listPhoneByName", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class listPhoneByName : ListPhoneByNameReq
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("removeMediaResourceGroup", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class removeMediaResourceGroup : NameAndGUIDRequest
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("updateMobility", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class updateMobility : UpdateMobilityReq
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("updateProcessNodeResponse", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class updateProcessNodeResponse : StandardResponse
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("getPhoneResponse", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class getPhoneResponse : GetPhoneRes
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("updateLicenseCapabilitiesResponse", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class updateLicenseCapabilitiesResponse : StandardResponse
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("updateUserGroupResponse", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class updateUserGroupResponse : StandardResponse
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("updatePhoneTemplate", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class updatePhoneTemplate : UpdatePhoneTemplateReq
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("getSIPRealmResponse", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class getSIPRealmResponse : GetSIPRealmRes
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("getRegionResponse", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class getRegionResponse : GetRegionRes
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("updateServiceParameter", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class updateServiceParameter : UpdateServiceParameterReq
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("removeMOHAudioSource", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class removeMOHAudioSource : GetMOHAudioSourceByIDAndSourceReq
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("doDeviceResetResponse", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class doDeviceResetResponse : DeviceResetRes
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("getLineGroupResponse", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class getLineGroupResponse : GetLineGroupRes
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("listProcessNodesByService", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class listProcessNodesByService : ListProcessNodesByServiceReq
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("removeConferenceBridgeResponse", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class removeConferenceBridgeResponse : StandardResponse
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("addHuntPilotResponse", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class addHuntPilotResponse : StandardResponse
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("removeCommonDeviceConfigResponse", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class removeCommonDeviceConfigResponse : StandardResponse
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("listRoutePlanByType", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class listRoutePlanByType : ListRoutePlanByTypeReq
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("updateLineResponse", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class updateLineResponse : StandardResponse
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("removeMGCP", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class removeMGCP : RemoveMGCPReq
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("removeMeetMeResponse", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class removeMeetMeResponse : StandardResponse
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("removeGatekeeperResponse", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class removeGatekeeperResponse : StandardResponse
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("updateServiceParameterResponse", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class updateServiceParameterResponse : StandardResponse
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("removeH323GatewayResponse", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class removeH323GatewayResponse : StandardResponse
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("updateDirectedCallParkResponse", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class updateDirectedCallParkResponse : StandardResponse
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("addUserGroupResponse", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class addUserGroupResponse : StandardResponse
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("removeH323Gateway", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class removeH323Gateway : NameAndGUIDRequest
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("removeRouteFilterResponse", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class removeRouteFilterResponse : StandardResponse
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("getUserGroupResponse", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class getUserGroupResponse : GetUserGroupRes
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("doDeviceReset", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class doDeviceReset : DeviceResetReq
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("addDevicePool", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class addDevicePool : AddDevicePoolReq
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("addMediaResourceList", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class addMediaResourceList : AddMediaResourceListReq
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("getTransPatternResponse", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class getTransPatternResponse : GetTransPatternRes
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("addMeetMe", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class addMeetMe : AddMeetMeReq
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("addCTIRoutePoint", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class addCTIRoutePoint : AddCTIRoutePointReq
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("addTimePeriod", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class addTimePeriod : AddTimePeriodReq
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("addDirectedCallParkResponse", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class addDirectedCallParkResponse : StandardResponse
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("updateLine", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class updateLine : UpdateLineReq
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("removeTransPattern", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class removeTransPattern : RemoveTransPatternReq
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("addH323Gateway", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class addH323Gateway : AddH323GatewayReq
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("updateCallManagerGroup", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class updateCallManagerGroup : UpdateCallManagerGroupReq
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("updateCTIRoutePointResponse", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class updateCTIRoutePointResponse : StandardResponse
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("getRecordingProfileResponse", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class getRecordingProfileResponse : GetRecordingProfileRes
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("getConferenceBridge", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class getConferenceBridge : GetConferenceBridgeReq
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("updateMediaResourceList", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class updateMediaResourceList : UpdateMediaResourceListReq
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("updateCommonDeviceConfig", Namespace = "http://www.cisco.com/AXL/API/1.0")]
    public class updateCommonDeviceConfig : UpdateCommonDeviceConfigReq
    {
    }

    [SoapService("http://www.cisco.com/AXLAPIService/")]
    public class AXLAPIService : SoapClient
    {

        public class BruteForcePolicy : System.Net.ICertificatePolicy
		{
			public bool CheckValidationResult(System.Net.ServicePoint sp, System.Security.Cryptography.X509Certificates.X509Certificate cert,
				System.Net.WebRequest request, int problem)
			{        
				return true;
			}
		}

		public string TargetNamespace
		{
			get { return SoapServiceAttribute.TargetNamespace; } 
		}

		public AXLAPIService(string callManagerIP, string username, string password) : base( new Uri("https://" + callManagerIP + ":8443/axl/") )
		{

            System.Net.ServicePointManager.ServerCertificateValidationCallback =
              new System.Net.Security.RemoteCertificateValidationCallback(MetreosCertificatePolicy.ValidateCertificate);

            SoapHttpOutputChannel channel = this.Channel as SoapHttpOutputChannel;
            channel.Options.PreAuthenticate = true;
            channel.Options.KeepAlive = false;
            channel.Options.Credentials = new System.Net.NetworkCredential(username, password);
        }

        [SoapMethod("addPhone")]
        public addPhoneResponse addPhone(addPhone request)
        {
            return (addPhoneResponse)base.SendRequestResponse("addPhone", request).GetBodyObject(typeof(addPhoneResponse), SoapServiceAttribute.TargetNamespace);
        }

        public IAsyncResult BeginaddPhone(addPhone request, System.AsyncCallback callback, object asyncState)
        {
            return base.BeginSendRequestResponse("addPhone", request, callback, asyncState);
        }

        public addPhoneResponse EndaddPhone(System.IAsyncResult asyncResult)
        {
            return (addPhoneResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject(typeof(addPhoneResponse), SoapServiceAttribute.TargetNamespace);
        }

        [SoapMethod("removePhone")]
        public removePhoneResponse removePhone(removePhone request)
        {
            return (removePhoneResponse)base.SendRequestResponse("removePhone", request).GetBodyObject(typeof(removePhoneResponse), SoapServiceAttribute.TargetNamespace);
        }

        public IAsyncResult BeginremovePhone(removePhone request, System.AsyncCallback callback, object asyncState)
        {
            return base.BeginSendRequestResponse("removePhone", request, callback, asyncState);
        }

        public removePhoneResponse EndremovePhone(System.IAsyncResult asyncResult)
        {
            return (removePhoneResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject(typeof(removePhoneResponse), SoapServiceAttribute.TargetNamespace);
        }

        [SoapMethod("updatePhone")]
        public updatePhoneResponse updatePhone(updatePhone request)
        {
            return (updatePhoneResponse)base.SendRequestResponse("updatePhone", request).GetBodyObject(typeof(updatePhoneResponse), SoapServiceAttribute.TargetNamespace);
        }

        public IAsyncResult BeginupdatePhone(updatePhone request, System.AsyncCallback callback, object asyncState)
        {
            return base.BeginSendRequestResponse("updatePhone", request, callback, asyncState);
        }

        public updatePhoneResponse EndupdatePhone(System.IAsyncResult asyncResult)
        {
            return (updatePhoneResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject(typeof(updatePhoneResponse), SoapServiceAttribute.TargetNamespace);
        }

        [SoapMethod("getPhone")]
        public getPhoneResponse getPhone(getPhone request)
        {
            return (getPhoneResponse)base.SendRequestResponse("getPhone", request).GetBodyObject(typeof(getPhoneResponse), SoapServiceAttribute.TargetNamespace);
        }

        public IAsyncResult BegingetPhone(getPhone request, System.AsyncCallback callback, object asyncState)
        {
            return base.BeginSendRequestResponse("getPhone", request, callback, asyncState);
        }

        public getPhoneResponse EndgetPhone(System.IAsyncResult asyncResult)
        {
            return (getPhoneResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject(typeof(getPhoneResponse), SoapServiceAttribute.TargetNamespace);
        }

        [SoapMethod("addCallerFilterList")]
        public addCallerFilterListResponse addCallerFilterList(addCallerFilterList request)
        {
            return (addCallerFilterListResponse)base.SendRequestResponse("addCallerFilterList", request).GetBodyObject(typeof(addCallerFilterListResponse), SoapServiceAttribute.TargetNamespace);
        }

        public IAsyncResult BeginaddCallerFilterList(addCallerFilterList request, System.AsyncCallback callback, object asyncState)
        {
            return base.BeginSendRequestResponse("addCallerFilterList", request, callback, asyncState);
        }

        public addCallerFilterListResponse EndaddCallerFilterList(System.IAsyncResult asyncResult)
        {
            return (addCallerFilterListResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject(typeof(addCallerFilterListResponse), SoapServiceAttribute.TargetNamespace);
        }

        [SoapMethod("getCallerFilterList")]
        public getCallerFilterListResponse getCallerFilterList(getCallerFilterList request)
        {
            return (getCallerFilterListResponse)base.SendRequestResponse("getCallerFilterList", request).GetBodyObject(typeof(getCallerFilterListResponse), SoapServiceAttribute.TargetNamespace);
        }

        public IAsyncResult BegingetCallerFilterList(getCallerFilterList request, System.AsyncCallback callback, object asyncState)
        {
            return base.BeginSendRequestResponse("getCallerFilterList", request, callback, asyncState);
        }

        public getCallerFilterListResponse EndgetCallerFilterList(System.IAsyncResult asyncResult)
        {
            return (getCallerFilterListResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject(typeof(getCallerFilterListResponse), SoapServiceAttribute.TargetNamespace);
        }

        [SoapMethod("updateCallerFilterList")]
        public updateCallerFilterListResponse updateCallerFilterList(updateCallerFilterList request)
        {
            return (updateCallerFilterListResponse)base.SendRequestResponse("updateCallerFilterList", request).GetBodyObject(typeof(updateCallerFilterListResponse), SoapServiceAttribute.TargetNamespace);
        }

        public IAsyncResult BeginupdateCallerFilterList(updateCallerFilterList request, System.AsyncCallback callback, object asyncState)
        {
            return base.BeginSendRequestResponse("updateCallerFilterList", request, callback, asyncState);
        }

        public updateCallerFilterListResponse EndupdateCallerFilterList(System.IAsyncResult asyncResult)
        {
            return (updateCallerFilterListResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject(typeof(updateCallerFilterListResponse), SoapServiceAttribute.TargetNamespace);
        }

        [SoapMethod("removeCallerFilterList")]
        public removeCallerFilterListResponse removeCallerFilterList(removeCallerFilterList request)
        {
            return (removeCallerFilterListResponse)base.SendRequestResponse("removeCallerFilterList", request).GetBodyObject(typeof(removeCallerFilterListResponse), SoapServiceAttribute.TargetNamespace);
        }

        public IAsyncResult BeginremoveCallerFilterList(removeCallerFilterList request, System.AsyncCallback callback, object asyncState)
        {
            return base.BeginSendRequestResponse("removeCallerFilterList", request, callback, asyncState);
        }

        public removeCallerFilterListResponse EndremoveCallerFilterList(System.IAsyncResult asyncResult)
        {
            return (removeCallerFilterListResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject(typeof(removeCallerFilterListResponse), SoapServiceAttribute.TargetNamespace);
        }

        [SoapMethod("addCommonDeviceConfig")]
        public addCommonDeviceConfigResponse addCommonDeviceConfig(addCommonDeviceConfig request)
        {
            return (addCommonDeviceConfigResponse)base.SendRequestResponse("addCommonDeviceConfig", request).GetBodyObject(typeof(addCommonDeviceConfigResponse), SoapServiceAttribute.TargetNamespace);
        }

        public IAsyncResult BeginaddCommonDeviceConfig(addCommonDeviceConfig request, System.AsyncCallback callback, object asyncState)
        {
            return base.BeginSendRequestResponse("addCommonDeviceConfig", request, callback, asyncState);
        }

        public addCommonDeviceConfigResponse EndaddCommonDeviceConfig(System.IAsyncResult asyncResult)
        {
            return (addCommonDeviceConfigResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject(typeof(addCommonDeviceConfigResponse), SoapServiceAttribute.TargetNamespace);
        }

        [SoapMethod("getCommonDeviceConfig")]
        public getCommonDeviceConfigResponse getCommonDeviceConfig(getCommonDeviceConfig request)
        {
            return (getCommonDeviceConfigResponse)base.SendRequestResponse("getCommonDeviceConfig", request).GetBodyObject(typeof(getCommonDeviceConfigResponse), SoapServiceAttribute.TargetNamespace);
        }

        public IAsyncResult BegingetCommonDeviceConfig(getCommonDeviceConfig request, System.AsyncCallback callback, object asyncState)
        {
            return base.BeginSendRequestResponse("getCommonDeviceConfig", request, callback, asyncState);
        }

        public getCommonDeviceConfigResponse EndgetCommonDeviceConfig(System.IAsyncResult asyncResult)
        {
            return (getCommonDeviceConfigResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject(typeof(getCommonDeviceConfigResponse), SoapServiceAttribute.TargetNamespace);
        }

        [SoapMethod("removeCommonDeviceConfig")]
        public removeCommonDeviceConfigResponse removeCommonDeviceConfig(removeCommonDeviceConfig request)
        {
            return (removeCommonDeviceConfigResponse)base.SendRequestResponse("removeCommonDeviceConfig", request).GetBodyObject(typeof(removeCommonDeviceConfigResponse), SoapServiceAttribute.TargetNamespace);
        }

        public IAsyncResult BeginremoveCommonDeviceConfig(removeCommonDeviceConfig request, System.AsyncCallback callback, object asyncState)
        {
            return base.BeginSendRequestResponse("removeCommonDeviceConfig", request, callback, asyncState);
        }

        public removeCommonDeviceConfigResponse EndremoveCommonDeviceConfig(System.IAsyncResult asyncResult)
        {
            return (removeCommonDeviceConfigResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject(typeof(removeCommonDeviceConfigResponse), SoapServiceAttribute.TargetNamespace);
        }

        [SoapMethod("updateCommonDeviceConfig")]
        public updateCommonDeviceConfigResponse updateCommonDeviceConfig(updateCommonDeviceConfig request)
        {
            return (updateCommonDeviceConfigResponse)base.SendRequestResponse("updateCommonDeviceConfig", request).GetBodyObject(typeof(updateCommonDeviceConfigResponse), SoapServiceAttribute.TargetNamespace);
        }

        public IAsyncResult BeginupdateCommonDeviceConfig(updateCommonDeviceConfig request, System.AsyncCallback callback, object asyncState)
        {
            return base.BeginSendRequestResponse("updateCommonDeviceConfig", request, callback, asyncState);
        }

        public updateCommonDeviceConfigResponse EndupdateCommonDeviceConfig(System.IAsyncResult asyncResult)
        {
            return (updateCommonDeviceConfigResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject(typeof(updateCommonDeviceConfigResponse), SoapServiceAttribute.TargetNamespace);
        }

        [SoapMethod("addDeviceMobility")]
        public addDeviceMobilityResponse addDeviceMobility(addDeviceMobility request)
        {
            return (addDeviceMobilityResponse)base.SendRequestResponse("addDeviceMobility", request).GetBodyObject(typeof(addDeviceMobilityResponse), SoapServiceAttribute.TargetNamespace);
        }

        public IAsyncResult BeginaddDeviceMobility(addDeviceMobility request, System.AsyncCallback callback, object asyncState)
        {
            return base.BeginSendRequestResponse("addDeviceMobility", request, callback, asyncState);
        }

        public addDeviceMobilityResponse EndaddDeviceMobility(System.IAsyncResult asyncResult)
        {
            return (addDeviceMobilityResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject(typeof(addDeviceMobilityResponse), SoapServiceAttribute.TargetNamespace);
        }

        [SoapMethod("getDeviceMobility")]
        public getDeviceMobilityResponse getDeviceMobility(getDeviceMobility request)
        {
            return (getDeviceMobilityResponse)base.SendRequestResponse("getDeviceMobility", request).GetBodyObject(typeof(getDeviceMobilityResponse), SoapServiceAttribute.TargetNamespace);
        }

        public IAsyncResult BegingetDeviceMobility(getDeviceMobility request, System.AsyncCallback callback, object asyncState)
        {
            return base.BeginSendRequestResponse("getDeviceMobility", request, callback, asyncState);
        }

        public getDeviceMobilityResponse EndgetDeviceMobility(System.IAsyncResult asyncResult)
        {
            return (getDeviceMobilityResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject(typeof(getDeviceMobilityResponse), SoapServiceAttribute.TargetNamespace);
        }

        [SoapMethod("removeDeviceMobility")]
        public removeDeviceMobilityResponse removeDeviceMobility(removeDeviceMobility request)
        {
            return (removeDeviceMobilityResponse)base.SendRequestResponse("removeDeviceMobility", request).GetBodyObject(typeof(removeDeviceMobilityResponse), SoapServiceAttribute.TargetNamespace);
        }

        public IAsyncResult BeginremoveDeviceMobility(removeDeviceMobility request, System.AsyncCallback callback, object asyncState)
        {
            return base.BeginSendRequestResponse("removeDeviceMobility", request, callback, asyncState);
        }

        public removeDeviceMobilityResponse EndremoveDeviceMobility(System.IAsyncResult asyncResult)
        {
            return (removeDeviceMobilityResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject(typeof(removeDeviceMobilityResponse), SoapServiceAttribute.TargetNamespace);
        }

        [SoapMethod("updateDeviceMobility")]
        public updateDeviceMobilityResponse updateDeviceMobility(updateDeviceMobility request)
        {
            return (updateDeviceMobilityResponse)base.SendRequestResponse("updateDeviceMobility", request).GetBodyObject(typeof(updateDeviceMobilityResponse), SoapServiceAttribute.TargetNamespace);
        }

        public IAsyncResult BeginupdateDeviceMobility(updateDeviceMobility request, System.AsyncCallback callback, object asyncState)
        {
            return base.BeginSendRequestResponse("updateDeviceMobility", request, callback, asyncState);
        }

        public updateDeviceMobilityResponse EndupdateDeviceMobility(System.IAsyncResult asyncResult)
        {
            return (updateDeviceMobilityResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject(typeof(updateDeviceMobilityResponse), SoapServiceAttribute.TargetNamespace);
        }

        [SoapMethod("addDeviceMobilityGroup")]
        public addDeviceMobilityGroupResponse addDeviceMobilityGroup(addDeviceMobilityGroup request)
        {
            return (addDeviceMobilityGroupResponse)base.SendRequestResponse("addDeviceMobilityGroup", request).GetBodyObject(typeof(addDeviceMobilityGroupResponse), SoapServiceAttribute.TargetNamespace);
        }

        public IAsyncResult BeginaddDeviceMobilityGroup(addDeviceMobilityGroup request, System.AsyncCallback callback, object asyncState)
        {
            return base.BeginSendRequestResponse("addDeviceMobilityGroup", request, callback, asyncState);
        }

        public addDeviceMobilityGroupResponse EndaddDeviceMobilityGroup(System.IAsyncResult asyncResult)
        {
            return (addDeviceMobilityGroupResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject(typeof(addDeviceMobilityGroupResponse), SoapServiceAttribute.TargetNamespace);
        }

        [SoapMethod("getDeviceMobilityGroup")]
        public getDeviceMobilityGroupResponse getDeviceMobilityGroup(getDeviceMobilityGroup request)
        {
            return (getDeviceMobilityGroupResponse)base.SendRequestResponse("getDeviceMobilityGroup", request).GetBodyObject(typeof(getDeviceMobilityGroupResponse), SoapServiceAttribute.TargetNamespace);
        }

        public IAsyncResult BegingetDeviceMobilityGroup(getDeviceMobilityGroup request, System.AsyncCallback callback, object asyncState)
        {
            return base.BeginSendRequestResponse("getDeviceMobilityGroup", request, callback, asyncState);
        }

        public getDeviceMobilityGroupResponse EndgetDeviceMobilityGroup(System.IAsyncResult asyncResult)
        {
            return (getDeviceMobilityGroupResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject(typeof(getDeviceMobilityGroupResponse), SoapServiceAttribute.TargetNamespace);
        }

        [SoapMethod("removeDeviceMobilityGroup")]
        public removeDeviceMobilityGroupResponse removeDeviceMobilityGroup(removeDeviceMobilityGroup request)
        {
            return (removeDeviceMobilityGroupResponse)base.SendRequestResponse("removeDeviceMobilityGroup", request).GetBodyObject(typeof(removeDeviceMobilityGroupResponse), SoapServiceAttribute.TargetNamespace);
        }

        public IAsyncResult BeginremoveDeviceMobilityGroup(removeDeviceMobilityGroup request, System.AsyncCallback callback, object asyncState)
        {
            return base.BeginSendRequestResponse("removeDeviceMobilityGroup", request, callback, asyncState);
        }

        public removeDeviceMobilityGroupResponse EndremoveDeviceMobilityGroup(System.IAsyncResult asyncResult)
        {
            return (removeDeviceMobilityGroupResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject(typeof(removeDeviceMobilityGroupResponse), SoapServiceAttribute.TargetNamespace);
        }

        [SoapMethod("updateDeviceMobilityGroup")]
        public updateDeviceMobilityGroupResponse updateDeviceMobilityGroup(updateDeviceMobilityGroup request)
        {
            return (updateDeviceMobilityGroupResponse)base.SendRequestResponse("updateDeviceMobilityGroup", request).GetBodyObject(typeof(updateDeviceMobilityGroupResponse), SoapServiceAttribute.TargetNamespace);
        }

        public IAsyncResult BeginupdateDeviceMobilityGroup(updateDeviceMobilityGroup request, System.AsyncCallback callback, object asyncState)
        {
            return base.BeginSendRequestResponse("updateDeviceMobilityGroup", request, callback, asyncState);
        }

        public updateDeviceMobilityGroupResponse EndupdateDeviceMobilityGroup(System.IAsyncResult asyncResult)
        {
            return (updateDeviceMobilityGroupResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject(typeof(updateDeviceMobilityGroupResponse), SoapServiceAttribute.TargetNamespace);
        }

        [SoapMethod("addPhysicalLocation")]
        public addPhysicalLocationResponse addPhysicalLocation(addPhysicalLocation request)
        {
            return (addPhysicalLocationResponse)base.SendRequestResponse("addPhysicalLocation", request).GetBodyObject(typeof(addPhysicalLocationResponse), SoapServiceAttribute.TargetNamespace);
        }

        public IAsyncResult BeginaddPhysicalLocation(addPhysicalLocation request, System.AsyncCallback callback, object asyncState)
        {
            return base.BeginSendRequestResponse("addPhysicalLocation", request, callback, asyncState);
        }

        public addPhysicalLocationResponse EndaddPhysicalLocation(System.IAsyncResult asyncResult)
        {
            return (addPhysicalLocationResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject(typeof(addPhysicalLocationResponse), SoapServiceAttribute.TargetNamespace);
        }

        [SoapMethod("getPhysicalLocation")]
        public getPhysicalLocationResponse getPhysicalLocation(getPhysicalLocation request)
        {
            return (getPhysicalLocationResponse)base.SendRequestResponse("getPhysicalLocation", request).GetBodyObject(typeof(getPhysicalLocationResponse), SoapServiceAttribute.TargetNamespace);
        }

        public IAsyncResult BegingetPhysicalLocation(getPhysicalLocation request, System.AsyncCallback callback, object asyncState)
        {
            return base.BeginSendRequestResponse("getPhysicalLocation", request, callback, asyncState);
        }

        public getPhysicalLocationResponse EndgetPhysicalLocation(System.IAsyncResult asyncResult)
        {
            return (getPhysicalLocationResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject(typeof(getPhysicalLocationResponse), SoapServiceAttribute.TargetNamespace);
        }

        [SoapMethod("removePhysicalLocation")]
        public removePhysicalLocationResponse removePhysicalLocation(removePhysicalLocation request)
        {
            return (removePhysicalLocationResponse)base.SendRequestResponse("removePhysicalLocation", request).GetBodyObject(typeof(removePhysicalLocationResponse), SoapServiceAttribute.TargetNamespace);
        }

        public IAsyncResult BeginremovePhysicalLocation(removePhysicalLocation request, System.AsyncCallback callback, object asyncState)
        {
            return base.BeginSendRequestResponse("removePhysicalLocation", request, callback, asyncState);
        }

        public removePhysicalLocationResponse EndremovePhysicalLocation(System.IAsyncResult asyncResult)
        {
            return (removePhysicalLocationResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject(typeof(removePhysicalLocationResponse), SoapServiceAttribute.TargetNamespace);
        }

        [SoapMethod("updatePhysicalLocation")]
        public updatePhysicalLocationResponse updatePhysicalLocation(updatePhysicalLocation request)
        {
            return (updatePhysicalLocationResponse)base.SendRequestResponse("updatePhysicalLocation", request).GetBodyObject(typeof(updatePhysicalLocationResponse), SoapServiceAttribute.TargetNamespace);
        }

        public IAsyncResult BeginupdatePhysicalLocation(updatePhysicalLocation request, System.AsyncCallback callback, object asyncState)
        {
            return base.BeginSendRequestResponse("updatePhysicalLocation", request, callback, asyncState);
        }

        public updatePhysicalLocationResponse EndupdatePhysicalLocation(System.IAsyncResult asyncResult)
        {
            return (updatePhysicalLocationResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject(typeof(updatePhysicalLocationResponse), SoapServiceAttribute.TargetNamespace);
        }

        [SoapMethod("addMeetMe")]
        public addMeetMeResponse addMeetMe(addMeetMe request)
        {
            return (addMeetMeResponse)base.SendRequestResponse("addMeetMe", request).GetBodyObject(typeof(addMeetMeResponse), SoapServiceAttribute.TargetNamespace);
        }

        public IAsyncResult BeginaddMeetMe(addMeetMe request, System.AsyncCallback callback, object asyncState)
        {
            return base.BeginSendRequestResponse("addMeetMe", request, callback, asyncState);
        }

        public addMeetMeResponse EndaddMeetMe(System.IAsyncResult asyncResult)
        {
            return (addMeetMeResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject(typeof(addMeetMeResponse), SoapServiceAttribute.TargetNamespace);
        }

        [SoapMethod("updateMeetMe")]
        public updateMeetMeResponse updateMeetMe(updateMeetMe request)
        {
            return (updateMeetMeResponse)base.SendRequestResponse("updateMeetMe", request).GetBodyObject(typeof(updateMeetMeResponse), SoapServiceAttribute.TargetNamespace);
        }

        public IAsyncResult BeginupdateMeetMe(updateMeetMe request, System.AsyncCallback callback, object asyncState)
        {
            return base.BeginSendRequestResponse("updateMeetMe", request, callback, asyncState);
        }

        public updateMeetMeResponse EndupdateMeetMe(System.IAsyncResult asyncResult)
        {
            return (updateMeetMeResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject(typeof(updateMeetMeResponse), SoapServiceAttribute.TargetNamespace);
        }

        [SoapMethod("getMeetMe")]
        public getMeetMeResponse getMeetMe(getMeetMe request)
        {
            return (getMeetMeResponse)base.SendRequestResponse("getMeetMe", request).GetBodyObject(typeof(getMeetMeResponse), SoapServiceAttribute.TargetNamespace);
        }

        public IAsyncResult BegingetMeetMe(getMeetMe request, System.AsyncCallback callback, object asyncState)
        {
            return base.BeginSendRequestResponse("getMeetMe", request, callback, asyncState);
        }

        public getMeetMeResponse EndgetMeetMe(System.IAsyncResult asyncResult)
        {
            return (getMeetMeResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject(typeof(getMeetMeResponse), SoapServiceAttribute.TargetNamespace);
        }

        [SoapMethod("removeMeetMe")]
        public removeMeetMeResponse removeMeetMe(removeMeetMe request)
        {
            return (removeMeetMeResponse)base.SendRequestResponse("removeMeetMe", request).GetBodyObject(typeof(removeMeetMeResponse), SoapServiceAttribute.TargetNamespace);
        }

        public IAsyncResult BeginremoveMeetMe(removeMeetMe request, System.AsyncCallback callback, object asyncState)
        {
            return base.BeginSendRequestResponse("removeMeetMe", request, callback, asyncState);
        }

        public removeMeetMeResponse EndremoveMeetMe(System.IAsyncResult asyncResult)
        {
            return (removeMeetMeResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject(typeof(removeMeetMeResponse), SoapServiceAttribute.TargetNamespace);
        }

        [SoapMethod("addMOHServer")]
        public addMOHServerResponse addMOHServer(addMOHServer request)
        {
            return (addMOHServerResponse)base.SendRequestResponse("addMOHServer", request).GetBodyObject(typeof(addMOHServerResponse), SoapServiceAttribute.TargetNamespace);
        }

        public IAsyncResult BeginaddMOHServer(addMOHServer request, System.AsyncCallback callback, object asyncState)
        {
            return base.BeginSendRequestResponse("addMOHServer", request, callback, asyncState);
        }

        public addMOHServerResponse EndaddMOHServer(System.IAsyncResult asyncResult)
        {
            return (addMOHServerResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject(typeof(addMOHServerResponse), SoapServiceAttribute.TargetNamespace);
        }

        [SoapMethod("updateMOHServer")]
        public updateMOHServerResponse updateMOHServer(updateMOHServer request)
        {
            return (updateMOHServerResponse)base.SendRequestResponse("updateMOHServer", request).GetBodyObject(typeof(updateMOHServerResponse), SoapServiceAttribute.TargetNamespace);
        }

        public IAsyncResult BeginupdateMOHServer(updateMOHServer request, System.AsyncCallback callback, object asyncState)
        {
            return base.BeginSendRequestResponse("updateMOHServer", request, callback, asyncState);
        }

        public updateMOHServerResponse EndupdateMOHServer(System.IAsyncResult asyncResult)
        {
            return (updateMOHServerResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject(typeof(updateMOHServerResponse), SoapServiceAttribute.TargetNamespace);
        }

        [SoapMethod("getMOHServer")]
        public getMOHServerResponse getMOHServer(getMOHServer request)
        {
            return (getMOHServerResponse)base.SendRequestResponse("getMOHServer", request).GetBodyObject(typeof(getMOHServerResponse), SoapServiceAttribute.TargetNamespace);
        }

        public IAsyncResult BegingetMOHServer(getMOHServer request, System.AsyncCallback callback, object asyncState)
        {
            return base.BeginSendRequestResponse("getMOHServer", request, callback, asyncState);
        }

        public getMOHServerResponse EndgetMOHServer(System.IAsyncResult asyncResult)
        {
            return (getMOHServerResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject(typeof(getMOHServerResponse), SoapServiceAttribute.TargetNamespace);
        }

        [SoapMethod("removeMOHServer")]
        public removeMOHServerResponse removeMOHServer(removeMOHServer request)
        {
            return (removeMOHServerResponse)base.SendRequestResponse("removeMOHServer", request).GetBodyObject(typeof(removeMOHServerResponse), SoapServiceAttribute.TargetNamespace);
        }

        public IAsyncResult BeginremoveMOHServer(removeMOHServer request, System.AsyncCallback callback, object asyncState)
        {
            return base.BeginSendRequestResponse("removeMOHServer", request, callback, asyncState);
        }

        public removeMOHServerResponse EndremoveMOHServer(System.IAsyncResult asyncResult)
        {
            return (removeMOHServerResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject(typeof(removeMOHServerResponse), SoapServiceAttribute.TargetNamespace);
        }

        [SoapMethod("addConferenceBridge")]
        public addConferenceBridgeResponse addConferenceBridge(addConferenceBridge request)
        {
            return (addConferenceBridgeResponse)base.SendRequestResponse("addConferenceBridge", request).GetBodyObject(typeof(addConferenceBridgeResponse), SoapServiceAttribute.TargetNamespace);
        }

        public IAsyncResult BeginaddConferenceBridge(addConferenceBridge request, System.AsyncCallback callback, object asyncState)
        {
            return base.BeginSendRequestResponse("addConferenceBridge", request, callback, asyncState);
        }

        public addConferenceBridgeResponse EndaddConferenceBridge(System.IAsyncResult asyncResult)
        {
            return (addConferenceBridgeResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject(typeof(addConferenceBridgeResponse), SoapServiceAttribute.TargetNamespace);
        }

        [SoapMethod("removeConferenceBridge")]
        public removeConferenceBridgeResponse removeConferenceBridge(removeConferenceBridge request)
        {
            return (removeConferenceBridgeResponse)base.SendRequestResponse("removeConferenceBridge", request).GetBodyObject(typeof(removeConferenceBridgeResponse), SoapServiceAttribute.TargetNamespace);
        }

        public IAsyncResult BeginremoveConferenceBridge(removeConferenceBridge request, System.AsyncCallback callback, object asyncState)
        {
            return base.BeginSendRequestResponse("removeConferenceBridge", request, callback, asyncState);
        }

        public removeConferenceBridgeResponse EndremoveConferenceBridge(System.IAsyncResult asyncResult)
        {
            return (removeConferenceBridgeResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject(typeof(removeConferenceBridgeResponse), SoapServiceAttribute.TargetNamespace);
        }

        [SoapMethod("updateConferenceBridge")]
        public updateConferenceBridgeResponse updateConferenceBridge(updateConferenceBridge request)
        {
            return (updateConferenceBridgeResponse)base.SendRequestResponse("updateConferenceBridge", request).GetBodyObject(typeof(updateConferenceBridgeResponse), SoapServiceAttribute.TargetNamespace);
        }

        public IAsyncResult BeginupdateConferenceBridge(updateConferenceBridge request, System.AsyncCallback callback, object asyncState)
        {
            return base.BeginSendRequestResponse("updateConferenceBridge", request, callback, asyncState);
        }

        public updateConferenceBridgeResponse EndupdateConferenceBridge(System.IAsyncResult asyncResult)
        {
            return (updateConferenceBridgeResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject(typeof(updateConferenceBridgeResponse), SoapServiceAttribute.TargetNamespace);
        }

        [SoapMethod("getConferenceBridge")]
        public getConferenceBridgeResponse getConferenceBridge(getConferenceBridge request)
        {
            return (getConferenceBridgeResponse)base.SendRequestResponse("getConferenceBridge", request).GetBodyObject(typeof(getConferenceBridgeResponse), SoapServiceAttribute.TargetNamespace);
        }

        public IAsyncResult BegingetConferenceBridge(getConferenceBridge request, System.AsyncCallback callback, object asyncState)
        {
            return base.BeginSendRequestResponse("getConferenceBridge", request, callback, asyncState);
        }

        public getConferenceBridgeResponse EndgetConferenceBridge(System.IAsyncResult asyncResult)
        {
            return (getConferenceBridgeResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject(typeof(getConferenceBridgeResponse), SoapServiceAttribute.TargetNamespace);
        }

        [SoapMethod("addAttendantConsoleUser")]
        public addAttendantConsoleUserResponse addAttendantConsoleUser(addAttendantConsoleUser request)
        {
            return (addAttendantConsoleUserResponse)base.SendRequestResponse("addAttendantConsoleUser", request).GetBodyObject(typeof(addAttendantConsoleUserResponse), SoapServiceAttribute.TargetNamespace);
        }

        public IAsyncResult BeginaddAttendantConsoleUser(addAttendantConsoleUser request, System.AsyncCallback callback, object asyncState)
        {
            return base.BeginSendRequestResponse("addAttendantConsoleUser", request, callback, asyncState);
        }

        public addAttendantConsoleUserResponse EndaddAttendantConsoleUser(System.IAsyncResult asyncResult)
        {
            return (addAttendantConsoleUserResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject(typeof(addAttendantConsoleUserResponse), SoapServiceAttribute.TargetNamespace);
        }

        [SoapMethod("removeAttendantConsoleUser")]
        public removeAttendantConsoleUserResponse removeAttendantConsoleUser(removeAttendantConsoleUser request)
        {
            return (removeAttendantConsoleUserResponse)base.SendRequestResponse("removeAttendantConsoleUser", request).GetBodyObject(typeof(removeAttendantConsoleUserResponse), SoapServiceAttribute.TargetNamespace);
        }

        public IAsyncResult BeginremoveAttendantConsoleUser(removeAttendantConsoleUser request, System.AsyncCallback callback, object asyncState)
        {
            return base.BeginSendRequestResponse("removeAttendantConsoleUser", request, callback, asyncState);
        }

        public removeAttendantConsoleUserResponse EndremoveAttendantConsoleUser(System.IAsyncResult asyncResult)
        {
            return (removeAttendantConsoleUserResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject(typeof(removeAttendantConsoleUserResponse), SoapServiceAttribute.TargetNamespace);
        }

        [SoapMethod("updateAttendantConsoleUser")]
        public updateAttendantConsoleUserResponse updateAttendantConsoleUser(updateAttendantConsoleUser request)
        {
            return (updateAttendantConsoleUserResponse)base.SendRequestResponse("updateAttendantConsoleUser", request).GetBodyObject(typeof(updateAttendantConsoleUserResponse), SoapServiceAttribute.TargetNamespace);
        }

        public IAsyncResult BeginupdateAttendantConsoleUser(updateAttendantConsoleUser request, System.AsyncCallback callback, object asyncState)
        {
            return base.BeginSendRequestResponse("updateAttendantConsoleUser", request, callback, asyncState);
        }

        public updateAttendantConsoleUserResponse EndupdateAttendantConsoleUser(System.IAsyncResult asyncResult)
        {
            return (updateAttendantConsoleUserResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject(typeof(updateAttendantConsoleUserResponse), SoapServiceAttribute.TargetNamespace);
        }

        [SoapMethod("getAttendantConsoleUser")]
        public getAttendantConsoleUserResponse getAttendantConsoleUser(getAttendantConsoleUser request)
        {
            return (getAttendantConsoleUserResponse)base.SendRequestResponse("getAttendantConsoleUser", request).GetBodyObject(typeof(getAttendantConsoleUserResponse), SoapServiceAttribute.TargetNamespace);
        }

        public IAsyncResult BegingetAttendantConsoleUser(getAttendantConsoleUser request, System.AsyncCallback callback, object asyncState)
        {
            return base.BeginSendRequestResponse("getAttendantConsoleUser", request, callback, asyncState);
        }

        public getAttendantConsoleUserResponse EndgetAttendantConsoleUser(System.IAsyncResult asyncResult)
        {
            return (getAttendantConsoleUserResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject(typeof(getAttendantConsoleUserResponse), SoapServiceAttribute.TargetNamespace);
        }

        [SoapMethod("addAttendantConsoleHuntGroup")]
        public addAttendantConsoleHuntGroupResponse addAttendantConsoleHuntGroup(addAttendantConsoleHuntGroup request)
        {
            return (addAttendantConsoleHuntGroupResponse)base.SendRequestResponse("addAttendantConsoleHuntGroup", request).GetBodyObject(typeof(addAttendantConsoleHuntGroupResponse), SoapServiceAttribute.TargetNamespace);
        }

        public IAsyncResult BeginaddAttendantConsoleHuntGroup(addAttendantConsoleHuntGroup request, System.AsyncCallback callback, object asyncState)
        {
            return base.BeginSendRequestResponse("addAttendantConsoleHuntGroup", request, callback, asyncState);
        }

        public addAttendantConsoleHuntGroupResponse EndaddAttendantConsoleHuntGroup(System.IAsyncResult asyncResult)
        {
            return (addAttendantConsoleHuntGroupResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject(typeof(addAttendantConsoleHuntGroupResponse), SoapServiceAttribute.TargetNamespace);
        }

        [SoapMethod("updateAttendantConsoleHuntGroup")]
        public updateAttendantConsoleHuntGroupResponse updateAttendantConsoleHuntGroup(updateAttendantConsoleHuntGroup request)
        {
            return (updateAttendantConsoleHuntGroupResponse)base.SendRequestResponse("updateAttendantConsoleHuntGroup", request).GetBodyObject(typeof(updateAttendantConsoleHuntGroupResponse), SoapServiceAttribute.TargetNamespace);
        }

        public IAsyncResult BeginupdateAttendantConsoleHuntGroup(updateAttendantConsoleHuntGroup request, System.AsyncCallback callback, object asyncState)
        {
            return base.BeginSendRequestResponse("updateAttendantConsoleHuntGroup", request, callback, asyncState);
        }

        public updateAttendantConsoleHuntGroupResponse EndupdateAttendantConsoleHuntGroup(System.IAsyncResult asyncResult)
        {
            return (updateAttendantConsoleHuntGroupResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject(typeof(updateAttendantConsoleHuntGroupResponse), SoapServiceAttribute.TargetNamespace);
        }

        [SoapMethod("removeAttendantConsoleHuntGroup")]
        public removeAttendantConsoleHuntGroupResponse removeAttendantConsoleHuntGroup(removeAttendantConsoleHuntGroup request)
        {
            return (removeAttendantConsoleHuntGroupResponse)base.SendRequestResponse("removeAttendantConsoleHuntGroup", request).GetBodyObject(typeof(removeAttendantConsoleHuntGroupResponse), SoapServiceAttribute.TargetNamespace);
        }

        public IAsyncResult BeginremoveAttendantConsoleHuntGroup(removeAttendantConsoleHuntGroup request, System.AsyncCallback callback, object asyncState)
        {
            return base.BeginSendRequestResponse("removeAttendantConsoleHuntGroup", request, callback, asyncState);
        }

        public removeAttendantConsoleHuntGroupResponse EndremoveAttendantConsoleHuntGroup(System.IAsyncResult asyncResult)
        {
            return (removeAttendantConsoleHuntGroupResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject(typeof(removeAttendantConsoleHuntGroupResponse), SoapServiceAttribute.TargetNamespace);
        }

        [SoapMethod("getAttendantConsoleHuntGroup")]
        public getAttendantConsoleHuntGroupResponse getAttendantConsoleHuntGroup(getAttendantConsoleHuntGroup request)
        {
            return (getAttendantConsoleHuntGroupResponse)base.SendRequestResponse("getAttendantConsoleHuntGroup", request).GetBodyObject(typeof(getAttendantConsoleHuntGroupResponse), SoapServiceAttribute.TargetNamespace);
        }

        public IAsyncResult BegingetAttendantConsoleHuntGroup(getAttendantConsoleHuntGroup request, System.AsyncCallback callback, object asyncState)
        {
            return base.BeginSendRequestResponse("getAttendantConsoleHuntGroup", request, callback, asyncState);
        }

        public getAttendantConsoleHuntGroupResponse EndgetAttendantConsoleHuntGroup(System.IAsyncResult asyncResult)
        {
            return (getAttendantConsoleHuntGroupResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject(typeof(getAttendantConsoleHuntGroupResponse), SoapServiceAttribute.TargetNamespace);
        }

        [SoapMethod("doDeviceLogin")]
        public doDeviceLoginResponse doDeviceLogin(doDeviceLogin request)
        {
            return (doDeviceLoginResponse)base.SendRequestResponse("doDeviceLogin", request).GetBodyObject(typeof(doDeviceLoginResponse), SoapServiceAttribute.TargetNamespace);
        }

        public IAsyncResult BegindoDeviceLogin(doDeviceLogin request, System.AsyncCallback callback, object asyncState)
        {
            return base.BeginSendRequestResponse("doDeviceLogin", request, callback, asyncState);
        }

        public doDeviceLoginResponse EnddoDeviceLogin(System.IAsyncResult asyncResult)
        {
            return (doDeviceLoginResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject(typeof(doDeviceLoginResponse), SoapServiceAttribute.TargetNamespace);
        }

        [SoapMethod("doDeviceLogout")]
        public doDeviceLogoutResponse doDeviceLogout(doDeviceLogout request)
        {
            return (doDeviceLogoutResponse)base.SendRequestResponse("doDeviceLogout", request).GetBodyObject(typeof(doDeviceLogoutResponse), SoapServiceAttribute.TargetNamespace);
        }

        public IAsyncResult BegindoDeviceLogout(doDeviceLogout request, System.AsyncCallback callback, object asyncState)
        {
            return base.BeginSendRequestResponse("doDeviceLogout", request, callback, asyncState);
        }

        public doDeviceLogoutResponse EnddoDeviceLogout(System.IAsyncResult asyncResult)
        {
            return (doDeviceLogoutResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject(typeof(doDeviceLogoutResponse), SoapServiceAttribute.TargetNamespace);
        }

        [SoapMethod("doDeviceReset")]
        public doDeviceResetResponse doDeviceReset(doDeviceReset request)
        {
            return (doDeviceResetResponse)base.SendRequestResponse("doDeviceReset", request).GetBodyObject(typeof(doDeviceResetResponse), SoapServiceAttribute.TargetNamespace);
        }

        public IAsyncResult BegindoDeviceReset(doDeviceReset request, System.AsyncCallback callback, object asyncState)
        {
            return base.BeginSendRequestResponse("doDeviceReset", request, callback, asyncState);
        }

        public doDeviceResetResponse EnddoDeviceReset(System.IAsyncResult asyncResult)
        {
            return (doDeviceResetResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject(typeof(doDeviceResetResponse), SoapServiceAttribute.TargetNamespace);
        }

        [SoapMethod("doAuthenticateUser")]
        public doAuthenticateUserResponse doAuthenticateUser(doAuthenticateUser request)
        {
            return (doAuthenticateUserResponse)base.SendRequestResponse("doAuthenticateUser", request).GetBodyObject(typeof(doAuthenticateUserResponse), SoapServiceAttribute.TargetNamespace);
        }

        public IAsyncResult BegindoAuthenticateUser(doAuthenticateUser request, System.AsyncCallback callback, object asyncState)
        {
            return base.BeginSendRequestResponse("doAuthenticateUser", request, callback, asyncState);
        }

        public doAuthenticateUserResponse EnddoAuthenticateUser(System.IAsyncResult asyncResult)
        {
            return (doAuthenticateUserResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject(typeof(doAuthenticateUserResponse), SoapServiceAttribute.TargetNamespace);
        }

        [SoapMethod("addLine")]
        public addLineResponse addLine(addLine request)
        {
            return (addLineResponse)base.SendRequestResponse("addLine", request).GetBodyObject(typeof(addLineResponse), SoapServiceAttribute.TargetNamespace);
        }

        public IAsyncResult BeginaddLine(addLine request, System.AsyncCallback callback, object asyncState)
        {
            return base.BeginSendRequestResponse("addLine", request, callback, asyncState);
        }

        public addLineResponse EndaddLine(System.IAsyncResult asyncResult)
        {
            return (addLineResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject(typeof(addLineResponse), SoapServiceAttribute.TargetNamespace);
        }

        [SoapMethod("removeLine")]
        public removeLineResponse removeLine(removeLine request)
        {
            return (removeLineResponse)base.SendRequestResponse("removeLine", request).GetBodyObject(typeof(removeLineResponse), SoapServiceAttribute.TargetNamespace);
        }

        public IAsyncResult BeginremoveLine(removeLine request, System.AsyncCallback callback, object asyncState)
        {
            return base.BeginSendRequestResponse("removeLine", request, callback, asyncState);
        }

        public removeLineResponse EndremoveLine(System.IAsyncResult asyncResult)
        {
            return (removeLineResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject(typeof(removeLineResponse), SoapServiceAttribute.TargetNamespace);
        }

        [SoapMethod("updateLine")]
        public updateLineResponse updateLine(updateLine request)
        {
            return (updateLineResponse)base.SendRequestResponse("updateLine", request).GetBodyObject(typeof(updateLineResponse), SoapServiceAttribute.TargetNamespace);
        }

        public IAsyncResult BeginupdateLine(updateLine request, System.AsyncCallback callback, object asyncState)
        {
            return base.BeginSendRequestResponse("updateLine", request, callback, asyncState);
        }

        public updateLineResponse EndupdateLine(System.IAsyncResult asyncResult)
        {
            return (updateLineResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject(typeof(updateLineResponse), SoapServiceAttribute.TargetNamespace);
        }

        [SoapMethod("getLine")]
        public getLineResponse getLine(getLine request)
        {
            return (getLineResponse)base.SendRequestResponse("getLine", request).GetBodyObject(typeof(getLineResponse), SoapServiceAttribute.TargetNamespace);
        }

        public IAsyncResult BegingetLine(getLine request, System.AsyncCallback callback, object asyncState)
        {
            return base.BeginSendRequestResponse("getLine", request, callback, asyncState);
        }

        public getLineResponse EndgetLine(System.IAsyncResult asyncResult)
        {
            return (getLineResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject(typeof(getLineResponse), SoapServiceAttribute.TargetNamespace);
        }

        [SoapMethod("addUser")]
        public addUserResponse addUser(addUser request)
        {
            return (addUserResponse)base.SendRequestResponse("addUser", request).GetBodyObject(typeof(addUserResponse), SoapServiceAttribute.TargetNamespace);
        }

        public IAsyncResult BeginaddUser(addUser request, System.AsyncCallback callback, object asyncState)
        {
            return base.BeginSendRequestResponse("addUser", request, callback, asyncState);
        }

        public addUserResponse EndaddUser(System.IAsyncResult asyncResult)
        {
            return (addUserResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject(typeof(addUserResponse), SoapServiceAttribute.TargetNamespace);
        }

        [SoapMethod("removeUser")]
        public removeUserResponse removeUser(removeUser request)
        {
            return (removeUserResponse)base.SendRequestResponse("removeUser", request).GetBodyObject(typeof(removeUserResponse), SoapServiceAttribute.TargetNamespace);
        }

        public IAsyncResult BeginremoveUser(removeUser request, System.AsyncCallback callback, object asyncState)
        {
            return base.BeginSendRequestResponse("removeUser", request, callback, asyncState);
        }

        public removeUserResponse EndremoveUser(System.IAsyncResult asyncResult)
        {
            return (removeUserResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject(typeof(removeUserResponse), SoapServiceAttribute.TargetNamespace);
        }

        [SoapMethod("updateUser")]
        public updateUserResponse updateUser(updateUser request)
        {
            return (updateUserResponse)base.SendRequestResponse("updateUser", request).GetBodyObject(typeof(updateUserResponse), SoapServiceAttribute.TargetNamespace);
        }

        public IAsyncResult BeginupdateUser(updateUser request, System.AsyncCallback callback, object asyncState)
        {
            return base.BeginSendRequestResponse("updateUser", request, callback, asyncState);
        }

        public updateUserResponse EndupdateUser(System.IAsyncResult asyncResult)
        {
            return (updateUserResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject(typeof(updateUserResponse), SoapServiceAttribute.TargetNamespace);
        }

        [SoapMethod("getUser")]
        public getUserResponse getUser(getUser request)
        {
            return (getUserResponse)base.SendRequestResponse("getUser", request).GetBodyObject(typeof(getUserResponse), SoapServiceAttribute.TargetNamespace);
        }

        public IAsyncResult BegingetUser(getUser request, System.AsyncCallback callback, object asyncState)
        {
            return base.BeginSendRequestResponse("getUser", request, callback, asyncState);
        }

        public getUserResponse EndgetUser(System.IAsyncResult asyncResult)
        {
            return (getUserResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject(typeof(getUserResponse), SoapServiceAttribute.TargetNamespace);
        }

        [SoapMethod("addDeviceProfile")]
        public addDeviceProfileResponse addDeviceProfile(addDeviceProfile request)
        {
            return (addDeviceProfileResponse)base.SendRequestResponse("addDeviceProfile", request).GetBodyObject(typeof(addDeviceProfileResponse), SoapServiceAttribute.TargetNamespace);
        }

        public IAsyncResult BeginaddDeviceProfile(addDeviceProfile request, System.AsyncCallback callback, object asyncState)
        {
            return base.BeginSendRequestResponse("addDeviceProfile", request, callback, asyncState);
        }

        public addDeviceProfileResponse EndaddDeviceProfile(System.IAsyncResult asyncResult)
        {
            return (addDeviceProfileResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject(typeof(addDeviceProfileResponse), SoapServiceAttribute.TargetNamespace);
        }

        [SoapMethod("removeDeviceProfile")]
        public removeDeviceProfileResponse removeDeviceProfile(removeDeviceProfile request)
        {
            return (removeDeviceProfileResponse)base.SendRequestResponse("removeDeviceProfile", request).GetBodyObject(typeof(removeDeviceProfileResponse), SoapServiceAttribute.TargetNamespace);
        }

        public IAsyncResult BeginremoveDeviceProfile(removeDeviceProfile request, System.AsyncCallback callback, object asyncState)
        {
            return base.BeginSendRequestResponse("removeDeviceProfile", request, callback, asyncState);
        }

        public removeDeviceProfileResponse EndremoveDeviceProfile(System.IAsyncResult asyncResult)
        {
            return (removeDeviceProfileResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject(typeof(removeDeviceProfileResponse), SoapServiceAttribute.TargetNamespace);
        }

        [SoapMethod("updateDeviceProfile")]
        public updateDeviceProfileResponse updateDeviceProfile(updateDeviceProfile request)
        {
            return (updateDeviceProfileResponse)base.SendRequestResponse("updateDeviceProfile", request).GetBodyObject(typeof(updateDeviceProfileResponse), SoapServiceAttribute.TargetNamespace);
        }

        public IAsyncResult BeginupdateDeviceProfile(updateDeviceProfile request, System.AsyncCallback callback, object asyncState)
        {
            return base.BeginSendRequestResponse("updateDeviceProfile", request, callback, asyncState);
        }

        public updateDeviceProfileResponse EndupdateDeviceProfile(System.IAsyncResult asyncResult)
        {
            return (updateDeviceProfileResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject(typeof(updateDeviceProfileResponse), SoapServiceAttribute.TargetNamespace);
        }

        [SoapMethod("getDeviceProfile")]
        public getDeviceProfileResponse getDeviceProfile(getDeviceProfile request)
        {
            return (getDeviceProfileResponse)base.SendRequestResponse("getDeviceProfile", request).GetBodyObject(typeof(getDeviceProfileResponse), SoapServiceAttribute.TargetNamespace);
        }

        public IAsyncResult BegingetDeviceProfile(getDeviceProfile request, System.AsyncCallback callback, object asyncState)
        {
            return base.BeginSendRequestResponse("getDeviceProfile", request, callback, asyncState);
        }

        public getDeviceProfileResponse EndgetDeviceProfile(System.IAsyncResult asyncResult)
        {
            return (getDeviceProfileResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject(typeof(getDeviceProfileResponse), SoapServiceAttribute.TargetNamespace);
        }

        [SoapMethod("addTimePeriod")]
        public addTimePeriodResponse addTimePeriod(addTimePeriod request)
        {
            return (addTimePeriodResponse)base.SendRequestResponse("addTimePeriod", request).GetBodyObject(typeof(addTimePeriodResponse), SoapServiceAttribute.TargetNamespace);
        }

        public IAsyncResult BeginaddTimePeriod(addTimePeriod request, System.AsyncCallback callback, object asyncState)
        {
            return base.BeginSendRequestResponse("addTimePeriod", request, callback, asyncState);
        }

        public addTimePeriodResponse EndaddTimePeriod(System.IAsyncResult asyncResult)
        {
            return (addTimePeriodResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject(typeof(addTimePeriodResponse), SoapServiceAttribute.TargetNamespace);
        }

        [SoapMethod("getTimePeriod")]
        public getTimePeriodResponse getTimePeriod(getTimePeriod request)
        {
            return (getTimePeriodResponse)base.SendRequestResponse("getTimePeriod", request).GetBodyObject(typeof(getTimePeriodResponse), SoapServiceAttribute.TargetNamespace);
        }

        public IAsyncResult BegingetTimePeriod(getTimePeriod request, System.AsyncCallback callback, object asyncState)
        {
            return base.BeginSendRequestResponse("getTimePeriod", request, callback, asyncState);
        }

        public getTimePeriodResponse EndgetTimePeriod(System.IAsyncResult asyncResult)
        {
            return (getTimePeriodResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject(typeof(getTimePeriodResponse), SoapServiceAttribute.TargetNamespace);
        }

        [SoapMethod("removeTimePeriod")]
        public removeTimePeriodResponse removeTimePeriod(removeTimePeriod request)
        {
            return (removeTimePeriodResponse)base.SendRequestResponse("removeTimePeriod", request).GetBodyObject(typeof(removeTimePeriodResponse), SoapServiceAttribute.TargetNamespace);
        }

        public IAsyncResult BeginremoveTimePeriod(removeTimePeriod request, System.AsyncCallback callback, object asyncState)
        {
            return base.BeginSendRequestResponse("removeTimePeriod", request, callback, asyncState);
        }

        public removeTimePeriodResponse EndremoveTimePeriod(System.IAsyncResult asyncResult)
        {
            return (removeTimePeriodResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject(typeof(removeTimePeriodResponse), SoapServiceAttribute.TargetNamespace);
        }

        [SoapMethod("updateTimePeriod")]
        public updateTimePeriodResponse updateTimePeriod(updateTimePeriod request)
        {
            return (updateTimePeriodResponse)base.SendRequestResponse("updateTimePeriod", request).GetBodyObject(typeof(updateTimePeriodResponse), SoapServiceAttribute.TargetNamespace);
        }

        public IAsyncResult BeginupdateTimePeriod(updateTimePeriod request, System.AsyncCallback callback, object asyncState)
        {
            return base.BeginSendRequestResponse("updateTimePeriod", request, callback, asyncState);
        }

        public updateTimePeriodResponse EndupdateTimePeriod(System.IAsyncResult asyncResult)
        {
            return (updateTimePeriodResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject(typeof(updateTimePeriodResponse), SoapServiceAttribute.TargetNamespace);
        }

        [SoapMethod("addTimeSchedule")]
        public addTimeScheduleResponse addTimeSchedule(addTimeSchedule request)
        {
            return (addTimeScheduleResponse)base.SendRequestResponse("addTimeSchedule", request).GetBodyObject(typeof(addTimeScheduleResponse), SoapServiceAttribute.TargetNamespace);
        }

        public IAsyncResult BeginaddTimeSchedule(addTimeSchedule request, System.AsyncCallback callback, object asyncState)
        {
            return base.BeginSendRequestResponse("addTimeSchedule", request, callback, asyncState);
        }

        public addTimeScheduleResponse EndaddTimeSchedule(System.IAsyncResult asyncResult)
        {
            return (addTimeScheduleResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject(typeof(addTimeScheduleResponse), SoapServiceAttribute.TargetNamespace);
        }

        [SoapMethod("getTimeSchedule")]
        public getTimeScheduleResponse getTimeSchedule(getTimeSchedule request)
        {
            return (getTimeScheduleResponse)base.SendRequestResponse("getTimeSchedule", request).GetBodyObject(typeof(getTimeScheduleResponse), SoapServiceAttribute.TargetNamespace);
        }

        public IAsyncResult BegingetTimeSchedule(getTimeSchedule request, System.AsyncCallback callback, object asyncState)
        {
            return base.BeginSendRequestResponse("getTimeSchedule", request, callback, asyncState);
        }

        public getTimeScheduleResponse EndgetTimeSchedule(System.IAsyncResult asyncResult)
        {
            return (getTimeScheduleResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject(typeof(getTimeScheduleResponse), SoapServiceAttribute.TargetNamespace);
        }

        [SoapMethod("removeTimeSchedule")]
        public removeTimeScheduleResponse removeTimeSchedule(removeTimeSchedule request)
        {
            return (removeTimeScheduleResponse)base.SendRequestResponse("removeTimeSchedule", request).GetBodyObject(typeof(removeTimeScheduleResponse), SoapServiceAttribute.TargetNamespace);
        }

        public IAsyncResult BeginremoveTimeSchedule(removeTimeSchedule request, System.AsyncCallback callback, object asyncState)
        {
            return base.BeginSendRequestResponse("removeTimeSchedule", request, callback, asyncState);
        }

        public removeTimeScheduleResponse EndremoveTimeSchedule(System.IAsyncResult asyncResult)
        {
            return (removeTimeScheduleResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject(typeof(removeTimeScheduleResponse), SoapServiceAttribute.TargetNamespace);
        }

        [SoapMethod("updateTimeSchedule")]
        public updateTimeScheduleResponse updateTimeSchedule(updateTimeSchedule request)
        {
            return (updateTimeScheduleResponse)base.SendRequestResponse("updateTimeSchedule", request).GetBodyObject(typeof(updateTimeScheduleResponse), SoapServiceAttribute.TargetNamespace);
        }

        public IAsyncResult BeginupdateTimeSchedule(updateTimeSchedule request, System.AsyncCallback callback, object asyncState)
        {
            return base.BeginSendRequestResponse("updateTimeSchedule", request, callback, asyncState);
        }

        public updateTimeScheduleResponse EndupdateTimeSchedule(System.IAsyncResult asyncResult)
        {
            return (updateTimeScheduleResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject(typeof(updateTimeScheduleResponse), SoapServiceAttribute.TargetNamespace);
        }

        [SoapMethod("addRoutePartition")]
        public addRoutePartitionResponse addRoutePartition(addRoutePartition request)
        {
            return (addRoutePartitionResponse)base.SendRequestResponse("addRoutePartition", request).GetBodyObject(typeof(addRoutePartitionResponse), SoapServiceAttribute.TargetNamespace);
        }

        public IAsyncResult BeginaddRoutePartition(addRoutePartition request, System.AsyncCallback callback, object asyncState)
        {
            return base.BeginSendRequestResponse("addRoutePartition", request, callback, asyncState);
        }

        public addRoutePartitionResponse EndaddRoutePartition(System.IAsyncResult asyncResult)
        {
            return (addRoutePartitionResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject(typeof(addRoutePartitionResponse), SoapServiceAttribute.TargetNamespace);
        }

        [SoapMethod("updateRoutePartition")]
        public updateRoutePartitionResponse updateRoutePartition(updateRoutePartition request)
        {
            return (updateRoutePartitionResponse)base.SendRequestResponse("updateRoutePartition", request).GetBodyObject(typeof(updateRoutePartitionResponse), SoapServiceAttribute.TargetNamespace);
        }

        public IAsyncResult BeginupdateRoutePartition(updateRoutePartition request, System.AsyncCallback callback, object asyncState)
        {
            return base.BeginSendRequestResponse("updateRoutePartition", request, callback, asyncState);
        }

        public updateRoutePartitionResponse EndupdateRoutePartition(System.IAsyncResult asyncResult)
        {
            return (updateRoutePartitionResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject(typeof(updateRoutePartitionResponse), SoapServiceAttribute.TargetNamespace);
        }

        [SoapMethod("removeRoutePartition")]
        public removeRoutePartitionResponse removeRoutePartition(removeRoutePartition request)
        {
            return (removeRoutePartitionResponse)base.SendRequestResponse("removeRoutePartition", request).GetBodyObject(typeof(removeRoutePartitionResponse), SoapServiceAttribute.TargetNamespace);
        }

        public IAsyncResult BeginremoveRoutePartition(removeRoutePartition request, System.AsyncCallback callback, object asyncState)
        {
            return base.BeginSendRequestResponse("removeRoutePartition", request, callback, asyncState);
        }

        public removeRoutePartitionResponse EndremoveRoutePartition(System.IAsyncResult asyncResult)
        {
            return (removeRoutePartitionResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject(typeof(removeRoutePartitionResponse), SoapServiceAttribute.TargetNamespace);
        }

        [SoapMethod("getRoutePartition")]
        public getRoutePartitionResponse getRoutePartition(getRoutePartition request)
        {
            return (getRoutePartitionResponse)base.SendRequestResponse("getRoutePartition", request).GetBodyObject(typeof(getRoutePartitionResponse), SoapServiceAttribute.TargetNamespace);
        }

        public IAsyncResult BegingetRoutePartition(getRoutePartition request, System.AsyncCallback callback, object asyncState)
        {
            return base.BeginSendRequestResponse("getRoutePartition", request, callback, asyncState);
        }

        public getRoutePartitionResponse EndgetRoutePartition(System.IAsyncResult asyncResult)
        {
            return (getRoutePartitionResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject(typeof(getRoutePartitionResponse), SoapServiceAttribute.TargetNamespace);
        }

        [SoapMethod("getCSS")]
        public getCSSResponse getCSS(getCSS request)
        {
            return (getCSSResponse)base.SendRequestResponse("getCSS", request).GetBodyObject(typeof(getCSSResponse), SoapServiceAttribute.TargetNamespace);
        }

        public IAsyncResult BegingetCSS(getCSS request, System.AsyncCallback callback, object asyncState)
        {
            return base.BeginSendRequestResponse("getCSS", request, callback, asyncState);
        }

        public getCSSResponse EndgetCSS(System.IAsyncResult asyncResult)
        {
            return (getCSSResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject(typeof(getCSSResponse), SoapServiceAttribute.TargetNamespace);
        }

        [SoapMethod("removeCSS")]
        public removeCSSResponse removeCSS(removeCSS request)
        {
            return (removeCSSResponse)base.SendRequestResponse("removeCSS", request).GetBodyObject(typeof(removeCSSResponse), SoapServiceAttribute.TargetNamespace);
        }

        public IAsyncResult BeginremoveCSS(removeCSS request, System.AsyncCallback callback, object asyncState)
        {
            return base.BeginSendRequestResponse("removeCSS", request, callback, asyncState);
        }

        public removeCSSResponse EndremoveCSS(System.IAsyncResult asyncResult)
        {
            return (removeCSSResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject(typeof(removeCSSResponse), SoapServiceAttribute.TargetNamespace);
        }

        [SoapMethod("addCSS")]
        public addCSSResponse addCSS(addCSS request)
        {
            return (addCSSResponse)base.SendRequestResponse("addCSS", request).GetBodyObject(typeof(addCSSResponse), SoapServiceAttribute.TargetNamespace);
        }

        public IAsyncResult BeginaddCSS(addCSS request, System.AsyncCallback callback, object asyncState)
        {
            return base.BeginSendRequestResponse("addCSS", request, callback, asyncState);
        }

        public addCSSResponse EndaddCSS(System.IAsyncResult asyncResult)
        {
            return (addCSSResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject(typeof(addCSSResponse), SoapServiceAttribute.TargetNamespace);
        }

        [SoapMethod("updateCSS")]
        public updateCSSResponse updateCSS(updateCSS request)
        {
            return (updateCSSResponse)base.SendRequestResponse("updateCSS", request).GetBodyObject(typeof(updateCSSResponse), SoapServiceAttribute.TargetNamespace);
        }

        public IAsyncResult BeginupdateCSS(updateCSS request, System.AsyncCallback callback, object asyncState)
        {
            return base.BeginSendRequestResponse("updateCSS", request, callback, asyncState);
        }

        public updateCSSResponse EndupdateCSS(System.IAsyncResult asyncResult)
        {
            return (updateCSSResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject(typeof(updateCSSResponse), SoapServiceAttribute.TargetNamespace);
        }

        [SoapMethod("getTransPattern")]
        public getTransPatternResponse getTransPattern(getTransPattern request)
        {
            return (getTransPatternResponse)base.SendRequestResponse("getTransPattern", request).GetBodyObject(typeof(getTransPatternResponse), SoapServiceAttribute.TargetNamespace);
        }

        public IAsyncResult BegingetTransPattern(getTransPattern request, System.AsyncCallback callback, object asyncState)
        {
            return base.BeginSendRequestResponse("getTransPattern", request, callback, asyncState);
        }

        public getTransPatternResponse EndgetTransPattern(System.IAsyncResult asyncResult)
        {
            return (getTransPatternResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject(typeof(getTransPatternResponse), SoapServiceAttribute.TargetNamespace);
        }

        [SoapMethod("removeTransPattern")]
        public removeTransPatternResponse removeTransPattern(removeTransPattern request)
        {
            return (removeTransPatternResponse)base.SendRequestResponse("removeTransPattern", request).GetBodyObject(typeof(removeTransPatternResponse), SoapServiceAttribute.TargetNamespace);
        }

        public IAsyncResult BeginremoveTransPattern(removeTransPattern request, System.AsyncCallback callback, object asyncState)
        {
            return base.BeginSendRequestResponse("removeTransPattern", request, callback, asyncState);
        }

        public removeTransPatternResponse EndremoveTransPattern(System.IAsyncResult asyncResult)
        {
            return (removeTransPatternResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject(typeof(removeTransPatternResponse), SoapServiceAttribute.TargetNamespace);
        }

        [SoapMethod("addTransPattern")]
        public addTransPatternResponse addTransPattern(addTransPattern request)
        {
            return (addTransPatternResponse)base.SendRequestResponse("addTransPattern", request).GetBodyObject(typeof(addTransPatternResponse), SoapServiceAttribute.TargetNamespace);
        }

        public IAsyncResult BeginaddTransPattern(addTransPattern request, System.AsyncCallback callback, object asyncState)
        {
            return base.BeginSendRequestResponse("addTransPattern", request, callback, asyncState);
        }

        public addTransPatternResponse EndaddTransPattern(System.IAsyncResult asyncResult)
        {
            return (addTransPatternResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject(typeof(addTransPatternResponse), SoapServiceAttribute.TargetNamespace);
        }

        [SoapMethod("updateTransPattern")]
        public updateTransPatternResponse updateTransPattern(updateTransPattern request)
        {
            return (updateTransPatternResponse)base.SendRequestResponse("updateTransPattern", request).GetBodyObject(typeof(updateTransPatternResponse), SoapServiceAttribute.TargetNamespace);
        }

        public IAsyncResult BeginupdateTransPattern(updateTransPattern request, System.AsyncCallback callback, object asyncState)
        {
            return base.BeginSendRequestResponse("updateTransPattern", request, callback, asyncState);
        }

        public updateTransPatternResponse EndupdateTransPattern(System.IAsyncResult asyncResult)
        {
            return (updateTransPatternResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject(typeof(updateTransPatternResponse), SoapServiceAttribute.TargetNamespace);
        }

        [SoapMethod("addTransformationPattern")]
        public addTransformationPatternResponse addTransformationPattern(addTransformationPattern request)
        {
            return (addTransformationPatternResponse)base.SendRequestResponse("addTransformationPattern", request).GetBodyObject(typeof(addTransformationPatternResponse), SoapServiceAttribute.TargetNamespace);
        }

        public IAsyncResult BeginaddTransformationPattern(addTransformationPattern request, System.AsyncCallback callback, object asyncState)
        {
            return base.BeginSendRequestResponse("addTransformationPattern", request, callback, asyncState);
        }

        public addTransformationPatternResponse EndaddTransformationPattern(System.IAsyncResult asyncResult)
        {
            return (addTransformationPatternResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject(typeof(addTransformationPatternResponse), SoapServiceAttribute.TargetNamespace);
        }

        [SoapMethod("getTransformationPattern")]
        public getTransformationPatternResponse getTransformationPattern(getTransformationPattern request)
        {
            return (getTransformationPatternResponse)base.SendRequestResponse("getTransformationPattern", request).GetBodyObject(typeof(getTransformationPatternResponse), SoapServiceAttribute.TargetNamespace);
        }

        public IAsyncResult BegingetTransformationPattern(getTransformationPattern request, System.AsyncCallback callback, object asyncState)
        {
            return base.BeginSendRequestResponse("getTransformationPattern", request, callback, asyncState);
        }

        public getTransformationPatternResponse EndgetTransformationPattern(System.IAsyncResult asyncResult)
        {
            return (getTransformationPatternResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject(typeof(getTransformationPatternResponse), SoapServiceAttribute.TargetNamespace);
        }

        [SoapMethod("updateTransformationPattern")]
        public updateTransformationPatternResponse updateTransformationPattern(updateTransformationPattern request)
        {
            return (updateTransformationPatternResponse)base.SendRequestResponse("updateTransformationPattern", request).GetBodyObject(typeof(updateTransformationPatternResponse), SoapServiceAttribute.TargetNamespace);
        }

        public IAsyncResult BeginupdateTransformationPattern(updateTransformationPattern request, System.AsyncCallback callback, object asyncState)
        {
            return base.BeginSendRequestResponse("updateTransformationPattern", request, callback, asyncState);
        }

        public updateTransformationPatternResponse EndupdateTransformationPattern(System.IAsyncResult asyncResult)
        {
            return (updateTransformationPatternResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject(typeof(updateTransformationPatternResponse), SoapServiceAttribute.TargetNamespace);
        }

        [SoapMethod("removeTransformationPattern")]
        public removeTransformationPatternResponse removeTransformationPattern(removeTransformationPattern request)
        {
            return (removeTransformationPatternResponse)base.SendRequestResponse("removeTransformationPattern", request).GetBodyObject(typeof(removeTransformationPatternResponse), SoapServiceAttribute.TargetNamespace);
        }

        public IAsyncResult BeginremoveTransformationPattern(removeTransformationPattern request, System.AsyncCallback callback, object asyncState)
        {
            return base.BeginSendRequestResponse("removeTransformationPattern", request, callback, asyncState);
        }

        public removeTransformationPatternResponse EndremoveTransformationPattern(System.IAsyncResult asyncResult)
        {
            return (removeTransformationPatternResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject(typeof(removeTransformationPatternResponse), SoapServiceAttribute.TargetNamespace);
        }

        [SoapMethod("getRoutePattern")]
        public getRoutePatternResponse getRoutePattern(getRoutePattern request)
        {
            return (getRoutePatternResponse)base.SendRequestResponse("getRoutePattern", request).GetBodyObject(typeof(getRoutePatternResponse), SoapServiceAttribute.TargetNamespace);
        }

        public IAsyncResult BegingetRoutePattern(getRoutePattern request, System.AsyncCallback callback, object asyncState)
        {
            return base.BeginSendRequestResponse("getRoutePattern", request, callback, asyncState);
        }

        public getRoutePatternResponse EndgetRoutePattern(System.IAsyncResult asyncResult)
        {
            return (getRoutePatternResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject(typeof(getRoutePatternResponse), SoapServiceAttribute.TargetNamespace);
        }

        [SoapMethod("removeRoutePattern")]
        public removeRoutePatternResponse removeRoutePattern(removeRoutePattern request)
        {
            return (removeRoutePatternResponse)base.SendRequestResponse("removeRoutePattern", request).GetBodyObject(typeof(removeRoutePatternResponse), SoapServiceAttribute.TargetNamespace);
        }

        public IAsyncResult BeginremoveRoutePattern(removeRoutePattern request, System.AsyncCallback callback, object asyncState)
        {
            return base.BeginSendRequestResponse("removeRoutePattern", request, callback, asyncState);
        }

        public removeRoutePatternResponse EndremoveRoutePattern(System.IAsyncResult asyncResult)
        {
            return (removeRoutePatternResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject(typeof(removeRoutePatternResponse), SoapServiceAttribute.TargetNamespace);
        }

        [SoapMethod("addRoutePattern")]
        public addRoutePatternResponse addRoutePattern(addRoutePattern request)
        {
            return (addRoutePatternResponse)base.SendRequestResponse("addRoutePattern", request).GetBodyObject(typeof(addRoutePatternResponse), SoapServiceAttribute.TargetNamespace);
        }

        public IAsyncResult BeginaddRoutePattern(addRoutePattern request, System.AsyncCallback callback, object asyncState)
        {
            return base.BeginSendRequestResponse("addRoutePattern", request, callback, asyncState);
        }

        public addRoutePatternResponse EndaddRoutePattern(System.IAsyncResult asyncResult)
        {
            return (addRoutePatternResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject(typeof(addRoutePatternResponse), SoapServiceAttribute.TargetNamespace);
        }

        [SoapMethod("updateRoutePattern")]
        public updateRoutePatternResponse updateRoutePattern(updateRoutePattern request)
        {
            return (updateRoutePatternResponse)base.SendRequestResponse("updateRoutePattern", request).GetBodyObject(typeof(updateRoutePatternResponse), SoapServiceAttribute.TargetNamespace);
        }

        public IAsyncResult BeginupdateRoutePattern(updateRoutePattern request, System.AsyncCallback callback, object asyncState)
        {
            return base.BeginSendRequestResponse("updateRoutePattern", request, callback, asyncState);
        }

        public updateRoutePatternResponse EndupdateRoutePattern(System.IAsyncResult asyncResult)
        {
            return (updateRoutePatternResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject(typeof(updateRoutePatternResponse), SoapServiceAttribute.TargetNamespace);
        }

        [SoapMethod("getHuntPilot")]
        public getHuntPilotResponse getHuntPilot(getHuntPilot request)
        {
            return (getHuntPilotResponse)base.SendRequestResponse("getHuntPilot", request).GetBodyObject(typeof(getHuntPilotResponse), SoapServiceAttribute.TargetNamespace);
        }

        public IAsyncResult BegingetHuntPilot(getHuntPilot request, System.AsyncCallback callback, object asyncState)
        {
            return base.BeginSendRequestResponse("getHuntPilot", request, callback, asyncState);
        }

        public getHuntPilotResponse EndgetHuntPilot(System.IAsyncResult asyncResult)
        {
            return (getHuntPilotResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject(typeof(getHuntPilotResponse), SoapServiceAttribute.TargetNamespace);
        }

        [SoapMethod("removeHuntPilot")]
        public removeHuntPilotResponse removeHuntPilot(removeHuntPilot request)
        {
            return (removeHuntPilotResponse)base.SendRequestResponse("removeHuntPilot", request).GetBodyObject(typeof(removeHuntPilotResponse), SoapServiceAttribute.TargetNamespace);
        }

        public IAsyncResult BeginremoveHuntPilot(removeHuntPilot request, System.AsyncCallback callback, object asyncState)
        {
            return base.BeginSendRequestResponse("removeHuntPilot", request, callback, asyncState);
        }

        public removeHuntPilotResponse EndremoveHuntPilot(System.IAsyncResult asyncResult)
        {
            return (removeHuntPilotResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject(typeof(removeHuntPilotResponse), SoapServiceAttribute.TargetNamespace);
        }

        [SoapMethod("addHuntPilot")]
        public addHuntPilotResponse addHuntPilot(addHuntPilot request)
        {
            return (addHuntPilotResponse)base.SendRequestResponse("addHuntPilot", request).GetBodyObject(typeof(addHuntPilotResponse), SoapServiceAttribute.TargetNamespace);
        }

        public IAsyncResult BeginaddHuntPilot(addHuntPilot request, System.AsyncCallback callback, object asyncState)
        {
            return base.BeginSendRequestResponse("addHuntPilot", request, callback, asyncState);
        }

        public addHuntPilotResponse EndaddHuntPilot(System.IAsyncResult asyncResult)
        {
            return (addHuntPilotResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject(typeof(addHuntPilotResponse), SoapServiceAttribute.TargetNamespace);
        }

        [SoapMethod("updateHuntPilot")]
        public updateHuntPilotResponse updateHuntPilot(updateHuntPilot request)
        {
            return (updateHuntPilotResponse)base.SendRequestResponse("updateHuntPilot", request).GetBodyObject(typeof(updateHuntPilotResponse), SoapServiceAttribute.TargetNamespace);
        }

        public IAsyncResult BeginupdateHuntPilot(updateHuntPilot request, System.AsyncCallback callback, object asyncState)
        {
            return base.BeginSendRequestResponse("updateHuntPilot", request, callback, asyncState);
        }

        public updateHuntPilotResponse EndupdateHuntPilot(System.IAsyncResult asyncResult)
        {
            return (updateHuntPilotResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject(typeof(updateHuntPilotResponse), SoapServiceAttribute.TargetNamespace);
        }

        [SoapMethod("addLineGroup")]
        public addLineGroupResponse addLineGroup(addLineGroup request)
        {
            return (addLineGroupResponse)base.SendRequestResponse("addLineGroup", request).GetBodyObject(typeof(addLineGroupResponse), SoapServiceAttribute.TargetNamespace);
        }

        public IAsyncResult BeginaddLineGroup(addLineGroup request, System.AsyncCallback callback, object asyncState)
        {
            return base.BeginSendRequestResponse("addLineGroup", request, callback, asyncState);
        }

        public addLineGroupResponse EndaddLineGroup(System.IAsyncResult asyncResult)
        {
            return (addLineGroupResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject(typeof(addLineGroupResponse), SoapServiceAttribute.TargetNamespace);
        }

        [SoapMethod("updateLineGroup")]
        public updateLineGroupResponse updateLineGroup(updateLineGroup request)
        {
            return (updateLineGroupResponse)base.SendRequestResponse("updateLineGroup", request).GetBodyObject(typeof(updateLineGroupResponse), SoapServiceAttribute.TargetNamespace);
        }

        public IAsyncResult BeginupdateLineGroup(updateLineGroup request, System.AsyncCallback callback, object asyncState)
        {
            return base.BeginSendRequestResponse("updateLineGroup", request, callback, asyncState);
        }

        public updateLineGroupResponse EndupdateLineGroup(System.IAsyncResult asyncResult)
        {
            return (updateLineGroupResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject(typeof(updateLineGroupResponse), SoapServiceAttribute.TargetNamespace);
        }

        [SoapMethod("getLineGroup")]
        public getLineGroupResponse getLineGroup(getLineGroup request)
        {
            return (getLineGroupResponse)base.SendRequestResponse("getLineGroup", request).GetBodyObject(typeof(getLineGroupResponse), SoapServiceAttribute.TargetNamespace);
        }

        public IAsyncResult BegingetLineGroup(getLineGroup request, System.AsyncCallback callback, object asyncState)
        {
            return base.BeginSendRequestResponse("getLineGroup", request, callback, asyncState);
        }

        public getLineGroupResponse EndgetLineGroup(System.IAsyncResult asyncResult)
        {
            return (getLineGroupResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject(typeof(getLineGroupResponse), SoapServiceAttribute.TargetNamespace);
        }

        [SoapMethod("removeLineGroup")]
        public removeLineGroupResponse removeLineGroup(removeLineGroup request)
        {
            return (removeLineGroupResponse)base.SendRequestResponse("removeLineGroup", request).GetBodyObject(typeof(removeLineGroupResponse), SoapServiceAttribute.TargetNamespace);
        }

        public IAsyncResult BeginremoveLineGroup(removeLineGroup request, System.AsyncCallback callback, object asyncState)
        {
            return base.BeginSendRequestResponse("removeLineGroup", request, callback, asyncState);
        }

        public removeLineGroupResponse EndremoveLineGroup(System.IAsyncResult asyncResult)
        {
            return (removeLineGroupResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject(typeof(removeLineGroupResponse), SoapServiceAttribute.TargetNamespace);
        }

        [SoapMethod("addRouteGroup")]
        public addRouteGroupResponse addRouteGroup(addRouteGroup request)
        {
            return (addRouteGroupResponse)base.SendRequestResponse("addRouteGroup", request).GetBodyObject(typeof(addRouteGroupResponse), SoapServiceAttribute.TargetNamespace);
        }

        public IAsyncResult BeginaddRouteGroup(addRouteGroup request, System.AsyncCallback callback, object asyncState)
        {
            return base.BeginSendRequestResponse("addRouteGroup", request, callback, asyncState);
        }

        public addRouteGroupResponse EndaddRouteGroup(System.IAsyncResult asyncResult)
        {
            return (addRouteGroupResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject(typeof(addRouteGroupResponse), SoapServiceAttribute.TargetNamespace);
        }

        [SoapMethod("updateRouteGroup")]
        public updateRouteGroupResponse updateRouteGroup(updateRouteGroup request)
        {
            return (updateRouteGroupResponse)base.SendRequestResponse("updateRouteGroup", request).GetBodyObject(typeof(updateRouteGroupResponse), SoapServiceAttribute.TargetNamespace);
        }

        public IAsyncResult BeginupdateRouteGroup(updateRouteGroup request, System.AsyncCallback callback, object asyncState)
        {
            return base.BeginSendRequestResponse("updateRouteGroup", request, callback, asyncState);
        }

        public updateRouteGroupResponse EndupdateRouteGroup(System.IAsyncResult asyncResult)
        {
            return (updateRouteGroupResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject(typeof(updateRouteGroupResponse), SoapServiceAttribute.TargetNamespace);
        }

        [SoapMethod("getRouteGroup")]
        public getRouteGroupResponse getRouteGroup(getRouteGroup request)
        {
            return (getRouteGroupResponse)base.SendRequestResponse("getRouteGroup", request).GetBodyObject(typeof(getRouteGroupResponse), SoapServiceAttribute.TargetNamespace);
        }

        public IAsyncResult BegingetRouteGroup(getRouteGroup request, System.AsyncCallback callback, object asyncState)
        {
            return base.BeginSendRequestResponse("getRouteGroup", request, callback, asyncState);
        }

        public getRouteGroupResponse EndgetRouteGroup(System.IAsyncResult asyncResult)
        {
            return (getRouteGroupResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject(typeof(getRouteGroupResponse), SoapServiceAttribute.TargetNamespace);
        }

        [SoapMethod("removeRouteGroup")]
        public removeRouteGroupResponse removeRouteGroup(removeRouteGroup request)
        {
            return (removeRouteGroupResponse)base.SendRequestResponse("removeRouteGroup", request).GetBodyObject(typeof(removeRouteGroupResponse), SoapServiceAttribute.TargetNamespace);
        }

        public IAsyncResult BeginremoveRouteGroup(removeRouteGroup request, System.AsyncCallback callback, object asyncState)
        {
            return base.BeginSendRequestResponse("removeRouteGroup", request, callback, asyncState);
        }

        public removeRouteGroupResponse EndremoveRouteGroup(System.IAsyncResult asyncResult)
        {
            return (removeRouteGroupResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject(typeof(removeRouteGroupResponse), SoapServiceAttribute.TargetNamespace);
        }

        [SoapMethod("addRouteList")]
        public addRouteListResponse addRouteList(addRouteList request)
        {
            return (addRouteListResponse)base.SendRequestResponse("addRouteList", request).GetBodyObject(typeof(addRouteListResponse), SoapServiceAttribute.TargetNamespace);
        }

        public IAsyncResult BeginaddRouteList(addRouteList request, System.AsyncCallback callback, object asyncState)
        {
            return base.BeginSendRequestResponse("addRouteList", request, callback, asyncState);
        }

        public addRouteListResponse EndaddRouteList(System.IAsyncResult asyncResult)
        {
            return (addRouteListResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject(typeof(addRouteListResponse), SoapServiceAttribute.TargetNamespace);
        }

        [SoapMethod("updateRouteList")]
        public updateRouteListResponse updateRouteList(updateRouteList request)
        {
            return (updateRouteListResponse)base.SendRequestResponse("updateRouteList", request).GetBodyObject(typeof(updateRouteListResponse), SoapServiceAttribute.TargetNamespace);
        }

        public IAsyncResult BeginupdateRouteList(updateRouteList request, System.AsyncCallback callback, object asyncState)
        {
            return base.BeginSendRequestResponse("updateRouteList", request, callback, asyncState);
        }

        public updateRouteListResponse EndupdateRouteList(System.IAsyncResult asyncResult)
        {
            return (updateRouteListResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject(typeof(updateRouteListResponse), SoapServiceAttribute.TargetNamespace);
        }

        [SoapMethod("getRouteList")]
        public getRouteListResponse getRouteList(getRouteList request)
        {
            return (getRouteListResponse)base.SendRequestResponse("getRouteList", request).GetBodyObject(typeof(getRouteListResponse), SoapServiceAttribute.TargetNamespace);
        }

        public IAsyncResult BegingetRouteList(getRouteList request, System.AsyncCallback callback, object asyncState)
        {
            return base.BeginSendRequestResponse("getRouteList", request, callback, asyncState);
        }

        public getRouteListResponse EndgetRouteList(System.IAsyncResult asyncResult)
        {
            return (getRouteListResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject(typeof(getRouteListResponse), SoapServiceAttribute.TargetNamespace);
        }

        [SoapMethod("removeRouteList")]
        public removeRouteListResponse removeRouteList(removeRouteList request)
        {
            return (removeRouteListResponse)base.SendRequestResponse("removeRouteList", request).GetBodyObject(typeof(removeRouteListResponse), SoapServiceAttribute.TargetNamespace);
        }

        public IAsyncResult BeginremoveRouteList(removeRouteList request, System.AsyncCallback callback, object asyncState)
        {
            return base.BeginSendRequestResponse("removeRouteList", request, callback, asyncState);
        }

        public removeRouteListResponse EndremoveRouteList(System.IAsyncResult asyncResult)
        {
            return (removeRouteListResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject(typeof(removeRouteListResponse), SoapServiceAttribute.TargetNamespace);
        }

        [SoapMethod("addHuntList")]
        public addHuntListResponse addHuntList(addHuntList request)
        {
            return (addHuntListResponse)base.SendRequestResponse("addHuntList", request).GetBodyObject(typeof(addHuntListResponse), SoapServiceAttribute.TargetNamespace);
        }

        public IAsyncResult BeginaddHuntList(addHuntList request, System.AsyncCallback callback, object asyncState)
        {
            return base.BeginSendRequestResponse("addHuntList", request, callback, asyncState);
        }

        public addHuntListResponse EndaddHuntList(System.IAsyncResult asyncResult)
        {
            return (addHuntListResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject(typeof(addHuntListResponse), SoapServiceAttribute.TargetNamespace);
        }

        [SoapMethod("updateHuntList")]
        public updateHuntListResponse updateHuntList(updateHuntList request)
        {
            return (updateHuntListResponse)base.SendRequestResponse("updateHuntList", request).GetBodyObject(typeof(updateHuntListResponse), SoapServiceAttribute.TargetNamespace);
        }

        public IAsyncResult BeginupdateHuntList(updateHuntList request, System.AsyncCallback callback, object asyncState)
        {
            return base.BeginSendRequestResponse("updateHuntList", request, callback, asyncState);
        }

        public updateHuntListResponse EndupdateHuntList(System.IAsyncResult asyncResult)
        {
            return (updateHuntListResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject(typeof(updateHuntListResponse), SoapServiceAttribute.TargetNamespace);
        }

        [SoapMethod("getHuntList")]
        public getHuntListResponse getHuntList(getHuntList request)
        {
            return (getHuntListResponse)base.SendRequestResponse("getHuntList", request).GetBodyObject(typeof(getHuntListResponse), SoapServiceAttribute.TargetNamespace);
        }

        public IAsyncResult BegingetHuntList(getHuntList request, System.AsyncCallback callback, object asyncState)
        {
            return base.BeginSendRequestResponse("getHuntList", request, callback, asyncState);
        }

        public getHuntListResponse EndgetHuntList(System.IAsyncResult asyncResult)
        {
            return (getHuntListResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject(typeof(getHuntListResponse), SoapServiceAttribute.TargetNamespace);
        }

        [SoapMethod("removeHuntList")]
        public removeHuntListResponse removeHuntList(removeHuntList request)
        {
            return (removeHuntListResponse)base.SendRequestResponse("removeHuntList", request).GetBodyObject(typeof(removeHuntListResponse), SoapServiceAttribute.TargetNamespace);
        }

        public IAsyncResult BeginremoveHuntList(removeHuntList request, System.AsyncCallback callback, object asyncState)
        {
            return base.BeginSendRequestResponse("removeHuntList", request, callback, asyncState);
        }

        public removeHuntListResponse EndremoveHuntList(System.IAsyncResult asyncResult)
        {
            return (removeHuntListResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject(typeof(removeHuntListResponse), SoapServiceAttribute.TargetNamespace);
        }

        [SoapMethod("addCTIRoutePoint")]
        public addCTIRoutePointResponse addCTIRoutePoint(addCTIRoutePoint request)
        {
            return (addCTIRoutePointResponse)base.SendRequestResponse("addCTIRoutePoint", request).GetBodyObject(typeof(addCTIRoutePointResponse), SoapServiceAttribute.TargetNamespace);
        }

        public IAsyncResult BeginaddCTIRoutePoint(addCTIRoutePoint request, System.AsyncCallback callback, object asyncState)
        {
            return base.BeginSendRequestResponse("addCTIRoutePoint", request, callback, asyncState);
        }

        public addCTIRoutePointResponse EndaddCTIRoutePoint(System.IAsyncResult asyncResult)
        {
            return (addCTIRoutePointResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject(typeof(addCTIRoutePointResponse), SoapServiceAttribute.TargetNamespace);
        }

        [SoapMethod("updateCTIRoutePoint")]
        public updateCTIRoutePointResponse updateCTIRoutePoint(updateCTIRoutePoint request)
        {
            return (updateCTIRoutePointResponse)base.SendRequestResponse("updateCTIRoutePoint", request).GetBodyObject(typeof(updateCTIRoutePointResponse), SoapServiceAttribute.TargetNamespace);
        }

        public IAsyncResult BeginupdateCTIRoutePoint(updateCTIRoutePoint request, System.AsyncCallback callback, object asyncState)
        {
            return base.BeginSendRequestResponse("updateCTIRoutePoint", request, callback, asyncState);
        }

        public updateCTIRoutePointResponse EndupdateCTIRoutePoint(System.IAsyncResult asyncResult)
        {
            return (updateCTIRoutePointResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject(typeof(updateCTIRoutePointResponse), SoapServiceAttribute.TargetNamespace);
        }

        [SoapMethod("getCTIRoutePoint")]
        public getCTIRoutePointResponse getCTIRoutePoint(getCTIRoutePoint request)
        {
            return (getCTIRoutePointResponse)base.SendRequestResponse("getCTIRoutePoint", request).GetBodyObject(typeof(getCTIRoutePointResponse), SoapServiceAttribute.TargetNamespace);
        }

        public IAsyncResult BegingetCTIRoutePoint(getCTIRoutePoint request, System.AsyncCallback callback, object asyncState)
        {
            return base.BeginSendRequestResponse("getCTIRoutePoint", request, callback, asyncState);
        }

        public getCTIRoutePointResponse EndgetCTIRoutePoint(System.IAsyncResult asyncResult)
        {
            return (getCTIRoutePointResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject(typeof(getCTIRoutePointResponse), SoapServiceAttribute.TargetNamespace);
        }

        [SoapMethod("removeCTIRoutePoint")]
        public removeCTIRoutePointResponse removeCTIRoutePoint(removeCTIRoutePoint request)
        {
            return (removeCTIRoutePointResponse)base.SendRequestResponse("removeCTIRoutePoint", request).GetBodyObject(typeof(removeCTIRoutePointResponse), SoapServiceAttribute.TargetNamespace);
        }

        public IAsyncResult BeginremoveCTIRoutePoint(removeCTIRoutePoint request, System.AsyncCallback callback, object asyncState)
        {
            return base.BeginSendRequestResponse("removeCTIRoutePoint", request, callback, asyncState);
        }

        public removeCTIRoutePointResponse EndremoveCTIRoutePoint(System.IAsyncResult asyncResult)
        {
            return (removeCTIRoutePointResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject(typeof(removeCTIRoutePointResponse), SoapServiceAttribute.TargetNamespace);
        }

        [SoapMethod("getDialPlan")]
        public getDialPlanResponse getDialPlan(getDialPlan request)
        {
            return (getDialPlanResponse)base.SendRequestResponse("getDialPlan", request).GetBodyObject(typeof(getDialPlanResponse), SoapServiceAttribute.TargetNamespace);
        }

        public IAsyncResult BegingetDialPlan(getDialPlan request, System.AsyncCallback callback, object asyncState)
        {
            return base.BeginSendRequestResponse("getDialPlan", request, callback, asyncState);
        }

        public getDialPlanResponse EndgetDialPlan(System.IAsyncResult asyncResult)
        {
            return (getDialPlanResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject(typeof(getDialPlanResponse), SoapServiceAttribute.TargetNamespace);
        }

        [SoapMethod("getDialPlanTag")]
        public getDialPlanTagResponse getDialPlanTag(getDialPlanTag request)
        {
            return (getDialPlanTagResponse)base.SendRequestResponse("getDialPlanTag", request).GetBodyObject(typeof(getDialPlanTagResponse), SoapServiceAttribute.TargetNamespace);
        }

        public IAsyncResult BegingetDialPlanTag(getDialPlanTag request, System.AsyncCallback callback, object asyncState)
        {
            return base.BeginSendRequestResponse("getDialPlanTag", request, callback, asyncState);
        }

        public getDialPlanTagResponse EndgetDialPlanTag(System.IAsyncResult asyncResult)
        {
            return (getDialPlanTagResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject(typeof(getDialPlanTagResponse), SoapServiceAttribute.TargetNamespace);
        }

        [SoapMethod("addCallPark")]
        public addCallParkResponse addCallPark(addCallPark request)
        {
            return (addCallParkResponse)base.SendRequestResponse("addCallPark", request).GetBodyObject(typeof(addCallParkResponse), SoapServiceAttribute.TargetNamespace);
        }

        public IAsyncResult BeginaddCallPark(addCallPark request, System.AsyncCallback callback, object asyncState)
        {
            return base.BeginSendRequestResponse("addCallPark", request, callback, asyncState);
        }

        public addCallParkResponse EndaddCallPark(System.IAsyncResult asyncResult)
        {
            return (addCallParkResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject(typeof(addCallParkResponse), SoapServiceAttribute.TargetNamespace);
        }

        [SoapMethod("updateCallPark")]
        public updateCallParkResponse updateCallPark(updateCallPark request)
        {
            return (updateCallParkResponse)base.SendRequestResponse("updateCallPark", request).GetBodyObject(typeof(updateCallParkResponse), SoapServiceAttribute.TargetNamespace);
        }

        public IAsyncResult BeginupdateCallPark(updateCallPark request, System.AsyncCallback callback, object asyncState)
        {
            return base.BeginSendRequestResponse("updateCallPark", request, callback, asyncState);
        }

        public updateCallParkResponse EndupdateCallPark(System.IAsyncResult asyncResult)
        {
            return (updateCallParkResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject(typeof(updateCallParkResponse), SoapServiceAttribute.TargetNamespace);
        }

        [SoapMethod("getCallPark")]
        public getCallParkResponse getCallPark(getCallPark request)
        {
            return (getCallParkResponse)base.SendRequestResponse("getCallPark", request).GetBodyObject(typeof(getCallParkResponse), SoapServiceAttribute.TargetNamespace);
        }

        public IAsyncResult BegingetCallPark(getCallPark request, System.AsyncCallback callback, object asyncState)
        {
            return base.BeginSendRequestResponse("getCallPark", request, callback, asyncState);
        }

        public getCallParkResponse EndgetCallPark(System.IAsyncResult asyncResult)
        {
            return (getCallParkResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject(typeof(getCallParkResponse), SoapServiceAttribute.TargetNamespace);
        }

        [SoapMethod("removeCallPark")]
        public removeCallParkResponse removeCallPark(removeCallPark request)
        {
            return (removeCallParkResponse)base.SendRequestResponse("removeCallPark", request).GetBodyObject(typeof(removeCallParkResponse), SoapServiceAttribute.TargetNamespace);
        }

        public IAsyncResult BeginremoveCallPark(removeCallPark request, System.AsyncCallback callback, object asyncState)
        {
            return base.BeginSendRequestResponse("removeCallPark", request, callback, asyncState);
        }

        public removeCallParkResponse EndremoveCallPark(System.IAsyncResult asyncResult)
        {
            return (removeCallParkResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject(typeof(removeCallParkResponse), SoapServiceAttribute.TargetNamespace);
        }

        [SoapMethod("addDirectedCallPark")]
        public addDirectedCallParkResponse addDirectedCallPark(addDirectedCallPark request)
        {
            return (addDirectedCallParkResponse)base.SendRequestResponse("addDirectedCallPark", request).GetBodyObject(typeof(addDirectedCallParkResponse), SoapServiceAttribute.TargetNamespace);
        }

        public IAsyncResult BeginaddDirectedCallPark(addDirectedCallPark request, System.AsyncCallback callback, object asyncState)
        {
            return base.BeginSendRequestResponse("addDirectedCallPark", request, callback, asyncState);
        }

        public addDirectedCallParkResponse EndaddDirectedCallPark(System.IAsyncResult asyncResult)
        {
            return (addDirectedCallParkResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject(typeof(addDirectedCallParkResponse), SoapServiceAttribute.TargetNamespace);
        }

        [SoapMethod("updateDirectedCallPark")]
        public updateDirectedCallParkResponse updateDirectedCallPark(updateDirectedCallPark request)
        {
            return (updateDirectedCallParkResponse)base.SendRequestResponse("updateDirectedCallPark", request).GetBodyObject(typeof(updateDirectedCallParkResponse), SoapServiceAttribute.TargetNamespace);
        }

        public IAsyncResult BeginupdateDirectedCallPark(updateDirectedCallPark request, System.AsyncCallback callback, object asyncState)
        {
            return base.BeginSendRequestResponse("updateDirectedCallPark", request, callback, asyncState);
        }

        public updateDirectedCallParkResponse EndupdateDirectedCallPark(System.IAsyncResult asyncResult)
        {
            return (updateDirectedCallParkResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject(typeof(updateDirectedCallParkResponse), SoapServiceAttribute.TargetNamespace);
        }

        [SoapMethod("getDirectedCallPark")]
        public getDirectedCallParkResponse getDirectedCallPark(getDirectedCallPark request)
        {
            return (getDirectedCallParkResponse)base.SendRequestResponse("getDirectedCallPark", request).GetBodyObject(typeof(getDirectedCallParkResponse), SoapServiceAttribute.TargetNamespace);
        }

        public IAsyncResult BegingetDirectedCallPark(getDirectedCallPark request, System.AsyncCallback callback, object asyncState)
        {
            return base.BeginSendRequestResponse("getDirectedCallPark", request, callback, asyncState);
        }

        public getDirectedCallParkResponse EndgetDirectedCallPark(System.IAsyncResult asyncResult)
        {
            return (getDirectedCallParkResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject(typeof(getDirectedCallParkResponse), SoapServiceAttribute.TargetNamespace);
        }

        [SoapMethod("removeDirectedCallPark")]
        public removeDirectedCallParkResponse removeDirectedCallPark(removeDirectedCallPark request)
        {
            return (removeDirectedCallParkResponse)base.SendRequestResponse("removeDirectedCallPark", request).GetBodyObject(typeof(removeDirectedCallParkResponse), SoapServiceAttribute.TargetNamespace);
        }

        public IAsyncResult BeginremoveDirectedCallPark(removeDirectedCallPark request, System.AsyncCallback callback, object asyncState)
        {
            return base.BeginSendRequestResponse("removeDirectedCallPark", request, callback, asyncState);
        }

        public removeDirectedCallParkResponse EndremoveDirectedCallPark(System.IAsyncResult asyncResult)
        {
            return (removeDirectedCallParkResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject(typeof(removeDirectedCallParkResponse), SoapServiceAttribute.TargetNamespace);
        }

        [SoapMethod("addCallPickupGroup")]
        public addCallPickupGroupResponse addCallPickupGroup(addCallPickupGroup request)
        {
            return (addCallPickupGroupResponse)base.SendRequestResponse("addCallPickupGroup", request).GetBodyObject(typeof(addCallPickupGroupResponse), SoapServiceAttribute.TargetNamespace);
        }

        public IAsyncResult BeginaddCallPickupGroup(addCallPickupGroup request, System.AsyncCallback callback, object asyncState)
        {
            return base.BeginSendRequestResponse("addCallPickupGroup", request, callback, asyncState);
        }

        public addCallPickupGroupResponse EndaddCallPickupGroup(System.IAsyncResult asyncResult)
        {
            return (addCallPickupGroupResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject(typeof(addCallPickupGroupResponse), SoapServiceAttribute.TargetNamespace);
        }

        [SoapMethod("updateCallPickupGroup")]
        public updateCallPickupGroupResponse updateCallPickupGroup(updateCallPickupGroup request)
        {
            return (updateCallPickupGroupResponse)base.SendRequestResponse("updateCallPickupGroup", request).GetBodyObject(typeof(updateCallPickupGroupResponse), SoapServiceAttribute.TargetNamespace);
        }

        public IAsyncResult BeginupdateCallPickupGroup(updateCallPickupGroup request, System.AsyncCallback callback, object asyncState)
        {
            return base.BeginSendRequestResponse("updateCallPickupGroup", request, callback, asyncState);
        }

        public updateCallPickupGroupResponse EndupdateCallPickupGroup(System.IAsyncResult asyncResult)
        {
            return (updateCallPickupGroupResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject(typeof(updateCallPickupGroupResponse), SoapServiceAttribute.TargetNamespace);
        }

        [SoapMethod("getCallPickupGroup")]
        public getCallPickupGroupResponse getCallPickupGroup(getCallPickupGroup request)
        {
            return (getCallPickupGroupResponse)base.SendRequestResponse("getCallPickupGroup", request).GetBodyObject(typeof(getCallPickupGroupResponse), SoapServiceAttribute.TargetNamespace);
        }

        public IAsyncResult BegingetCallPickupGroup(getCallPickupGroup request, System.AsyncCallback callback, object asyncState)
        {
            return base.BeginSendRequestResponse("getCallPickupGroup", request, callback, asyncState);
        }

        public getCallPickupGroupResponse EndgetCallPickupGroup(System.IAsyncResult asyncResult)
        {
            return (getCallPickupGroupResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject(typeof(getCallPickupGroupResponse), SoapServiceAttribute.TargetNamespace);
        }

        [SoapMethod("removeCallPickupGroup")]
        public removeCallPickupGroupResponse removeCallPickupGroup(removeCallPickupGroup request)
        {
            return (removeCallPickupGroupResponse)base.SendRequestResponse("removeCallPickupGroup", request).GetBodyObject(typeof(removeCallPickupGroupResponse), SoapServiceAttribute.TargetNamespace);
        }

        public IAsyncResult BeginremoveCallPickupGroup(removeCallPickupGroup request, System.AsyncCallback callback, object asyncState)
        {
            return base.BeginSendRequestResponse("removeCallPickupGroup", request, callback, asyncState);
        }

        public removeCallPickupGroupResponse EndremoveCallPickupGroup(System.IAsyncResult asyncResult)
        {
            return (removeCallPickupGroupResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject(typeof(removeCallPickupGroupResponse), SoapServiceAttribute.TargetNamespace);
        }

        [SoapMethod("getDDI")]
        public getDDIResponse getDDI(getDDI request)
        {
            return (getDDIResponse)base.SendRequestResponse("getDDI", request).GetBodyObject(typeof(getDDIResponse), SoapServiceAttribute.TargetNamespace);
        }

        public IAsyncResult BegingetDDI(getDDI request, System.AsyncCallback callback, object asyncState)
        {
            return base.BeginSendRequestResponse("getDDI", request, callback, asyncState);
        }

        public getDDIResponse EndgetDDI(System.IAsyncResult asyncResult)
        {
            return (getDDIResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject(typeof(getDDIResponse), SoapServiceAttribute.TargetNamespace);
        }

        [SoapMethod("createAutogeneratedProfile")]
        public createAutogeneratedProfileResponse createAutogeneratedProfile(createAutogeneratedProfile request)
        {
            return (createAutogeneratedProfileResponse)base.SendRequestResponse("createAutogeneratedProfile", request).GetBodyObject(typeof(createAutogeneratedProfileResponse), SoapServiceAttribute.TargetNamespace);
        }

        public IAsyncResult BegincreateAutogeneratedProfile(createAutogeneratedProfile request, System.AsyncCallback callback, object asyncState)
        {
            return base.BeginSendRequestResponse("createAutogeneratedProfile", request, callback, asyncState);
        }

        public createAutogeneratedProfileResponse EndcreateAutogeneratedProfile(System.IAsyncResult asyncResult)
        {
            return (createAutogeneratedProfileResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject(typeof(createAutogeneratedProfileResponse), SoapServiceAttribute.TargetNamespace);
        }

        [SoapMethod("listPhoneByName")]
        public listPhoneByNameResponse listPhoneByName(listPhoneByName request)
        {
            return (listPhoneByNameResponse)base.SendRequestResponse("listPhoneByName", request).GetBodyObject(typeof(listPhoneByNameResponse), SoapServiceAttribute.TargetNamespace);
        }

        public IAsyncResult BeginlistPhoneByName(listPhoneByName request, System.AsyncCallback callback, object asyncState)
        {
            return base.BeginSendRequestResponse("listPhoneByName", request, callback, asyncState);
        }

        public listPhoneByNameResponse EndlistPhoneByName(System.IAsyncResult asyncResult)
        {
            return (listPhoneByNameResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject(typeof(listPhoneByNameResponse), SoapServiceAttribute.TargetNamespace);
        }

        [SoapMethod("listPhoneByDescription")]
        public listPhoneByDescriptionResponse listPhoneByDescription(listPhoneByDescription request)
        {
            return (listPhoneByDescriptionResponse)base.SendRequestResponse("listPhoneByDescription", request).GetBodyObject(typeof(listPhoneByDescriptionResponse), SoapServiceAttribute.TargetNamespace);
        }

        public IAsyncResult BeginlistPhoneByDescription(listPhoneByDescription request, System.AsyncCallback callback, object asyncState)
        {
            return base.BeginSendRequestResponse("listPhoneByDescription", request, callback, asyncState);
        }

        public listPhoneByDescriptionResponse EndlistPhoneByDescription(System.IAsyncResult asyncResult)
        {
            return (listPhoneByDescriptionResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject(typeof(listPhoneByDescriptionResponse), SoapServiceAttribute.TargetNamespace);
        }

        [SoapMethod("listUserByName")]
        public listUserByNameResponse listUserByName(listUserByName request)
        {
            return (listUserByNameResponse)base.SendRequestResponse("listUserByName", request).GetBodyObject(typeof(listUserByNameResponse), SoapServiceAttribute.TargetNamespace);
        }

        public IAsyncResult BeginlistUserByName(listUserByName request, System.AsyncCallback callback, object asyncState)
        {
            return base.BeginSendRequestResponse("listUserByName", request, callback, asyncState);
        }

        public listUserByNameResponse EndlistUserByName(System.IAsyncResult asyncResult)
        {
            return (listUserByNameResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject(typeof(listUserByNameResponse), SoapServiceAttribute.TargetNamespace);
        }

        [SoapMethod("listRoutePlanByType")]
        public listRoutePlanByTypeResponse listRoutePlanByType(listRoutePlanByType request)
        {
            return (listRoutePlanByTypeResponse)base.SendRequestResponse("listRoutePlanByType", request).GetBodyObject(typeof(listRoutePlanByTypeResponse), SoapServiceAttribute.TargetNamespace);
        }

        public IAsyncResult BeginlistRoutePlanByType(listRoutePlanByType request, System.AsyncCallback callback, object asyncState)
        {
            return base.BeginSendRequestResponse("listRoutePlanByType", request, callback, asyncState);
        }

        public listRoutePlanByTypeResponse EndlistRoutePlanByType(System.IAsyncResult asyncResult)
        {
            return (listRoutePlanByTypeResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject(typeof(listRoutePlanByTypeResponse), SoapServiceAttribute.TargetNamespace);
        }

        [SoapMethod("getNumDevices")]
        public getNumDevicesResponse getNumDevices(getNumDevices request)
        {
            return (getNumDevicesResponse)base.SendRequestResponse("getNumDevices", request).GetBodyObject(typeof(getNumDevicesResponse), SoapServiceAttribute.TargetNamespace);
        }

        public IAsyncResult BegingetNumDevices(getNumDevices request, System.AsyncCallback callback, object asyncState)
        {
            return base.BeginSendRequestResponse("getNumDevices", request, callback, asyncState);
        }

        public getNumDevicesResponse EndgetNumDevices(System.IAsyncResult asyncResult)
        {
            return (getNumDevicesResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject(typeof(getNumDevicesResponse), SoapServiceAttribute.TargetNamespace);
        }

        [SoapMethod("listServiceParameters")]
        public listServiceParametersResponse listServiceParameters(listServiceParameters request)
        {
            return (listServiceParametersResponse)base.SendRequestResponse("listServiceParameters", request).GetBodyObject(typeof(listServiceParametersResponse), SoapServiceAttribute.TargetNamespace);
        }

        public IAsyncResult BeginlistServiceParameters(listServiceParameters request, System.AsyncCallback callback, object asyncState)
        {
            return base.BeginSendRequestResponse("listServiceParameters", request, callback, asyncState);
        }

        public listServiceParametersResponse EndlistServiceParameters(System.IAsyncResult asyncResult)
        {
            return (listServiceParametersResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject(typeof(listServiceParametersResponse), SoapServiceAttribute.TargetNamespace);
        }

        [SoapMethod("listCSSByName")]
        public listCSSByNameResponse listCSSByName(listCSSByName request)
        {
            return (listCSSByNameResponse)base.SendRequestResponse("listCSSByName", request).GetBodyObject(typeof(listCSSByNameResponse), SoapServiceAttribute.TargetNamespace);
        }

        public IAsyncResult BeginlistCSSByName(listCSSByName request, System.AsyncCallback callback, object asyncState)
        {
            return base.BeginSendRequestResponse("listCSSByName", request, callback, asyncState);
        }

        public listCSSByNameResponse EndlistCSSByName(System.IAsyncResult asyncResult)
        {
            return (listCSSByNameResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject(typeof(listCSSByNameResponse), SoapServiceAttribute.TargetNamespace);
        }

        [SoapMethod("addDevicePool")]
        public addDevicePoolResponse addDevicePool(addDevicePool request)
        {
            return (addDevicePoolResponse)base.SendRequestResponse("addDevicePool", request).GetBodyObject(typeof(addDevicePoolResponse), SoapServiceAttribute.TargetNamespace);
        }

        public IAsyncResult BeginaddDevicePool(addDevicePool request, System.AsyncCallback callback, object asyncState)
        {
            return base.BeginSendRequestResponse("addDevicePool", request, callback, asyncState);
        }

        public addDevicePoolResponse EndaddDevicePool(System.IAsyncResult asyncResult)
        {
            return (addDevicePoolResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject(typeof(addDevicePoolResponse), SoapServiceAttribute.TargetNamespace);
        }

        [SoapMethod("updateDevicePool")]
        public updateDevicePoolResponse updateDevicePool(updateDevicePool request)
        {
            return (updateDevicePoolResponse)base.SendRequestResponse("updateDevicePool", request).GetBodyObject(typeof(updateDevicePoolResponse), SoapServiceAttribute.TargetNamespace);
        }

        public IAsyncResult BeginupdateDevicePool(updateDevicePool request, System.AsyncCallback callback, object asyncState)
        {
            return base.BeginSendRequestResponse("updateDevicePool", request, callback, asyncState);
        }

        public updateDevicePoolResponse EndupdateDevicePool(System.IAsyncResult asyncResult)
        {
            return (updateDevicePoolResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject(typeof(updateDevicePoolResponse), SoapServiceAttribute.TargetNamespace);
        }

        [SoapMethod("getDevicePool")]
        public getDevicePoolResponse getDevicePool(getDevicePool request)
        {
            return (getDevicePoolResponse)base.SendRequestResponse("getDevicePool", request).GetBodyObject(typeof(getDevicePoolResponse), SoapServiceAttribute.TargetNamespace);
        }

        public IAsyncResult BegingetDevicePool(getDevicePool request, System.AsyncCallback callback, object asyncState)
        {
            return base.BeginSendRequestResponse("getDevicePool", request, callback, asyncState);
        }

        public getDevicePoolResponse EndgetDevicePool(System.IAsyncResult asyncResult)
        {
            return (getDevicePoolResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject(typeof(getDevicePoolResponse), SoapServiceAttribute.TargetNamespace);
        }

        [SoapMethod("removeDevicePool")]
        public removeDevicePoolResponse removeDevicePool(removeDevicePool request)
        {
            return (removeDevicePoolResponse)base.SendRequestResponse("removeDevicePool", request).GetBodyObject(typeof(removeDevicePoolResponse), SoapServiceAttribute.TargetNamespace);
        }

        public IAsyncResult BeginremoveDevicePool(removeDevicePool request, System.AsyncCallback callback, object asyncState)
        {
            return base.BeginSendRequestResponse("removeDevicePool", request, callback, asyncState);
        }

        public removeDevicePoolResponse EndremoveDevicePool(System.IAsyncResult asyncResult)
        {
            return (removeDevicePoolResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject(typeof(removeDevicePoolResponse), SoapServiceAttribute.TargetNamespace);
        }

        [SoapMethod("addCallManagerGroup")]
        public addCallManagerGroupResponse addCallManagerGroup(addCallManagerGroup request)
        {
            return (addCallManagerGroupResponse)base.SendRequestResponse("addCallManagerGroup", request).GetBodyObject(typeof(addCallManagerGroupResponse), SoapServiceAttribute.TargetNamespace);
        }

        public IAsyncResult BeginaddCallManagerGroup(addCallManagerGroup request, System.AsyncCallback callback, object asyncState)
        {
            return base.BeginSendRequestResponse("addCallManagerGroup", request, callback, asyncState);
        }

        public addCallManagerGroupResponse EndaddCallManagerGroup(System.IAsyncResult asyncResult)
        {
            return (addCallManagerGroupResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject(typeof(addCallManagerGroupResponse), SoapServiceAttribute.TargetNamespace);
        }

        [SoapMethod("updateCallManagerGroup")]
        public updateCallManagerGroupResponse updateCallManagerGroup(updateCallManagerGroup request)
        {
            return (updateCallManagerGroupResponse)base.SendRequestResponse("updateCallManagerGroup", request).GetBodyObject(typeof(updateCallManagerGroupResponse), SoapServiceAttribute.TargetNamespace);
        }

        public IAsyncResult BeginupdateCallManagerGroup(updateCallManagerGroup request, System.AsyncCallback callback, object asyncState)
        {
            return base.BeginSendRequestResponse("updateCallManagerGroup", request, callback, asyncState);
        }

        public updateCallManagerGroupResponse EndupdateCallManagerGroup(System.IAsyncResult asyncResult)
        {
            return (updateCallManagerGroupResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject(typeof(updateCallManagerGroupResponse), SoapServiceAttribute.TargetNamespace);
        }

        [SoapMethod("getCallManagerGroup")]
        public getCallManagerGroupResponse getCallManagerGroup(getCallManagerGroup request)
        {
            return (getCallManagerGroupResponse)base.SendRequestResponse("getCallManagerGroup", request).GetBodyObject(typeof(getCallManagerGroupResponse), SoapServiceAttribute.TargetNamespace);
        }

        public IAsyncResult BegingetCallManagerGroup(getCallManagerGroup request, System.AsyncCallback callback, object asyncState)
        {
            return base.BeginSendRequestResponse("getCallManagerGroup", request, callback, asyncState);
        }

        public getCallManagerGroupResponse EndgetCallManagerGroup(System.IAsyncResult asyncResult)
        {
            return (getCallManagerGroupResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject(typeof(getCallManagerGroupResponse), SoapServiceAttribute.TargetNamespace);
        }

        [SoapMethod("removeCallManagerGroup")]
        public removeCallManagerGroupResponse removeCallManagerGroup(removeCallManagerGroup request)
        {
            return (removeCallManagerGroupResponse)base.SendRequestResponse("removeCallManagerGroup", request).GetBodyObject(typeof(removeCallManagerGroupResponse), SoapServiceAttribute.TargetNamespace);
        }

        public IAsyncResult BeginremoveCallManagerGroup(removeCallManagerGroup request, System.AsyncCallback callback, object asyncState)
        {
            return base.BeginSendRequestResponse("removeCallManagerGroup", request, callback, asyncState);
        }

        public removeCallManagerGroupResponse EndremoveCallManagerGroup(System.IAsyncResult asyncResult)
        {
            return (removeCallManagerGroupResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject(typeof(removeCallManagerGroupResponse), SoapServiceAttribute.TargetNamespace);
        }

        [SoapMethod("addVoiceMailPilot")]
        public addVoiceMailPilotResponse addVoiceMailPilot(addVoiceMailPilot request)
        {
            return (addVoiceMailPilotResponse)base.SendRequestResponse("addVoiceMailPilot", request).GetBodyObject(typeof(addVoiceMailPilotResponse), SoapServiceAttribute.TargetNamespace);
        }

        public IAsyncResult BeginaddVoiceMailPilot(addVoiceMailPilot request, System.AsyncCallback callback, object asyncState)
        {
            return base.BeginSendRequestResponse("addVoiceMailPilot", request, callback, asyncState);
        }

        public addVoiceMailPilotResponse EndaddVoiceMailPilot(System.IAsyncResult asyncResult)
        {
            return (addVoiceMailPilotResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject(typeof(addVoiceMailPilotResponse), SoapServiceAttribute.TargetNamespace);
        }

        [SoapMethod("updateVoiceMailPilot")]
        public updateVoiceMailPilotResponse updateVoiceMailPilot(updateVoiceMailPilot request)
        {
            return (updateVoiceMailPilotResponse)base.SendRequestResponse("updateVoiceMailPilot", request).GetBodyObject(typeof(updateVoiceMailPilotResponse), SoapServiceAttribute.TargetNamespace);
        }

        public IAsyncResult BeginupdateVoiceMailPilot(updateVoiceMailPilot request, System.AsyncCallback callback, object asyncState)
        {
            return base.BeginSendRequestResponse("updateVoiceMailPilot", request, callback, asyncState);
        }

        public updateVoiceMailPilotResponse EndupdateVoiceMailPilot(System.IAsyncResult asyncResult)
        {
            return (updateVoiceMailPilotResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject(typeof(updateVoiceMailPilotResponse), SoapServiceAttribute.TargetNamespace);
        }

        [SoapMethod("getVoiceMailPilot")]
        public getVoiceMailPilotResponse getVoiceMailPilot(getVoiceMailPilot request)
        {
            return (getVoiceMailPilotResponse)base.SendRequestResponse("getVoiceMailPilot", request).GetBodyObject(typeof(getVoiceMailPilotResponse), SoapServiceAttribute.TargetNamespace);
        }

        public IAsyncResult BegingetVoiceMailPilot(getVoiceMailPilot request, System.AsyncCallback callback, object asyncState)
        {
            return base.BeginSendRequestResponse("getVoiceMailPilot", request, callback, asyncState);
        }

        public getVoiceMailPilotResponse EndgetVoiceMailPilot(System.IAsyncResult asyncResult)
        {
            return (getVoiceMailPilotResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject(typeof(getVoiceMailPilotResponse), SoapServiceAttribute.TargetNamespace);
        }

        [SoapMethod("removeVoiceMailPilot")]
        public removeVoiceMailPilotResponse removeVoiceMailPilot(removeVoiceMailPilot request)
        {
            return (removeVoiceMailPilotResponse)base.SendRequestResponse("removeVoiceMailPilot", request).GetBodyObject(typeof(removeVoiceMailPilotResponse), SoapServiceAttribute.TargetNamespace);
        }

        public IAsyncResult BeginremoveVoiceMailPilot(removeVoiceMailPilot request, System.AsyncCallback callback, object asyncState)
        {
            return base.BeginSendRequestResponse("removeVoiceMailPilot", request, callback, asyncState);
        }

        public removeVoiceMailPilotResponse EndremoveVoiceMailPilot(System.IAsyncResult asyncResult)
        {
            return (removeVoiceMailPilotResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject(typeof(removeVoiceMailPilotResponse), SoapServiceAttribute.TargetNamespace);
        }

        [SoapMethod("addVoiceMailProfile")]
        public addVoiceMailProfileResponse addVoiceMailProfile(addVoiceMailProfile request)
        {
            return (addVoiceMailProfileResponse)base.SendRequestResponse("addVoiceMailProfile", request).GetBodyObject(typeof(addVoiceMailProfileResponse), SoapServiceAttribute.TargetNamespace);
        }

        public IAsyncResult BeginaddVoiceMailProfile(addVoiceMailProfile request, System.AsyncCallback callback, object asyncState)
        {
            return base.BeginSendRequestResponse("addVoiceMailProfile", request, callback, asyncState);
        }

        public addVoiceMailProfileResponse EndaddVoiceMailProfile(System.IAsyncResult asyncResult)
        {
            return (addVoiceMailProfileResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject(typeof(addVoiceMailProfileResponse), SoapServiceAttribute.TargetNamespace);
        }

        [SoapMethod("updateVoiceMailProfile")]
        public updateVoiceMailProfileResponse updateVoiceMailProfile(updateVoiceMailProfile request)
        {
            return (updateVoiceMailProfileResponse)base.SendRequestResponse("updateVoiceMailProfile", request).GetBodyObject(typeof(updateVoiceMailProfileResponse), SoapServiceAttribute.TargetNamespace);
        }

        public IAsyncResult BeginupdateVoiceMailProfile(updateVoiceMailProfile request, System.AsyncCallback callback, object asyncState)
        {
            return base.BeginSendRequestResponse("updateVoiceMailProfile", request, callback, asyncState);
        }

        public updateVoiceMailProfileResponse EndupdateVoiceMailProfile(System.IAsyncResult asyncResult)
        {
            return (updateVoiceMailProfileResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject(typeof(updateVoiceMailProfileResponse), SoapServiceAttribute.TargetNamespace);
        }

        [SoapMethod("getVoiceMailProfile")]
        public getVoiceMailProfileResponse getVoiceMailProfile(getVoiceMailProfile request)
        {
            return (getVoiceMailProfileResponse)base.SendRequestResponse("getVoiceMailProfile", request).GetBodyObject(typeof(getVoiceMailProfileResponse), SoapServiceAttribute.TargetNamespace);
        }

        public IAsyncResult BegingetVoiceMailProfile(getVoiceMailProfile request, System.AsyncCallback callback, object asyncState)
        {
            return base.BeginSendRequestResponse("getVoiceMailProfile", request, callback, asyncState);
        }

        public getVoiceMailProfileResponse EndgetVoiceMailProfile(System.IAsyncResult asyncResult)
        {
            return (getVoiceMailProfileResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject(typeof(getVoiceMailProfileResponse), SoapServiceAttribute.TargetNamespace);
        }

        [SoapMethod("removeVoiceMailProfile")]
        public removeVoiceMailProfileResponse removeVoiceMailProfile(removeVoiceMailProfile request)
        {
            return (removeVoiceMailProfileResponse)base.SendRequestResponse("removeVoiceMailProfile", request).GetBodyObject(typeof(removeVoiceMailProfileResponse), SoapServiceAttribute.TargetNamespace);
        }

        public IAsyncResult BeginremoveVoiceMailProfile(removeVoiceMailProfile request, System.AsyncCallback callback, object asyncState)
        {
            return base.BeginSendRequestResponse("removeVoiceMailProfile", request, callback, asyncState);
        }

        public removeVoiceMailProfileResponse EndremoveVoiceMailProfile(System.IAsyncResult asyncResult)
        {
            return (removeVoiceMailProfileResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject(typeof(removeVoiceMailProfileResponse), SoapServiceAttribute.TargetNamespace);
        }

        [SoapMethod("addVoiceMailPort")]
        public addVoiceMailPortResponse addVoiceMailPort(addVoiceMailPort request)
        {
            return (addVoiceMailPortResponse)base.SendRequestResponse("addVoiceMailPort", request).GetBodyObject(typeof(addVoiceMailPortResponse), SoapServiceAttribute.TargetNamespace);
        }

        public IAsyncResult BeginaddVoiceMailPort(addVoiceMailPort request, System.AsyncCallback callback, object asyncState)
        {
            return base.BeginSendRequestResponse("addVoiceMailPort", request, callback, asyncState);
        }

        public addVoiceMailPortResponse EndaddVoiceMailPort(System.IAsyncResult asyncResult)
        {
            return (addVoiceMailPortResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject(typeof(addVoiceMailPortResponse), SoapServiceAttribute.TargetNamespace);
        }

        [SoapMethod("updateVoiceMailPort")]
        public updateVoiceMailPortResponse updateVoiceMailPort(updateVoiceMailPort request)
        {
            return (updateVoiceMailPortResponse)base.SendRequestResponse("updateVoiceMailPort", request).GetBodyObject(typeof(updateVoiceMailPortResponse), SoapServiceAttribute.TargetNamespace);
        }

        public IAsyncResult BeginupdateVoiceMailPort(updateVoiceMailPort request, System.AsyncCallback callback, object asyncState)
        {
            return base.BeginSendRequestResponse("updateVoiceMailPort", request, callback, asyncState);
        }

        public updateVoiceMailPortResponse EndupdateVoiceMailPort(System.IAsyncResult asyncResult)
        {
            return (updateVoiceMailPortResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject(typeof(updateVoiceMailPortResponse), SoapServiceAttribute.TargetNamespace);
        }

        [SoapMethod("getVoiceMailPort")]
        public getVoiceMailPortResponse getVoiceMailPort(getVoiceMailPort request)
        {
            return (getVoiceMailPortResponse)base.SendRequestResponse("getVoiceMailPort", request).GetBodyObject(typeof(getVoiceMailPortResponse), SoapServiceAttribute.TargetNamespace);
        }

        public IAsyncResult BegingetVoiceMailPort(getVoiceMailPort request, System.AsyncCallback callback, object asyncState)
        {
            return base.BeginSendRequestResponse("getVoiceMailPort", request, callback, asyncState);
        }

        public getVoiceMailPortResponse EndgetVoiceMailPort(System.IAsyncResult asyncResult)
        {
            return (getVoiceMailPortResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject(typeof(getVoiceMailPortResponse), SoapServiceAttribute.TargetNamespace);
        }

        [SoapMethod("removeVoiceMailPort")]
        public removeVoiceMailPortResponse removeVoiceMailPort(removeVoiceMailPort request)
        {
            return (removeVoiceMailPortResponse)base.SendRequestResponse("removeVoiceMailPort", request).GetBodyObject(typeof(removeVoiceMailPortResponse), SoapServiceAttribute.TargetNamespace);
        }

        public IAsyncResult BeginremoveVoiceMailPort(removeVoiceMailPort request, System.AsyncCallback callback, object asyncState)
        {
            return base.BeginSendRequestResponse("removeVoiceMailPort", request, callback, asyncState);
        }

        public removeVoiceMailPortResponse EndremoveVoiceMailPort(System.IAsyncResult asyncResult)
        {
            return (removeVoiceMailPortResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject(typeof(removeVoiceMailPortResponse), SoapServiceAttribute.TargetNamespace);
        }

        [SoapMethod("addGatewayEndpoint")]
        public addGatewayEndpointResponse addGatewayEndpoint(addGatewayEndpoint request)
        {
            return (addGatewayEndpointResponse)base.SendRequestResponse("addGatewayEndpoint", request).GetBodyObject(typeof(addGatewayEndpointResponse), SoapServiceAttribute.TargetNamespace);
        }

        public IAsyncResult BeginaddGatewayEndpoint(addGatewayEndpoint request, System.AsyncCallback callback, object asyncState)
        {
            return base.BeginSendRequestResponse("addGatewayEndpoint", request, callback, asyncState);
        }

        public addGatewayEndpointResponse EndaddGatewayEndpoint(System.IAsyncResult asyncResult)
        {
            return (addGatewayEndpointResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject(typeof(addGatewayEndpointResponse), SoapServiceAttribute.TargetNamespace);
        }

        [SoapMethod("updateGatewayEndpoint")]
        public updateGatewayEndpointResponse updateGatewayEndpoint(updateGatewayEndpoint request)
        {
            return (updateGatewayEndpointResponse)base.SendRequestResponse("updateGatewayEndpoint", request).GetBodyObject(typeof(updateGatewayEndpointResponse), SoapServiceAttribute.TargetNamespace);
        }

        public IAsyncResult BeginupdateGatewayEndpoint(updateGatewayEndpoint request, System.AsyncCallback callback, object asyncState)
        {
            return base.BeginSendRequestResponse("updateGatewayEndpoint", request, callback, asyncState);
        }

        public updateGatewayEndpointResponse EndupdateGatewayEndpoint(System.IAsyncResult asyncResult)
        {
            return (updateGatewayEndpointResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject(typeof(updateGatewayEndpointResponse), SoapServiceAttribute.TargetNamespace);
        }

        [SoapMethod("getGatewayEndpoint")]
        public getGatewayEndpointResponse getGatewayEndpoint(getGatewayEndpoint request)
        {
            return (getGatewayEndpointResponse)base.SendRequestResponse("getGatewayEndpoint", request).GetBodyObject(typeof(getGatewayEndpointResponse), SoapServiceAttribute.TargetNamespace);
        }

        public IAsyncResult BegingetGatewayEndpoint(getGatewayEndpoint request, System.AsyncCallback callback, object asyncState)
        {
            return base.BeginSendRequestResponse("getGatewayEndpoint", request, callback, asyncState);
        }

        public getGatewayEndpointResponse EndgetGatewayEndpoint(System.IAsyncResult asyncResult)
        {
            return (getGatewayEndpointResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject(typeof(getGatewayEndpointResponse), SoapServiceAttribute.TargetNamespace);
        }

        [SoapMethod("removeGatewayEndpoint")]
        public removeGatewayEndpointResponse removeGatewayEndpoint(removeGatewayEndpoint request)
        {
            return (removeGatewayEndpointResponse)base.SendRequestResponse("removeGatewayEndpoint", request).GetBodyObject(typeof(removeGatewayEndpointResponse), SoapServiceAttribute.TargetNamespace);
        }

        public IAsyncResult BeginremoveGatewayEndpoint(removeGatewayEndpoint request, System.AsyncCallback callback, object asyncState)
        {
            return base.BeginSendRequestResponse("removeGatewayEndpoint", request, callback, asyncState);
        }

        public removeGatewayEndpointResponse EndremoveGatewayEndpoint(System.IAsyncResult asyncResult)
        {
            return (removeGatewayEndpointResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject(typeof(removeGatewayEndpointResponse), SoapServiceAttribute.TargetNamespace);
        }

        [SoapMethod("addRouteFilter")]
        public addRouteFilterResponse addRouteFilter(addRouteFilter request)
        {
            return (addRouteFilterResponse)base.SendRequestResponse("addRouteFilter", request).GetBodyObject(typeof(addRouteFilterResponse), SoapServiceAttribute.TargetNamespace);
        }

        public IAsyncResult BeginaddRouteFilter(addRouteFilter request, System.AsyncCallback callback, object asyncState)
        {
            return base.BeginSendRequestResponse("addRouteFilter", request, callback, asyncState);
        }

        public addRouteFilterResponse EndaddRouteFilter(System.IAsyncResult asyncResult)
        {
            return (addRouteFilterResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject(typeof(addRouteFilterResponse), SoapServiceAttribute.TargetNamespace);
        }

        [SoapMethod("updateRouteFilter")]
        public updateRouteFilterResponse updateRouteFilter(updateRouteFilter request)
        {
            return (updateRouteFilterResponse)base.SendRequestResponse("updateRouteFilter", request).GetBodyObject(typeof(updateRouteFilterResponse), SoapServiceAttribute.TargetNamespace);
        }

        public IAsyncResult BeginupdateRouteFilter(updateRouteFilter request, System.AsyncCallback callback, object asyncState)
        {
            return base.BeginSendRequestResponse("updateRouteFilter", request, callback, asyncState);
        }

        public updateRouteFilterResponse EndupdateRouteFilter(System.IAsyncResult asyncResult)
        {
            return (updateRouteFilterResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject(typeof(updateRouteFilterResponse), SoapServiceAttribute.TargetNamespace);
        }

        [SoapMethod("getRouteFilter")]
        public getRouteFilterResponse getRouteFilter(getRouteFilter request)
        {
            return (getRouteFilterResponse)base.SendRequestResponse("getRouteFilter", request).GetBodyObject(typeof(getRouteFilterResponse), SoapServiceAttribute.TargetNamespace);
        }

        public IAsyncResult BegingetRouteFilter(getRouteFilter request, System.AsyncCallback callback, object asyncState)
        {
            return base.BeginSendRequestResponse("getRouteFilter", request, callback, asyncState);
        }

        public getRouteFilterResponse EndgetRouteFilter(System.IAsyncResult asyncResult)
        {
            return (getRouteFilterResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject(typeof(getRouteFilterResponse), SoapServiceAttribute.TargetNamespace);
        }

        [SoapMethod("removeRouteFilter")]
        public removeRouteFilterResponse removeRouteFilter(removeRouteFilter request)
        {
            return (removeRouteFilterResponse)base.SendRequestResponse("removeRouteFilter", request).GetBodyObject(typeof(removeRouteFilterResponse), SoapServiceAttribute.TargetNamespace);
        }

        public IAsyncResult BeginremoveRouteFilter(removeRouteFilter request, System.AsyncCallback callback, object asyncState)
        {
            return base.BeginSendRequestResponse("removeRouteFilter", request, callback, asyncState);
        }

        public removeRouteFilterResponse EndremoveRouteFilter(System.IAsyncResult asyncResult)
        {
            return (removeRouteFilterResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject(typeof(removeRouteFilterResponse), SoapServiceAttribute.TargetNamespace);
        }

        [SoapMethod("getServiceParameter")]
        public getServiceParameterResponse getServiceParameter(getServiceParameter request)
        {
            return (getServiceParameterResponse)base.SendRequestResponse("getServiceParameter", request).GetBodyObject(typeof(getServiceParameterResponse), SoapServiceAttribute.TargetNamespace);
        }

        public IAsyncResult BegingetServiceParameter(getServiceParameter request, System.AsyncCallback callback, object asyncState)
        {
            return base.BeginSendRequestResponse("getServiceParameter", request, callback, asyncState);
        }

        public getServiceParameterResponse EndgetServiceParameter(System.IAsyncResult asyncResult)
        {
            return (getServiceParameterResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject(typeof(getServiceParameterResponse), SoapServiceAttribute.TargetNamespace);
        }

        [SoapMethod("updateServiceParameter")]
        public updateServiceParameterResponse updateServiceParameter(updateServiceParameter request)
        {
            return (updateServiceParameterResponse)base.SendRequestResponse("updateServiceParameter", request).GetBodyObject(typeof(updateServiceParameterResponse), SoapServiceAttribute.TargetNamespace);
        }

        public IAsyncResult BeginupdateServiceParameter(updateServiceParameter request, System.AsyncCallback callback, object asyncState)
        {
            return base.BeginSendRequestResponse("updateServiceParameter", request, callback, asyncState);
        }

        public updateServiceParameterResponse EndupdateServiceParameter(System.IAsyncResult asyncResult)
        {
            return (updateServiceParameterResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject(typeof(updateServiceParameterResponse), SoapServiceAttribute.TargetNamespace);
        }

        [SoapMethod("addLocation")]
        public addLocationResponse addLocation(addLocation request)
        {
            return (addLocationResponse)base.SendRequestResponse("addLocation", request).GetBodyObject(typeof(addLocationResponse), SoapServiceAttribute.TargetNamespace);
        }

        public IAsyncResult BeginaddLocation(addLocation request, System.AsyncCallback callback, object asyncState)
        {
            return base.BeginSendRequestResponse("addLocation", request, callback, asyncState);
        }

        public addLocationResponse EndaddLocation(System.IAsyncResult asyncResult)
        {
            return (addLocationResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject(typeof(addLocationResponse), SoapServiceAttribute.TargetNamespace);
        }

        [SoapMethod("updateLocation")]
        public updateLocationResponse updateLocation(updateLocation request)
        {
            return (updateLocationResponse)base.SendRequestResponse("updateLocation", request).GetBodyObject(typeof(updateLocationResponse), SoapServiceAttribute.TargetNamespace);
        }

        public IAsyncResult BeginupdateLocation(updateLocation request, System.AsyncCallback callback, object asyncState)
        {
            return base.BeginSendRequestResponse("updateLocation", request, callback, asyncState);
        }

        public updateLocationResponse EndupdateLocation(System.IAsyncResult asyncResult)
        {
            return (updateLocationResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject(typeof(updateLocationResponse), SoapServiceAttribute.TargetNamespace);
        }

        [SoapMethod("getLocation")]
        public getLocationResponse getLocation(getLocation request)
        {
            return (getLocationResponse)base.SendRequestResponse("getLocation", request).GetBodyObject(typeof(getLocationResponse), SoapServiceAttribute.TargetNamespace);
        }

        public IAsyncResult BegingetLocation(getLocation request, System.AsyncCallback callback, object asyncState)
        {
            return base.BeginSendRequestResponse("getLocation", request, callback, asyncState);
        }

        public getLocationResponse EndgetLocation(System.IAsyncResult asyncResult)
        {
            return (getLocationResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject(typeof(getLocationResponse), SoapServiceAttribute.TargetNamespace);
        }

        [SoapMethod("removeLocation")]
        public removeLocationResponse removeLocation(removeLocation request)
        {
            return (removeLocationResponse)base.SendRequestResponse("removeLocation", request).GetBodyObject(typeof(removeLocationResponse), SoapServiceAttribute.TargetNamespace);
        }

        public IAsyncResult BeginremoveLocation(removeLocation request, System.AsyncCallback callback, object asyncState)
        {
            return base.BeginSendRequestResponse("removeLocation", request, callback, asyncState);
        }

        public removeLocationResponse EndremoveLocation(System.IAsyncResult asyncResult)
        {
            return (removeLocationResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject(typeof(removeLocationResponse), SoapServiceAttribute.TargetNamespace);
        }

        [SoapMethod("addCMCInfo")]
        public addCMCInfoResponse addCMCInfo(addCMCInfo request)
        {
            return (addCMCInfoResponse)base.SendRequestResponse("addCMCInfo", request).GetBodyObject(typeof(addCMCInfoResponse), SoapServiceAttribute.TargetNamespace);
        }

        public IAsyncResult BeginaddCMCInfo(addCMCInfo request, System.AsyncCallback callback, object asyncState)
        {
            return base.BeginSendRequestResponse("addCMCInfo", request, callback, asyncState);
        }

        public addCMCInfoResponse EndaddCMCInfo(System.IAsyncResult asyncResult)
        {
            return (addCMCInfoResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject(typeof(addCMCInfoResponse), SoapServiceAttribute.TargetNamespace);
        }

        [SoapMethod("updateCMCInfo")]
        public updateCMCInfoResponse updateCMCInfo(updateCMCInfo request)
        {
            return (updateCMCInfoResponse)base.SendRequestResponse("updateCMCInfo", request).GetBodyObject(typeof(updateCMCInfoResponse), SoapServiceAttribute.TargetNamespace);
        }

        public IAsyncResult BeginupdateCMCInfo(updateCMCInfo request, System.AsyncCallback callback, object asyncState)
        {
            return base.BeginSendRequestResponse("updateCMCInfo", request, callback, asyncState);
        }

        public updateCMCInfoResponse EndupdateCMCInfo(System.IAsyncResult asyncResult)
        {
            return (updateCMCInfoResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject(typeof(updateCMCInfoResponse), SoapServiceAttribute.TargetNamespace);
        }

        [SoapMethod("getCMCInfo")]
        public getCMCInfoResponse getCMCInfo(getCMCInfo request)
        {
            return (getCMCInfoResponse)base.SendRequestResponse("getCMCInfo", request).GetBodyObject(typeof(getCMCInfoResponse), SoapServiceAttribute.TargetNamespace);
        }

        public IAsyncResult BegingetCMCInfo(getCMCInfo request, System.AsyncCallback callback, object asyncState)
        {
            return base.BeginSendRequestResponse("getCMCInfo", request, callback, asyncState);
        }

        public getCMCInfoResponse EndgetCMCInfo(System.IAsyncResult asyncResult)
        {
            return (getCMCInfoResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject(typeof(getCMCInfoResponse), SoapServiceAttribute.TargetNamespace);
        }

        [SoapMethod("removeCMCInfo")]
        public removeCMCInfoResponse removeCMCInfo(removeCMCInfo request)
        {
            return (removeCMCInfoResponse)base.SendRequestResponse("removeCMCInfo", request).GetBodyObject(typeof(removeCMCInfoResponse), SoapServiceAttribute.TargetNamespace);
        }

        public IAsyncResult BeginremoveCMCInfo(removeCMCInfo request, System.AsyncCallback callback, object asyncState)
        {
            return base.BeginSendRequestResponse("removeCMCInfo", request, callback, asyncState);
        }

        public removeCMCInfoResponse EndremoveCMCInfo(System.IAsyncResult asyncResult)
        {
            return (removeCMCInfoResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject(typeof(removeCMCInfoResponse), SoapServiceAttribute.TargetNamespace);
        }

        [SoapMethod("addFACInfo")]
        public addFACInfoResponse addFACInfo(addFACInfo request)
        {
            return (addFACInfoResponse)base.SendRequestResponse("addFACInfo", request).GetBodyObject(typeof(addFACInfoResponse), SoapServiceAttribute.TargetNamespace);
        }

        public IAsyncResult BeginaddFACInfo(addFACInfo request, System.AsyncCallback callback, object asyncState)
        {
            return base.BeginSendRequestResponse("addFACInfo", request, callback, asyncState);
        }

        public addFACInfoResponse EndaddFACInfo(System.IAsyncResult asyncResult)
        {
            return (addFACInfoResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject(typeof(addFACInfoResponse), SoapServiceAttribute.TargetNamespace);
        }

        [SoapMethod("updateFACInfo")]
        public updateFACInfoResponse updateFACInfo(updateFACInfo request)
        {
            return (updateFACInfoResponse)base.SendRequestResponse("updateFACInfo", request).GetBodyObject(typeof(updateFACInfoResponse), SoapServiceAttribute.TargetNamespace);
        }

        public IAsyncResult BeginupdateFACInfo(updateFACInfo request, System.AsyncCallback callback, object asyncState)
        {
            return base.BeginSendRequestResponse("updateFACInfo", request, callback, asyncState);
        }

        public updateFACInfoResponse EndupdateFACInfo(System.IAsyncResult asyncResult)
        {
            return (updateFACInfoResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject(typeof(updateFACInfoResponse), SoapServiceAttribute.TargetNamespace);
        }

        [SoapMethod("getFACInfo")]
        public getFACInfoResponse getFACInfo(getFACInfo request)
        {
            return (getFACInfoResponse)base.SendRequestResponse("getFACInfo", request).GetBodyObject(typeof(getFACInfoResponse), SoapServiceAttribute.TargetNamespace);
        }

        public IAsyncResult BegingetFACInfo(getFACInfo request, System.AsyncCallback callback, object asyncState)
        {
            return base.BeginSendRequestResponse("getFACInfo", request, callback, asyncState);
        }

        public getFACInfoResponse EndgetFACInfo(System.IAsyncResult asyncResult)
        {
            return (getFACInfoResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject(typeof(getFACInfoResponse), SoapServiceAttribute.TargetNamespace);
        }

        [SoapMethod("removeFACInfo")]
        public removeFACInfoResponse removeFACInfo(removeFACInfo request)
        {
            return (removeFACInfoResponse)base.SendRequestResponse("removeFACInfo", request).GetBodyObject(typeof(removeFACInfoResponse), SoapServiceAttribute.TargetNamespace);
        }

        public IAsyncResult BeginremoveFACInfo(removeFACInfo request, System.AsyncCallback callback, object asyncState)
        {
            return base.BeginSendRequestResponse("removeFACInfo", request, callback, asyncState);
        }

        public removeFACInfoResponse EndremoveFACInfo(System.IAsyncResult asyncResult)
        {
            return (removeFACInfoResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject(typeof(removeFACInfoResponse), SoapServiceAttribute.TargetNamespace);
        }

        [SoapMethod("addRegion")]
        public addRegionResponse addRegion(addRegion request)
        {
            return (addRegionResponse)base.SendRequestResponse("addRegion", request).GetBodyObject(typeof(addRegionResponse), SoapServiceAttribute.TargetNamespace);
        }

        public IAsyncResult BeginaddRegion(addRegion request, System.AsyncCallback callback, object asyncState)
        {
            return base.BeginSendRequestResponse("addRegion", request, callback, asyncState);
        }

        public addRegionResponse EndaddRegion(System.IAsyncResult asyncResult)
        {
            return (addRegionResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject(typeof(addRegionResponse), SoapServiceAttribute.TargetNamespace);
        }

        [SoapMethod("updateRegion")]
        public updateRegionResponse updateRegion(updateRegion request)
        {
            return (updateRegionResponse)base.SendRequestResponse("updateRegion", request).GetBodyObject(typeof(updateRegionResponse), SoapServiceAttribute.TargetNamespace);
        }

        public IAsyncResult BeginupdateRegion(updateRegion request, System.AsyncCallback callback, object asyncState)
        {
            return base.BeginSendRequestResponse("updateRegion", request, callback, asyncState);
        }

        public updateRegionResponse EndupdateRegion(System.IAsyncResult asyncResult)
        {
            return (updateRegionResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject(typeof(updateRegionResponse), SoapServiceAttribute.TargetNamespace);
        }

        [SoapMethod("removeRegion")]
        public removeRegionResponse removeRegion(removeRegion request)
        {
            return (removeRegionResponse)base.SendRequestResponse("removeRegion", request).GetBodyObject(typeof(removeRegionResponse), SoapServiceAttribute.TargetNamespace);
        }

        public IAsyncResult BeginremoveRegion(removeRegion request, System.AsyncCallback callback, object asyncState)
        {
            return base.BeginSendRequestResponse("removeRegion", request, callback, asyncState);
        }

        public removeRegionResponse EndremoveRegion(System.IAsyncResult asyncResult)
        {
            return (removeRegionResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject(typeof(removeRegionResponse), SoapServiceAttribute.TargetNamespace);
        }

        [SoapMethod("getRegion")]
        public getRegionResponse getRegion(getRegion request)
        {
            return (getRegionResponse)base.SendRequestResponse("getRegion", request).GetBodyObject(typeof(getRegionResponse), SoapServiceAttribute.TargetNamespace);
        }

        public IAsyncResult BegingetRegion(getRegion request, System.AsyncCallback callback, object asyncState)
        {
            return base.BeginSendRequestResponse("getRegion", request, callback, asyncState);
        }

        public getRegionResponse EndgetRegion(System.IAsyncResult asyncResult)
        {
            return (getRegionResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject(typeof(getRegionResponse), SoapServiceAttribute.TargetNamespace);
        }

        [SoapMethod("updateRegionMatrix")]
        public updateRegionMatrixResponse updateRegionMatrix(updateRegionMatrix request)
        {
            return (updateRegionMatrixResponse)base.SendRequestResponse("updateRegionMatrix", request).GetBodyObject(typeof(updateRegionMatrixResponse), SoapServiceAttribute.TargetNamespace);
        }

        public IAsyncResult BeginupdateRegionMatrix(updateRegionMatrix request, System.AsyncCallback callback, object asyncState)
        {
            return base.BeginSendRequestResponse("updateRegionMatrix", request, callback, asyncState);
        }

        public updateRegionMatrixResponse EndupdateRegionMatrix(System.IAsyncResult asyncResult)
        {
            return (updateRegionMatrixResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject(typeof(updateRegionMatrixResponse), SoapServiceAttribute.TargetNamespace);
        }

        [SoapMethod("addMGCP")]
        public addMGCPResponse addMGCP(addMGCP request)
        {
            return (addMGCPResponse)base.SendRequestResponse("addMGCP", request).GetBodyObject(typeof(addMGCPResponse), SoapServiceAttribute.TargetNamespace);
        }

        public IAsyncResult BeginaddMGCP(addMGCP request, System.AsyncCallback callback, object asyncState)
        {
            return base.BeginSendRequestResponse("addMGCP", request, callback, asyncState);
        }

        public addMGCPResponse EndaddMGCP(System.IAsyncResult asyncResult)
        {
            return (addMGCPResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject(typeof(addMGCPResponse), SoapServiceAttribute.TargetNamespace);
        }

        [SoapMethod("addMGCPUnit")]
        public addMGCPUnitResponse addMGCPUnit(addMGCPUnit request)
        {
            return (addMGCPUnitResponse)base.SendRequestResponse("addMGCPUnit", request).GetBodyObject(typeof(addMGCPUnitResponse), SoapServiceAttribute.TargetNamespace);
        }

        public IAsyncResult BeginaddMGCPUnit(addMGCPUnit request, System.AsyncCallback callback, object asyncState)
        {
            return base.BeginSendRequestResponse("addMGCPUnit", request, callback, asyncState);
        }

        public addMGCPUnitResponse EndaddMGCPUnit(System.IAsyncResult asyncResult)
        {
            return (addMGCPUnitResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject(typeof(addMGCPUnitResponse), SoapServiceAttribute.TargetNamespace);
        }

        [SoapMethod("addMGCPSubunit")]
        public addMGCPSubunitResponse addMGCPSubunit(addMGCPSubunit request)
        {
            return (addMGCPSubunitResponse)base.SendRequestResponse("addMGCPSubunit", request).GetBodyObject(typeof(addMGCPSubunitResponse), SoapServiceAttribute.TargetNamespace);
        }

        public IAsyncResult BeginaddMGCPSubunit(addMGCPSubunit request, System.AsyncCallback callback, object asyncState)
        {
            return base.BeginSendRequestResponse("addMGCPSubunit", request, callback, asyncState);
        }

        public addMGCPSubunitResponse EndaddMGCPSubunit(System.IAsyncResult asyncResult)
        {
            return (addMGCPSubunitResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject(typeof(addMGCPSubunitResponse), SoapServiceAttribute.TargetNamespace);
        }

        [SoapMethod("addMGCPEndpoint")]
        public addMGCPEndpointResponse addMGCPEndpoint(addMGCPEndpoint request)
        {
            return (addMGCPEndpointResponse)base.SendRequestResponse("addMGCPEndpoint", request).GetBodyObject(typeof(addMGCPEndpointResponse), SoapServiceAttribute.TargetNamespace);
        }

        public IAsyncResult BeginaddMGCPEndpoint(addMGCPEndpoint request, System.AsyncCallback callback, object asyncState)
        {
            return base.BeginSendRequestResponse("addMGCPEndpoint", request, callback, asyncState);
        }

        public addMGCPEndpointResponse EndaddMGCPEndpoint(System.IAsyncResult asyncResult)
        {
            return (addMGCPEndpointResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject(typeof(addMGCPEndpointResponse), SoapServiceAttribute.TargetNamespace);
        }

        [SoapMethod("getMGCP")]
        public getMGCPResponse getMGCP(getMGCP request)
        {
            return (getMGCPResponse)base.SendRequestResponse("getMGCP", request).GetBodyObject(typeof(getMGCPResponse), SoapServiceAttribute.TargetNamespace);
        }

        public IAsyncResult BegingetMGCP(getMGCP request, System.AsyncCallback callback, object asyncState)
        {
            return base.BeginSendRequestResponse("getMGCP", request, callback, asyncState);
        }

        public getMGCPResponse EndgetMGCP(System.IAsyncResult asyncResult)
        {
            return (getMGCPResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject(typeof(getMGCPResponse), SoapServiceAttribute.TargetNamespace);
        }

        [SoapMethod("removeMGCP")]
        public removeMGCPResponse removeMGCP(removeMGCP request)
        {
            return (removeMGCPResponse)base.SendRequestResponse("removeMGCP", request).GetBodyObject(typeof(removeMGCPResponse), SoapServiceAttribute.TargetNamespace);
        }

        public IAsyncResult BeginremoveMGCP(removeMGCP request, System.AsyncCallback callback, object asyncState)
        {
            return base.BeginSendRequestResponse("removeMGCP", request, callback, asyncState);
        }

        public removeMGCPResponse EndremoveMGCP(System.IAsyncResult asyncResult)
        {
            return (removeMGCPResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject(typeof(removeMGCPResponse), SoapServiceAttribute.TargetNamespace);
        }

        [SoapMethod("removeMGCPUnit")]
        public removeMGCPUnitResponse removeMGCPUnit(removeMGCPUnit request)
        {
            return (removeMGCPUnitResponse)base.SendRequestResponse("removeMGCPUnit", request).GetBodyObject(typeof(removeMGCPUnitResponse), SoapServiceAttribute.TargetNamespace);
        }

        public IAsyncResult BeginremoveMGCPUnit(removeMGCPUnit request, System.AsyncCallback callback, object asyncState)
        {
            return base.BeginSendRequestResponse("removeMGCPUnit", request, callback, asyncState);
        }

        public removeMGCPUnitResponse EndremoveMGCPUnit(System.IAsyncResult asyncResult)
        {
            return (removeMGCPUnitResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject(typeof(removeMGCPUnitResponse), SoapServiceAttribute.TargetNamespace);
        }

        [SoapMethod("removeMGCPSubunit")]
        public removeMGCPSubunitResponse removeMGCPSubunit(removeMGCPSubunit request)
        {
            return (removeMGCPSubunitResponse)base.SendRequestResponse("removeMGCPSubunit", request).GetBodyObject(typeof(removeMGCPSubunitResponse), SoapServiceAttribute.TargetNamespace);
        }

        public IAsyncResult BeginremoveMGCPSubunit(removeMGCPSubunit request, System.AsyncCallback callback, object asyncState)
        {
            return base.BeginSendRequestResponse("removeMGCPSubunit", request, callback, asyncState);
        }

        public removeMGCPSubunitResponse EndremoveMGCPSubunit(System.IAsyncResult asyncResult)
        {
            return (removeMGCPSubunitResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject(typeof(removeMGCPSubunitResponse), SoapServiceAttribute.TargetNamespace);
        }

        [SoapMethod("removeMGCPEndpoint")]
        public removeMGCPEndpointResponse removeMGCPEndpoint(removeMGCPEndpoint request)
        {
            return (removeMGCPEndpointResponse)base.SendRequestResponse("removeMGCPEndpoint", request).GetBodyObject(typeof(removeMGCPEndpointResponse), SoapServiceAttribute.TargetNamespace);
        }

        public IAsyncResult BeginremoveMGCPEndpoint(removeMGCPEndpoint request, System.AsyncCallback callback, object asyncState)
        {
            return base.BeginSendRequestResponse("removeMGCPEndpoint", request, callback, asyncState);
        }

        public removeMGCPEndpointResponse EndremoveMGCPEndpoint(System.IAsyncResult asyncResult)
        {
            return (removeMGCPEndpointResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject(typeof(removeMGCPEndpointResponse), SoapServiceAttribute.TargetNamespace);
        }

        [SoapMethod("updateMGCP")]
        public updateMGCPResponse updateMGCP(updateMGCP request)
        {
            return (updateMGCPResponse)base.SendRequestResponse("updateMGCP", request).GetBodyObject(typeof(updateMGCPResponse), SoapServiceAttribute.TargetNamespace);
        }

        public IAsyncResult BeginupdateMGCP(updateMGCP request, System.AsyncCallback callback, object asyncState)
        {
            return base.BeginSendRequestResponse("updateMGCP", request, callback, asyncState);
        }

        public updateMGCPResponse EndupdateMGCP(System.IAsyncResult asyncResult)
        {
            return (updateMGCPResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject(typeof(updateMGCPResponse), SoapServiceAttribute.TargetNamespace);
        }

        [SoapMethod("addCallManager")]
        public addCallManagerResponse addCallManager(addCallManager request)
        {
            return (addCallManagerResponse)base.SendRequestResponse("addCallManager", request).GetBodyObject(typeof(addCallManagerResponse), SoapServiceAttribute.TargetNamespace);
        }

        public IAsyncResult BeginaddCallManager(addCallManager request, System.AsyncCallback callback, object asyncState)
        {
            return base.BeginSendRequestResponse("addCallManager", request, callback, asyncState);
        }

        public addCallManagerResponse EndaddCallManager(System.IAsyncResult asyncResult)
        {
            return (addCallManagerResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject(typeof(addCallManagerResponse), SoapServiceAttribute.TargetNamespace);
        }

        [SoapMethod("updateCallManager")]
        public updateCallManagerResponse updateCallManager(updateCallManager request)
        {
            return (updateCallManagerResponse)base.SendRequestResponse("updateCallManager", request).GetBodyObject(typeof(updateCallManagerResponse), SoapServiceAttribute.TargetNamespace);
        }

        public IAsyncResult BeginupdateCallManager(updateCallManager request, System.AsyncCallback callback, object asyncState)
        {
            return base.BeginSendRequestResponse("updateCallManager", request, callback, asyncState);
        }

        public updateCallManagerResponse EndupdateCallManager(System.IAsyncResult asyncResult)
        {
            return (updateCallManagerResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject(typeof(updateCallManagerResponse), SoapServiceAttribute.TargetNamespace);
        }

        [SoapMethod("getCallManager")]
        public getCallManagerResponse getCallManager(getCallManager request)
        {
            return (getCallManagerResponse)base.SendRequestResponse("getCallManager", request).GetBodyObject(typeof(getCallManagerResponse), SoapServiceAttribute.TargetNamespace);
        }

        public IAsyncResult BegingetCallManager(getCallManager request, System.AsyncCallback callback, object asyncState)
        {
            return base.BeginSendRequestResponse("getCallManager", request, callback, asyncState);
        }

        public getCallManagerResponse EndgetCallManager(System.IAsyncResult asyncResult)
        {
            return (getCallManagerResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject(typeof(getCallManagerResponse), SoapServiceAttribute.TargetNamespace);
        }

        [SoapMethod("removeCallManager")]
        public removeCallManagerResponse removeCallManager(removeCallManager request)
        {
            return (removeCallManagerResponse)base.SendRequestResponse("removeCallManager", request).GetBodyObject(typeof(removeCallManagerResponse), SoapServiceAttribute.TargetNamespace);
        }

        public IAsyncResult BeginremoveCallManager(removeCallManager request, System.AsyncCallback callback, object asyncState)
        {
            return base.BeginSendRequestResponse("removeCallManager", request, callback, asyncState);
        }

        public removeCallManagerResponse EndremoveCallManager(System.IAsyncResult asyncResult)
        {
            return (removeCallManagerResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject(typeof(removeCallManagerResponse), SoapServiceAttribute.TargetNamespace);
        }

        [SoapMethod("addProcessNode")]
        public addProcessNodeResponse addProcessNode(addProcessNode request)
        {
            return (addProcessNodeResponse)base.SendRequestResponse("addProcessNode", request).GetBodyObject(typeof(addProcessNodeResponse), SoapServiceAttribute.TargetNamespace);
        }

        public IAsyncResult BeginaddProcessNode(addProcessNode request, System.AsyncCallback callback, object asyncState)
        {
            return base.BeginSendRequestResponse("addProcessNode", request, callback, asyncState);
        }

        public addProcessNodeResponse EndaddProcessNode(System.IAsyncResult asyncResult)
        {
            return (addProcessNodeResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject(typeof(addProcessNodeResponse), SoapServiceAttribute.TargetNamespace);
        }

        [SoapMethod("updateProcessNode")]
        public updateProcessNodeResponse updateProcessNode(updateProcessNode request)
        {
            return (updateProcessNodeResponse)base.SendRequestResponse("updateProcessNode", request).GetBodyObject(typeof(updateProcessNodeResponse), SoapServiceAttribute.TargetNamespace);
        }

        public IAsyncResult BeginupdateProcessNode(updateProcessNode request, System.AsyncCallback callback, object asyncState)
        {
            return base.BeginSendRequestResponse("updateProcessNode", request, callback, asyncState);
        }

        public updateProcessNodeResponse EndupdateProcessNode(System.IAsyncResult asyncResult)
        {
            return (updateProcessNodeResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject(typeof(updateProcessNodeResponse), SoapServiceAttribute.TargetNamespace);
        }

        [SoapMethod("getProcessNode")]
        public getProcessNodeResponse getProcessNode(getProcessNode request)
        {
            return (getProcessNodeResponse)base.SendRequestResponse("getProcessNode", request).GetBodyObject(typeof(getProcessNodeResponse), SoapServiceAttribute.TargetNamespace);
        }

        public IAsyncResult BegingetProcessNode(getProcessNode request, System.AsyncCallback callback, object asyncState)
        {
            return base.BeginSendRequestResponse("getProcessNode", request, callback, asyncState);
        }

        public getProcessNodeResponse EndgetProcessNode(System.IAsyncResult asyncResult)
        {
            return (getProcessNodeResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject(typeof(getProcessNodeResponse), SoapServiceAttribute.TargetNamespace);
        }

        [SoapMethod("removeProcessNode")]
        public removeProcessNodeResponse removeProcessNode(removeProcessNode request)
        {
            return (removeProcessNodeResponse)base.SendRequestResponse("removeProcessNode", request).GetBodyObject(typeof(removeProcessNodeResponse), SoapServiceAttribute.TargetNamespace);
        }

        public IAsyncResult BeginremoveProcessNode(removeProcessNode request, System.AsyncCallback callback, object asyncState)
        {
            return base.BeginSendRequestResponse("removeProcessNode", request, callback, asyncState);
        }

        public removeProcessNodeResponse EndremoveProcessNode(System.IAsyncResult asyncResult)
        {
            return (removeProcessNodeResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject(typeof(removeProcessNodeResponse), SoapServiceAttribute.TargetNamespace);
        }

        [SoapMethod("listAllProcessNodes")]
        public listAllProcessNodesResponse listAllProcessNodes(listAllProcessNodes request)
        {
            return (listAllProcessNodesResponse)base.SendRequestResponse("listAllProcessNodes", request).GetBodyObject(typeof(listAllProcessNodesResponse), SoapServiceAttribute.TargetNamespace);
        }

        public IAsyncResult BeginlistAllProcessNodes(listAllProcessNodes request, System.AsyncCallback callback, object asyncState)
        {
            return base.BeginSendRequestResponse("listAllProcessNodes", request, callback, asyncState);
        }

        public listAllProcessNodesResponse EndlistAllProcessNodes(System.IAsyncResult asyncResult)
        {
            return (listAllProcessNodesResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject(typeof(listAllProcessNodesResponse), SoapServiceAttribute.TargetNamespace);
        }

        [SoapMethod("listProcessNodesByService")]
        public listProcessNodesByServiceResponse listProcessNodesByService(listProcessNodesByService request)
        {
            return (listProcessNodesByServiceResponse)base.SendRequestResponse("listProcessNodesByService", request).GetBodyObject(typeof(listProcessNodesByServiceResponse), SoapServiceAttribute.TargetNamespace);
        }

        public IAsyncResult BeginlistProcessNodesByService(listProcessNodesByService request, System.AsyncCallback callback, object asyncState)
        {
            return base.BeginSendRequestResponse("listProcessNodesByService", request, callback, asyncState);
        }

        public listProcessNodesByServiceResponse EndlistProcessNodesByService(System.IAsyncResult asyncResult)
        {
            return (listProcessNodesByServiceResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject(typeof(listProcessNodesByServiceResponse), SoapServiceAttribute.TargetNamespace);
        }

        [SoapMethod("getProcessNodeService")]
        public getProcessNodeServiceResponse getProcessNodeService(getProcessNodeService request)
        {
            return (getProcessNodeServiceResponse)base.SendRequestResponse("getProcessNodeService", request).GetBodyObject(typeof(getProcessNodeServiceResponse), SoapServiceAttribute.TargetNamespace);
        }

        public IAsyncResult BegingetProcessNodeService(getProcessNodeService request, System.AsyncCallback callback, object asyncState)
        {
            return base.BeginSendRequestResponse("getProcessNodeService", request, callback, asyncState);
        }

        public getProcessNodeServiceResponse EndgetProcessNodeService(System.IAsyncResult asyncResult)
        {
            return (getProcessNodeServiceResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject(typeof(getProcessNodeServiceResponse), SoapServiceAttribute.TargetNamespace);
        }

        [SoapMethod("updateProcessNodeService")]
        public updateProcessNodeServiceResponse updateProcessNodeService(updateProcessNodeService request)
        {
            return (updateProcessNodeServiceResponse)base.SendRequestResponse("updateProcessNodeService", request).GetBodyObject(typeof(updateProcessNodeServiceResponse), SoapServiceAttribute.TargetNamespace);
        }

        public IAsyncResult BeginupdateProcessNodeService(updateProcessNodeService request, System.AsyncCallback callback, object asyncState)
        {
            return base.BeginSendRequestResponse("updateProcessNodeService", request, callback, asyncState);
        }

        public updateProcessNodeServiceResponse EndupdateProcessNodeService(System.IAsyncResult asyncResult)
        {
            return (updateProcessNodeServiceResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject(typeof(updateProcessNodeServiceResponse), SoapServiceAttribute.TargetNamespace);
        }

        [SoapMethod("listRoutePartitionByName")]
        public listRoutePartitionByNameResponse listRoutePartitionByName(listRoutePartitionByName request)
        {
            return (listRoutePartitionByNameResponse)base.SendRequestResponse("listRoutePartitionByName", request).GetBodyObject(typeof(listRoutePartitionByNameResponse), SoapServiceAttribute.TargetNamespace);
        }

        public IAsyncResult BeginlistRoutePartitionByName(listRoutePartitionByName request, System.AsyncCallback callback, object asyncState)
        {
            return base.BeginSendRequestResponse("listRoutePartitionByName", request, callback, asyncState);
        }

        public listRoutePartitionByNameResponse EndlistRoutePartitionByName(System.IAsyncResult asyncResult)
        {
            return (listRoutePartitionByNameResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject(typeof(listRoutePartitionByNameResponse), SoapServiceAttribute.TargetNamespace);
        }

        [SoapMethod("listDevicePoolByName")]
        public listDevicePoolByNameResponse listDevicePoolByName(listDevicePoolByName request)
        {
            return (listDevicePoolByNameResponse)base.SendRequestResponse("listDevicePoolByName", request).GetBodyObject(typeof(listDevicePoolByNameResponse), SoapServiceAttribute.TargetNamespace);
        }

        public IAsyncResult BeginlistDevicePoolByName(listDevicePoolByName request, System.AsyncCallback callback, object asyncState)
        {
            return base.BeginSendRequestResponse("listDevicePoolByName", request, callback, asyncState);
        }

        public listDevicePoolByNameResponse EndlistDevicePoolByName(System.IAsyncResult asyncResult)
        {
            return (listDevicePoolByNameResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject(typeof(listDevicePoolByNameResponse), SoapServiceAttribute.TargetNamespace);
        }

        [SoapMethod("listPhoneTemplateByName")]
        public listPhoneTemplateByNameResponse listPhoneTemplateByName(listPhoneTemplateByName request)
        {
            return (listPhoneTemplateByNameResponse)base.SendRequestResponse("listPhoneTemplateByName", request).GetBodyObject(typeof(listPhoneTemplateByNameResponse), SoapServiceAttribute.TargetNamespace);
        }

        public IAsyncResult BeginlistPhoneTemplateByName(listPhoneTemplateByName request, System.AsyncCallback callback, object asyncState)
        {
            return base.BeginSendRequestResponse("listPhoneTemplateByName", request, callback, asyncState);
        }

        public listPhoneTemplateByNameResponse EndlistPhoneTemplateByName(System.IAsyncResult asyncResult)
        {
            return (listPhoneTemplateByNameResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject(typeof(listPhoneTemplateByNameResponse), SoapServiceAttribute.TargetNamespace);
        }

        [SoapMethod("listDeviceByNameAndClass")]
        public listDeviceByNameAndClassResponse listDeviceByNameAndClass(listDeviceByNameAndClass request)
        {
            return (listDeviceByNameAndClassResponse)base.SendRequestResponse("listDeviceByNameAndClass", request).GetBodyObject(typeof(listDeviceByNameAndClassResponse), SoapServiceAttribute.TargetNamespace);
        }

        public IAsyncResult BeginlistDeviceByNameAndClass(listDeviceByNameAndClass request, System.AsyncCallback callback, object asyncState)
        {
            return base.BeginSendRequestResponse("listDeviceByNameAndClass", request, callback, asyncState);
        }

        public listDeviceByNameAndClassResponse EndlistDeviceByNameAndClass(System.IAsyncResult asyncResult)
        {
            return (listDeviceByNameAndClassResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject(typeof(listDeviceByNameAndClassResponse), SoapServiceAttribute.TargetNamespace);
        }

        [SoapMethod("listDeviceByServiceName")]
        public listDeviceByServiceNameResponse listDeviceByServiceName(listDeviceByServiceName request)
        {
            return (listDeviceByServiceNameResponse)base.SendRequestResponse("listDeviceByServiceName", request).GetBodyObject(typeof(listDeviceByServiceNameResponse), SoapServiceAttribute.TargetNamespace);
        }

        public IAsyncResult BeginlistDeviceByServiceName(listDeviceByServiceName request, System.AsyncCallback callback, object asyncState)
        {
            return base.BeginSendRequestResponse("listDeviceByServiceName", request, callback, asyncState);
        }

        public listDeviceByServiceNameResponse EndlistDeviceByServiceName(System.IAsyncResult asyncResult)
        {
            return (listDeviceByServiceNameResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject(typeof(listDeviceByServiceNameResponse), SoapServiceAttribute.TargetNamespace);
        }

        [SoapMethod("listMOHAudioSourceByName")]
        public listMOHAudioSourceByNameResponse listMOHAudioSourceByName(listMOHAudioSourceByName request)
        {
            return (listMOHAudioSourceByNameResponse)base.SendRequestResponse("listMOHAudioSourceByName", request).GetBodyObject(typeof(listMOHAudioSourceByNameResponse), SoapServiceAttribute.TargetNamespace);
        }

        public IAsyncResult BeginlistMOHAudioSourceByName(listMOHAudioSourceByName request, System.AsyncCallback callback, object asyncState)
        {
            return base.BeginSendRequestResponse("listMOHAudioSourceByName", request, callback, asyncState);
        }

        public listMOHAudioSourceByNameResponse EndlistMOHAudioSourceByName(System.IAsyncResult asyncResult)
        {
            return (listMOHAudioSourceByNameResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject(typeof(listMOHAudioSourceByNameResponse), SoapServiceAttribute.TargetNamespace);
        }

        [SoapMethod("updateMOHAudioSource")]
        public updateMOHAudioSourceResponse updateMOHAudioSource(updateMOHAudioSource request)
        {
            return (updateMOHAudioSourceResponse)base.SendRequestResponse("updateMOHAudioSource", request).GetBodyObject(typeof(updateMOHAudioSourceResponse), SoapServiceAttribute.TargetNamespace);
        }

        public IAsyncResult BeginupdateMOHAudioSource(updateMOHAudioSource request, System.AsyncCallback callback, object asyncState)
        {
            return base.BeginSendRequestResponse("updateMOHAudioSource", request, callback, asyncState);
        }

        public updateMOHAudioSourceResponse EndupdateMOHAudioSource(System.IAsyncResult asyncResult)
        {
            return (updateMOHAudioSourceResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject(typeof(updateMOHAudioSourceResponse), SoapServiceAttribute.TargetNamespace);
        }

        [SoapMethod("getMOHAudioSource")]
        public getMOHAudioSourceResponse getMOHAudioSource(getMOHAudioSource request)
        {
            return (getMOHAudioSourceResponse)base.SendRequestResponse("getMOHAudioSource", request).GetBodyObject(typeof(getMOHAudioSourceResponse), SoapServiceAttribute.TargetNamespace);
        }

        public IAsyncResult BegingetMOHAudioSource(getMOHAudioSource request, System.AsyncCallback callback, object asyncState)
        {
            return base.BeginSendRequestResponse("getMOHAudioSource", request, callback, asyncState);
        }

        public getMOHAudioSourceResponse EndgetMOHAudioSource(System.IAsyncResult asyncResult)
        {
            return (getMOHAudioSourceResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject(typeof(getMOHAudioSourceResponse), SoapServiceAttribute.TargetNamespace);
        }

        [SoapMethod("removeMOHAudioSource")]
        public removeMOHAudioSourceResponse removeMOHAudioSource(removeMOHAudioSource request)
        {
            return (removeMOHAudioSourceResponse)base.SendRequestResponse("removeMOHAudioSource", request).GetBodyObject(typeof(removeMOHAudioSourceResponse), SoapServiceAttribute.TargetNamespace);
        }

        public IAsyncResult BeginremoveMOHAudioSource(removeMOHAudioSource request, System.AsyncCallback callback, object asyncState)
        {
            return base.BeginSendRequestResponse("removeMOHAudioSource", request, callback, asyncState);
        }

        public removeMOHAudioSourceResponse EndremoveMOHAudioSource(System.IAsyncResult asyncResult)
        {
            return (removeMOHAudioSourceResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject(typeof(removeMOHAudioSourceResponse), SoapServiceAttribute.TargetNamespace);
        }

        [SoapMethod("listMediaResourceListByName")]
        public listMediaResourceListByNameResponse listMediaResourceListByName(listMediaResourceListByName request)
        {
            return (listMediaResourceListByNameResponse)base.SendRequestResponse("listMediaResourceListByName", request).GetBodyObject(typeof(listMediaResourceListByNameResponse), SoapServiceAttribute.TargetNamespace);
        }

        public IAsyncResult BeginlistMediaResourceListByName(listMediaResourceListByName request, System.AsyncCallback callback, object asyncState)
        {
            return base.BeginSendRequestResponse("listMediaResourceListByName", request, callback, asyncState);
        }

        public listMediaResourceListByNameResponse EndlistMediaResourceListByName(System.IAsyncResult asyncResult)
        {
            return (listMediaResourceListByNameResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject(typeof(listMediaResourceListByNameResponse), SoapServiceAttribute.TargetNamespace);
        }

        [SoapMethod("addMediaResourceList")]
        public addMediaResourceListResponse addMediaResourceList(addMediaResourceList request)
        {
            return (addMediaResourceListResponse)base.SendRequestResponse("addMediaResourceList", request).GetBodyObject(typeof(addMediaResourceListResponse), SoapServiceAttribute.TargetNamespace);
        }

        public IAsyncResult BeginaddMediaResourceList(addMediaResourceList request, System.AsyncCallback callback, object asyncState)
        {
            return base.BeginSendRequestResponse("addMediaResourceList", request, callback, asyncState);
        }

        public addMediaResourceListResponse EndaddMediaResourceList(System.IAsyncResult asyncResult)
        {
            return (addMediaResourceListResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject(typeof(addMediaResourceListResponse), SoapServiceAttribute.TargetNamespace);
        }

        [SoapMethod("getMediaResourceList")]
        public getMediaResourceListResponse getMediaResourceList(getMediaResourceList request)
        {
            return (getMediaResourceListResponse)base.SendRequestResponse("getMediaResourceList", request).GetBodyObject(typeof(getMediaResourceListResponse), SoapServiceAttribute.TargetNamespace);
        }

        public IAsyncResult BegingetMediaResourceList(getMediaResourceList request, System.AsyncCallback callback, object asyncState)
        {
            return base.BeginSendRequestResponse("getMediaResourceList", request, callback, asyncState);
        }

        public getMediaResourceListResponse EndgetMediaResourceList(System.IAsyncResult asyncResult)
        {
            return (getMediaResourceListResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject(typeof(getMediaResourceListResponse), SoapServiceAttribute.TargetNamespace);
        }

        [SoapMethod("removeMediaResourceList")]
        public removeMediaResourceListResponse removeMediaResourceList(removeMediaResourceList request)
        {
            return (removeMediaResourceListResponse)base.SendRequestResponse("removeMediaResourceList", request).GetBodyObject(typeof(removeMediaResourceListResponse), SoapServiceAttribute.TargetNamespace);
        }

        public IAsyncResult BeginremoveMediaResourceList(removeMediaResourceList request, System.AsyncCallback callback, object asyncState)
        {
            return base.BeginSendRequestResponse("removeMediaResourceList", request, callback, asyncState);
        }

        public removeMediaResourceListResponse EndremoveMediaResourceList(System.IAsyncResult asyncResult)
        {
            return (removeMediaResourceListResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject(typeof(removeMediaResourceListResponse), SoapServiceAttribute.TargetNamespace);
        }

        [SoapMethod("updateMediaResourceList")]
        public updateMediaResourceListResponse updateMediaResourceList(updateMediaResourceList request)
        {
            return (updateMediaResourceListResponse)base.SendRequestResponse("updateMediaResourceList", request).GetBodyObject(typeof(updateMediaResourceListResponse), SoapServiceAttribute.TargetNamespace);
        }

        public IAsyncResult BeginupdateMediaResourceList(updateMediaResourceList request, System.AsyncCallback callback, object asyncState)
        {
            return base.BeginSendRequestResponse("updateMediaResourceList", request, callback, asyncState);
        }

        public updateMediaResourceListResponse EndupdateMediaResourceList(System.IAsyncResult asyncResult)
        {
            return (updateMediaResourceListResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject(typeof(updateMediaResourceListResponse), SoapServiceAttribute.TargetNamespace);
        }

        [SoapMethod("listMediaResourceGroupByName")]
        public listMediaResourceGroupByNameResponse listMediaResourceGroupByName(listMediaResourceGroupByName request)
        {
            return (listMediaResourceGroupByNameResponse)base.SendRequestResponse("listMediaResourceGroupByName", request).GetBodyObject(typeof(listMediaResourceGroupByNameResponse), SoapServiceAttribute.TargetNamespace);
        }

        public IAsyncResult BeginlistMediaResourceGroupByName(listMediaResourceGroupByName request, System.AsyncCallback callback, object asyncState)
        {
            return base.BeginSendRequestResponse("listMediaResourceGroupByName", request, callback, asyncState);
        }

        public listMediaResourceGroupByNameResponse EndlistMediaResourceGroupByName(System.IAsyncResult asyncResult)
        {
            return (listMediaResourceGroupByNameResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject(typeof(listMediaResourceGroupByNameResponse), SoapServiceAttribute.TargetNamespace);
        }

        [SoapMethod("addMediaResourceGroup")]
        public addMediaResourceGroupResponse addMediaResourceGroup(addMediaResourceGroup request)
        {
            return (addMediaResourceGroupResponse)base.SendRequestResponse("addMediaResourceGroup", request).GetBodyObject(typeof(addMediaResourceGroupResponse), SoapServiceAttribute.TargetNamespace);
        }

        public IAsyncResult BeginaddMediaResourceGroup(addMediaResourceGroup request, System.AsyncCallback callback, object asyncState)
        {
            return base.BeginSendRequestResponse("addMediaResourceGroup", request, callback, asyncState);
        }

        public addMediaResourceGroupResponse EndaddMediaResourceGroup(System.IAsyncResult asyncResult)
        {
            return (addMediaResourceGroupResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject(typeof(addMediaResourceGroupResponse), SoapServiceAttribute.TargetNamespace);
        }

        [SoapMethod("getMediaResourceGroup")]
        public getMediaResourceGroupResponse getMediaResourceGroup(getMediaResourceGroup request)
        {
            return (getMediaResourceGroupResponse)base.SendRequestResponse("getMediaResourceGroup", request).GetBodyObject(typeof(getMediaResourceGroupResponse), SoapServiceAttribute.TargetNamespace);
        }

        public IAsyncResult BegingetMediaResourceGroup(getMediaResourceGroup request, System.AsyncCallback callback, object asyncState)
        {
            return base.BeginSendRequestResponse("getMediaResourceGroup", request, callback, asyncState);
        }

        public getMediaResourceGroupResponse EndgetMediaResourceGroup(System.IAsyncResult asyncResult)
        {
            return (getMediaResourceGroupResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject(typeof(getMediaResourceGroupResponse), SoapServiceAttribute.TargetNamespace);
        }

        [SoapMethod("removeMediaResourceGroup")]
        public removeMediaResourceGroupResponse removeMediaResourceGroup(removeMediaResourceGroup request)
        {
            return (removeMediaResourceGroupResponse)base.SendRequestResponse("removeMediaResourceGroup", request).GetBodyObject(typeof(removeMediaResourceGroupResponse), SoapServiceAttribute.TargetNamespace);
        }

        public IAsyncResult BeginremoveMediaResourceGroup(removeMediaResourceGroup request, System.AsyncCallback callback, object asyncState)
        {
            return base.BeginSendRequestResponse("removeMediaResourceGroup", request, callback, asyncState);
        }

        public removeMediaResourceGroupResponse EndremoveMediaResourceGroup(System.IAsyncResult asyncResult)
        {
            return (removeMediaResourceGroupResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject(typeof(removeMediaResourceGroupResponse), SoapServiceAttribute.TargetNamespace);
        }

        [SoapMethod("updateMediaResourceGroup")]
        public updateMediaResourceGroupResponse updateMediaResourceGroup(updateMediaResourceGroup request)
        {
            return (updateMediaResourceGroupResponse)base.SendRequestResponse("updateMediaResourceGroup", request).GetBodyObject(typeof(updateMediaResourceGroupResponse), SoapServiceAttribute.TargetNamespace);
        }

        public IAsyncResult BeginupdateMediaResourceGroup(updateMediaResourceGroup request, System.AsyncCallback callback, object asyncState)
        {
            return base.BeginSendRequestResponse("updateMediaResourceGroup", request, callback, asyncState);
        }

        public updateMediaResourceGroupResponse EndupdateMediaResourceGroup(System.IAsyncResult asyncResult)
        {
            return (updateMediaResourceGroupResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject(typeof(updateMediaResourceGroupResponse), SoapServiceAttribute.TargetNamespace);
        }

        [SoapMethod("addUserGroup")]
        public addUserGroupResponse addUserGroup(addUserGroup request)
        {
            return (addUserGroupResponse)base.SendRequestResponse("addUserGroup", request).GetBodyObject(typeof(addUserGroupResponse), SoapServiceAttribute.TargetNamespace);
        }

        public IAsyncResult BeginaddUserGroup(addUserGroup request, System.AsyncCallback callback, object asyncState)
        {
            return base.BeginSendRequestResponse("addUserGroup", request, callback, asyncState);
        }

        public addUserGroupResponse EndaddUserGroup(System.IAsyncResult asyncResult)
        {
            return (addUserGroupResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject(typeof(addUserGroupResponse), SoapServiceAttribute.TargetNamespace);
        }

        [SoapMethod("getUserGroup")]
        public getUserGroupResponse getUserGroup(getUserGroup request)
        {
            return (getUserGroupResponse)base.SendRequestResponse("getUserGroup", request).GetBodyObject(typeof(getUserGroupResponse), SoapServiceAttribute.TargetNamespace);
        }

        public IAsyncResult BegingetUserGroup(getUserGroup request, System.AsyncCallback callback, object asyncState)
        {
            return base.BeginSendRequestResponse("getUserGroup", request, callback, asyncState);
        }

        public getUserGroupResponse EndgetUserGroup(System.IAsyncResult asyncResult)
        {
            return (getUserGroupResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject(typeof(getUserGroupResponse), SoapServiceAttribute.TargetNamespace);
        }

        [SoapMethod("removeUserGroup")]
        public removeUserGroupResponse removeUserGroup(removeUserGroup request)
        {
            return (removeUserGroupResponse)base.SendRequestResponse("removeUserGroup", request).GetBodyObject(typeof(removeUserGroupResponse), SoapServiceAttribute.TargetNamespace);
        }

        public IAsyncResult BeginremoveUserGroup(removeUserGroup request, System.AsyncCallback callback, object asyncState)
        {
            return base.BeginSendRequestResponse("removeUserGroup", request, callback, asyncState);
        }

        public removeUserGroupResponse EndremoveUserGroup(System.IAsyncResult asyncResult)
        {
            return (removeUserGroupResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject(typeof(removeUserGroupResponse), SoapServiceAttribute.TargetNamespace);
        }

        [SoapMethod("updateUserGroup")]
        public updateUserGroupResponse updateUserGroup(updateUserGroup request)
        {
            return (updateUserGroupResponse)base.SendRequestResponse("updateUserGroup", request).GetBodyObject(typeof(updateUserGroupResponse), SoapServiceAttribute.TargetNamespace);
        }

        public IAsyncResult BeginupdateUserGroup(updateUserGroup request, System.AsyncCallback callback, object asyncState)
        {
            return base.BeginSendRequestResponse("updateUserGroup", request, callback, asyncState);
        }

        public updateUserGroupResponse EndupdateUserGroup(System.IAsyncResult asyncResult)
        {
            return (updateUserGroupResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject(typeof(updateUserGroupResponse), SoapServiceAttribute.TargetNamespace);
        }

        [SoapMethod("listLocationByName")]
        public listLocationByNameResponse listLocationByName(listLocationByName request)
        {
            return (listLocationByNameResponse)base.SendRequestResponse("listLocationByName", request).GetBodyObject(typeof(listLocationByNameResponse), SoapServiceAttribute.TargetNamespace);
        }

        public IAsyncResult BeginlistLocationByName(listLocationByName request, System.AsyncCallback callback, object asyncState)
        {
            return base.BeginSendRequestResponse("listLocationByName", request, callback, asyncState);
        }

        public listLocationByNameResponse EndlistLocationByName(System.IAsyncResult asyncResult)
        {
            return (listLocationByNameResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject(typeof(listLocationByNameResponse), SoapServiceAttribute.TargetNamespace);
        }

        [SoapMethod("listAARGroupByName")]
        public listAARGroupByNameResponse listAARGroupByName(listAARGroupByName request)
        {
            return (listAARGroupByNameResponse)base.SendRequestResponse("listAARGroupByName", request).GetBodyObject(typeof(listAARGroupByNameResponse), SoapServiceAttribute.TargetNamespace);
        }

        public IAsyncResult BeginlistAARGroupByName(listAARGroupByName request, System.AsyncCallback callback, object asyncState)
        {
            return base.BeginSendRequestResponse("listAARGroupByName", request, callback, asyncState);
        }

        public listAARGroupByNameResponse EndlistAARGroupByName(System.IAsyncResult asyncResult)
        {
            return (listAARGroupByNameResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject(typeof(listAARGroupByNameResponse), SoapServiceAttribute.TargetNamespace);
        }

        [SoapMethod("listVoiceMailProfileByName")]
        public listVoiceMailProfileByNameResponse listVoiceMailProfileByName(listVoiceMailProfileByName request)
        {
            return (listVoiceMailProfileByNameResponse)base.SendRequestResponse("listVoiceMailProfileByName", request).GetBodyObject(typeof(listVoiceMailProfileByNameResponse), SoapServiceAttribute.TargetNamespace);
        }

        public IAsyncResult BeginlistVoiceMailProfileByName(listVoiceMailProfileByName request, System.AsyncCallback callback, object asyncState)
        {
            return base.BeginSendRequestResponse("listVoiceMailProfileByName", request, callback, asyncState);
        }

        public listVoiceMailProfileByNameResponse EndlistVoiceMailProfileByName(System.IAsyncResult asyncResult)
        {
            return (listVoiceMailProfileByNameResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject(typeof(listVoiceMailProfileByNameResponse), SoapServiceAttribute.TargetNamespace);
        }

        [SoapMethod("listGatekeeperByName")]
        public listGatekeeperByNameResponse listGatekeeperByName(listGatekeeperByName request)
        {
            return (listGatekeeperByNameResponse)base.SendRequestResponse("listGatekeeperByName", request).GetBodyObject(typeof(listGatekeeperByNameResponse), SoapServiceAttribute.TargetNamespace);
        }

        public IAsyncResult BeginlistGatekeeperByName(listGatekeeperByName request, System.AsyncCallback callback, object asyncState)
        {
            return base.BeginSendRequestResponse("listGatekeeperByName", request, callback, asyncState);
        }

        public listGatekeeperByNameResponse EndlistGatekeeperByName(System.IAsyncResult asyncResult)
        {
            return (listGatekeeperByNameResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject(typeof(listGatekeeperByNameResponse), SoapServiceAttribute.TargetNamespace);
        }

        [SoapMethod("addGatekeeper")]
        public addGatekeeperResponse addGatekeeper(addGatekeeper request)
        {
            return (addGatekeeperResponse)base.SendRequestResponse("addGatekeeper", request).GetBodyObject(typeof(addGatekeeperResponse), SoapServiceAttribute.TargetNamespace);
        }

        public IAsyncResult BeginaddGatekeeper(addGatekeeper request, System.AsyncCallback callback, object asyncState)
        {
            return base.BeginSendRequestResponse("addGatekeeper", request, callback, asyncState);
        }

        public addGatekeeperResponse EndaddGatekeeper(System.IAsyncResult asyncResult)
        {
            return (addGatekeeperResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject(typeof(addGatekeeperResponse), SoapServiceAttribute.TargetNamespace);
        }

        [SoapMethod("getGatekeeper")]
        public getGatekeeperResponse getGatekeeper(getGatekeeper request)
        {
            return (getGatekeeperResponse)base.SendRequestResponse("getGatekeeper", request).GetBodyObject(typeof(getGatekeeperResponse), SoapServiceAttribute.TargetNamespace);
        }

        public IAsyncResult BegingetGatekeeper(getGatekeeper request, System.AsyncCallback callback, object asyncState)
        {
            return base.BeginSendRequestResponse("getGatekeeper", request, callback, asyncState);
        }

        public getGatekeeperResponse EndgetGatekeeper(System.IAsyncResult asyncResult)
        {
            return (getGatekeeperResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject(typeof(getGatekeeperResponse), SoapServiceAttribute.TargetNamespace);
        }

        [SoapMethod("removeGatekeeper")]
        public removeGatekeeperResponse removeGatekeeper(removeGatekeeper request)
        {
            return (removeGatekeeperResponse)base.SendRequestResponse("removeGatekeeper", request).GetBodyObject(typeof(removeGatekeeperResponse), SoapServiceAttribute.TargetNamespace);
        }

        public IAsyncResult BeginremoveGatekeeper(removeGatekeeper request, System.AsyncCallback callback, object asyncState)
        {
            return base.BeginSendRequestResponse("removeGatekeeper", request, callback, asyncState);
        }

        public removeGatekeeperResponse EndremoveGatekeeper(System.IAsyncResult asyncResult)
        {
            return (removeGatekeeperResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject(typeof(removeGatekeeperResponse), SoapServiceAttribute.TargetNamespace);
        }

        [SoapMethod("updateGatekeeper")]
        public updateGatekeeperResponse updateGatekeeper(updateGatekeeper request)
        {
            return (updateGatekeeperResponse)base.SendRequestResponse("updateGatekeeper", request).GetBodyObject(typeof(updateGatekeeperResponse), SoapServiceAttribute.TargetNamespace);
        }

        public IAsyncResult BeginupdateGatekeeper(updateGatekeeper request, System.AsyncCallback callback, object asyncState)
        {
            return base.BeginSendRequestResponse("updateGatekeeper", request, callback, asyncState);
        }

        public updateGatekeeperResponse EndupdateGatekeeper(System.IAsyncResult asyncResult)
        {
            return (updateGatekeeperResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject(typeof(updateGatekeeperResponse), SoapServiceAttribute.TargetNamespace);
        }

        [SoapMethod("addH323Phone")]
        public addH323PhoneResponse addH323Phone(addH323Phone request)
        {
            return (addH323PhoneResponse)base.SendRequestResponse("addH323Phone", request).GetBodyObject(typeof(addH323PhoneResponse), SoapServiceAttribute.TargetNamespace);
        }

        public IAsyncResult BeginaddH323Phone(addH323Phone request, System.AsyncCallback callback, object asyncState)
        {
            return base.BeginSendRequestResponse("addH323Phone", request, callback, asyncState);
        }

        public addH323PhoneResponse EndaddH323Phone(System.IAsyncResult asyncResult)
        {
            return (addH323PhoneResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject(typeof(addH323PhoneResponse), SoapServiceAttribute.TargetNamespace);
        }

        [SoapMethod("addH323Gateway")]
        public addH323GatewayResponse addH323Gateway(addH323Gateway request)
        {
            return (addH323GatewayResponse)base.SendRequestResponse("addH323Gateway", request).GetBodyObject(typeof(addH323GatewayResponse), SoapServiceAttribute.TargetNamespace);
        }

        public IAsyncResult BeginaddH323Gateway(addH323Gateway request, System.AsyncCallback callback, object asyncState)
        {
            return base.BeginSendRequestResponse("addH323Gateway", request, callback, asyncState);
        }

        public addH323GatewayResponse EndaddH323Gateway(System.IAsyncResult asyncResult)
        {
            return (addH323GatewayResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject(typeof(addH323GatewayResponse), SoapServiceAttribute.TargetNamespace);
        }

        [SoapMethod("addH323Trunk")]
        public addH323TrunkResponse addH323Trunk(addH323Trunk request)
        {
            return (addH323TrunkResponse)base.SendRequestResponse("addH323Trunk", request).GetBodyObject(typeof(addH323TrunkResponse), SoapServiceAttribute.TargetNamespace);
        }

        public IAsyncResult BeginaddH323Trunk(addH323Trunk request, System.AsyncCallback callback, object asyncState)
        {
            return base.BeginSendRequestResponse("addH323Trunk", request, callback, asyncState);
        }

        public addH323TrunkResponse EndaddH323Trunk(System.IAsyncResult asyncResult)
        {
            return (addH323TrunkResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject(typeof(addH323TrunkResponse), SoapServiceAttribute.TargetNamespace);
        }

        [SoapMethod("getH323Phone")]
        public getH323PhoneResponse getH323Phone(getH323Phone request)
        {
            return (getH323PhoneResponse)base.SendRequestResponse("getH323Phone", request).GetBodyObject(typeof(getH323PhoneResponse), SoapServiceAttribute.TargetNamespace);
        }

        public IAsyncResult BegingetH323Phone(getH323Phone request, System.AsyncCallback callback, object asyncState)
        {
            return base.BeginSendRequestResponse("getH323Phone", request, callback, asyncState);
        }

        public getH323PhoneResponse EndgetH323Phone(System.IAsyncResult asyncResult)
        {
            return (getH323PhoneResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject(typeof(getH323PhoneResponse), SoapServiceAttribute.TargetNamespace);
        }

        [SoapMethod("getH323Gateway")]
        public getH323GatewayResponse getH323Gateway(getH323Gateway request)
        {
            return (getH323GatewayResponse)base.SendRequestResponse("getH323Gateway", request).GetBodyObject(typeof(getH323GatewayResponse), SoapServiceAttribute.TargetNamespace);
        }

        public IAsyncResult BegingetH323Gateway(getH323Gateway request, System.AsyncCallback callback, object asyncState)
        {
            return base.BeginSendRequestResponse("getH323Gateway", request, callback, asyncState);
        }

        public getH323GatewayResponse EndgetH323Gateway(System.IAsyncResult asyncResult)
        {
            return (getH323GatewayResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject(typeof(getH323GatewayResponse), SoapServiceAttribute.TargetNamespace);
        }

        [SoapMethod("getH323Trunk")]
        public getH323TrunkResponse getH323Trunk(getH323Trunk request)
        {
            return (getH323TrunkResponse)base.SendRequestResponse("getH323Trunk", request).GetBodyObject(typeof(getH323TrunkResponse), SoapServiceAttribute.TargetNamespace);
        }

        public IAsyncResult BegingetH323Trunk(getH323Trunk request, System.AsyncCallback callback, object asyncState)
        {
            return base.BeginSendRequestResponse("getH323Trunk", request, callback, asyncState);
        }

        public getH323TrunkResponse EndgetH323Trunk(System.IAsyncResult asyncResult)
        {
            return (getH323TrunkResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject(typeof(getH323TrunkResponse), SoapServiceAttribute.TargetNamespace);
        }

        [SoapMethod("removeH323Phone")]
        public removeH323PhoneResponse removeH323Phone(removeH323Phone request)
        {
            return (removeH323PhoneResponse)base.SendRequestResponse("removeH323Phone", request).GetBodyObject(typeof(removeH323PhoneResponse), SoapServiceAttribute.TargetNamespace);
        }

        public IAsyncResult BeginremoveH323Phone(removeH323Phone request, System.AsyncCallback callback, object asyncState)
        {
            return base.BeginSendRequestResponse("removeH323Phone", request, callback, asyncState);
        }

        public removeH323PhoneResponse EndremoveH323Phone(System.IAsyncResult asyncResult)
        {
            return (removeH323PhoneResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject(typeof(removeH323PhoneResponse), SoapServiceAttribute.TargetNamespace);
        }

        [SoapMethod("removeH323Gateway")]
        public removeH323GatewayResponse removeH323Gateway(removeH323Gateway request)
        {
            return (removeH323GatewayResponse)base.SendRequestResponse("removeH323Gateway", request).GetBodyObject(typeof(removeH323GatewayResponse), SoapServiceAttribute.TargetNamespace);
        }

        public IAsyncResult BeginremoveH323Gateway(removeH323Gateway request, System.AsyncCallback callback, object asyncState)
        {
            return base.BeginSendRequestResponse("removeH323Gateway", request, callback, asyncState);
        }

        public removeH323GatewayResponse EndremoveH323Gateway(System.IAsyncResult asyncResult)
        {
            return (removeH323GatewayResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject(typeof(removeH323GatewayResponse), SoapServiceAttribute.TargetNamespace);
        }

        [SoapMethod("removeH323Trunk")]
        public removeH323TrunkResponse removeH323Trunk(removeH323Trunk request)
        {
            return (removeH323TrunkResponse)base.SendRequestResponse("removeH323Trunk", request).GetBodyObject(typeof(removeH323TrunkResponse), SoapServiceAttribute.TargetNamespace);
        }

        public IAsyncResult BeginremoveH323Trunk(removeH323Trunk request, System.AsyncCallback callback, object asyncState)
        {
            return base.BeginSendRequestResponse("removeH323Trunk", request, callback, asyncState);
        }

        public removeH323TrunkResponse EndremoveH323Trunk(System.IAsyncResult asyncResult)
        {
            return (removeH323TrunkResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject(typeof(removeH323TrunkResponse), SoapServiceAttribute.TargetNamespace);
        }

        [SoapMethod("updateH323Phone")]
        public updateH323PhoneResponse updateH323Phone(updateH323Phone request)
        {
            return (updateH323PhoneResponse)base.SendRequestResponse("updateH323Phone", request).GetBodyObject(typeof(updateH323PhoneResponse), SoapServiceAttribute.TargetNamespace);
        }

        public IAsyncResult BeginupdateH323Phone(updateH323Phone request, System.AsyncCallback callback, object asyncState)
        {
            return base.BeginSendRequestResponse("updateH323Phone", request, callback, asyncState);
        }

        public updateH323PhoneResponse EndupdateH323Phone(System.IAsyncResult asyncResult)
        {
            return (updateH323PhoneResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject(typeof(updateH323PhoneResponse), SoapServiceAttribute.TargetNamespace);
        }

        [SoapMethod("updateH323Gateway")]
        public updateH323GatewayResponse updateH323Gateway(updateH323Gateway request)
        {
            return (updateH323GatewayResponse)base.SendRequestResponse("updateH323Gateway", request).GetBodyObject(typeof(updateH323GatewayResponse), SoapServiceAttribute.TargetNamespace);
        }

        public IAsyncResult BeginupdateH323Gateway(updateH323Gateway request, System.AsyncCallback callback, object asyncState)
        {
            return base.BeginSendRequestResponse("updateH323Gateway", request, callback, asyncState);
        }

        public updateH323GatewayResponse EndupdateH323Gateway(System.IAsyncResult asyncResult)
        {
            return (updateH323GatewayResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject(typeof(updateH323GatewayResponse), SoapServiceAttribute.TargetNamespace);
        }

        [SoapMethod("updateH323Trunk")]
        public updateH323TrunkResponse updateH323Trunk(updateH323Trunk request)
        {
            return (updateH323TrunkResponse)base.SendRequestResponse("updateH323Trunk", request).GetBodyObject(typeof(updateH323TrunkResponse), SoapServiceAttribute.TargetNamespace);
        }

        public IAsyncResult BeginupdateH323Trunk(updateH323Trunk request, System.AsyncCallback callback, object asyncState)
        {
            return base.BeginSendRequestResponse("updateH323Trunk", request, callback, asyncState);
        }

        public updateH323TrunkResponse EndupdateH323Trunk(System.IAsyncResult asyncResult)
        {
            return (updateH323TrunkResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject(typeof(updateH323TrunkResponse), SoapServiceAttribute.TargetNamespace);
        }

        [SoapMethod("addSIPTrunk")]
        public addSIPTrunkResponse addSIPTrunk(addSIPTrunk request)
        {
            return (addSIPTrunkResponse)base.SendRequestResponse("addSIPTrunk", request).GetBodyObject(typeof(addSIPTrunkResponse), SoapServiceAttribute.TargetNamespace);
        }

        public IAsyncResult BeginaddSIPTrunk(addSIPTrunk request, System.AsyncCallback callback, object asyncState)
        {
            return base.BeginSendRequestResponse("addSIPTrunk", request, callback, asyncState);
        }

        public addSIPTrunkResponse EndaddSIPTrunk(System.IAsyncResult asyncResult)
        {
            return (addSIPTrunkResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject(typeof(addSIPTrunkResponse), SoapServiceAttribute.TargetNamespace);
        }

        [SoapMethod("getSIPTrunk")]
        public getSIPTrunkResponse getSIPTrunk(getSIPTrunk request)
        {
            return (getSIPTrunkResponse)base.SendRequestResponse("getSIPTrunk", request).GetBodyObject(typeof(getSIPTrunkResponse), SoapServiceAttribute.TargetNamespace);
        }

        public IAsyncResult BegingetSIPTrunk(getSIPTrunk request, System.AsyncCallback callback, object asyncState)
        {
            return base.BeginSendRequestResponse("getSIPTrunk", request, callback, asyncState);
        }

        public getSIPTrunkResponse EndgetSIPTrunk(System.IAsyncResult asyncResult)
        {
            return (getSIPTrunkResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject(typeof(getSIPTrunkResponse), SoapServiceAttribute.TargetNamespace);
        }

        [SoapMethod("removeSIPTrunk")]
        public removeSIPTrunkResponse removeSIPTrunk(removeSIPTrunk request)
        {
            return (removeSIPTrunkResponse)base.SendRequestResponse("removeSIPTrunk", request).GetBodyObject(typeof(removeSIPTrunkResponse), SoapServiceAttribute.TargetNamespace);
        }

        public IAsyncResult BeginremoveSIPTrunk(removeSIPTrunk request, System.AsyncCallback callback, object asyncState)
        {
            return base.BeginSendRequestResponse("removeSIPTrunk", request, callback, asyncState);
        }

        public removeSIPTrunkResponse EndremoveSIPTrunk(System.IAsyncResult asyncResult)
        {
            return (removeSIPTrunkResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject(typeof(removeSIPTrunkResponse), SoapServiceAttribute.TargetNamespace);
        }

        [SoapMethod("updateSIPTrunk")]
        public updateSIPTrunkResponse updateSIPTrunk(updateSIPTrunk request)
        {
            return (updateSIPTrunkResponse)base.SendRequestResponse("updateSIPTrunk", request).GetBodyObject(typeof(updateSIPTrunkResponse), SoapServiceAttribute.TargetNamespace);
        }

        public IAsyncResult BeginupdateSIPTrunk(updateSIPTrunk request, System.AsyncCallback callback, object asyncState)
        {
            return base.BeginSendRequestResponse("updateSIPTrunk", request, callback, asyncState);
        }

        public updateSIPTrunkResponse EndupdateSIPTrunk(System.IAsyncResult asyncResult)
        {
            return (updateSIPTrunkResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject(typeof(updateSIPTrunkResponse), SoapServiceAttribute.TargetNamespace);
        }

        [SoapMethod("addSIPRealm")]
        public addSIPRealmResponse addSIPRealm(addSIPRealm request)
        {
            return (addSIPRealmResponse)base.SendRequestResponse("addSIPRealm", request).GetBodyObject(typeof(addSIPRealmResponse), SoapServiceAttribute.TargetNamespace);
        }

        public IAsyncResult BeginaddSIPRealm(addSIPRealm request, System.AsyncCallback callback, object asyncState)
        {
            return base.BeginSendRequestResponse("addSIPRealm", request, callback, asyncState);
        }

        public addSIPRealmResponse EndaddSIPRealm(System.IAsyncResult asyncResult)
        {
            return (addSIPRealmResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject(typeof(addSIPRealmResponse), SoapServiceAttribute.TargetNamespace);
        }

        [SoapMethod("removeSIPRealm")]
        public removeSIPRealmResponse removeSIPRealm(removeSIPRealm request)
        {
            return (removeSIPRealmResponse)base.SendRequestResponse("removeSIPRealm", request).GetBodyObject(typeof(removeSIPRealmResponse), SoapServiceAttribute.TargetNamespace);
        }

        public IAsyncResult BeginremoveSIPRealm(removeSIPRealm request, System.AsyncCallback callback, object asyncState)
        {
            return base.BeginSendRequestResponse("removeSIPRealm", request, callback, asyncState);
        }

        public removeSIPRealmResponse EndremoveSIPRealm(System.IAsyncResult asyncResult)
        {
            return (removeSIPRealmResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject(typeof(removeSIPRealmResponse), SoapServiceAttribute.TargetNamespace);
        }

        [SoapMethod("updateSIPRealm")]
        public updateSIPRealmResponse updateSIPRealm(updateSIPRealm request)
        {
            return (updateSIPRealmResponse)base.SendRequestResponse("updateSIPRealm", request).GetBodyObject(typeof(updateSIPRealmResponse), SoapServiceAttribute.TargetNamespace);
        }

        public IAsyncResult BeginupdateSIPRealm(updateSIPRealm request, System.AsyncCallback callback, object asyncState)
        {
            return base.BeginSendRequestResponse("updateSIPRealm", request, callback, asyncState);
        }

        public updateSIPRealmResponse EndupdateSIPRealm(System.IAsyncResult asyncResult)
        {
            return (updateSIPRealmResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject(typeof(updateSIPRealmResponse), SoapServiceAttribute.TargetNamespace);
        }

        [SoapMethod("getSIPRealm")]
        public getSIPRealmResponse getSIPRealm(getSIPRealm request)
        {
            return (getSIPRealmResponse)base.SendRequestResponse("getSIPRealm", request).GetBodyObject(typeof(getSIPRealmResponse), SoapServiceAttribute.TargetNamespace);
        }

        public IAsyncResult BegingetSIPRealm(getSIPRealm request, System.AsyncCallback callback, object asyncState)
        {
            return base.BeginSendRequestResponse("getSIPRealm", request, callback, asyncState);
        }

        public getSIPRealmResponse EndgetSIPRealm(System.IAsyncResult asyncResult)
        {
            return (getSIPRealmResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject(typeof(getSIPRealmResponse), SoapServiceAttribute.TargetNamespace);
        }

        [SoapMethod("addRecordingProfile")]
        public addRecordingProfileResponse addRecordingProfile(addRecordingProfile request)
        {
            return (addRecordingProfileResponse)base.SendRequestResponse("addRecordingProfile", request).GetBodyObject(typeof(addRecordingProfileResponse), SoapServiceAttribute.TargetNamespace);
        }

        public IAsyncResult BeginaddRecordingProfile(addRecordingProfile request, System.AsyncCallback callback, object asyncState)
        {
            return base.BeginSendRequestResponse("addRecordingProfile", request, callback, asyncState);
        }

        public addRecordingProfileResponse EndaddRecordingProfile(System.IAsyncResult asyncResult)
        {
            return (addRecordingProfileResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject(typeof(addRecordingProfileResponse), SoapServiceAttribute.TargetNamespace);
        }

        [SoapMethod("removeRecordingProfile")]
        public removeRecordingProfileResponse removeRecordingProfile(removeRecordingProfile request)
        {
            return (removeRecordingProfileResponse)base.SendRequestResponse("removeRecordingProfile", request).GetBodyObject(typeof(removeRecordingProfileResponse), SoapServiceAttribute.TargetNamespace);
        }

        public IAsyncResult BeginremoveRecordingProfile(removeRecordingProfile request, System.AsyncCallback callback, object asyncState)
        {
            return base.BeginSendRequestResponse("removeRecordingProfile", request, callback, asyncState);
        }

        public removeRecordingProfileResponse EndremoveRecordingProfile(System.IAsyncResult asyncResult)
        {
            return (removeRecordingProfileResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject(typeof(removeRecordingProfileResponse), SoapServiceAttribute.TargetNamespace);
        }

        [SoapMethod("updateRecordingProfile")]
        public updateRecordingProfileResponse updateRecordingProfile(updateRecordingProfile request)
        {
            return (updateRecordingProfileResponse)base.SendRequestResponse("updateRecordingProfile", request).GetBodyObject(typeof(updateRecordingProfileResponse), SoapServiceAttribute.TargetNamespace);
        }

        public IAsyncResult BeginupdateRecordingProfile(updateRecordingProfile request, System.AsyncCallback callback, object asyncState)
        {
            return base.BeginSendRequestResponse("updateRecordingProfile", request, callback, asyncState);
        }

        public updateRecordingProfileResponse EndupdateRecordingProfile(System.IAsyncResult asyncResult)
        {
            return (updateRecordingProfileResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject(typeof(updateRecordingProfileResponse), SoapServiceAttribute.TargetNamespace);
        }

        [SoapMethod("getRecordingProfile")]
        public getRecordingProfileResponse getRecordingProfile(getRecordingProfile request)
        {
            return (getRecordingProfileResponse)base.SendRequestResponse("getRecordingProfile", request).GetBodyObject(typeof(getRecordingProfileResponse), SoapServiceAttribute.TargetNamespace);
        }

        public IAsyncResult BegingetRecordingProfile(getRecordingProfile request, System.AsyncCallback callback, object asyncState)
        {
            return base.BeginSendRequestResponse("getRecordingProfile", request, callback, asyncState);
        }

        public getRecordingProfileResponse EndgetRecordingProfile(System.IAsyncResult asyncResult)
        {
            return (getRecordingProfileResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject(typeof(getRecordingProfileResponse), SoapServiceAttribute.TargetNamespace);
        }

        [SoapMethod("addPilotPoint")]
        public addPilotPointResponse addPilotPoint(addPilotPoint request)
        {
            return (addPilotPointResponse)base.SendRequestResponse("addPilotPoint", request).GetBodyObject(typeof(addPilotPointResponse), SoapServiceAttribute.TargetNamespace);
        }

        public IAsyncResult BeginaddPilotPoint(addPilotPoint request, System.AsyncCallback callback, object asyncState)
        {
            return base.BeginSendRequestResponse("addPilotPoint", request, callback, asyncState);
        }

        public addPilotPointResponse EndaddPilotPoint(System.IAsyncResult asyncResult)
        {
            return (addPilotPointResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject(typeof(addPilotPointResponse), SoapServiceAttribute.TargetNamespace);
        }

        [SoapMethod("updatePilotPoint")]
        public updatePilotPointResponse updatePilotPoint(updatePilotPoint request)
        {
            return (updatePilotPointResponse)base.SendRequestResponse("updatePilotPoint", request).GetBodyObject(typeof(updatePilotPointResponse), SoapServiceAttribute.TargetNamespace);
        }

        public IAsyncResult BeginupdatePilotPoint(updatePilotPoint request, System.AsyncCallback callback, object asyncState)
        {
            return base.BeginSendRequestResponse("updatePilotPoint", request, callback, asyncState);
        }

        public updatePilotPointResponse EndupdatePilotPoint(System.IAsyncResult asyncResult)
        {
            return (updatePilotPointResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject(typeof(updatePilotPointResponse), SoapServiceAttribute.TargetNamespace);
        }

        [SoapMethod("getPilotPoint")]
        public getPilotPointResponse getPilotPoint(getPilotPoint request)
        {
            return (getPilotPointResponse)base.SendRequestResponse("getPilotPoint", request).GetBodyObject(typeof(getPilotPointResponse), SoapServiceAttribute.TargetNamespace);
        }

        public IAsyncResult BegingetPilotPoint(getPilotPoint request, System.AsyncCallback callback, object asyncState)
        {
            return base.BeginSendRequestResponse("getPilotPoint", request, callback, asyncState);
        }

        public getPilotPointResponse EndgetPilotPoint(System.IAsyncResult asyncResult)
        {
            return (getPilotPointResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject(typeof(getPilotPointResponse), SoapServiceAttribute.TargetNamespace);
        }

        [SoapMethod("removePilotPoint")]
        public removePilotPointResponse removePilotPoint(removePilotPoint request)
        {
            return (removePilotPointResponse)base.SendRequestResponse("removePilotPoint", request).GetBodyObject(typeof(removePilotPointResponse), SoapServiceAttribute.TargetNamespace);
        }

        public IAsyncResult BeginremovePilotPoint(removePilotPoint request, System.AsyncCallback callback, object asyncState)
        {
            return base.BeginSendRequestResponse("removePilotPoint", request, callback, asyncState);
        }

        public removePilotPointResponse EndremovePilotPoint(System.IAsyncResult asyncResult)
        {
            return (removePilotPointResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject(typeof(removePilotPointResponse), SoapServiceAttribute.TargetNamespace);
        }

        [SoapMethod("updateLicenseCapabilities")]
        public updateLicenseCapabilitiesResponse updateLicenseCapabilities(updateLicenseCapabilities request)
        {
            return (updateLicenseCapabilitiesResponse)base.SendRequestResponse("updateLicenseCapabilities", request).GetBodyObject(typeof(updateLicenseCapabilitiesResponse), SoapServiceAttribute.TargetNamespace);
        }

        public IAsyncResult BeginupdateLicenseCapabilities(updateLicenseCapabilities request, System.AsyncCallback callback, object asyncState)
        {
            return base.BeginSendRequestResponse("updateLicenseCapabilities", request, callback, asyncState);
        }

        public updateLicenseCapabilitiesResponse EndupdateLicenseCapabilities(System.IAsyncResult asyncResult)
        {
            return (updateLicenseCapabilitiesResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject(typeof(updateLicenseCapabilitiesResponse), SoapServiceAttribute.TargetNamespace);
        }

        [SoapMethod("getLicenseCapabilities")]
        public getLicenseCapabilitiesResponse getLicenseCapabilities(getLicenseCapabilities request)
        {
            return (getLicenseCapabilitiesResponse)base.SendRequestResponse("getLicenseCapabilities", request).GetBodyObject(typeof(getLicenseCapabilitiesResponse), SoapServiceAttribute.TargetNamespace);
        }

        public IAsyncResult BegingetLicenseCapabilities(getLicenseCapabilities request, System.AsyncCallback callback, object asyncState)
        {
            return base.BeginSendRequestResponse("getLicenseCapabilities", request, callback, asyncState);
        }

        public getLicenseCapabilitiesResponse EndgetLicenseCapabilities(System.IAsyncResult asyncResult)
        {
            return (getLicenseCapabilitiesResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject(typeof(getLicenseCapabilitiesResponse), SoapServiceAttribute.TargetNamespace);
        }

        [SoapMethod("updateAppUser")]
        public updateAppUserResponse updateAppUser(updateAppUser request)
        {
            return (updateAppUserResponse)base.SendRequestResponse("updateAppUser", request).GetBodyObject(typeof(updateAppUserResponse), SoapServiceAttribute.TargetNamespace);
        }

        public IAsyncResult BeginupdateAppUser(updateAppUser request, System.AsyncCallback callback, object asyncState)
        {
            return base.BeginSendRequestResponse("updateAppUser", request, callback, asyncState);
        }

        public updateAppUserResponse EndupdateAppUser(System.IAsyncResult asyncResult)
        {
            return (updateAppUserResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject(typeof(updateAppUserResponse), SoapServiceAttribute.TargetNamespace);
        }

        [SoapMethod("updateMobileVoiceAccess")]
        public updateMobileVoiceAccessResponse updateMobileVoiceAccess(updateMobileVoiceAccess request)
        {
            return (updateMobileVoiceAccessResponse)base.SendRequestResponse("updateMobileVoiceAccess", request).GetBodyObject(typeof(updateMobileVoiceAccessResponse), SoapServiceAttribute.TargetNamespace);
        }

        public IAsyncResult BeginupdateMobileVoiceAccess(updateMobileVoiceAccess request, System.AsyncCallback callback, object asyncState)
        {
            return base.BeginSendRequestResponse("updateMobileVoiceAccess", request, callback, asyncState);
        }

        public updateMobileVoiceAccessResponse EndupdateMobileVoiceAccess(System.IAsyncResult asyncResult)
        {
            return (updateMobileVoiceAccessResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject(typeof(updateMobileVoiceAccessResponse), SoapServiceAttribute.TargetNamespace);
        }

        [SoapMethod("getMobileVoiceAccess")]
        public getMobileVoiceAccessResponse getMobileVoiceAccess(getMobileVoiceAccess request)
        {
            return (getMobileVoiceAccessResponse)base.SendRequestResponse("getMobileVoiceAccess", request).GetBodyObject(typeof(getMobileVoiceAccessResponse), SoapServiceAttribute.TargetNamespace);
        }

        public IAsyncResult BegingetMobileVoiceAccess(getMobileVoiceAccess request, System.AsyncCallback callback, object asyncState)
        {
            return base.BeginSendRequestResponse("getMobileVoiceAccess", request, callback, asyncState);
        }

        public getMobileVoiceAccessResponse EndgetMobileVoiceAccess(System.IAsyncResult asyncResult)
        {
            return (getMobileVoiceAccessResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject(typeof(getMobileVoiceAccessResponse), SoapServiceAttribute.TargetNamespace);
        }

        [SoapMethod("updateMobility")]
        public updateMobilityResponse updateMobility(updateMobility request)
        {
            return (updateMobilityResponse)base.SendRequestResponse("updateMobility", request).GetBodyObject(typeof(updateMobilityResponse), SoapServiceAttribute.TargetNamespace);
        }

        public IAsyncResult BeginupdateMobility(updateMobility request, System.AsyncCallback callback, object asyncState)
        {
            return base.BeginSendRequestResponse("updateMobility", request, callback, asyncState);
        }

        public updateMobilityResponse EndupdateMobility(System.IAsyncResult asyncResult)
        {
            return (updateMobilityResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject(typeof(updateMobilityResponse), SoapServiceAttribute.TargetNamespace);
        }

        [SoapMethod("getMobility")]
        public getMobilityResponse getMobility(getMobility request)
        {
            return (getMobilityResponse)base.SendRequestResponse("getMobility", request).GetBodyObject(typeof(getMobilityResponse), SoapServiceAttribute.TargetNamespace);
        }

        public IAsyncResult BegingetMobility(getMobility request, System.AsyncCallback callback, object asyncState)
        {
            return base.BeginSendRequestResponse("getMobility", request, callback, asyncState);
        }

        public getMobilityResponse EndgetMobility(System.IAsyncResult asyncResult)
        {
            return (getMobilityResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject(typeof(getMobilityResponse), SoapServiceAttribute.TargetNamespace);
        }

        [SoapMethod("addPhoneTemplate")]
        public addPhoneTemplateResponse addPhoneTemplate(addPhoneTemplate request)
        {
            return (addPhoneTemplateResponse)base.SendRequestResponse("addPhoneTemplate", request).GetBodyObject(typeof(addPhoneTemplateResponse), SoapServiceAttribute.TargetNamespace);
        }

        public IAsyncResult BeginaddPhoneTemplate(addPhoneTemplate request, System.AsyncCallback callback, object asyncState)
        {
            return base.BeginSendRequestResponse("addPhoneTemplate", request, callback, asyncState);
        }

        public addPhoneTemplateResponse EndaddPhoneTemplate(System.IAsyncResult asyncResult)
        {
            return (addPhoneTemplateResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject(typeof(addPhoneTemplateResponse), SoapServiceAttribute.TargetNamespace);
        }

        [SoapMethod("updatePhoneTemplate")]
        public updatePhoneTemplateResponse updatePhoneTemplate(updatePhoneTemplate request)
        {
            return (updatePhoneTemplateResponse)base.SendRequestResponse("updatePhoneTemplate", request).GetBodyObject(typeof(updatePhoneTemplateResponse), SoapServiceAttribute.TargetNamespace);
        }

        public IAsyncResult BeginupdatePhoneTemplate(updatePhoneTemplate request, System.AsyncCallback callback, object asyncState)
        {
            return base.BeginSendRequestResponse("updatePhoneTemplate", request, callback, asyncState);
        }

        public updatePhoneTemplateResponse EndupdatePhoneTemplate(System.IAsyncResult asyncResult)
        {
            return (updatePhoneTemplateResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject(typeof(updatePhoneTemplateResponse), SoapServiceAttribute.TargetNamespace);
        }

        [SoapMethod("getPhoneTemplate")]
        public getPhoneTemplateResponse getPhoneTemplate(getPhoneTemplate request)
        {
            return (getPhoneTemplateResponse)base.SendRequestResponse("getPhoneTemplate", request).GetBodyObject(typeof(getPhoneTemplateResponse), SoapServiceAttribute.TargetNamespace);
        }

        public IAsyncResult BegingetPhoneTemplate(getPhoneTemplate request, System.AsyncCallback callback, object asyncState)
        {
            return base.BeginSendRequestResponse("getPhoneTemplate", request, callback, asyncState);
        }

        public getPhoneTemplateResponse EndgetPhoneTemplate(System.IAsyncResult asyncResult)
        {
            return (getPhoneTemplateResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject(typeof(getPhoneTemplateResponse), SoapServiceAttribute.TargetNamespace);
        }

        [SoapMethod("removePhoneTemplate")]
        public removePhoneTemplateResponse removePhoneTemplate(removePhoneTemplate request)
        {
            return (removePhoneTemplateResponse)base.SendRequestResponse("removePhoneTemplate", request).GetBodyObject(typeof(removePhoneTemplateResponse), SoapServiceAttribute.TargetNamespace);
        }

        public IAsyncResult BeginremovePhoneTemplate(removePhoneTemplate request, System.AsyncCallback callback, object asyncState)
        {
            return base.BeginSendRequestResponse("removePhoneTemplate", request, callback, asyncState);
        }

        public removePhoneTemplateResponse EndremovePhoneTemplate(System.IAsyncResult asyncResult)
        {
            return (removePhoneTemplateResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject(typeof(removePhoneTemplateResponse), SoapServiceAttribute.TargetNamespace);
        }

        [SoapMethod("executeSQLQuery")]
        public executeSQLQueryResponse executeSQLQuery(executeSQLQuery request)
        {
            return (executeSQLQueryResponse)base.SendRequestResponse("executeSQLQuery", request).GetBodyObject(typeof(executeSQLQueryResponse), SoapServiceAttribute.TargetNamespace);
        }

        public IAsyncResult BeginexecuteSQLQuery(executeSQLQuery request, System.AsyncCallback callback, object asyncState)
        {
            return base.BeginSendRequestResponse("executeSQLQuery", request, callback, asyncState);
        }

        public executeSQLQueryResponse EndexecuteSQLQuery(System.IAsyncResult asyncResult)
        {
            return (executeSQLQueryResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject(typeof(executeSQLQueryResponse), SoapServiceAttribute.TargetNamespace);
        }

        [SoapMethod("executeSQLUpdate")]
        public executeSQLUpdateResponse executeSQLUpdate(executeSQLUpdate request)
        {
            return (executeSQLUpdateResponse)base.SendRequestResponse("executeSQLUpdate", request).GetBodyObject(typeof(executeSQLUpdateResponse), SoapServiceAttribute.TargetNamespace);
        }

        public IAsyncResult BeginexecuteSQLUpdate(executeSQLUpdate request, System.AsyncCallback callback, object asyncState)
        {
            return base.BeginSendRequestResponse("executeSQLUpdate", request, callback, asyncState);
        }

        public executeSQLUpdateResponse EndexecuteSQLUpdate(System.IAsyncResult asyncResult)
        {
            return (executeSQLUpdateResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject(typeof(executeSQLUpdateResponse), SoapServiceAttribute.TargetNamespace);
        }

    }
}
