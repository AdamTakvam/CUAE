<?xml version="1.0" encoding="UTF-8"?>
<!-- edited with XML Spy v4.2 U (http://www.xmlspy.com) by Gokul Krishnan (Cisco Systems, Inc.) -->
<!-- edited with XMLSPY v5 rel. 4 U (http://www.xmlspy.com) by Jerry Vander Voord (Cisco Systems) -->
<xsd:schema targetNamespace="http://www.cisco.com/AXL/API/1.0" xmlns:axl="http://www.cisco.com/AXL/1.0" xmlns:axlapi="http://www.cisco.com/AXL/API/1.0" xmlns:xsd="http://www.w3.org/2001/XMLSchema" elementFormDefault="unqualified" attributeFormDefault="unqualified" version="1.0">
	<xsd:include schemaLocation="axlmessage.xsd"/>
	<xsd:import namespace="http://www.cisco.com/AXL/1.0" schemaLocation="axl.xsd"/>
	<xsd:annotation>
		<xsd:documentation><![CDATA[

Version 1.00

$Revision: 9 $
$Author: Jporche $
$Date: 1/26/01 3:49p $

Copyright (c) 2001 Cisco Systems, Inc.
	
**********************
* CISCO CONFIDENTIAL *
**********************


]]></xsd:documentation>
	</xsd:annotation>
	<xsd:complexType name="AddPhoneReq" abstract="false" final="#all">
		<xsd:annotation>
			<xsd:documentation>Adds one new phone to the database.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIRequest">
				<xsd:sequence>
					<xsd:element name="newPhone" type="axl:XIPPhone"/>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="addPhone" type="axlapi:AddPhoneReq"/>
	<xsd:element name="addPhoneResponse" type="axlapi:StandardResponse"/>
	<xsd:complexType name="RemovePhoneReq">
		<xsd:annotation>
			<xsd:documentation>Removes the specified phone from the database.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIRequest">
				<xsd:choice>
					<xsd:element name="phoneId" type="axl:XUUID" nillable="false">
						<xsd:annotation>
							<xsd:documentation>The GUID of the phone to be removed.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="phoneName" type="xsd:string" nillable="false">
						<xsd:annotation>
							<xsd:documentation>The name of the phone to be removed.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
				</xsd:choice>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="removePhone" type="axlapi:RemovePhoneReq"/>
	<xsd:element name="removePhoneResponse" type="axlapi:StandardResponse"/>
	<xsd:complexType name="UpdatePhoneReq">
		<xsd:annotation>
			<xsd:documentation>Updates an existing IP phone in the database.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIRequest">
				<xsd:sequence>
					<xsd:choice>
						<xsd:element name="name" type="xsd:string">
							<xsd:annotation>
								<xsd:documentation>The name of the phone that you want to update.</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
						<xsd:element name="uuid" type="axl:XUUID">
							<xsd:annotation>
								<xsd:documentation>The GUID of the phone that you want to update.</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
					</xsd:choice>
					<xsd:element name="newName" type="xsd:Name" nillable="false" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>The new name of the phone.  Cannot be null.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="description" type="xsd:string" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>The new description of the phone.  Nullable.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:choice minOccurs="0">
						<xsd:element name="callingSearchSpaceId" type="axl:XUUID">
							<xsd:annotation>
								<xsd:documentation>The GUID of the new Calling Search Space for this phone. Nullable.</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
						<xsd:element name="callingSearchSpaceName" type="xsd:Name">
							<xsd:annotation>
								<xsd:documentation>The name of the new Calling Search Space for this phone.  Nullable.</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
					</xsd:choice>
					<xsd:choice minOccurs="0">
						<xsd:element name="devicePoolId" type="axl:XUUID">
							<xsd:annotation>
								<xsd:documentation>The GUID of the new Device Pool for this phone.  Nullable.</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
						<xsd:element name="devicePoolName" type="xsd:string">
							<xsd:annotation>
								<xsd:documentation>The name of the new Device Pool for this phone. Nullable.</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
					</xsd:choice>
					<xsd:choice minOccurs="0">
						<xsd:element name="locationId" type="axl:XUUID">
							<xsd:annotation>
								<xsd:documentation>The GUID of the new Location for this phone.  Nullable.</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
						<xsd:element name="locationName" type="xsd:Name">
							<xsd:annotation>
								<xsd:documentation>The name of the new Location for this phone.  Nullable.</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
					</xsd:choice>
					<xsd:choice minOccurs="0">
						<xsd:element name="mediaResourceListId" type="axl:XUUID">
							<xsd:annotation>
								<xsd:documentation>The GUID of the new Media Resource List for this phone.  Nullable.</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
						<xsd:element name="mediaResourceListName" type="xsd:Name">
							<xsd:annotation>
								<xsd:documentation>The name of the new Media Resource List for this phone.  Nullable.</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
					</xsd:choice>
					<xsd:element name="networkHoldMOHAudioSourceId" type="axl:XMOHAudioSourceId" nillable="false" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>Not nullable.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="userHoldMOHAudioSourceId" type="axl:XMOHAudioSourceId" nillable="false" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>Not nullable.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:choice minOccurs="0">
						<xsd:element name="automatedAlternateRoutingCSSId" type="axl:XUUID"/>
						<xsd:element name="automatedAlternateRoutingCSSName" type="axl:String50"/>
					</xsd:choice>
					<xsd:choice minOccurs="0">
						<xsd:element name="aarNeighborhoodId" type="axl:XUUID"/>
						<xsd:element name="aarNeighborhoodName" type="axl:String50"/>
					</xsd:choice>
					<xsd:element name="loadInformation" type="axl:XLoadInformation" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>The new load information for this phone.  Nullable.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="vendorConfig" type="axl:XVendorConfig" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>The new vendor config for this phone.  Nullable.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="traceFlag" type="xsd:boolean" nillable="false" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>The new trace flag for this phone.  Not nullable.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="mlppDomainId" type="xsd:int" nillable="false" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>This setting only affects devices that support MLPP.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="mlppIndicationStatus" type="axl:XStatus" nillable="false" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>This setting only affects devices that support MLPP.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="preemption" type="axl:XPreemption" nillable="false" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>This setting only affects devices that support MLPP.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="retryVideoCallAsVoice" type="xsd:boolean" nillable="false" minOccurs="0"/>
					<xsd:element name="associatedPC" type="axl:String50" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>This field has been deprecated in Seadragon</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="lines" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>The new lines for this phone.  If this element is null, then all lines are removed from this phone.  Note:  If the lines element is present, then all existing lines are removed and replaced with the sub-elements described by the line and lineIdentifier elements.  All directory numbers specified must already exist in the database.</xsd:documentation>
						</xsd:annotation>
						<xsd:complexType>
							<xsd:choice>
								<xsd:element name="line" type="axl:XLine" maxOccurs="unbounded"/>
								<xsd:element name="lineIdentifier" type="axl:XNumplanIdentifier" maxOccurs="unbounded"/>
							</xsd:choice>
						</xsd:complexType>
					</xsd:element>
					<xsd:choice minOccurs="0">
						<xsd:element name="phoneTemplateId" type="axl:XUUID">
							<xsd:annotation>
								<xsd:documentation>The GUID of the new Phone Template for this phone.  Nullable.</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
						<xsd:element name="phoneTemplateName" type="axl:String50">
							<xsd:annotation>
								<xsd:documentation>The name of the new Phone Template for this phone.  Nullable.</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
					</xsd:choice>
					<xsd:element name="speeddials" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>The new speed-dials for this phone.  If this element is null, then all speed-dials are removed from this phone.  Note:  If the "speeddials" element is present, then all existing speed-dials are removed and replaced with the "speeddial" sub-elements.</xsd:documentation>
						</xsd:annotation>
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="speeddial" type="axl:XSpeeddial" maxOccurs="unbounded"/>
							</xsd:sequence>
						</xsd:complexType>
					</xsd:element>
					<xsd:element name="busyLampFields" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>The new Busy Lamp Fields for this profile.  If this element is null, then all  Busy Lamp Fields are removed from this profile.  Note:  If the " Busy Lamp Fields" element is present, then all existing  Busy Lamp Fields are removed and replaced with the " Busy Lamp Field" sub-elements.</xsd:documentation>
						</xsd:annotation>
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="busyLampFields" type="axl:XBusyLampField" minOccurs="0" maxOccurs="unbounded"/>
							</xsd:sequence>
						</xsd:complexType>
					</xsd:element>
					<xsd:element name="addOnModules" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>The new Add-on Modules associated with this phone.  If this element is null, then all Add-on Modules are removed from this phone.  Note:  If the "addOnModules" element is present, then all existing Add-on Modules are removed and replaced with the "addOnModule" sub-elements.  All Add-on Modules specified must already exist in the database.</xsd:documentation>
						</xsd:annotation>
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="addOnModule" type="axl:XAddOnModule" maxOccurs="unbounded"/>
							</xsd:sequence>
						</xsd:complexType>
					</xsd:element>
					<xsd:element name="userLocale" type="axl:XUserLocale" nillable="true" minOccurs="0"/>
					<xsd:element name="networkLocale" type="axl:XCountry" nillable="true" minOccurs="0"/>
					<xsd:choice minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>The new Security Profile for this phone.  Nullable.</xsd:documentation>
						</xsd:annotation>
						<xsd:element name="securityProfileId" type="axl:XUUID"/>
						<xsd:element name="securityProfileName" type="axl:UniqueString50"/>
					</xsd:choice>
					<xsd:element name="idleTimeout" type="xsd:nonNegativeInteger" nillable="false" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>The new Idle Timeout value for this phone.  Nullable.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="authenticationURL" type="xsd:anyURI" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>The new Authentication URL for this phone. Nullable.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="directoryURL" type="xsd:anyURI" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>The new Directory URL for this phone. Nullable.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="idleURL" type="xsd:anyURI" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>The new Idle URL for this phone.  Nullable.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="informationURL" type="xsd:anyURI" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>The new Information URL for this phone.  Nullable.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="messagesURL" type="xsd:anyURI" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>The new Messages (voice-mail) URL for this phone.  Nullable.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="proxyServerURL" type="xsd:anyURI" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>The new Proxy Server URL for this phone.  Nullable.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="servicesURL" type="xsd:anyURI" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>The new IP Services URL for this phone.  Nullable.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="services" minOccurs="0">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="service" type="axl:XSubscribedService" minOccurs="0" maxOccurs="unbounded"/>
							</xsd:sequence>
						</xsd:complexType>
					</xsd:element>
					<xsd:choice minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>The new Softkey Template for this phone.  Nullable.</xsd:documentation>
						</xsd:annotation>
						<xsd:element name="softkeyTemplateId" type="axl:XUUID"/>
						<xsd:element name="softkeyTemplateName" type="axl:String50"/>
					</xsd:choice>
					<xsd:sequence minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>The Extension Mobility block.  By default, extension mobility is disabled.  To enable, include a default profile and set enableExtensionMobility to true.  Only applicable to 7960 and 7940 phones. If enableExtensionMobility is false then these will not appear.</xsd:documentation>
						</xsd:annotation>
						<xsd:choice>
							<xsd:annotation>
								<xsd:documentation>The absence of this tag would mean the device would use the current device Settings</xsd:documentation>
							</xsd:annotation>
							<xsd:element name="defaultProfileId" type="axl:XUUID" nillable="false" minOccurs="0">
								<xsd:annotation>
									<xsd:documentation>The ID of the default profile for this device. Nullable.</xsd:documentation>
								</xsd:annotation>
							</xsd:element>
							<xsd:element name="defaultProfileName" type="axl:String50" nillable="false" minOccurs="0">
								<xsd:annotation>
									<xsd:documentation>The name of the default profile for this device.  Nullable.</xsd:documentation>
								</xsd:annotation>
							</xsd:element>
						</xsd:choice>
						<xsd:element name="enableExtensionMobility" type="xsd:boolean">
							<xsd:annotation>
								<xsd:documentation>Not nullable.</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
					</xsd:sequence>
					<xsd:element name="builtInBridgeStatus" type="axl:XStatus" nillable="false" minOccurs="0"/>
					<xsd:element name="callInfoPrivacyStatus" type="axl:XStatus" nillable="false" minOccurs="0"/>
					<xsd:element name="ownerUserId" type="axl:String255" nillable="true" minOccurs="0"/>
					<xsd:element name="ignorePresentationIndicators" type="xsd:boolean" default="false" nillable="false" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>The new Ignore Presentation Indicators flag for Hospitality Feature is required for most phones and device profiles.Not Nullable.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="packetCaptureMode" type="axl:XPacketCaptureMode" nillable="false" minOccurs="0"/>
					<xsd:element name="packetCaptureDuration" type="xsd:positiveInteger" nillable="true" minOccurs="0"/>
					<xsd:choice minOccurs="0">
						<xsd:element name="subscribeCallingSearchSpaceId" type="axl:XUUID" nillable="true"/>
						<xsd:element name="subscribeCallingSearchSpaceName" type="axl:String50" nillable="true"/>
					</xsd:choice>
					<xsd:element name="allowCtiControlFlag" type="xsd:boolean" nillable="true" minOccurs="0"/>
					<xsd:choice minOccurs="0">
						<xsd:element name="presenceGroupId" type="axl:XUUID" nillable="false"/>
						<xsd:element name="presenceGroupName" type="axl:String50" nillable="false"/>
					</xsd:choice>
					<xsd:element name="certificateOperation" type="axl:XCertificateOperation" nillable="false" minOccurs="0"/>
					<xsd:element name="authenticationString" type="axl:Name128" nillable="true" minOccurs="0"/>
					<xsd:element name="certificateStatus" type="axl:XCertificateStatus" nillable="false" minOccurs="0"/>
					<xsd:element name="upgradeFinishTime" type="xsd:time" nillable="true" minOccurs="0"/>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="updatePhone" type="axlapi:UpdatePhoneReq"/>
	<xsd:element name="updatePhoneResponse" type="axlapi:StandardResponse"/>
	<xsd:complexType name="GetPhoneReq" final="#all">
		<xsd:annotation>
			<xsd:documentation>Retrieves the specified phone from the database.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIRequest">
				<xsd:choice>
					<xsd:element name="phoneId" type="axl:XUUID" nillable="false">
						<xsd:annotation>
							<xsd:documentation>The GUID of the phone to be retrieved.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="phoneName" type="xsd:string" nillable="false">
						<xsd:annotation>
							<xsd:documentation>The name of the phone to be retrieved.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
				</xsd:choice>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="getPhone" type="axlapi:GetPhoneReq"/>
	<xsd:complexType name="GetPhoneRes">
		<xsd:annotation>
			<xsd:documentation>Returns the phone specified by the GetPhone request.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIResponse">
				<xsd:sequence>
					<xsd:element name="return">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="device" type="axl:XIPPhone"/>
							</xsd:sequence>
						</xsd:complexType>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="getPhoneResponse" type="axlapi:GetPhoneRes"/>
	<xsd:complexType name="AddConferenceBridgeReq">
		<xsd:annotation>
			<xsd:documentation>Adds  new Conference Bridge to the database.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIRequest">
				<xsd:sequence>
					<xsd:element name="newCFB" type="axl:XConferenceBridge"/>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="addConferenceBridge" type="axlapi:AddConferenceBridgeReq"/>
	<xsd:element name="addConferenceBridgeResponse" type="axlapi:StandardResponse"/>
	<xsd:complexType name="RemoveConferenceBridgeReq">
		<xsd:annotation>
			<xsd:documentation>Removes the specified Conference Bridge from the database.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIRequest">
				<xsd:choice>
					<xsd:element name="uuid" type="axl:XUUID" nillable="false">
						<xsd:annotation>
							<xsd:documentation>The GUID of the Conference Bridge to be removed.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="name" type="xsd:string" nillable="false">
						<xsd:annotation>
							<xsd:documentation>The name of the  Conference Bridge to be removed.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
				</xsd:choice>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="removeConferenceBridge" type="axlapi:RemoveConferenceBridgeReq"/>
	<xsd:element name="removeConferenceBridgeResponse" type="axlapi:StandardResponse"/>
	<xsd:complexType name="UpdateConferenceBridgeReq">
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIRequest">
				<xsd:sequence>
					<xsd:choice>
						<xsd:element name="name" type="xsd:string" nillable="false"/>
						<xsd:element name="uuid" type="axl:XUUID" nillable="false"/>
					</xsd:choice>
					<xsd:element name="newName" type="xsd:Name" nillable="false" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>Should not be modified for Cisco Conference Bridge(WS-SVC-CMM)    and Cisco Media Server(WS-SVC-CMM-MS).</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="description" type="xsd:string" nillable="true" minOccurs="0"/>
					<xsd:choice minOccurs="0">
						<xsd:element name="devicePoolId" type="axl:XUUID" nillable="false"/>
						<xsd:element name="devicePoolName" type="xsd:string" nillable="false"/>
					</xsd:choice>
					<xsd:choice minOccurs="0">
						<xsd:element name="locationId" type="axl:XUUID" nillable="false"/>
						<xsd:element name="locationName" type="xsd:Name" nillable="false"/>
					</xsd:choice>
					<xsd:element name="vendorConfig" type="axl:XVendorConfig" nillable="true" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>Used only for               Cisco Video Conference Bridge(IPVC-35xx),          Cisco Conference Bridge (WS-SVC-CMM)             and Cisco Media Server(WS-SVC-CMM-MS).</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="loadInformation" type="axl:XLoadInformation" nillable="true" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>This tag is used only for Cisco Conference Bridge Hardware.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="maximumCapacity" type="xsd:nonNegativeInteger" default="32" nillable="false" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>This tag is  used only for Cisco Conference Bridge(WS-SVC-CMM)    and Cisco Media Server(WS-SVC-CMM-MS).  Valid values for this tag are 32,64,96,128.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="updateConferenceBridge" type="axlapi:UpdateConferenceBridgeReq"/>
	<xsd:element name="updateConferenceBridgeResponse" type="axlapi:StandardResponse"/>
	<xsd:complexType name="GetConferenceBridgeReq">
		<xsd:annotation>
			<xsd:documentation>Retrieves the specified conference bridge from the database.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIRequest">
				<xsd:choice>
					<xsd:element name="uuid" type="axl:XUUID" nillable="false">
						<xsd:annotation>
							<xsd:documentation>The GUID of the Conference Bridge to be retrieved.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="name" type="xsd:string" nillable="false">
						<xsd:annotation>
							<xsd:documentation>The name of the Conference Bridge to be retrieved.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
				</xsd:choice>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="getConferenceBridge" type="axlapi:GetConferenceBridgeReq"/>
	<xsd:complexType name="GetConferenceBridgeRes">
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIResponse">
				<xsd:sequence>
					<xsd:element name="return">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="device" type="axl:XConferenceBridge"/>
							</xsd:sequence>
						</xsd:complexType>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="getConferenceBridgeResponse" type="axlapi:GetConferenceBridgeRes"/>
	<xsd:complexType name="AddAttendantConsoleUserReq">
		<xsd:annotation>
			<xsd:documentation>Adds a new Pilot User  to the database.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIRequest">
				<xsd:sequence>
					<xsd:element name="pilotUser" type="axl:XPilotUser"/>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="addAttendantConsoleUser" type="axlapi:AddAttendantConsoleUserReq"/>
	<xsd:element name="addAttendantConsoleUserResponse" type="axlapi:StandardResponse"/>
	<xsd:complexType name="RemoveAttendantConsoleUserReq">
		<xsd:annotation>
			<xsd:documentation>Removes the specified pilot user from the database. </xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIRequest">
				<xsd:choice>
					<xsd:element name="uuid" type="axl:XUUID" fixed="false">
						<xsd:annotation>
							<xsd:documentation>The GUID of the PilotUser to be removed.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="userId" type="xsd:string" nillable="false">
						<xsd:annotation>
							<xsd:documentation>The user Id of the PilotUser be removed.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
				</xsd:choice>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="removeAttendantConsoleUser" type="axlapi:RemoveAttendantConsoleUserReq"/>
	<xsd:element name="removeAttendantConsoleUserResponse" type="axlapi:StandardResponse"/>
	<xsd:complexType name="UpdateAttendantConsoleUserReq">
		<xsd:annotation>
			<xsd:documentation>Updates an existing Pilot User in the database.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIRequest">
				<xsd:sequence>
					<xsd:choice>
						<xsd:element name="userId" type="xsd:string" nillable="false">
							<xsd:annotation>
								<xsd:documentation>The userId of the pilot user to modify.</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
						<xsd:element name="uuid" type="axl:XUUID" nillable="false">
							<xsd:annotation>
								<xsd:documentation>The pkid of the pilot user to modify.</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
					</xsd:choice>
					<xsd:element name="newUserId" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>The new UserId of the pilotUser.Cannot be null.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="password" type="xsd:string" nillable="true" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>Nullable.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="updateAttendantConsoleUser" type="axlapi:UpdateAttendantConsoleUserReq"/>
	<xsd:element name="updateAttendantConsoleUserResponse" type="axlapi:StandardResponse"/>
	<xsd:complexType name="GetAttendantConsoleUserReq">
		<xsd:annotation>
			<xsd:documentation>Retrieves the specified Pilot User from the database.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIRequest">
				<xsd:choice>
					<xsd:element name="uuid" type="axl:XUUID" nillable="false">
						<xsd:annotation>
							<xsd:documentation>The GUID of the pilot user to be retrieved.Not nullable.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="userId" type="xsd:string" nillable="false">
						<xsd:annotation>
							<xsd:documentation>The name of the pilot user to be retrieved.Not nullable.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
				</xsd:choice>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="getAttendantConsoleUser" type="axlapi:GetAttendantConsoleUserReq"/>
	<xsd:complexType name="GetAttendantConsoleUserRes">
		<xsd:annotation>
			<xsd:documentation>Returns the pilot user specified by the GetPilotUser request.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIResponse">
				<xsd:sequence>
					<xsd:element name="return">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="pilotUser" type="axl:XPilotUser"/>
							</xsd:sequence>
						</xsd:complexType>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="getAttendantConsoleUserResponse" type="axlapi:GetAttendantConsoleUserRes"/>
	<xsd:complexType name="AddAttendantConsoleHuntGroupReq">
		<xsd:annotation>
			<xsd:documentation>Adds one new hunt group to the database.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIRequest">
				<xsd:sequence>
					<xsd:element name="newHuntGroup" type="axl:XPilotHuntGroup" nillable="false">
						<xsd:annotation>
							<xsd:documentation>The new hunt group to be added.Not nullable.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="addAttendantConsoleHuntGroup" type="axlapi:AddAttendantConsoleHuntGroupReq"/>
	<xsd:element name="addAttendantConsoleHuntGroupResponse" type="axlapi:StandardResponse"/>
	<xsd:complexType name="UpdateAttendantConsoleHuntGroupReq">
		<xsd:annotation>
			<xsd:documentation>Updates an existing hunt group in the database.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIRequest">
				<xsd:sequence>
					<xsd:choice>
						<xsd:element name="pilotPointId" type="axl:XUUID"/>
						<xsd:element name="pilotPointName"/>
					</xsd:choice>
					<xsd:element name="members" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>The new members of this Hunt Group.If this element is null, then all members are removed from this hunt group.Note:If the "members" element is present, then all existing members are removed and replaced with the "member" sub-elements.</xsd:documentation>
						</xsd:annotation>
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="member" type="axl:XPilotHuntGroupMember" maxOccurs="unbounded">
									<xsd:annotation>
										<xsd:documentation>A list of the new members of this hunt group.</xsd:documentation>
									</xsd:annotation>
								</xsd:element>
							</xsd:sequence>
						</xsd:complexType>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="updateAttendantConsoleHuntGroup" type="axlapi:UpdateAttendantConsoleHuntGroupReq"/>
	<xsd:element name="updateAttendantConsoleHuntGroupResponse" type="axlapi:StandardResponse"/>
	<xsd:complexType name="RemoveAttendantConsoleHuntGroupReq">
		<xsd:annotation>
			<xsd:documentation>Removes the specified hunt group from the database.</xsd:documentation>
		</xsd:annotation>
		<xsd:choice>
			<xsd:element name="pilotPointId">
				<xsd:annotation>
					<xsd:documentation>The GUID of the pilotPoint associated with the hunt group to be retrieved.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="pilotPointName">
				<xsd:annotation>
					<xsd:documentation>The name of the pilotPoint associated with the hunt group to be retrieved.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
		</xsd:choice>
	</xsd:complexType>
	<xsd:element name="removeAttendantConsoleHuntGroup" type="axlapi:RemoveAttendantConsoleHuntGroupReq"/>
	<xsd:element name="removeAttendantConsoleHuntGroupResponse" type="axlapi:StandardResponse"/>
	<xsd:element name="getAttendantConsoleHuntGroup" type="axlapi:GetAttendantConsoleHuntGroupReq"/>
	<xsd:complexType name="GetAttendantConsoleHuntGroupRes">
		<xsd:annotation>
			<xsd:documentation>Contains the hunt group that was specified by the request.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIResponse">
				<xsd:sequence>
					<xsd:element name="return">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="attendantConsoleHuntGroup" type="axl:XPilotHuntGroup"/>
							</xsd:sequence>
						</xsd:complexType>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="getAttendantConsoleHuntGroupResponse" type="axlapi:GetAttendantConsoleHuntGroupRes"/>
	<xsd:complexType name="GetAttendantConsoleHuntGroupReq">
		<xsd:annotation>
			<xsd:documentation>Retrieves the specified hunt group from the database.</xsd:documentation>
		</xsd:annotation>
		<xsd:choice>
			<xsd:element name="pilotPointId">
				<xsd:annotation>
					<xsd:documentation>The GUID of the pilotPoint associated with the hunt group to be Removed.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="pilotPointName">
				<xsd:annotation>
					<xsd:documentation>The name of the pilotPoint associated with the hunt group to be Removed.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
		</xsd:choice>
	</xsd:complexType>
	<xsd:complexType name="DeviceLoginReq" abstract="false">
		<xsd:annotation>
			<xsd:documentation>Logs-in the specified user to the specified phone.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIRequest">
				<xsd:sequence>
					<xsd:choice>
						<xsd:element name="deviceId" type="axl:XUUID" nillable="false">
							<xsd:annotation>
								<xsd:documentation>The GUID of the phone that is being logged-into.  Not nullable.</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
						<xsd:element name="deviceName" type="xsd:string" nillable="false">
							<xsd:annotation>
								<xsd:documentation>The name of hte phone that is being logged-into.  Not nullable.</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
					</xsd:choice>
					<xsd:element name="loginDuration" type="xsd:nonNegativeInteger" nillable="false">
						<xsd:annotation>
							<xsd:documentation>The duration of the login.  Not nullable.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:choice>
						<xsd:element name="profileId" type="axl:XUUID" nillable="false">
							<xsd:annotation>
								<xsd:documentation>The GUID of the Device Profile to be used.  Not nullable.</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
						<xsd:element name="profileName" type="xsd:string" nillable="false">
							<xsd:annotation>
								<xsd:documentation>The name of the Device Profile to be used.  Not nullable.</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
					</xsd:choice>
					<xsd:element name="userId" type="xsd:string" nillable="false">
						<xsd:annotation>
							<xsd:documentation>The LDAP RN of the user that is to be logged-into the phone.  Not nullable.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="doDeviceLogin" type="axlapi:DeviceLoginReq"/>
	<xsd:complexType name="DeviceLoginResponse">
		<xsd:annotation>
			<xsd:documentation>Returns "true" if the login was performed successfully.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:StandardResponse"/>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="doDeviceLoginResponse" type="axlapi:DeviceLoginResponse"/>
	<xsd:complexType name="DeviceLogoutReq" abstract="false">
		<xsd:annotation>
			<xsd:documentation>This method logs-out whichever user is logged-into the device.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIRequest">
				<xsd:sequence>
					<xsd:choice>
						<xsd:element name="deviceId" type="axl:XUUID" nillable="false">
							<xsd:annotation>
								<xsd:documentation>The GUID of the device to perform the log-out on.</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
						<xsd:element name="deviceName" type="xsd:string" nillable="false">
							<xsd:annotation>
								<xsd:documentation>The name of the device to perform the log-out on.</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
					</xsd:choice>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="doDeviceLogout" type="axlapi:DeviceLogoutReq"/>
	<xsd:complexType name="DeviceLogoutRes">
		<xsd:annotation>
			<xsd:documentation>Returns "true" if the log-out was performed successfully.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:StandardResponse"/>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="doDeviceLogoutResponse" type="axlapi:DeviceLogoutRes"/>
	<xsd:complexType name="DeviceResetReq">
		<xsd:annotation>
			<xsd:documentation>Performs either a hard or soft reset on the specified device.  If resetting an MGCP box, then set isMGCP attribute to true.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIRequest">
				<xsd:sequence>
					<xsd:choice>
						<xsd:element name="deviceId" type="axl:XUUID" nillable="false">
							<xsd:annotation>
								<xsd:documentation>The GUID of the device to perform a reset on.  Not nullable.</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
						<xsd:element name="deviceName" type="xsd:string" nillable="false">
							<xsd:annotation>
								<xsd:documentation>The name of the device to performs a reset on.  Not nullable.</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
					</xsd:choice>
					<xsd:element name="isHardReset" type="xsd:boolean" nillable="false">
						<xsd:annotation>
							<xsd:documentation>True performs a hard reset.  False performs a soft reset.  Not nullable.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
				</xsd:sequence>
				<xsd:attribute name="isMGCP" type="xsd:boolean" use="optional" default="false"/>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="doDeviceReset" type="axlapi:DeviceResetReq">
		<xsd:annotation>
			<xsd:documentation>Performs either a hard or soft reset on the specified device.  If resetting an MGCP box, then set isMGCP attribute to true.</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<xsd:complexType name="DeviceResetRes">
		<xsd:annotation>
			<xsd:documentation>Returns "true" if the reset was performed successfully.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:StandardResponse"/>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="doDeviceResetResponse" type="axlapi:DeviceResetRes"/>
	<xsd:complexType name="AuthenticateUserReq" abstract="false">
		<xsd:annotation>
			<xsd:documentation>Authenticates the user on the basis of pin or password.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIRequest">
				<xsd:sequence>
					<xsd:element name="userid" type="xsd:string"/>
					<xsd:choice>
						<xsd:element name="password" type="xsd:string"/>
						<xsd:element name="pin">
							<xsd:annotation>
								<xsd:documentation>Applicable for end users only.</xsd:documentation>
							</xsd:annotation>
							<xsd:simpleType>
								<xsd:restriction base="xsd:string">
									<xsd:pattern value="\d\d\d\d+"/>
								</xsd:restriction>
							</xsd:simpleType>
						</xsd:element>
					</xsd:choice>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="doAuthenticateUser" type="axlapi:AuthenticateUserReq"/>
	<xsd:complexType name="AuthenticateUserResponse">
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIResponse">
				<xsd:sequence>
					<xsd:element name="return">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="userAuthenticated" type="xsd:boolean">
									<xsd:annotation>
										<xsd:documentation>true indicates that user was authenticated and false indicates that user was not authenticated.</xsd:documentation>
									</xsd:annotation>
								</xsd:element>
							</xsd:sequence>
						</xsd:complexType>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="doAuthenticateUserResponse" type="axlapi:AuthenticateUserResponse"/>
	<xsd:complexType name="AddLineReq">
		<xsd:annotation>
			<xsd:documentation>Adds a new Directory Number to the database.  Note that this does NOT associate a directory number with a phone.  Please use addPhone or updatePhone to do this.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIRequest">
				<xsd:sequence>
					<xsd:element name="newLine" type="axl:XNPDirectoryNumber" nillable="false">
						<xsd:annotation>
							<xsd:documentation>The new line to be added.  Not nullable.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="addLine" type="axlapi:AddLineReq"/>
	<xsd:element name="addLineResponse" type="axlapi:StandardResponse"/>
	<xsd:complexType name="RemoveLineReq">
		<xsd:annotation>
			<xsd:documentation>Removes the specified line from the database.  The line can be specified by its GUID, or by a combination of its pattern, Route Partition Id, and Route Filter Id.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:GetNumPlanPattern"/>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="removeLine" type="axlapi:RemoveLineReq"/>
	<xsd:element name="removeLineResponse" type="axlapi:StandardResponse"/>
	<xsd:complexType name="UpdateLineReq">
		<xsd:annotation>
			<xsd:documentation>Updates an existing line (directory number) in the database.  Can specify the line with its GUID or by a combination of its pattern, route partition id, and route filter id.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:GetNumPlanPattern">
				<xsd:sequence>
					<xsd:element name="newPattern" type="xsd:string" nillable="false" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>The new directory number.  Not nullable.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="description" type="axl:String50" minOccurs="0"/>
					<xsd:choice minOccurs="0">
						<xsd:element name="newRoutePartitionId" type="axl:XUUID">
							<xsd:annotation>
								<xsd:documentation>The new Route Partition GUID.  Nullable.</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
						<xsd:element name="newRoutePartitionName" type="axl:String50">
							<xsd:annotation>
								<xsd:documentation>The new Route Partition name.  Nullable.</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
					</xsd:choice>
					<xsd:choice minOccurs="0">
						<xsd:element name="aarNeighborhoodId" type="axl:XUUID"/>
						<xsd:element name="aarNeighborhoodName" type="axl:String50"/>
					</xsd:choice>
					<xsd:element name="callForwardAll" type="axl:XCallForwardInfo" nillable="true" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>The Calling Search Space and destination for Call Forwarding on this line.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="callForwardBusy" type="axl:XCallForwardInfo" nillable="true" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>The Calling Search Space and destination for Call Forwarding when this line is busy for external calls.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="callForwardBusyInt" type="axl:XCallForwardInfo" nillable="true" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>The Calling Search Space and destination for Call Forwarding when this line is busy for internal calls.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="callForwardNoAnswer" type="axl:XCallForwardInfo" nillable="true" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>The Calling Search Space and destination for Call Forwarding when there is no answer on this line for external calls.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="callForwardNoAnswerInt" type="axl:XCallForwardInfo" nillable="true" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>The Calling Search Space and destination for Call Forwarding when there is no answer on this line for internal calls.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="callForwardNoCoverage" type="axl:XCallForwardInfo" nillable="true" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>The Calling Search Space and destination for Call Forwarding when there is no coverage on this line for external calls.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="callForwardNoCoverageInt" type="axl:XCallForwardInfo" nillable="true" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>The Calling Search Space and destination for Call Forwarding when there is no coverage on this line for internal calls.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="callForwardOnFailure" type="axl:XCallForwardInfo" minOccurs="0"/>
					<xsd:element name="callForwardAlternateParty" type="axl:XCallForwardInfo" minOccurs="0"/>
					<xsd:choice minOccurs="0">
						<xsd:element name="callPickupGroup" type="axl:XNPCallPickupGroup">
							<xsd:annotation>
								<xsd:documentation>Only the uuid attribute is read by the AXL API.</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
						<xsd:element name="callPickupGroupName" type="axl:String50"/>
					</xsd:choice>
					<xsd:element name="autoAnswer" type="axl:XAutoAnswer" nillable="false" minOccurs="0"/>
					<xsd:element name="networkHoldMOHAudioSourceId" type="axl:XMOHAudioSourceId" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>A value of 0 means 'none selected'.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="userHoldMOHAudioSourceId" type="axl:XMOHAudioSourceId" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>A value of 0 means 'none selected'.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="alertingName" type="axl:String50" nillable="true"/>
					<xsd:choice minOccurs="0">
						<xsd:element name="shareLineAppearanceCSSId" type="axl:XUUID">
							<xsd:annotation>
								<xsd:documentation>The GUID for the new Calling Search Space used for the Shared Line Appearance for this line.  Nullable.</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
						<xsd:element name="shareLineAppearanceCSSName" type="axl:String50"/>
					</xsd:choice>
					<xsd:choice minOccurs="0">
						<xsd:element name="voiceMailProfileId" type="axl:XUUID">
							<xsd:annotation>
								<xsd:documentation>The GUID of the new Voice Messaging Profile for this directory number.  Nullable.</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
						<xsd:element name="voiceMailProfileName" type="axl:String50"/>
					</xsd:choice>
					<xsd:element name="patternPrecedence" type="axl:XPatternPrecedence" nillable="false" minOccurs="0"/>
					<xsd:element name="releaseCause" type="axl:XReleaseCauseValue" nillable="false" minOccurs="0"/>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="updateLine" type="axlapi:UpdateLineReq"/>
	<xsd:element name="updateLineResponse" type="axlapi:StandardResponse"/>
	<xsd:complexType name="GetLineReq">
		<xsd:annotation>
			<xsd:documentation>Retrieves the specified line (directory number) from the database.  Can specify the line with its GUID or by a combination of its pattern, route partition id, and route filter id.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:GetNumPlanPattern"/>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="getLine" type="axlapi:GetLineReq"/>
	<xsd:complexType name="GetLineRes">
		<xsd:annotation>
			<xsd:documentation>Contains the directory number that was specified by the GetLine request.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIResponse">
				<xsd:sequence>
					<xsd:element name="return">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="directoryNumber" type="axl:XNPDirectoryNumber"/>
							</xsd:sequence>
						</xsd:complexType>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="getLineResponse" type="axlapi:GetLineRes"/>
	<xsd:complexType name="AddUserReq">
		<xsd:annotation>
			<xsd:documentation>Adds a new user to the user directory.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIRequest">
				<xsd:sequence>
					<xsd:element name="newUser" type="axl:XUser">
						<xsd:annotation>
							<xsd:documentation>The new user to be added.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="addUser" type="axlapi:AddUserReq"/>
	<xsd:element name="addUserResponse" type="axlapi:StandardResponse"/>
	<xsd:complexType name="RemoveUserReq">
		<xsd:annotation>
			<xsd:documentation>Removes the specified user from the user directory.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIRequest">
				<xsd:sequence>
					<xsd:element name="userid" type="xsd:string" nillable="false">
						<xsd:annotation>
							<xsd:documentation>The ID of the user to be removed. Not nullable.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="removeUser" type="axlapi:RemoveUserReq"/>
	<xsd:element name="removeUserResponse" type="axlapi:StandardResponse"/>
	<xsd:complexType name="UpdateUserReq">
		<xsd:annotation>
			<xsd:documentation>Updates an existing user in the directory.  Specify the user to be modified with their LDAP RN.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIRequest">
				<xsd:sequence>
					<xsd:element name="userid" type="xsd:string">
						<xsd:annotation>
							<xsd:documentation>The userid of the user to be modified.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="firstname" type="xsd:string" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>The new first name (given name) of the user.  Nullable.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="lastname" type="xsd:string" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>The new last name (surname) of the user.  Nullable.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="password" type="xsd:string" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>The new password for the user.  Not nullable.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="pin" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>The new PIN (personal identification number) for the user.  Not nullable.</xsd:documentation>
						</xsd:annotation>
						<xsd:simpleType>
							<xsd:restriction base="xsd:string">
								<xsd:pattern value="^\d+$"/>
							</xsd:restriction>
						</xsd:simpleType>
					</xsd:element>
					<xsd:element name="telephoneNumber" type="axl:XDirectoryNumber" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>The new telephone number for the user.  Nullable.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="extension" type="axl:XDirectoryNumber" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>This field has been deprecated in Seadragon</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="department" type="xsd:string" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>The new department for the user.  Nullable.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="manager" type="xsd:string" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>The new manager for the user.  Nullable.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="userLocale" type="axl:XUserLocale" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>The new locale for the user.  Not nullable.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="associatedDevices" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>The devices associated with this user.  Also known as controlled devices.  If "associateDevices" is present, then all current associated devices are replaced by the devices listed underneath the "associatedDevices" element.  Nullable.</xsd:documentation>
						</xsd:annotation>
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="device" type="axl:String50" minOccurs="0" maxOccurs="unbounded">
									<xsd:annotation>
										<xsd:documentation>Name of device.</xsd:documentation>
									</xsd:annotation>
								</xsd:element>
							</xsd:sequence>
						</xsd:complexType>
					</xsd:element>
					<xsd:element name="associatedPC" type="xsd:string" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>The new PC associated with this user.  Nullable.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="authenticationProxyRights" type="xsd:boolean" nillable="false" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>This field has been deprecated in Seadragon</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="enableCTI" type="xsd:boolean" nillable="false" minOccurs="0"/>
					<xsd:element name="digestCredentials" type="xsd:string" nillable="true" minOccurs="0"/>
					<xsd:element name="enableCTISuperProvider" type="xsd:boolean" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>This field has been deprecated in Seadragon</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="allowCallParkRetrieval" type="xsd:boolean" nillable="false" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>This field has been deprecated in Seadragon</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="callingNumberModAllowed" type="xsd:boolean" nillable="false" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>This field has been deprecated in Seadragon</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="iaqExtension" type="xsd:string" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>This field has been deprecated in Seadragon</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="phoneProfiles" minOccurs="0">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:choice>
									<xsd:element name="profile" type="axl:XPhoneProfile" nillable="false" maxOccurs="unbounded">
										<xsd:annotation>
											<xsd:documentation>The complete profile object.  Only the "uuid" attribute is used by the AXL API.</xsd:documentation>
										</xsd:annotation>
									</xsd:element>
									<xsd:element name="profileName" type="xsd:string" nillable="false" maxOccurs="unbounded">
										<xsd:annotation>
											<xsd:documentation>The profile name.</xsd:documentation>
										</xsd:annotation>
									</xsd:element>
								</xsd:choice>
							</xsd:sequence>
						</xsd:complexType>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="updateUser" type="axlapi:UpdateUserReq"/>
	<xsd:element name="updateUserResponse" type="axlapi:StandardResponse"/>
	<xsd:complexType name="GetUserReq">
		<xsd:annotation>
			<xsd:documentation>Retrieves the specified user from the directory.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIRequest">
				<xsd:sequence>
					<xsd:element name="userid" type="xsd:string" nillable="false">
						<xsd:annotation>
							<xsd:documentation>The ID of the user to be retrieved.  Not nullable.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="getUser" type="axlapi:GetUserReq"/>
	<xsd:complexType name="GetUserRes">
		<xsd:annotation>
			<xsd:documentation>Contains the user that was specified by the GetUser request.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIResponse">
				<xsd:sequence>
					<xsd:element name="return">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="user" type="axl:XUser"/>
							</xsd:sequence>
						</xsd:complexType>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="getUserResponse" type="axlapi:GetUserRes"/>
	<xsd:complexType name="StandardResponse">
		<xsd:annotation>
			<xsd:documentation>Returns either the GUID of the object that was altered, or returns true if the operation was successful.  Whichever is appropriate for the corresponding request.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIResponse">
				<xsd:sequence>
					<xsd:element name="return">
						<xsd:simpleType>
							<xsd:restriction base="xsd:string">
								<xsd:pattern value="(true)|(false)|(\{........-....-....-....-............\})"/>
							</xsd:restriction>
						</xsd:simpleType>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="AddDeviceProfileReq">
		<xsd:annotation>
			<xsd:documentation>Adds a new device profile to the databse.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIRequest">
				<xsd:sequence>
					<xsd:element name="newProfile" type="axl:XPhoneProfile">
						<xsd:annotation>
							<xsd:documentation>The new profile to be added. Not nullable.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="addDeviceProfile" type="axlapi:AddDeviceProfileReq"/>
	<xsd:element name="addDeviceProfileResponse" type="axlapi:StandardResponse"/>
	<xsd:complexType name="RemoveDeviceProfileReq">
		<xsd:annotation>
			<xsd:documentation>Removes the specified device profile from the database.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIRequest">
				<xsd:choice>
					<xsd:element name="profileId" type="axl:XUUID" nillable="false">
						<xsd:annotation>
							<xsd:documentation>The GUID of the profile to be removed. Not nullable.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="profileName" type="xsd:string" nillable="false">
						<xsd:annotation>
							<xsd:documentation>The name of the profile to be removed. Not nullable</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
				</xsd:choice>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="removeDeviceProfile" type="axlapi:RemoveDeviceProfileReq"/>
	<xsd:element name="removeDeviceProfileResponse" type="axlapi:StandardResponse"/>
	<xsd:complexType name="UpdateDeviceProfileReq">
		<xsd:annotation>
			<xsd:documentation>Modifies an existing device profile in the database.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIRequest">
				<xsd:sequence>
					<xsd:choice>
						<xsd:element name="name" type="xsd:string">
							<xsd:annotation>
								<xsd:documentation>The name of the profile that you want to update.</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
						<xsd:element name="uuid" type="axl:XUUID">
							<xsd:annotation>
								<xsd:documentation>The GUID of the profile that you want to update.</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
					</xsd:choice>
					<xsd:element name="newName" type="xsd:Name" nillable="false" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>The new name of the profile.  Cannot be null.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="description" type="xsd:string" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>The new description of the profile.  Nullable.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="networkHoldMOHAudioSourceId" type="axl:XMOHAudioSourceId" nillable="false" minOccurs="0"/>
					<xsd:element name="userHoldMOHAudioSourceId" type="axl:XMOHAudioSourceId" nillable="false" minOccurs="0"/>
					<xsd:element name="mlppDomainId" type="xsd:int" nillable="false" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>This setting only affects devices that support MLPP.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="mlppIndicationStatus" type="axl:XStatus" nillable="false" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>This setting only affects devices that support MLPP.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="preemption" type="axl:XPreemption" nillable="false" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>This setting only affects devices that support MLPP.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:choice minOccurs="0">
						<xsd:element name="subscribeCallingSearchSpaceId" type="axl:XUUID" nillable="true"/>
						<xsd:element name="subscribeCallingSearchSpaceName" type="axl:String50" nillable="true"/>
					</xsd:choice>
					<xsd:element name="allowCtiControlFlag" type="axl:XBoolean" nillable="true" minOccurs="0"/>
					<xsd:choice minOccurs="0">
						<xsd:element name="presenceGroupID" type="axl:XUUID" nillable="false"/>
						<xsd:element name="PresenceGroupName" type="axl:String50" nillable="false"/>
					</xsd:choice>
					<xsd:element name="lines" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>The new lines for this profile.  If this element is null, then all lines are removed from this profile.  Note:  If the lines element is present, then all existing lines are removed and replaced with the sub-elements described by the line and lineIdentifier elements.  All lines specified must already exist in the database.</xsd:documentation>
						</xsd:annotation>
						<xsd:complexType>
							<xsd:choice>
								<xsd:element name="line" type="axl:XLine" maxOccurs="unbounded"/>
								<xsd:element name="lineIdentifier" type="axl:XNumplanIdentifier" maxOccurs="unbounded"/>
							</xsd:choice>
						</xsd:complexType>
					</xsd:element>
					<xsd:choice minOccurs="0">
						<xsd:element name="phoneTemplateId" type="axl:XUUID">
							<xsd:annotation>
								<xsd:documentation>The GUID of the new Phone Template for this profile.  Nullable.</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
						<xsd:element name="phoneTemplateName" type="axl:String50"/>
					</xsd:choice>
					<xsd:element name="speeddials" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>The new speed-dials for this profile.  If this element is null, then all speed-dials are removed from this profile.  Note:  If the "speeddials" element is present, then all existing speed-dials are removed and replaced with the "speeddial" sub-elements.</xsd:documentation>
						</xsd:annotation>
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="speeddial" type="axl:XSpeeddial" maxOccurs="unbounded"/>
							</xsd:sequence>
						</xsd:complexType>
					</xsd:element>
					<xsd:element name="busyLampFields" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>The new Busy Lamp Fields for this profile.  If this element is null, then all  Busy Lamp Fields are removed from this profile.  Note:  If the " Busy Lamp Fields" element is present, then all existing  Busy Lamp Fields are removed and replaced with the " Busy Lamp Field" sub-elements.</xsd:documentation>
						</xsd:annotation>
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="busyLampField" type="axl:XBusyLampField" minOccurs="0" maxOccurs="unbounded"/>
							</xsd:sequence>
						</xsd:complexType>
					</xsd:element>
					<xsd:element name="addOnModules" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>The new Add-on Modules associated with this profile.  If this element is null, then all Add-on Modules are removed from this profile.  Note:  If the "addOnModules" element is present, then all existing Add-on Modules are removed and replaced with the "addOnModule" sub-elements.  All Add-on Modules specified must already exist in the database.</xsd:documentation>
						</xsd:annotation>
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="addOnModule" type="axl:XAddOnModule" maxOccurs="unbounded"/>
							</xsd:sequence>
						</xsd:complexType>
					</xsd:element>
					<xsd:element name="userLocale" type="axl:XUserLocale" nillable="true" minOccurs="0"/>
					<xsd:element name="services" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>The new subscribed services for this profile.  If this element is null, then all services are removed from this profile.  Note:  If the "services" element is present, then all existing services are removed and replaced with the "service" sub-elements.</xsd:documentation>
						</xsd:annotation>
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="service" type="axl:XSubscribedService" minOccurs="0" maxOccurs="unbounded"/>
							</xsd:sequence>
						</xsd:complexType>
					</xsd:element>
					<xsd:choice minOccurs="0">
						<xsd:element name="softkeyTemplateId" type="axl:XUUID"/>
						<xsd:element name="softkeyTemplateName" type="axl:String50"/>
					</xsd:choice>
					<xsd:element name="loginUserId" type="axl:String255" nillable="false" minOccurs="0"/>
					<xsd:element name="ignorePresentationIndicators" type="xsd:boolean" default="false" nillable="false" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>The new Ignore Presentation Indicators flag for Hospitality Feature is required for most phones and device profiles.Not Nullable.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="updateDeviceProfile" type="axlapi:UpdateDeviceProfileReq"/>
	<xsd:element name="updateDeviceProfileResponse" type="axlapi:StandardResponse"/>
	<xsd:complexType name="GetDeviceProfileReq">
		<xsd:annotation>
			<xsd:documentation>Retrieves the specified Device Profile from the database.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIRequest">
				<xsd:choice>
					<xsd:element name="profileId" type="axl:XUUID" nillable="false">
						<xsd:annotation>
							<xsd:documentation>The GUID of the profile to be retrieved.  Not nullable.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="profileName" type="xsd:string" nillable="false">
						<xsd:annotation>
							<xsd:documentation>The name of the profile to be retrieved.  Not nullable.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
				</xsd:choice>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="getDeviceProfile" type="axlapi:GetDeviceProfileReq"/>
	<xsd:complexType name="GetDeviceProfileRes">
		<xsd:annotation>
			<xsd:documentation>Contains the device profile that was specified by the request.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIResponse">
				<xsd:sequence>
					<xsd:element name="return">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="profile" type="axl:XPhoneProfile"/>
							</xsd:sequence>
						</xsd:complexType>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="getDeviceProfileResponse" type="axlapi:GetDeviceProfileRes"/>
	<xsd:complexType name="AddTimePeriodReq" abstract="false" final="#all">
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIRequest">
				<xsd:sequence>
					<xsd:element name="timePeriod" type="axl:XTimePeriod"/>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="addTimePeriod" type="axlapi:AddTimePeriodReq"/>
	<xsd:element name="addTimePeriodResponse" type="axlapi:StandardResponse"/>
	<xsd:element name="getTimePeriod" type="axlapi:NameAndGUIDRequest"/>
	<xsd:complexType name="GetTimePeriodRes">
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIResponse">
				<xsd:sequence>
					<xsd:element name="return">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="timePeriod" type="axl:XTimePeriod"/>
							</xsd:sequence>
						</xsd:complexType>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="getTimePeriodResponse" type="axlapi:GetTimePeriodRes"/>
	<xsd:element name="removeTimePeriod" type="axlapi:NameAndGUIDRequest"/>
	<xsd:element name="removeTimePeriodResponse" type="axlapi:StandardResponse"/>
	<xsd:complexType name="UpdateTimePeriodReq">
		<xsd:complexContent>
			<xsd:extension base="axlapi:NameAndGUIDRequest">
				<xsd:sequence>
					<xsd:element name="newName" type="axl:String50" nillable="false" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>Not nullable.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="startTime" type="axl:XTimeOfDay" nillable="false" minOccurs="0"/>
					<xsd:element name="endTime" type="axl:XTimeOfDay" nillable="false" minOccurs="0"/>
					<xsd:element name="startDay" type="axl:XDayOfWeek" minOccurs="0"/>
					<xsd:element name="endDay" type="axl:XDayOfWeek" minOccurs="0"/>
					<xsd:element name="monthOfYear" type="axl:XMonthOfYear" minOccurs="0"/>
					<xsd:element name="dayOfMonth" type="xsd:nonNegativeInteger" minOccurs="0"/>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="updateTimePeriod" type="axlapi:UpdateTimePeriodReq"/>
	<xsd:element name="updateTimePeriodResponse" type="axlapi:StandardResponse"/>
	<xsd:complexType name="AddTimeScheduleReq">
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIRequest">
				<xsd:sequence>
					<xsd:element name="timeSchedule" type="axl:XTimeSchedule"/>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="addTimeSchedule" type="axlapi:AddTimeScheduleReq"/>
	<xsd:element name="addTimeScheduleResponse" type="axlapi:StandardResponse"/>
	<xsd:element name="getTimeSchedule" type="axlapi:NameAndGUIDRequest"/>
	<xsd:complexType name="GetTimeScheduleRes">
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIResponse">
				<xsd:sequence>
					<xsd:element name="return">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="timeSchedule" type="axl:XTimeSchedule"/>
							</xsd:sequence>
						</xsd:complexType>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="getTimeScheduleResponse" type="axlapi:GetTimeScheduleRes"/>
	<xsd:element name="removeTimeSchedule" type="axlapi:NameAndGUIDRequest"/>
	<xsd:element name="removeTimeScheduleResponse" type="axlapi:StandardResponse"/>
	<xsd:complexType name="UpdateTimeScheduleReq">
		<xsd:complexContent>
			<xsd:extension base="axlapi:NameAndGUIDRequest">
				<xsd:sequence>
					<xsd:element name="newName" type="axl:String50" nillable="false" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>Not nullable.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="members" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>Not nullable.</xsd:documentation>
						</xsd:annotation>
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="member" type="axl:XTimeScheduleTimePeriod" maxOccurs="unbounded"/>
							</xsd:sequence>
						</xsd:complexType>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="updateTimeSchedule" type="axlapi:UpdateTimeScheduleReq"/>
	<xsd:element name="updateTimeScheduleResponse" type="axlapi:StandardResponse"/>
	<xsd:complexType name="AddRoutePartitionReq">
		<xsd:annotation>
			<xsd:documentation>Adds a new route partition to the database.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIRequest">
				<xsd:sequence>
					<xsd:element name="newRoutePartition" type="axl:XRoutePartition" nillable="false">
						<xsd:annotation>
							<xsd:documentation>The route partition to be added.  Not nullable.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="addRoutePartition" type="axlapi:AddRoutePartitionReq"/>
	<xsd:element name="addRoutePartitionResponse" type="axlapi:StandardResponse"/>
	<xsd:complexType name="UpdateRoutePartitionReq">
		<xsd:annotation>
			<xsd:documentation>Updates an existing route partition in the database.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIRequest">
				<xsd:sequence>
					<xsd:choice>
						<xsd:element name="name" type="xsd:string" nillable="false">
							<xsd:annotation>
								<xsd:documentation>The name of the route partition to be modified.  Not nullable.</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
						<xsd:element name="uuid" type="axl:XUUID" nillable="false">
							<xsd:annotation>
								<xsd:documentation>The GUID of the route partition to be modified.  Not nullable.</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
					</xsd:choice>
					<xsd:element name="newName" type="xsd:string" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>The new name for this route partition.  Not nullable.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="description" type="xsd:string" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>The new description for this route partition.  Nullable.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:choice minOccurs="0">
						<xsd:element name="newTimeScheduleId" type="axl:XUUID">
							<xsd:annotation>
								<xsd:documentation>The new Time Schedule GUID for this Route Partition. Nullable.</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
						<xsd:element name="newTimeScheduleName" type="axl:String50"/>
					</xsd:choice>
					<xsd:element name="useOriginatingDeviceTimeZone" type="xsd:boolean" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>Not nullable.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="timeZone" type="axl:XTimeZone" minOccurs="0"/>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="updateRoutePartition" type="axlapi:UpdateRoutePartitionReq"/>
	<xsd:element name="updateRoutePartitionResponse" type="axlapi:StandardResponse"/>
	<xsd:complexType name="RemoveRoutePartitionReq">
		<xsd:annotation>
			<xsd:documentation>Removes the specified route partition from the database.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIRequest">
				<xsd:choice>
					<xsd:element name="partitionId" type="axl:XUUID" nillable="false">
						<xsd:annotation>
							<xsd:documentation>The GUID of the route partition to be removed.  Not nullable.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="partitionName" type="xsd:string" nillable="false">
						<xsd:annotation>
							<xsd:documentation>The name of the route partition to be removed.  Not nullable.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
				</xsd:choice>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="removeRoutePartition" type="axlapi:RemoveRoutePartitionReq"/>
	<xsd:element name="removeRoutePartitionResponse" type="axlapi:StandardResponse"/>
	<xsd:complexType name="GetRoutePartitionReq">
		<xsd:annotation>
			<xsd:documentation>Retrieves the specified route partition from the database.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIRequest">
				<xsd:choice>
					<xsd:element name="partitionId" type="axl:XUUID" nillable="false">
						<xsd:annotation>
							<xsd:documentation>The GUID of the route partition to be retrieved.  Not nullable.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="partitionName" type="xsd:string" nillable="false">
						<xsd:annotation>
							<xsd:documentation>The name of the route partition to be removed.  Not nullable.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
				</xsd:choice>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="getRoutePartition" type="axlapi:GetRoutePartitionReq"/>
	<xsd:complexType name="GetRoutePartitionRes">
		<xsd:annotation>
			<xsd:documentation>Contains the route partition that was specified by the request.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIResponse">
				<xsd:sequence>
					<xsd:element name="return">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="routePartition" type="axl:XRoutePartition"/>
							</xsd:sequence>
						</xsd:complexType>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="getRoutePartitionResponse" type="axlapi:GetRoutePartitionRes"/>
	<xsd:element name="getCSS" type="axlapi:NameAndGUIDRequest"/>
	<xsd:complexType name="GetCSSRes">
		<xsd:annotation>
			<xsd:documentation>Contains the calling search space that was specified by the request.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIResponse">
				<xsd:sequence>
					<xsd:element name="return">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="callingSearchSpace" type="axl:XCallingSearchSpace"/>
							</xsd:sequence>
						</xsd:complexType>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="getCSSResponse" type="axlapi:GetCSSRes"/>
	<xsd:element name="removeCSS" type="axlapi:NameAndGUIDRequest"/>
	<xsd:element name="removeCSSResponse" type="axlapi:StandardResponse"/>
	<xsd:complexType name="AddCSSReq">
		<xsd:annotation>
			<xsd:documentation>Adds a new Calling Search Space to the database.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIRequest">
				<xsd:sequence>
					<xsd:element name="newCSS" type="axl:XCallingSearchSpace" nillable="false">
						<xsd:annotation>
							<xsd:documentation>The calling search space to be added.  Not nullable.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="addCSS" type="axlapi:AddCSSReq"/>
	<xsd:element name="addCSSResponse" type="axlapi:StandardResponse"/>
	<xsd:complexType name="UpdateCSSReq">
		<xsd:annotation>
			<xsd:documentation>Updates an existing Calling Search Space in the database.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIRequest">
				<xsd:sequence>
					<xsd:choice>
						<xsd:element name="name" type="xsd:string" nillable="false">
							<xsd:annotation>
								<xsd:documentation>The name of the calling search space to be modified.  Not nullable.</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
						<xsd:element name="uuid" type="axl:XUUID" nillable="false">
							<xsd:annotation>
								<xsd:documentation>The GUID of the calling search space to be modified.  Not nullable.</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
					</xsd:choice>
					<xsd:element name="newName" type="xsd:string" nillable="false" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>The new name for this calling search space.  Not nullable.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="description" type="xsd:string" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>The new description for this calling search space.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="members" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>The new members of this calling search space.  If "members" is present, then all current members of this calling search space are removed and replaced by the "member" sub-elements.  Nullable.</xsd:documentation>
						</xsd:annotation>
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="member" type="axl:XCallingSearchSpaceMember" minOccurs="0" maxOccurs="unbounded"/>
							</xsd:sequence>
						</xsd:complexType>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="updateCSS" type="axlapi:UpdateCSSReq"/>
	<xsd:element name="updateCSSResponse" type="axlapi:StandardResponse"/>
	<xsd:complexType name="UpdateNumPlanPattern" abstract="true">
		<xsd:annotation>
			<xsd:documentation>Abstract</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:GetNumPlanPattern"/>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="GetNumPlanPattern" abstract="true">
		<xsd:annotation>
			<xsd:documentation>Abstract</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIRequest">
				<xsd:sequence>
					<xsd:choice>
						<xsd:element name="uuid" type="axl:XUUID"/>
						<xsd:sequence>
							<xsd:element name="pattern" type="xsd:string"/>
							<xsd:choice>
								<xsd:element name="routePartitionId" type="axl:XUUID"/>
								<xsd:element name="routePartitionName" type="axl:String50"/>
							</xsd:choice>
							<xsd:choice>
								<xsd:annotation>
									<xsd:documentation>Some NumPlans do not require a Route Filter, thus these elements can be null.</xsd:documentation>
								</xsd:annotation>
								<xsd:element name="routeFilterId" type="axl:XUUID"/>
								<xsd:element name="routeFilterName" type="axl:String50"/>
							</xsd:choice>
						</xsd:sequence>
					</xsd:choice>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="GetCallPickupGroup" abstract="true">
		<xsd:annotation>
			<xsd:documentation>Abstract</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIRequest">
				<xsd:sequence>
					<xsd:choice>
						<xsd:element name="uuid" type="axl:XUUID">
							<xsd:annotation>
								<xsd:documentation>This is the uuid of CallPickupGroup</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
						<xsd:element name="name" type="axl:String50"/>
						<xsd:sequence>
							<xsd:element name="pattern" type="xsd:string"/>
							<xsd:choice>
								<xsd:element name="routePartitionId" type="axl:XUUID"/>
								<xsd:element name="routePartitionName" type="axl:String50"/>
							</xsd:choice>
							<xsd:choice>
								<xsd:annotation>
									<xsd:documentation>Some NumPlans do not require a Route Filter, thus these elements can be null.</xsd:documentation>
								</xsd:annotation>
								<xsd:element name="routeFilterId" type="axl:XUUID"/>
								<xsd:element name="routeFilterName" type="axl:String50"/>
							</xsd:choice>
						</xsd:sequence>
					</xsd:choice>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="GetTransPatternReq">
		<xsd:annotation>
			<xsd:documentation>Retrieves the specified Translation Pattern from the database. Can specify the translation pattern with its GUID or by a combination of its pattern, route partition id, and route filter id.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:GetNumPlanPattern"/>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="getTransPattern" type="axlapi:GetTransPatternReq"/>
	<xsd:complexType name="GetTransPatternRes">
		<xsd:annotation>
			<xsd:documentation>Contains the translation pattern that was specified by the request.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIResponse">
				<xsd:sequence>
					<xsd:element name="return">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="pattern" type="axl:XNPTranslationPattern"/>
							</xsd:sequence>
						</xsd:complexType>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="getTransPatternResponse" type="axlapi:GetTransPatternRes"/>
	<xsd:complexType name="RemoveTransPatternReq">
		<xsd:annotation>
			<xsd:documentation>Removes the specified translation pattern from the database.  Can specify the translation pattern with its GUID or by a combination of its pattern, route partition id, and route filter id.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:GetNumPlanPattern"/>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="removeTransPattern" type="axlapi:RemoveTransPatternReq"/>
	<xsd:element name="removeTransPatternResponse" type="axlapi:StandardResponse"/>
	<xsd:complexType name="AddTransPatternReq">
		<xsd:annotation>
			<xsd:documentation>Adds a new translation pattern to the database.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIRequest">
				<xsd:sequence>
					<xsd:element name="newPattern" type="axl:XNPTranslationPattern">
						<xsd:annotation>
							<xsd:documentation>The new pattern to be added.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="addTransPattern" type="axlapi:AddTransPatternReq"/>
	<xsd:element name="addTransPatternResponse" type="axlapi:StandardResponse"/>
	<xsd:complexType name="UpdateTransPatternReq">
		<xsd:annotation>
			<xsd:documentation>Updates an existing translation pattern in the database.  Can specify the translation pattern with its GUID or by a combination of its pattern, route partition id, and route filter id.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:UpdateNumPlanPattern">
				<xsd:sequence>
					<xsd:element name="newPattern" type="xsd:string" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>The new pattern for this tranlsation pattern.  Nullable.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="description" type="axl:String50" minOccurs="0"/>
					<xsd:choice minOccurs="0">
						<xsd:element name="newRoutePartitionId" type="axl:XUUID">
							<xsd:annotation>
								<xsd:documentation>The GUID of the new route partition of this tranlsation pattern.  Nullable.</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
						<xsd:element name="newRoutePartitionName" type="axl:String50"/>
					</xsd:choice>
					<xsd:element name="blockEnable" type="xsd:boolean" nillable="false" minOccurs="0"/>
					<xsd:element name="calledPartyTransformationMask" type="xsd:string" minOccurs="0"/>
					<xsd:element name="callingPartyTransformationMask" type="xsd:string" minOccurs="0"/>
					<xsd:element name="useCallingPartyPhoneMask" type="axl:XStatus" nillable="false" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>Not nullable.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="callingPartyPrefixDigits" type="axl:String50" nillable="true" minOccurs="0"/>
					<xsd:element name="callingPartyPresentation" type="axl:XPresentationBit" nillable="false" minOccurs="0"/>
					<xsd:choice minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>Nullable.</xsd:documentation>
						</xsd:annotation>
						<xsd:element name="dialPlanId" type="axl:XUUID"/>
						<xsd:element name="dialPlanName" type="axl:String50"/>
					</xsd:choice>
					<xsd:choice minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>Nullable.</xsd:documentation>
						</xsd:annotation>
						<xsd:element name="digitDiscardInstructionId" type="axl:XUUID"/>
						<xsd:element name="digitDiscardInstructionName" type="axl:String50"/>
					</xsd:choice>
					<xsd:element name="messageWaiting" type="axl:XLampBlinkRate" minOccurs="0"/>
					<xsd:element name="networkLocation" type="axl:XNetworkLocation" minOccurs="0"/>
					<xsd:element name="patternUrgency" type="xsd:boolean" nillable="false" minOccurs="0"/>
					<xsd:element name="prefixDigitsOut" type="xsd:string" minOccurs="0"/>
					<xsd:choice minOccurs="0">
						<xsd:element name="newRouteFilterId" type="axl:XUUID">
							<xsd:annotation>
								<xsd:documentation>The GUID of the new route filter for this translation pattern.  Nullable.</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
						<xsd:element name="newRouteFilterName" type="axl:String50"/>
					</xsd:choice>
					<xsd:element name="callingLinePresentationBit" type="axl:XPresentationBit" nillable="false" minOccurs="0"/>
					<xsd:element name="callingNamePresentationBit" type="axl:XPresentationBit" nillable="false" minOccurs="0"/>
					<xsd:element name="connectedLinePresentationBit" type="axl:XPresentationBit" nillable="false" minOccurs="0"/>
					<xsd:element name="connectedNamePresentationBit" type="axl:XPresentationBit" nillable="false" minOccurs="0"/>
					<xsd:element name="supportOverlapSending" type="xsd:boolean" nillable="false" minOccurs="0"/>
					<xsd:element name="patternPrecedence" type="axl:XPatternPrecedence" nillable="false" minOccurs="0"/>
					<xsd:element name="releaseCause" type="axl:XReleaseCauseValue" nillable="false" minOccurs="0"/>
					<xsd:choice minOccurs="0">
						<xsd:element name="callingSearchSpaceId" type="axl:XUUID">
							<xsd:annotation>
								<xsd:documentation>The GUID of the new calling search space for this translation pattern.  Nullable.</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
						<xsd:element name="callingSearchSpaceName" type="axl:String50"/>
					</xsd:choice>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="updateTransPattern" type="axlapi:UpdateTransPatternReq"/>
	<xsd:element name="updateTransPatternResponse" type="axlapi:StandardResponse"/>
	<xsd:complexType name="GetRoutePatternReq">
		<xsd:annotation>
			<xsd:documentation>Retrieves the specified Route Pattern from the database.  Can specify the route pattern with its GUID or by a combination of its pattern, route partition id, and route filter id.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:GetNumPlanPattern"/>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="getRoutePattern" type="axlapi:GetRoutePatternReq"/>
	<xsd:complexType name="GetRoutePatternRes">
		<xsd:annotation>
			<xsd:documentation>Contains the route pattern that was specified by the request.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIResponse">
				<xsd:sequence>
					<xsd:element name="return">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="pattern" type="axl:XNPRoutePattern"/>
							</xsd:sequence>
						</xsd:complexType>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="getRoutePatternResponse" type="axlapi:GetRoutePatternRes"/>
	<xsd:complexType name="RemoveRoutePatternReq">
		<xsd:annotation>
			<xsd:documentation>Removes the specified route pattern from the database.  Can specify the route pattern with its GUID or by a combination of its pattern, route partition id, and route filter id.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:GetNumPlanPattern"/>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="removeRoutePattern" type="axlapi:RemoveRoutePatternReq"/>
	<xsd:element name="removeRoutePatternResponse" type="axlapi:StandardResponse"/>
	<xsd:complexType name="AddRoutePatternReq">
		<xsd:annotation>
			<xsd:documentation>Adds a new Route Pattern to the database.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIRequest">
				<xsd:sequence>
					<xsd:element name="newPattern" type="axl:XNPRoutePattern" nillable="false">
						<xsd:annotation>
							<xsd:documentation>The new route pattern to be added.  Not nullable.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="addRoutePattern" type="axlapi:AddRoutePatternReq"/>
	<xsd:element name="addRoutePatternResponse" type="axlapi:StandardResponse"/>
	<xsd:complexType name="UpdateRoutePatternReq">
		<xsd:annotation>
			<xsd:documentation>Updates an existing route pattern in the database.  The route pattern can be specified by its GUID, or by a combination if its pattern, route partition GUID, and route filter GUID.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:UpdateNumPlanPattern">
				<xsd:sequence>
					<xsd:element name="newPattern" type="xsd:string" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>The new pattern for this route pattern.  Nullable.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="description" type="axl:String50" minOccurs="0"/>
					<xsd:choice minOccurs="0">
						<xsd:element name="newRoutePartitionId" type="axl:XUUID" minOccurs="0">
							<xsd:annotation>
								<xsd:documentation>The GUID of the new route partition of this route pattern.  Nullable.</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
						<xsd:element name="newRoutePartitionName" type="axl:String50" minOccurs="0"/>
					</xsd:choice>
					<xsd:element name="blockEnable" type="xsd:boolean" nillable="false" minOccurs="0"/>
					<xsd:element name="calledPartyTransformationMask" type="xsd:string" minOccurs="0"/>
					<xsd:element name="callingPartyTransformationMask" type="xsd:string" minOccurs="0"/>
					<xsd:element name="useCallingPartyPhoneMask" type="axl:XStatus" nillable="false" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>Not nullable.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="callingPartyPrefixDigits" type="axl:String50" nillable="true" minOccurs="0"/>
					<xsd:choice minOccurs="0">
						<xsd:element name="dialPlanId" type="axl:XUUID" minOccurs="0"/>
						<xsd:element name="dialPlanName" type="axl:String50" minOccurs="0"/>
					</xsd:choice>
					<xsd:choice minOccurs="0">
						<xsd:element name="digitDiscardInstructionName" type="axl:String50" minOccurs="0"/>
						<xsd:element name="digitDiscardInstructionId" type="axl:XUUID" minOccurs="0"/>
					</xsd:choice>
					<xsd:element name="messageWaiting" type="axl:XLampBlinkRate" minOccurs="0"/>
					<xsd:element name="networkLocation" type="axl:XNetworkLocation" minOccurs="0"/>
					<xsd:element name="patternUrgency" type="xsd:boolean" nillable="false" minOccurs="0"/>
					<xsd:element name="prefixDigitsOut" type="xsd:string" minOccurs="0"/>
					<xsd:choice minOccurs="0">
						<xsd:element name="newRouteFilterId" type="axl:XUUID" minOccurs="0">
							<xsd:annotation>
								<xsd:documentation>The GUID of the new route filter for this route pattern.  Nullable.</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
						<xsd:element name="newRouteFilterName" type="axl:String50" minOccurs="0"/>
					</xsd:choice>
					<xsd:element name="callingLinePresentationBit" type="axl:XPresentationBit" nillable="false" minOccurs="0"/>
					<xsd:element name="callingNamePresentationBit" type="axl:XPresentationBit" nillable="false" minOccurs="0"/>
					<xsd:element name="connectedLinePresentationBit" type="axl:XPresentationBit" nillable="false" minOccurs="0"/>
					<xsd:element name="connectedNamePresentationBit" type="axl:XPresentationBit" nillable="false" minOccurs="0"/>
					<xsd:element name="supportOverlapSending" type="xsd:boolean" nillable="false" minOccurs="0"/>
					<xsd:element name="patternPrecedence" type="axl:XPatternPrecedence" nillable="false" minOccurs="0"/>
					<xsd:element name="releaseCause" type="axl:XReleaseCauseValue" nillable="false" minOccurs="0"/>
					<xsd:element name="allowDeviceOverride" minOccurs="0"/>
					<xsd:element name="provideOutsideDialtone" minOccurs="0"/>
					<xsd:element name="destination" nillable="false" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>The new destination for this route pattern. Can be a gateway or a route list.  Not nullable.</xsd:documentation>
						</xsd:annotation>
						<xsd:complexType>
							<xsd:choice>
								<xsd:sequence>
									<xsd:choice>
										<xsd:element name="gateway" type="axl:XDevice"/>
										<xsd:element name="gatewayName" type="xsd:string"/>
									</xsd:choice>
								</xsd:sequence>
								<xsd:sequence>
									<xsd:choice>
										<xsd:element name="routeList" type="axl:XRouteList"/>
										<xsd:element name="routeListName" type="xsd:string"/>
									</xsd:choice>
								</xsd:sequence>
							</xsd:choice>
						</xsd:complexType>
					</xsd:element>
					<xsd:element name="authorizationCodeRequired" type="xsd:boolean" nillable="false" minOccurs="0"/>
					<xsd:element name="authorizationLevelRequired" type="xsd:nonNegativeInteger" nillable="false" minOccurs="0"/>
					<xsd:element name="clientCodeRequired" type="xsd:boolean" nillable="false" minOccurs="0"/>
					<xsd:element name="withTag" type="axl:String50" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>The new NSF Tag.  Nullable.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="withValueClause" type="axl:String255" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>The new NSF Value Clause.  Nullable.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="updateRoutePattern" type="axlapi:UpdateRoutePatternReq"/>
	<xsd:element name="updateRoutePatternResponse" type="axlapi:StandardResponse"/>
	<xsd:complexType name="GetHuntPilotReq">
		<xsd:annotation>
			<xsd:documentation>Retrieves the specified Hunt Pilot from the database.  Can specify the hunt pilot with its GUID or by a combination of its pattern, route partition id, and route filter id.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:GetNumPlanPattern"/>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="getHuntPilot" type="axlapi:GetHuntPilotReq"/>
	<xsd:complexType name="GetHuntPilotRes">
		<xsd:annotation>
			<xsd:documentation>Contains the hunt pilot that was specified by the request.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIResponse">
				<xsd:sequence>
					<xsd:element name="return">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="pattern" type="axl:XNPHuntPilot"/>
							</xsd:sequence>
						</xsd:complexType>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="getHuntPilotResponse" type="axlapi:GetHuntPilotRes"/>
	<xsd:complexType name="RemoveHuntPilotReq">
		<xsd:annotation>
			<xsd:documentation>Removes the specified hunt pilot from the database.  Can specify the hunt pilot with its GUID or by a combination of its pattern, route partition id, and route filter id.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:GetNumPlanPattern"/>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="removeHuntPilot" type="axlapi:RemoveHuntPilotReq"/>
	<xsd:element name="removeHuntPilotResponse" type="axlapi:StandardResponse"/>
	<xsd:complexType name="AddHuntPilotReq">
		<xsd:annotation>
			<xsd:documentation>Adds a new Hunt PIlot to the database.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIRequest">
				<xsd:sequence>
					<xsd:element name="newPattern" type="axl:XNPHuntPilot" nillable="false">
						<xsd:annotation>
							<xsd:documentation>The new hunt pilot to be added.  Not nullable.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="addHuntPilot" type="axlapi:AddHuntPilotReq"/>
	<xsd:element name="addHuntPilotResponse" type="axlapi:StandardResponse"/>
	<xsd:complexType name="UpdateHuntPilotReq">
		<xsd:annotation>
			<xsd:documentation>Updates an existing hunt pilot in the database.  The hunt pilot can be specified by its GUID, or by a combination if its pattern, route partition GUID, and route filter GUID.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:UpdateNumPlanPattern">
				<xsd:sequence>
					<xsd:element name="newPattern" type="xsd:string" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>The new pattern for this hunt pilot.  Nullable.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="description" type="axl:String50" minOccurs="0"/>
					<xsd:choice minOccurs="0">
						<xsd:element name="newRoutePartitionId" type="axl:XUUID" minOccurs="0">
							<xsd:annotation>
								<xsd:documentation>The GUID of the new Route Partition of this hunt pilot.  Nullable.</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
						<xsd:element name="newRoutePartitionName" type="axl:String50" minOccurs="0"/>
					</xsd:choice>
					<xsd:element name="blockEnable" type="xsd:boolean" nillable="false" minOccurs="0"/>
					<xsd:element name="calledPartyTransformationMask" type="xsd:string" minOccurs="0"/>
					<xsd:element name="callingPartyTransformationMask" type="xsd:string" minOccurs="0"/>
					<xsd:element name="useCallingPartyPhoneMask" type="axl:XStatus" nillable="false" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>Not nullable.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="callingPartyPrefixDigits" type="axl:String50" nillable="true" minOccurs="0"/>
					<xsd:choice minOccurs="0">
						<xsd:element name="dialPlanId" type="axl:XUUID" minOccurs="0"/>
						<xsd:element name="dialPlanName" type="axl:String50" minOccurs="0"/>
					</xsd:choice>
					<xsd:choice minOccurs="0">
						<xsd:element name="digitDiscardInstructionName" type="axl:String50" minOccurs="0"/>
						<xsd:element name="digitDiscardInstructionId" type="axl:XUUID" minOccurs="0"/>
					</xsd:choice>
					<xsd:element name="messageWaiting" type="axl:XLampBlinkRate" minOccurs="0"/>
					<xsd:element name="networkLocation" type="axl:XNetworkLocation" minOccurs="0"/>
					<xsd:element name="patternUrgency" type="xsd:boolean" nillable="false" minOccurs="0"/>
					<xsd:element name="prefixDigitsOut" type="xsd:string" minOccurs="0"/>
					<xsd:choice minOccurs="0">
						<xsd:element name="newRouteFilterId" type="axl:XUUID" minOccurs="0">
							<xsd:annotation>
								<xsd:documentation>The GUID of the new route filter for this route pattern.  Nullable.</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
						<xsd:element name="newRouteFilterName" type="axl:String50" minOccurs="0"/>
					</xsd:choice>
					<xsd:element name="callingLinePresentationBit" type="axl:XPresentationBit" nillable="false" minOccurs="0"/>
					<xsd:element name="callingNamePresentationBit" type="axl:XPresentationBit" nillable="false" minOccurs="0"/>
					<xsd:element name="connectedLinePresentationBit" type="axl:XPresentationBit" nillable="false" minOccurs="0"/>
					<xsd:element name="connectedNamePresentationBit" type="axl:XPresentationBit" nillable="false" minOccurs="0"/>
					<xsd:element name="patternPrecedence" type="axl:XPatternPrecedence" nillable="false" minOccurs="0"/>
					<xsd:element name="releaseCause" type="axl:XReleaseCauseValue" nillable="false" minOccurs="0"/>
					<xsd:element name="destination" nillable="false" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>The new destination for this hunt pilot. Can only be a hunt list.  Not nullable.</xsd:documentation>
						</xsd:annotation>
						<xsd:complexType>
							<xsd:sequence>
								<xsd:choice>
									<xsd:element name="huntList" type="axl:XHuntList"/>
									<xsd:element name="huntListName" type="xsd:string"/>
								</xsd:choice>
							</xsd:sequence>
						</xsd:complexType>
					</xsd:element>
					<xsd:element name="ForwardHuntBusy" type="axl:XHuntForwardInfo" minOccurs="0"/>
					<xsd:element name="ForwardHuntNoAnswer" type="axl:XHuntForwardInfo" minOccurs="0"/>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="updateHuntPilot" type="axlapi:UpdateHuntPilotReq"/>
	<xsd:element name="updateHuntPilotResponse" type="axlapi:StandardResponse"/>
	<xsd:complexType name="AddLineGroupReq">
		<xsd:annotation>
			<xsd:documentation>Adds a new Line Group to the database.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIRequest">
				<xsd:sequence>
					<xsd:element name="lineGroup" type="axl:XLineGroup"/>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="addLineGroup" type="axlapi:AddLineGroupReq"/>
	<xsd:element name="addLineGroupResponse" type="axlapi:StandardResponse"/>
	<xsd:complexType name="UpdateLineGroupReq">
		<xsd:annotation>
			<xsd:documentation>Updates an existing line group in the database.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIRequest">
				<xsd:sequence>
					<xsd:choice>
						<xsd:element name="name" type="xsd:string" nillable="false"/>
						<xsd:element name="uuid" type="axl:XUUID" nillable="false"/>
					</xsd:choice>
					<xsd:element name="newName" type="xsd:string" nillable="false" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>The new name for this line group.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="distributionAlgorithm" type="axl:XDistributeAlgorithm" nillable="false"/>
					<xsd:element name="rnaReversionTimeOut" type="xsd:nonNegativeInteger" default="10" nillable="false"/>
					<xsd:element name="huntAlgorithmNoAnswer" type="axl:XHuntAlgorithm" nillable="false"/>
					<xsd:element name="huntAlgorithmBusy" type="axl:XHuntAlgorithm" nillable="false"/>
					<xsd:element name="huntAlgorithmNotAvailable" type="axl:XHuntAlgorithm" nillable="false"/>
					<xsd:element name="members" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>This new line group members for this route group.  All of the line group's current members are replaced by the "member" sub-elements specified.</xsd:documentation>
						</xsd:annotation>
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="member" type="axl:XLineGroupMember" maxOccurs="unbounded">
									<xsd:annotation>
										<xsd:documentation>A list of the new members of this Line group.</xsd:documentation>
									</xsd:annotation>
								</xsd:element>
							</xsd:sequence>
						</xsd:complexType>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="updateLineGroup" type="axlapi:UpdateLineGroupReq"/>
	<xsd:element name="updateLineGroupResponse" type="axlapi:StandardResponse"/>
	<xsd:element name="getLineGroup" type="axlapi:NameAndGUIDRequest"/>
	<xsd:complexType name="GetLineGroupRes">
		<xsd:annotation>
			<xsd:documentation>Contains the line group that was specified by the request.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIResponse">
				<xsd:sequence>
					<xsd:element name="return">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="lineGroup" type="axl:XLineGroup"/>
							</xsd:sequence>
						</xsd:complexType>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="getLineGroupResponse" type="axlapi:GetLineGroupRes"/>
	<xsd:element name="removeLineGroup" type="axlapi:NameAndGUIDRequest"/>
	<xsd:element name="removeLineGroupResponse" type="axlapi:StandardResponse"/>
	<xsd:complexType name="AddRouteGroupReq">
		<xsd:annotation>
			<xsd:documentation>Adds a new Route Group to the database.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIRequest">
				<xsd:sequence>
					<xsd:element name="routeGroup" type="axl:XRouteGroup"/>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="addRouteGroup" type="axlapi:AddRouteGroupReq"/>
	<xsd:element name="addRouteGroupResponse" type="axlapi:StandardResponse"/>
	<xsd:complexType name="UpdateRouteGroupReq">
		<xsd:annotation>
			<xsd:documentation>Updates an existing route group in the database.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIRequest">
				<xsd:sequence>
					<xsd:choice>
						<xsd:element name="name" type="xsd:string" nillable="false"/>
						<xsd:element name="uuid" type="axl:XUUID" nillable="false"/>
					</xsd:choice>
					<xsd:element name="newName" type="xsd:string" nillable="false" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>The new name for this route group.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="members" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>This new route group members for this route group.  All of the route group's current members are replaced by the "member" sub-elements specified.</xsd:documentation>
						</xsd:annotation>
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="member" type="axl:XRouteGroupMember" maxOccurs="unbounded">
									<xsd:annotation>
										<xsd:documentation>A list of the new members of this route group.</xsd:documentation>
									</xsd:annotation>
								</xsd:element>
							</xsd:sequence>
						</xsd:complexType>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="updateRouteGroup" type="axlapi:UpdateRouteGroupReq"/>
	<xsd:element name="updateRouteGroupResponse" type="axlapi:StandardResponse"/>
	<xsd:element name="getRouteGroup" type="axlapi:NameAndGUIDRequest"/>
	<xsd:complexType name="GetRouteGroupRes">
		<xsd:annotation>
			<xsd:documentation>Contains the route group that was specified by the request.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIResponse">
				<xsd:sequence>
					<xsd:element name="return">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="routeGroup" type="axl:XRouteGroup"/>
							</xsd:sequence>
						</xsd:complexType>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="getRouteGroupResponse" type="axlapi:GetRouteGroupRes"/>
	<xsd:element name="removeRouteGroup" type="axlapi:NameAndGUIDRequest"/>
	<xsd:element name="removeRouteGroupResponse" type="axlapi:StandardResponse"/>
	<xsd:complexType name="AddRouteListReq">
		<xsd:annotation>
			<xsd:documentation>Add a new Route List to the database.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIRequest">
				<xsd:sequence>
					<xsd:element name="routeList" type="axl:XRouteList"/>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="addRouteList" type="axlapi:AddRouteListReq"/>
	<xsd:element name="addRouteListResponse" type="axlapi:StandardResponse"/>
	<xsd:complexType name="UpdateRouteListReq">
		<xsd:annotation>
			<xsd:documentation>Updates an existing Route List in the database.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIRequest">
				<xsd:sequence>
					<xsd:choice>
						<xsd:element name="name" type="axl:String50" nillable="false">
							<xsd:annotation>
								<xsd:documentation>The name of the route list to modify (from the Device table).</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
						<xsd:element name="uuid" type="axl:XUUID" nillable="false">
							<xsd:annotation>
								<xsd:documentation>The pkid of the route list to modify (from the Device table).</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
					</xsd:choice>
					<xsd:element name="newName" type="axl:String50" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>The new name for this Route List. Not nullable.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="description" type="xsd:string" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>The new description for this Route List.  Nullable.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:choice minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>Not nullable.</xsd:documentation>
						</xsd:annotation>
						<xsd:element name="callManagerGroupName" type="axl:String50" nillable="false"/>
						<xsd:element name="callManagerGroup" type="axl:XCallManagerGroup" nillable="false">
							<xsd:annotation>
								<xsd:documentation>Only the uuid attribute is read by the AXL API.</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
					</xsd:choice>
					<xsd:element name="routeListEnabled" type="xsd:boolean" nillable="false" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>Not nullable.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="members" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>The new list of route groups that are part of this route list. A route list must have at least one member.</xsd:documentation>
						</xsd:annotation>
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="member" type="axl:XRouteListMember" maxOccurs="unbounded"/>
							</xsd:sequence>
						</xsd:complexType>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="updateRouteList" type="axlapi:UpdateRouteListReq"/>
	<xsd:element name="updateRouteListResponse" type="axlapi:StandardResponse"/>
	<xsd:element name="getRouteList" type="axlapi:NameAndGUIDRequest"/>
	<xsd:complexType name="GetRouteListRes">
		<xsd:annotation>
			<xsd:documentation>Contains the Route List that was specified by the request.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIResponse">
				<xsd:sequence>
					<xsd:element name="return">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="routeList" type="axl:XRouteList"/>
							</xsd:sequence>
						</xsd:complexType>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="getRouteListResponse" type="axlapi:GetRouteListRes"/>
	<xsd:element name="removeRouteList" type="axlapi:NameAndGUIDRequest"/>
	<xsd:element name="removeRouteListResponse" type="axlapi:StandardResponse"/>
	<xsd:complexType name="AddHuntListReq">
		<xsd:annotation>
			<xsd:documentation>Add a new Hunt List to the database.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIRequest">
				<xsd:sequence>
					<xsd:element name="huntList" type="axl:XHuntList"/>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="addHuntList" type="axlapi:AddHuntListReq"/>
	<xsd:element name="addHuntListResponse" type="axlapi:StandardResponse"/>
	<xsd:complexType name="UpdateHuntListReq">
		<xsd:annotation>
			<xsd:documentation>Updates an existing Hunt List in the database.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIRequest">
				<xsd:sequence>
					<xsd:choice>
						<xsd:element name="name" type="axl:String50" nillable="false">
							<xsd:annotation>
								<xsd:documentation>The name of the hunt list to modify (from the Device table).</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
						<xsd:element name="uuid" type="axl:XUUID" nillable="false">
							<xsd:annotation>
								<xsd:documentation>The pkid of the hunt list to modify (from the Device table).</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
					</xsd:choice>
					<xsd:element name="newName" type="axl:String50" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>The new name for this Hunt List. Not nullable.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="description" type="xsd:string" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>The new description for this Hunt List.  Nullable.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:choice minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>Not nullable.</xsd:documentation>
						</xsd:annotation>
						<xsd:element name="callManagerGroupName" type="axl:String50" nillable="false"/>
						<xsd:element name="callManagerGroup" type="axl:XCallManagerGroup" nillable="false">
							<xsd:annotation>
								<xsd:documentation>Only the uuid attribute is read by the AXL API.</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
					</xsd:choice>
					<xsd:element name="routeListEnabled" type="xsd:boolean" nillable="false" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>Not nullable.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="members" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>The new list of line groups that are part of this route list. A route list must have at least one member.</xsd:documentation>
						</xsd:annotation>
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="member" type="axl:XHuntListMember" maxOccurs="unbounded"/>
							</xsd:sequence>
						</xsd:complexType>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="updateHuntList" type="axlapi:UpdateHuntListReq"/>
	<xsd:element name="updateHuntListResponse" type="axlapi:StandardResponse"/>
	<xsd:element name="getHuntList" type="axlapi:NameAndGUIDRequest"/>
	<xsd:complexType name="GetHuntListRes">
		<xsd:annotation>
			<xsd:documentation>Contains the Hunt List that was specified by the request.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIResponse">
				<xsd:sequence>
					<xsd:element name="return">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="huntList" type="axl:XHuntList"/>
							</xsd:sequence>
						</xsd:complexType>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="getHuntListResponse" type="axlapi:GetHuntListRes"/>
	<xsd:element name="removeHuntList" type="axlapi:NameAndGUIDRequest"/>
	<xsd:element name="removeHuntListResponse" type="axlapi:StandardResponse"/>
	<xsd:complexType name="AddCTIRoutePointReq">
		<xsd:annotation>
			<xsd:documentation>Adds a new CTI Route Point to the database.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIRequest">
				<xsd:sequence>
					<xsd:element name="routePoint" type="axl:XCTIRoutePoint"/>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="addCTIRoutePoint" type="axlapi:AddCTIRoutePointReq"/>
	<xsd:element name="addCTIRoutePointResponse" type="axlapi:StandardResponse"/>
	<xsd:complexType name="UpdateCTIRoutePointReq">
		<xsd:annotation>
			<xsd:documentation>Modifies an existing CTI Route Point in the database.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIRequest">
				<xsd:sequence>
					<xsd:choice>
						<xsd:element name="name" type="axl:Name128" nillable="false"/>
						<xsd:element name="uuid" type="axl:XUUID" nillable="false"/>
					</xsd:choice>
					<xsd:element name="newName" type="axl:Name128" nillable="false" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>The new name of this Route Point.  Not nullable.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="description" type="axl:String128" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>The new description for this Route Point.  Nullable.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:choice minOccurs="0">
						<xsd:element name="callingSearchSpaceId" type="axl:XUUID">
							<xsd:annotation>
								<xsd:documentation>The new Calling Search Space for this Route Point.  Nullable.</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
						<xsd:element name="callingSearchSpaceName" type="axl:Name128">
							<xsd:annotation>
								<xsd:documentation>Nullable.</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
					</xsd:choice>
					<xsd:choice minOccurs="0">
						<xsd:element name="devicePoolId" type="axl:XUUID" nillable="false">
							<xsd:annotation>
								<xsd:documentation>The new Device Pool for this Route Point. Not nullable.</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
						<xsd:element name="devicePoolName" type="axl:Name128">
							<xsd:annotation>
								<xsd:documentation>Not nullable.</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
					</xsd:choice>
					<xsd:choice minOccurs="0">
						<xsd:element name="locationId" type="axl:XUUID">
							<xsd:annotation>
								<xsd:documentation>The new location for this Route Point.  Nullable.</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
						<xsd:element name="locationName" type="axl:String50">
							<xsd:annotation>
								<xsd:documentation>Nullable.</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
					</xsd:choice>
					<xsd:element name="lines" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>The new lines for this phone.  If this element is null, then all lines are removed from this phone.  Note:  If the lines element is present, then all existing lines are removed and replaced with the sub-elements described by the line and lineIdentifier elements.  All directory numbers specified must already exist in the database.</xsd:documentation>
						</xsd:annotation>
						<xsd:complexType>
							<xsd:choice>
								<xsd:element name="line" type="axl:XLine" maxOccurs="unbounded"/>
								<xsd:element name="lineIdentifier" type="axl:XNumplanIdentifier" maxOccurs="unbounded"/>
							</xsd:choice>
						</xsd:complexType>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="updateCTIRoutePoint" type="axlapi:UpdateCTIRoutePointReq"/>
	<xsd:element name="updateCTIRoutePointResponse" type="axlapi:StandardResponse"/>
	<xsd:element name="getCTIRoutePoint" type="axlapi:NameAndGUIDRequest"/>
	<xsd:complexType name="GetCTIRoutePointRes">
		<xsd:annotation>
			<xsd:documentation>Contains the CTI Route Point that was specified by the request.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIResponse">
				<xsd:sequence>
					<xsd:element name="return">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="routePoint" type="axl:XCTIRoutePoint"/>
							</xsd:sequence>
						</xsd:complexType>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="getCTIRoutePointResponse" type="axlapi:GetCTIRoutePointRes"/>
	<xsd:element name="removeCTIRoutePoint" type="axlapi:NameAndGUIDRequest"/>
	<xsd:element name="removeCTIRoutePointResponse" type="axlapi:StandardResponse"/>
	<xsd:complexType name="AddDialPlanReq">
		<xsd:annotation>
			<xsd:documentation>Adds a new Dial Plan to the database.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIRequest">
				<xsd:sequence>
					<xsd:element name="dialPlan" type="axl:XDialPlan"/>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<!--<xsd:element name="addDialPlan" type="axlapi:AddDialPlanReq">
		<xsd:annotation>
			<xsd:documentation>This API call is experimental and not supported in normal operation.</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<xsd:element name="addDialPlanResponse" type="axlapi:StandardResponse"/>-->
	<xsd:complexType name="UpdateDialPlanReq">
		<xsd:annotation>
			<xsd:documentation>Modifies an existing Dial Plan in the database.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:NameAndGUIDRequest">
				<xsd:sequence>
					<xsd:element name="newName" type="axl:String50" nillable="false" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>The new name for this Dial Plan.  Not nullable.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="description" type="axl:String50" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>The new description for this Dial Plan.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<!--<xsd:element name="updateDialPlan" type="axlapi:UpdateDialPlanReq">
		<xsd:annotation>
			<xsd:documentation>This API call is experimental and not supported in normal operation.</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<xsd:element name="updateDialPlanResponse" type="axlapi:StandardResponse"/>-->
	<xsd:element name="getDialPlan" type="axlapi:NameAndGUIDRequest"/>
	<xsd:complexType name="GetDialPlanRes">
		<xsd:annotation>
			<xsd:documentation>Contains the Dial Plan that was specified by the request.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIResponse">
				<xsd:sequence>
					<xsd:element name="return">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="dialPlan" type="axl:XDialPlan"/>
							</xsd:sequence>
						</xsd:complexType>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="getDialPlanResponse" type="axlapi:GetDialPlanRes"/>
	<!--<xsd:element name="removeDialPlan" type="axlapi:NameAndGUIDRequest">
		<xsd:annotation>
			<xsd:documentation>This API call is experimental and not supported in normal operation.</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<xsd:element name="removeDialPlanResponse" type="axlapi:StandardResponse"/>-->
	<xsd:complexType name="AddDialPlanTagReq">
		<xsd:annotation>
			<xsd:documentation>Adds a new Dial Plan Tag to the databse</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIRequest">
				<xsd:sequence>
					<xsd:element name="dialPlanTag" type="axl:XDialPlanTag" nillable="false"/>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<!--<xsd:element name="addDialPlanTag" type="axlapi:AddDialPlanTagReq">
		<xsd:annotation>
			<xsd:documentation>This API call is experimental and not supported in normal operation.</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<xsd:element name="addDialPlanTagResponse" type="axlapi:StandardResponse"/>-->
	<xsd:complexType name="UpdateDialPlanTagReq">
		<xsd:annotation>
			<xsd:documentation>Modifies an existing Dial Plan Tag in the database.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:NameAndGUIDRequest">
				<xsd:sequence>
					<xsd:element name="newName" type="axl:Name50" nillable="false" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>The name (or "tag" in the database) for this Dial Plan Tag. Not nullable.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:choice minOccurs="0">
						<xsd:element name="dialPlan" type="axl:XDialPlan" nillable="false">
							<xsd:annotation>
								<xsd:documentation>The new Dial Plan for this Dial Plan Tag. Note that the "uuid" attribute is used. Not nullable.</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
						<xsd:element name="dialPlanName" type="axl:String50">
							<xsd:annotation>
								<xsd:documentation>Not nullable.</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
					</xsd:choice>
					<xsd:element name="operator" type="axl:XOperator" nillable="false" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>The new Operator type for this Dial Plan Tag. Not nullable.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="suppressFromRouteFilter" type="xsd:boolean" nillable="false" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>The new boolean value for the suppressFromRouteFilter property of this Dial Plan Tag.  Not nullable.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<!--<xsd:element name="updateDialPlanTag" type="axlapi:UpdateDialPlanTagReq">
		<xsd:annotation>
			<xsd:documentation>This API call is experimental and not supported in normal operation.</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<xsd:element name="updateDialPlanTagResponse" type="axlapi:StandardResponse"/>-->
	<xsd:element name="getDialPlanTag">
		<xsd:complexType>
			<xsd:sequence>
				<xsd:choice>
					<xsd:sequence>
						<xsd:element name="name"/>
						<xsd:sequence>
							<xsd:choice>
								<xsd:element name="dialPlanUuid"/>
								<xsd:element name="dialPlanName"/>
							</xsd:choice>
						</xsd:sequence>
					</xsd:sequence>
					<xsd:element name="uuid"/>
				</xsd:choice>
			</xsd:sequence>
		</xsd:complexType>
	</xsd:element>
	<xsd:complexType name="GetDialPlanTagRes">
		<xsd:annotation>
			<xsd:documentation>Contains the Dial Plan Tag that was specified by the request.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIResponse">
				<xsd:sequence>
					<xsd:element name="return">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="dialPlanTag" type="axl:XDialPlanTag"/>
							</xsd:sequence>
						</xsd:complexType>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="getDialPlanTagResponse" type="axlapi:GetDialPlanTagRes"/>
	<!--<xsd:element name="removeDialPlanTag" type="axlapi:NameAndGUIDRequest">
		<xsd:annotation>
			<xsd:documentation>This API call is experimental and not supported in normal operation.</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<xsd:element name="removeDialPlanTagResponse" type="axlapi:StandardResponse"/>-->
	<xsd:complexType name="AddCallParkReq">
		<xsd:annotation>
			<xsd:documentation>Adds a new Call Park num plan to the database.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIRequest">
				<xsd:sequence>
					<xsd:element name="callPark" type="axl:XNPCallPark" nillable="false"/>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="addCallPark" type="axlapi:AddCallParkReq"/>
	<xsd:element name="addCallParkResponse" type="axlapi:StandardResponse"/>
	<xsd:complexType name="UpdateCallParkReq">
		<xsd:annotation>
			<xsd:documentation>Modifies an existing Call Park num plan in the database.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:GetNumPlanPattern">
				<xsd:sequence>
					<xsd:element name="newPattern" type="xsd:string" nillable="false" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>The new directory number for this Call Park num plan.  Not Nullable.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="description" type="axl:String50" minOccurs="0"/>
					<xsd:choice minOccurs="0">
						<xsd:element name="newRoutePartitionId" type="axl:XUUID">
							<xsd:annotation>
								<xsd:documentation>The new Route Partition GUID for this Call Park num plan. Nullable.</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
						<xsd:element name="newRoutePartitionName" type="axl:String50"/>
					</xsd:choice>
					<xsd:choice minOccurs="0">
						<xsd:element name="callManagerId" type="axl:XUUID" nillable="false">
							<xsd:annotation>
								<xsd:documentation>The GUID of the new CallManager associated to this Call Park num plan.  Not Nullable.</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
						<xsd:element name="callManagerName" type="axl:String50">
							<xsd:annotation>
								<xsd:documentation>Not nullable.</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
					</xsd:choice>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="updateCallPark" type="axlapi:UpdateCallParkReq"/>
	<xsd:element name="updateCallParkResponse" type="axlapi:StandardResponse"/>
	<xsd:complexType name="GetCallParkReq">
		<xsd:annotation>
			<xsd:documentation>Retrieves the specified Call Park num plan from the database.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:GetNumPlanPattern"/>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="getCallPark" type="axlapi:GetCallParkReq"/>
	<xsd:complexType name="GetCallParkRes">
		<xsd:annotation>
			<xsd:documentation>Contains the Call Park num plan specified by the request.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIResponse">
				<xsd:sequence>
					<xsd:element name="return">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="callPark" type="axl:XNPCallPark"/>
							</xsd:sequence>
						</xsd:complexType>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="getCallParkResponse" type="axlapi:GetCallParkRes"/>
	<xsd:complexType name="RemoveCallParkReq">
		<xsd:annotation>
			<xsd:documentation>Removes the specified Call Park num plan from the database.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:GetNumPlanPattern"/>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="removeCallPark" type="axlapi:RemoveCallParkReq"/>
	<xsd:element name="removeCallParkResponse" type="axlapi:StandardResponse"/>
	<xsd:complexType name="AddCallPickupGroupReq">
		<xsd:annotation>
			<xsd:documentation>Adds a new Call Pickup Group to the database.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIRequest">
				<xsd:sequence>
					<xsd:element name="callPickup" type="axl:XNPCallPickupGroup"/>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="addCallPickupGroup" type="axlapi:AddCallPickupGroupReq"/>
	<xsd:element name="addCallPickupGroupResponse" type="axlapi:StandardResponse"/>
	<xsd:complexType name="UpdateCallPickupGroupReq">
		<xsd:annotation>
			<xsd:documentation>Modifies and existing Call Pickup Group in the database.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:GetCallPickupGroup">
				<xsd:sequence>
					<xsd:element name="newPattern" type="axl:XDirectoryNumber" minOccurs="0"/>
					<xsd:element name="description" type="axl:String50" minOccurs="0"/>
					<xsd:choice minOccurs="0">
						<xsd:element name="newRoutePartitionId" type="axl:XUUID"/>
						<xsd:element name="newRoutePartitionName" type="axl:String50"/>
					</xsd:choice>
					<xsd:element name="newName" type="axl:XDirectoryNumber" minOccurs="0"/>
					<xsd:element name="members" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>On Addition always the first member added is itself. Do not specify the first member as itself in an Add request . Also make sure that the priority always starts with 1. It will internally be taken care of during Addition and Updation.</xsd:documentation>
						</xsd:annotation>
						<xsd:complexType>
							<xsd:sequence minOccurs="0">
								<xsd:element name="member" type="axl:XPickupGroupMember" minOccurs="0" maxOccurs="unbounded">
									<xsd:annotation>
										<xsd:documentation>A list of the new members of this Pickup group.</xsd:documentation>
									</xsd:annotation>
								</xsd:element>
							</xsd:sequence>
						</xsd:complexType>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="updateCallPickupGroup" type="axlapi:UpdateCallPickupGroupReq"/>
	<xsd:element name="updateCallPickupGroupResponse" type="axlapi:StandardResponse"/>
	<xsd:complexType name="GetCallPickupGroupReq">
		<xsd:annotation>
			<xsd:documentation>Retrieves the specified Call Pickup Group from the database.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:GetCallPickupGroup"/>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="getCallPickupGroup" type="axlapi:GetCallPickupGroupReq"/>
	<xsd:complexType name="GetCallPickupGroupRes">
		<xsd:annotation>
			<xsd:documentation>Contains the Call Pickup Group specified by the request.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIResponse">
				<xsd:sequence>
					<xsd:element name="return">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="callPickup" type="axl:XNPCallPickupGroup"/>
							</xsd:sequence>
						</xsd:complexType>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="getCallPickupGroupResponse" type="axlapi:GetCallPickupGroupRes"/>
	<xsd:complexType name="RemoveCallPickupGroupReq">
		<xsd:annotation>
			<xsd:documentation>Removes the specified Call Pickup Group from the database.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:GetCallPickupGroup"/>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="removeCallPickupGroup" type="axlapi:RemoveCallPickupGroupReq"/>
	<xsd:element name="removeCallPickupGroupResponse" type="axlapi:StandardResponse"/>
	<xsd:complexType name="AddDDIReq">
		<xsd:annotation>
			<xsd:documentation>Adds a new Digit Discard Instruction to the database.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIRequest">
				<xsd:sequence>
					<xsd:element name="ddi" type="axl:XDigitDiscardInstruction"/>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<!--<xsd:element name="addDDI" type="axlapi:AddDDIReq">
		<xsd:annotation>
			<xsd:documentation>This API call is experimental and not supported in normal operation.</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<xsd:element name="addDDIResponse" type="axlapi:StandardResponse"/>-->
	<xsd:complexType name="UpdateDDIReq">
		<xsd:annotation>
			<xsd:documentation>Modifies and existing Digit Discard Instruction in the database.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:NameAndGUIDRequest">
				<xsd:sequence>
					<xsd:element name="newName" type="axl:Name50" nillable="false" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>The new name for this Digit Discard Instruction. Not nullable.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:choice minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>The GUID or name of the new Dial Plan for this Digit Discard Instruction.  Not nullable.</xsd:documentation>
						</xsd:annotation>
						<xsd:element name="dialPlanId" type="axl:XUUID" nillable="false"/>
						<xsd:element name="dialPlanName" type="axl:String50" nillable="false"/>
					</xsd:choice>
					<xsd:element name="members" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>The "members" element will contain the new list of members of this Digit Discard Instruction.  If the "members" element is present, any existing members are deleted and replaced by the new "member" elements.  Nullable.</xsd:documentation>
						</xsd:annotation>
						<xsd:complexType>
							<xsd:sequence minOccurs="0">
								<xsd:element name="member" type="axl:XDigitDiscardInstructionMember" maxOccurs="unbounded"/>
							</xsd:sequence>
						</xsd:complexType>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<!--<xsd:element name="updateDDI" type="axlapi:UpdateDDIReq">
		<xsd:annotation>
			<xsd:documentation>This API call is experimental and not supported in normal operation.</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<xsd:element name="updateDDIResponse" type="axlapi:StandardResponse"/>-->
	<xsd:element name="getDDI">
		<xsd:complexType>
			<xsd:sequence>
				<xsd:choice>
					<xsd:sequence>
						<xsd:element name="name"/>
						<xsd:sequence>
							<xsd:choice>
								<xsd:element name="dialPlanUuid"/>
								<xsd:element name="dialPlanName"/>
							</xsd:choice>
						</xsd:sequence>
					</xsd:sequence>
					<xsd:element name="uuid"/>
				</xsd:choice>
			</xsd:sequence>
		</xsd:complexType>
	</xsd:element>
	<xsd:complexType name="GetDDIRes">
		<xsd:annotation>
			<xsd:documentation>Contains the Digit Discard Instruction specified by the request.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIResponse">
				<xsd:sequence>
					<xsd:element name="return">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="ddi" type="axl:XDigitDiscardInstruction"/>
							</xsd:sequence>
						</xsd:complexType>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="getDDIResponse" type="axlapi:GetDDIRes"/>
	<!--<xsd:element name="removeDDI" type="axlapi:NameAndGUIDRequest">
		<xsd:annotation>
			<xsd:documentation>This API call is experimental and not supported in normal operation.</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<xsd:element name="removeDDIResponse" type="axlapi:StandardResponse"/>-->
	<xsd:complexType name="CreateAutogeneratedProfileReq">
		<xsd:annotation>
			<xsd:documentation>This method uses the specified phone to create an auto-generated device profile.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIRequest">
				<xsd:choice>
					<xsd:element name="phoneName" type="xsd:string" nillable="false">
						<xsd:annotation>
							<xsd:documentation>The name of the phone to use to create the profile.  Not nullable.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="phoneId" type="axl:XUUID">
						<xsd:annotation>
							<xsd:documentation>The GUID of the phone to use to create the profile.  Not nullable.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
				</xsd:choice>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="createAutogeneratedProfile" type="axlapi:CreateAutogeneratedProfileReq"/>
	<xsd:element name="createAutogeneratedProfileResponse" type="axlapi:StandardResponse"/>
	<xsd:complexType name="ListBySearchString">
		<xsd:annotation>
			<xsd:documentation>This abstract method is to be extended by the "list" methods.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIRequest">
				<xsd:sequence>
					<xsd:element name="searchString" type="xsd:string">
						<xsd:annotation>
							<xsd:documentation>The string to search for.  Can contain SQL wildcard characters.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="ListPhoneByNameReq">
		<xsd:annotation>
			<xsd:documentation>This method searches for all phones whose name matches the specified search string.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:ListBySearchString"/>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="listPhoneByName" type="axlapi:ListPhoneByNameReq"/>
	<xsd:complexType name="ListPhoneResponse">
		<xsd:annotation>
			<xsd:documentation>This response is returned by the listPhoneByXXX methods.  It includes the phone GUID, name, and product.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIResponse">
				<xsd:sequence>
					<xsd:element name="return">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="phone" minOccurs="0" maxOccurs="unbounded">
									<xsd:complexType>
										<xsd:sequence>
											<xsd:element name="name" type="axl:String50" nillable="false"/>
											<xsd:element name="product" type="axl:XProduct" nillable="false"/>
											<xsd:element name="model" type="axl:XModel" nillable="false"/>
										</xsd:sequence>
										<xsd:attribute name="uuid" type="axl:XUUID" use="required"/>
									</xsd:complexType>
								</xsd:element>
							</xsd:sequence>
						</xsd:complexType>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="ListPhoneByNameRes">
		<xsd:annotation>
			<xsd:documentation>The response to listPhoneByName.  For each phone returned, lists its name, product type, and model type.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:ListPhoneResponse"/>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="listPhoneByNameResponse" type="axlapi:ListPhoneByNameRes"/>
	<xsd:complexType name="ListPhoneByDescriptionReq">
		<xsd:annotation>
			<xsd:documentation>This method searches for all phones whose description matches the specified search string.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:ListBySearchString"/>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="listPhoneByDescription" type="axlapi:ListPhoneByDescriptionReq"/>
	<xsd:complexType name="ListPhoneByDescriptionRes">
		<xsd:annotation>
			<xsd:documentation>The response to listPhoneByDescription.  For each phone returned, lists its name, product type, and model type.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:ListPhoneResponse"/>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="listPhoneByDescriptionResponse" type="axlapi:ListPhoneByDescriptionRes"/>
	<xsd:complexType name="ListUserByNameReq">
		<xsd:annotation>
			<xsd:documentation>This method searches for all users whose first and last names match the given pattern.  The '*' character is used as the wildcard.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIRequest">
				<xsd:sequence>
					<xsd:element name="firstname" type="xsd:string">
						<xsd:annotation>
							<xsd:documentation>The first name to search for.  Can contain the '*' character as a wildcard.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="lastname" type="xsd:string">
						<xsd:annotation>
							<xsd:documentation>The last name to search for.  Can contain the '*' character as a wildcard.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="searchLimit" type="xsd:int">
						<xsd:annotation>
							<xsd:documentation>The maximum number of users to be displayed.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="listUserByName" type="axlapi:ListUserByNameReq"/>
	<xsd:complexType name="ListUserByNameRes">
		<xsd:annotation>
			<xsd:documentation>The is element will contain all the users who matched the search string supplied by listUserByName.  For each user returned, the user's ldapRN, firstname, and lastname is specified.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIResponse">
				<xsd:sequence>
					<xsd:element name="return">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="user" minOccurs="0" maxOccurs="unbounded">
									<xsd:complexType>
										<xsd:sequence>
											<xsd:element name="firstname" type="xsd:string"/>
											<xsd:element name="lastname" type="xsd:string"/>
										</xsd:sequence>
										<xsd:attribute name="userid" type="xsd:string" use="required"/>
									</xsd:complexType>
								</xsd:element>
							</xsd:sequence>
						</xsd:complexType>
					</xsd:element>
				</xsd:sequence>
				<xsd:attribute name="userid" type="xsd:string" use="required"/>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="listUserByNameResponse" type="axlapi:ListUserByNameRes"/>
	<xsd:complexType name="ListRoutePlanByTypeReq">
		<xsd:annotation>
			<xsd:documentation>This request returns the all entries in the NumPlan table which match the type given.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIRequest">
				<xsd:sequence>
					<xsd:element name="usage" type="axl:XPatternUsage" nillable="false">
						<xsd:annotation>
							<xsd:documentation>The type (pattern usage) of Route Plan to return.  Not nullable.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="listRoutePlanByType" type="axlapi:ListRoutePlanByTypeReq"/>
	<xsd:complexType name="ListRoutePlanByTypeRes">
		<xsd:annotation>
			<xsd:documentation>Response to listRoutePlanByType request.  For each route plan returned, the directory number, route partition name, and usage type is specified.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIResponse">
				<xsd:sequence>
					<xsd:element name="return">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="routePlan" minOccurs="0" maxOccurs="unbounded">
									<xsd:complexType>
										<xsd:sequence>
											<xsd:element name="directoryNumber" type="axl:XDirectoryNumber"/>
											<xsd:element name="routePartitionName" type="axl:String50"/>
											<xsd:element name="usage" type="axl:XPatternUsage"/>
											<xsd:element name="routeFilterName" type="axl:String50"/>
										</xsd:sequence>
										<xsd:attribute name="uuid" type="axl:XUUID" use="required"/>
									</xsd:complexType>
								</xsd:element>
							</xsd:sequence>
						</xsd:complexType>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="listRoutePlanByTypeResponse" type="axlapi:ListRoutePlanByTypeRes"/>
	<xsd:complexType name="GetNumDevicesReq">
		<xsd:annotation>
			<xsd:documentation>This method returns the number of devices found.  The caller specifies what class of device they want counted.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIRequest">
				<xsd:sequence>
					<xsd:element name="class" type="axl:XClass" nillable="false">
						<xsd:annotation>
							<xsd:documentation>The class of device that is to be counted.  Cannot be null.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="getNumDevices" type="axlapi:GetNumDevicesReq"/>
	<xsd:complexType name="GetNumDevicesRes">
		<xsd:annotation>
			<xsd:documentation>Response to GetNumDevices.  Returns an integer value which is the number of devices found.  The class of device counted is represented by the "class" attribute.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIResponse">
				<xsd:sequence>
					<xsd:element name="return" type="xsd:nonNegativeInteger"/>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="getNumDevicesResponse" type="axlapi:GetNumDevicesRes"/>
	<xsd:complexType name="ListServiceParametersReq">
		<xsd:annotation>
			<xsd:documentation>This method can be used to list all service parameters (include Enterprise-Wide parameters) for a particular Process Node and service type.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIRequest">
				<xsd:sequence>
					<xsd:element name="nodeName" type="xsd:string" nillable="false">
						<xsd:annotation>
							<xsd:documentation>The process node.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="serviceType" type="axl:XService" nillable="false">
						<xsd:annotation>
							<xsd:documentation>The type of service.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="listServiceParameters" type="axlapi:ListServiceParametersReq"/>
	<xsd:complexType name="ListServiceParametersRes">
		<xsd:annotation>
			<xsd:documentation>Contains all the service parameters as found by ListServiceParameters.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIResponse">
				<xsd:sequence>
					<xsd:element name="return">
						<xsd:annotation>
							<xsd:documentation>A list of "param" elements.  Eache "param" element represents a service parameter.  If no service parameters were found, then no "param" elements will be present.</xsd:documentation>
						</xsd:annotation>
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="param" minOccurs="0" maxOccurs="unbounded">
									<xsd:complexType>
										<xsd:sequence>
											<xsd:element name="name" type="xsd:string" nillable="false">
												<xsd:annotation>
													<xsd:documentation>The name of this service parameter.</xsd:documentation>
												</xsd:annotation>
											</xsd:element>
											<xsd:element name="value" type="xsd:string" nillable="false">
												<xsd:annotation>
													<xsd:documentation>The value of this service parameter.</xsd:documentation>
												</xsd:annotation>
											</xsd:element>
										</xsd:sequence>
									</xsd:complexType>
								</xsd:element>
							</xsd:sequence>
						</xsd:complexType>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="listServiceParametersResponse" type="axlapi:ListServiceParametersRes"/>
	<xsd:complexType name="ListCSSByNameReq">
		<xsd:annotation>
			<xsd:documentation>This method searches for all Calling Search Spaces in the database whose name matches the search string.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:ListBySearchString"/>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="listCSSByName" type="axlapi:ListCSSByNameReq"/>
	<xsd:complexType name="ListCSSResponse">
		<xsd:annotation>
			<xsd:documentation>This response is returned by the listCSSByXXX methods.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIResponse">
				<xsd:sequence>
					<xsd:element name="return">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="callingSearchSpace" type="axl:XCallingSearchSpace" minOccurs="0" maxOccurs="unbounded"/>
							</xsd:sequence>
						</xsd:complexType>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="ListCSSByNameRes">
		<xsd:annotation>
			<xsd:documentation>The response to listCSSByName. Contains all the Calling Search Spaces that matched the search string.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:ListCSSResponse"/>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="listCSSByNameResponse" type="axlapi:ListCSSByNameRes"/>
	<xsd:complexType name="NameAndGUIDRequest">
		<xsd:annotation>
			<xsd:documentation>This is a utility object that created because many of the Get, Remove, and Update methods allow the user to specify either the name or the uuid.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIRequest">
				<xsd:sequence>
					<xsd:choice>
						<xsd:element name="name" type="axl:String128" nillable="false">
							<xsd:annotation>
								<xsd:documentation>Not nullable.</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
						<xsd:element name="uuid" type="axl:XUUID" nillable="false">
							<xsd:annotation>
								<xsd:documentation>Not nullable.</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
					</xsd:choice>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="GUIDRequest">
		<xsd:annotation>
			<xsd:documentation>This is a utility object that created because many of the Get, Remove, and Update methods allow the user to specify  the uuid.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIRequest">
				<xsd:sequence>
					<xsd:element name="uuid" type="axl:XUUID" nillable="false">
						<xsd:annotation>
							<xsd:documentation>Not nullable.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="AddDevicePoolReq" abstract="false" final="#all">
		<xsd:annotation>
			<xsd:documentation>Adds a new device pool to the database.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIRequest">
				<xsd:sequence>
					<xsd:element name="devicePool" type="axl:XDevicePool" nillable="false"/>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="addDevicePool" type="axlapi:AddDevicePoolReq"/>
	<xsd:element name="addDevicePoolResponse" type="axlapi:StandardResponse"/>
	<xsd:complexType name="UpdateDevicePoolReq" abstract="false" final="#all">
		<xsd:annotation>
			<xsd:documentation>Update an existing device pool in the database.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIRequest">
				<xsd:sequence>
					<xsd:choice>
						<xsd:element name="name" type="axl:String50">
							<xsd:annotation>
								<xsd:documentation>The name of the Device Pool to update. Not nullable.</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
						<xsd:element name="uuid" type="axl:XUUID">
							<xsd:annotation>
								<xsd:documentation>The UUID of the Device Pool to update. Not nullable.</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
					</xsd:choice>
					<xsd:element name="newName" type="axl:String50" nillable="false" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>The new name for this Device Pool. Not nullable.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:choice minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>Nullable.</xsd:documentation>
						</xsd:annotation>
						<xsd:element name="autoSearchSpaceId" type="axl:XUUID" nillable="true"/>
						<xsd:element name="autoSearchSpaceName" type="axl:String50" nillable="true"/>
					</xsd:choice>
					<xsd:choice minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>Not nullable.</xsd:documentation>
						</xsd:annotation>
						<xsd:element name="dateTimeSettingId" type="axl:XUUID" nillable="false"/>
						<xsd:element name="dateTimeSettingName" type="axl:String50" nillable="false"/>
					</xsd:choice>
					<xsd:choice minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>Not nullable.</xsd:documentation>
						</xsd:annotation>
						<xsd:element name="callManagerGroupId" type="axl:XUUID" nillable="false"/>
						<xsd:element name="callManagerGroupName" type="axl:String50" nillable="false"/>
					</xsd:choice>
					<xsd:choice minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>Nullable.</xsd:documentation>
						</xsd:annotation>
						<xsd:element name="mediaResourceListId" type="axl:XUUID" nillable="true"/>
						<xsd:element name="mediaResourceListName" type="axl:String50" nillable="true"/>
					</xsd:choice>
					<xsd:choice minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>Not nullable.</xsd:documentation>
						</xsd:annotation>
						<xsd:element name="regionId" type="axl:XUUID" nillable="false"/>
						<xsd:element name="regionName" type="axl:String50" nillable="false"/>
					</xsd:choice>
					<xsd:choice minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>Not nullable.</xsd:documentation>
						</xsd:annotation>
						<xsd:element name="softkeyTemplateId" type="axl:XUUID" nillable="false"/>
						<xsd:element name="softkeyTemplateName" type="axl:String50" nillable="false"/>
					</xsd:choice>
					<xsd:element name="networkLocale" type="axl:XCountry" nillable="false" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>Not nullable.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="userLocale" type="axl:XUserLocale" nillable="false" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>Not nullable.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="networkHoldMOHAudioSourceId" type="xsd:integer" nillable="false" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>Not nullable.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="userHoldMOHAudioSourceId" type="xsd:integer" nillable="false" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>Not nullable.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:choice minOccurs="0">
						<xsd:element name="srstInfoId" type="axl:XUUID"/>
						<xsd:element name="srstName" type="axl:String50"/>
					</xsd:choice>
					<xsd:element name="mlppDomainId" type="xsd:int" nillable="false" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>This setting only affects devices that support MLPP.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="mlppIndicationStatus" type="axl:XStatus" nillable="false" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>This setting only affects devices that support MLPP.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="preemption" type="axl:XPreemption" nillable="false" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>This setting only affects devices that support MLPP.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="connectionMonitorDuration" type="xsd:int" nillable="false" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>-1 means use system default.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="updateDevicePool" type="axlapi:UpdateDevicePoolReq"/>
	<xsd:element name="updateDevicePoolResponse" type="axlapi:StandardResponse"/>
	<xsd:element name="getDevicePool" type="axlapi:NameAndGUIDRequest"/>
	<xsd:complexType name="GetDevicePoolRes">
		<xsd:annotation>
			<xsd:documentation>Contains the device pool specified by the request.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIResponse">
				<xsd:sequence>
					<xsd:element name="return">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="devicePool" type="axl:XDevicePool"/>
							</xsd:sequence>
						</xsd:complexType>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="getDevicePoolResponse" type="axlapi:GetDevicePoolRes"/>
	<xsd:element name="removeDevicePool" type="axlapi:NameAndGUIDRequest"/>
	<xsd:element name="removeDevicePoolResponse" type="axlapi:StandardResponse"/>
	<xsd:complexType name="AddCallManagerGroupReq" abstract="false" final="#all">
		<xsd:annotation>
			<xsd:documentation>Adds a new CallManager group to the database.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIRequest">
				<xsd:sequence>
					<xsd:element name="callManagerGroup" type="axl:XCallManagerGroup" nillable="false"/>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="addCallManagerGroup" type="axlapi:AddCallManagerGroupReq"/>
	<xsd:element name="addCallManagerGroupResponse" type="axlapi:StandardResponse"/>
	<xsd:complexType name="UpdateCallManagerGroupReq" abstract="false" final="#all">
		<xsd:annotation>
			<xsd:documentation>Update an existing CallManager group in the database.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:NameAndGUIDRequest">
				<xsd:sequence>
					<xsd:element name="newName" type="axl:String50" nillable="false" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>Not nullable.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="tftpDefault" type="xsd:boolean" nillable="false" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>Not nullable.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="members" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>The new members of this CallManager group.  If "members" is present, then all current members of this CallManager group are removed and replaced by the "member" sub-elements.  Nullable.</xsd:documentation>
						</xsd:annotation>
						<xsd:complexType>
							<xsd:sequence minOccurs="0">
								<xsd:element name="member" type="axl:XCallManagerMember" maxOccurs="unbounded"/>
							</xsd:sequence>
						</xsd:complexType>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="updateCallManagerGroup" type="axlapi:UpdateCallManagerGroupReq"/>
	<xsd:element name="updateCallManagerGroupResponse" type="axlapi:StandardResponse"/>
	<xsd:element name="getCallManagerGroup" type="axlapi:NameAndGUIDRequest"/>
	<xsd:complexType name="GetCallManagerGroupRes">
		<xsd:annotation>
			<xsd:documentation>Contains the CallManager group specified by the request.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIResponse">
				<xsd:sequence>
					<xsd:element name="return">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="callManagerGroup" type="axl:XCallManagerGroup"/>
							</xsd:sequence>
						</xsd:complexType>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="getCallManagerGroupResponse" type="axlapi:GetCallManagerGroupRes"/>
	<xsd:element name="removeCallManagerGroup" type="axlapi:NameAndGUIDRequest"/>
	<xsd:element name="removeCallManagerGroupResponse" type="axlapi:StandardResponse"/>
	<xsd:complexType name="AddVoiceMailPilotReq" abstract="false" final="#all">
		<xsd:annotation>
			<xsd:documentation>Adds a new VoiceMail Pilot to the database.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIRequest">
				<xsd:sequence>
					<xsd:element name="voiceMailPilot" type="axl:XVoiceMailPilot" nillable="false"/>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="addVoiceMailPilot" type="axlapi:AddVoiceMailPilotReq"/>
	<xsd:element name="addVoiceMailPilotResponse" type="axlapi:StandardResponse"/>
	<xsd:complexType name="UpdateVoiceMailPilotReq" abstract="false" final="#all">
		<xsd:annotation>
			<xsd:documentation>Updates the specified Voice Mail Pilot from the database.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIRequest">
				<xsd:sequence>
					<xsd:choice>
						<xsd:element name="uuid" type="axl:XUUID" nillable="false">
							<xsd:annotation>
								<xsd:documentation>The GUID of the Voice Mail Pilot to be updated</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
						<xsd:sequence>
							<xsd:element name="dirn" type="axl:XDirectoryNumber" nillable="true"/>
							<xsd:choice>
								<xsd:element name="CSS" type="axl:XCallingSearchSpace" nillable="true">
									<xsd:annotation>
										<xsd:documentation>Only the UUID attribute is read by the AXL API.</xsd:documentation>
									</xsd:annotation>
								</xsd:element>
								<xsd:element name="CSSName" type="axl:UniqueName50" nillable="true"/>
							</xsd:choice>
						</xsd:sequence>
					</xsd:choice>
					<xsd:sequence minOccurs="0">
						<xsd:element name="newdirn" type="axl:XDirectoryNumber" nillable="true" minOccurs="0"/>
						<xsd:choice minOccurs="0">
							<xsd:element name="newCSS" type="axl:XUUID" nillable="true" minOccurs="0"/>
							<xsd:element name="newCSSName" type="axl:UniqueName50" nillable="true" minOccurs="0"/>
						</xsd:choice>
					</xsd:sequence>
					<xsd:element name="description" type="xsd:string" nillable="true" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>The new description of the device.  Nullable.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="isDefault" type="axl:XBoolean" default="false" nillable="false" minOccurs="0"/>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="updateVoiceMailPilot" type="axlapi:UpdateVoiceMailPilotReq"/>
	<xsd:element name="updateVoiceMailPilotResponse" type="axlapi:StandardResponse"/>
	<xsd:complexType name="GetVoiceMailPilotReq" final="#all">
		<xsd:annotation>
			<xsd:documentation>Retrieves the specified Voice Mail Pilot from the database.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIRequest">
				<xsd:choice>
					<xsd:element name="uuid" type="axl:XUUID" nillable="false">
						<xsd:annotation>
							<xsd:documentation>The GUID of the Voice Mail Pilot to be retrieved.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:sequence>
						<xsd:element name="dirn" type="axl:XDirectoryNumber" nillable="true"/>
						<xsd:choice>
							<xsd:element name="CSS" type="axl:XUUID" nillable="true"/>
							<xsd:element name="CSSName" type="axl:UniqueName50" nillable="true"/>
						</xsd:choice>
					</xsd:sequence>
				</xsd:choice>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="getVoiceMailPilot" type="axlapi:GetVoiceMailPilotReq"/>
	<xsd:complexType name="GetVoiceMailPilotRes">
		<xsd:annotation>
			<xsd:documentation>Contains the VoiceMail Pilot specified by the request.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIResponse">
				<xsd:sequence>
					<xsd:element name="return">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="voiceMailPilot" type="axl:XVoiceMailPilot"/>
							</xsd:sequence>
						</xsd:complexType>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="getVoiceMailPilotResponse" type="axlapi:GetVoiceMailPilotRes"/>
	<xsd:complexType name="RemoveVoiceMailPilotReq" final="#all">
		<xsd:annotation>
			<xsd:documentation>Removes the specified Voice Mail Pilot from the database.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIRequest">
				<xsd:choice>
					<xsd:element name="uuid" type="axl:XUUID" nillable="false">
						<xsd:annotation>
							<xsd:documentation>The GUID of the Voice Mail Pilot to be removed</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:sequence>
						<xsd:element name="dirn" type="axl:XDirectoryNumber" nillable="true"/>
						<xsd:choice>
							<xsd:element name="CSS" type="axl:XUUID" nillable="true"/>
							<xsd:element name="CSSName" type="axl:UniqueName50" nillable="true"/>
						</xsd:choice>
					</xsd:sequence>
				</xsd:choice>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="removeVoiceMailPilot" type="axlapi:RemoveVoiceMailPilotReq"/>
	<xsd:complexType name="AddVoiceMailProfileReq" abstract="false" final="#all">
		<xsd:annotation>
			<xsd:documentation>Adds a new VoiceMail Profile to the database.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIRequest">
				<xsd:sequence>
					<xsd:element name="voiceMailProfile" type="axl:XVoiceMailProfile" nillable="false"/>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="addVoiceMailProfile" type="axlapi:AddVoiceMailProfileReq"/>
	<xsd:element name="addVoiceMailProfileResponse" type="axlapi:StandardResponse"/>
	<xsd:complexType name="UpdateVoiceMailProfileReq" abstract="false" final="#all">
		<xsd:annotation>
			<xsd:documentation>Update an existing VoiceMail Profile in the database.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:NameAndGUIDRequest">
				<xsd:sequence>
					<xsd:element name="newName" type="axl:String50" nillable="false" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>Not nullable.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="description" type="xsd:string" nillable="true" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>The new description of the device.  Nullable.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="isDefault" type="axl:XBoolean" default="false" nillable="false" minOccurs="0"/>
					<xsd:element name="voiceMailboxMask" type="xsd:string" nillable="true" minOccurs="0"/>
					<xsd:element name="voiceMailPilot" type="axl:XUUID" nillable="false" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>Only UUID attribute is read by the AXL API.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="updateVoiceMailProfile" type="axlapi:UpdateVoiceMailProfileReq"/>
	<xsd:element name="updateVoiceMailProfileResponse" type="axlapi:StandardResponse"/>
	<xsd:element name="getVoiceMailProfile" type="axlapi:NameAndGUIDRequest"/>
	<xsd:complexType name="GetVoiceMailProfileRes">
		<xsd:annotation>
			<xsd:documentation>Contains the VoiceMail Profile specified by the request.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIResponse">
				<xsd:sequence>
					<xsd:element name="return">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="voiceMailProfile" type="axl:XVoiceMailProfile"/>
							</xsd:sequence>
						</xsd:complexType>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="getVoiceMailProfileResponse" type="axlapi:GetVoiceMailProfileRes"/>
	<xsd:element name="removeVoiceMailProfile" type="axlapi:NameAndGUIDRequest"/>
	<xsd:element name="removeVoiceMailProfileResponse" type="axlapi:StandardResponse"/>
	<xsd:element name="removeVoiceMailPilotResponse" type="axlapi:StandardResponse"/>
	<xsd:complexType name="AddVoiceMailPortReq" abstract="false" final="#all">
		<xsd:annotation>
			<xsd:documentation>Adds a new VoiceMail Port to the database.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIRequest">
				<xsd:sequence>
					<xsd:element name="voiceMailPort" type="axl:XVoiceMailPort" nillable="false"/>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="addVoiceMailPort" type="axlapi:AddVoiceMailPortReq"/>
	<xsd:element name="addVoiceMailPortResponse" type="axlapi:StandardResponse"/>
	<xsd:complexType name="UpdateVoiceMailPortReq" abstract="false" final="#all">
		<xsd:annotation>
			<xsd:documentation>Update an existing VoiceMail Port in the database.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:NameAndGUIDRequest">
				<xsd:sequence>
					<xsd:element name="newName" type="axl:String50" nillable="false" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>Not nullable.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="description" type="xsd:string" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>The new description of the device.  Nullable.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:choice minOccurs="0">
						<xsd:element name="callingSearchSpaceId" type="axl:XUUID">
							<xsd:annotation>
								<xsd:documentation>The GUID of the new Calling Search Space for this device. Nullable.</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
						<xsd:element name="callingSearchSpaceName" type="xsd:Name">
							<xsd:annotation>
								<xsd:documentation>The name of the new Calling Search Space for this device.  Nullable.</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
					</xsd:choice>
					<xsd:choice minOccurs="0">
						<xsd:element name="devicePoolId" type="axl:XUUID" nillable="false">
							<xsd:annotation>
								<xsd:documentation>The GUID of the new Device Pool for this device.  Not nullable.</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
						<xsd:element name="devicePoolName" type="xsd:string" nillable="false">
							<xsd:annotation>
								<xsd:documentation>The name of the new Device Pool for this device. Not nullable.</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
					</xsd:choice>
					<xsd:choice minOccurs="0">
						<xsd:element name="locationId" type="axl:XUUID">
							<xsd:annotation>
								<xsd:documentation>The GUID of the new Location for this device.  Nullable.</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
						<xsd:element name="locationName" type="xsd:Name">
							<xsd:annotation>
								<xsd:documentation>The name of the new Location for this device.  Nullable.</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
					</xsd:choice>
					<xsd:choice minOccurs="0">
						<xsd:element name="mediaResourceListId" type="axl:XUUID">
							<xsd:annotation>
								<xsd:documentation>The GUID of the new Media Resource List for this device.  Nullable.</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
						<xsd:element name="mediaResourceListName" type="xsd:Name">
							<xsd:annotation>
								<xsd:documentation>The name of the new Media Resource List for this device.  Nullable.</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
					</xsd:choice>
					<xsd:choice minOccurs="0">
						<xsd:element name="automatedAlternateRoutingCSSId" type="axl:XUUID"/>
						<xsd:element name="automatedAlternateRoutingCSSName" type="axl:String50"/>
					</xsd:choice>
					<xsd:choice minOccurs="0">
						<xsd:element name="aarNeighborhoodId" type="axl:XUUID"/>
						<xsd:element name="aarNeighborhoodName" type="axl:String50"/>
					</xsd:choice>
					<xsd:element name="loadInformation" type="axl:XLoadInformation" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>The new load information for this device.  Nullable.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="vendorConfig" type="axl:XVendorConfig" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>The new vendor configuration XML for this device. Nullable.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="traceFlag" type="xsd:boolean" nillable="false" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>The new trace flag for this device.  Not nullable.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="line" type="axl:XLine" nillable="true" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>The new line for this voice mail port.  Nullable.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="updateVoiceMailPort" type="axlapi:UpdateVoiceMailPortReq"/>
	<xsd:element name="updateVoiceMailPortResponse" type="axlapi:StandardResponse"/>
	<xsd:element name="getVoiceMailPort" type="axlapi:NameAndGUIDRequest"/>
	<xsd:complexType name="GetVoiceMailPortRes">
		<xsd:annotation>
			<xsd:documentation>Contains the VoiceMail Port specified by the request.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIResponse">
				<xsd:sequence>
					<xsd:element name="return">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="voiceMailPort" type="axl:XVoiceMailPort"/>
							</xsd:sequence>
						</xsd:complexType>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="getVoiceMailPortResponse" type="axlapi:GetVoiceMailPortRes"/>
	<xsd:element name="removeVoiceMailPort" type="axlapi:NameAndGUIDRequest"/>
	<xsd:element name="removeVoiceMailPortResponse" type="axlapi:StandardResponse"/>
	<xsd:complexType name="AddGatewayEndpointReq" abstract="false" final="#all">
		<xsd:annotation>
			<xsd:documentation>Adds a new Gateway endpoint to the database.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIRequest">
				<xsd:sequence>
					<xsd:element name="gateway" type="axl:XGateway" nillable="false">
						<xsd:annotation>
							<xsd:documentation>XGateway is abstract, so the  user of AddGatewayEndpoint must specify a complex type that extends XGateway.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="addGatewayEndpoint" type="axlapi:AddGatewayEndpointReq"/>
	<xsd:element name="addGatewayEndpointResponse" type="axlapi:StandardResponse"/>
	<xsd:complexType name="UpdateGatewayEndpointReq" abstract="false" final="#all">
		<xsd:annotation>
			<xsd:documentation>Update an existing Gateway endpoint in the database.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:NameAndGUIDRequest">
				<xsd:sequence>
					<xsd:element name="newName" type="axl:String50" nillable="false" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>Not nullable.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="description" type="xsd:string" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>The new description of the device.  Nullable.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="protocolSide" type="axl:XProtocolSide" nillable="false" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>Protocol Side can only be modified on PRI gateways. Not nullable.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:choice minOccurs="0">
						<xsd:element name="callingSearchSpaceId" type="axl:XUUID">
							<xsd:annotation>
								<xsd:documentation>The GUID of the new Calling Search Space for this device. Nullable.</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
						<xsd:element name="callingSearchSpaceName" type="xsd:Name">
							<xsd:annotation>
								<xsd:documentation>The name of the new Calling Search Space for this device.  Nullable.</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
					</xsd:choice>
					<xsd:choice minOccurs="0">
						<xsd:element name="devicePoolId" type="axl:XUUID" nillable="false">
							<xsd:annotation>
								<xsd:documentation>The GUID of the new Device Pool for this device.  Not nullable.</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
						<xsd:element name="devicePoolName" type="xsd:string" nillable="false">
							<xsd:annotation>
								<xsd:documentation>The name of the new Device Pool for this device. Not nullable.</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
					</xsd:choice>
					<xsd:element name="networkLocation" type="axl:XNetworkLocation" nillable="false" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>The new Device Destination flag for Trunk to Trunk Transfer and Drop Conference Feature is required for most gateways, except FXS gateways.  Not nullable.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:choice minOccurs="0">
						<xsd:element name="locationId" type="axl:XUUID">
							<xsd:annotation>
								<xsd:documentation>The GUID of the new Location for this device.  Nullable.</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
						<xsd:element name="locationName" type="xsd:Name">
							<xsd:annotation>
								<xsd:documentation>The name of the new Location for this device.  Nullable.</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
					</xsd:choice>
					<xsd:choice minOccurs="0">
						<xsd:element name="mediaResourceListId" type="axl:XUUID">
							<xsd:annotation>
								<xsd:documentation>The GUID of the new Media Resource List for this device.  Nullable.</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
						<xsd:element name="mediaResourceListName" type="xsd:Name">
							<xsd:annotation>
								<xsd:documentation>The name of the new Media Resource List for this device.  Nullable.</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
					</xsd:choice>
					<xsd:element name="networkHoldMOHAudioSourceId" type="axl:XMOHAudioSourceId" nillable="false" minOccurs="0"/>
					<xsd:element name="userHoldMOHAudioSourceId" type="axl:XMOHAudioSourceId" nillable="false" minOccurs="0"/>
					<xsd:choice minOccurs="0">
						<xsd:element name="automatedAlternateRoutingCSSId" type="axl:XUUID"/>
						<xsd:element name="automatedAlternateRoutingCSSName" type="axl:String50"/>
					</xsd:choice>
					<xsd:choice minOccurs="0">
						<xsd:element name="aarNeighborhoodId" type="axl:XUUID"/>
						<xsd:element name="aarNeighborhoodName" type="axl:String50"/>
					</xsd:choice>
					<xsd:element name="loadInformation" type="axl:XLoadInformation" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>The new load information for this device.  Nullable.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="vendorConfig" type="axl:XVendorConfig" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>The new vendor configuration XML for this device. Nullable.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="traceFlag" type="xsd:boolean" nillable="false" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>The new trace flag for this device.  Not nullable.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="mlppDomainId" type="xsd:int" nillable="false" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>This setting only affects devices that support MLPP.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="mlppIndicationStatus" type="axl:XStatus" nillable="false" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>This setting only affects devices that support MLPP.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="preemption" type="axl:XPreemption" nillable="false" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>This setting only affects devices that support MLPP.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="country" type="axl:XCountry" nillable="true" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>Also known as networkLocale.  Nullable.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="packetCaptureMode" type="axl:XPacketCaptureMode" minOccurs="0"/>
					<xsd:element name="packetCaptureDuration" type="xsd:positiveInteger" minOccurs="0"/>
					<xsd:choice minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>At this point, you can edit the elements specific to PRI, BRI, T1, or Analog gateways.</xsd:documentation>
						</xsd:annotation>
						<xsd:element name="analog">
							<xsd:complexType>
								<xsd:sequence>
									<xsd:element name="ports" type="axl:XAnalogPortList" minOccurs="0">
										<xsd:annotation>
											<xsd:documentation>The new list of ports for this gateway.  This list of ports replaces any pre-existing ports on this gateway.</xsd:documentation>
										</xsd:annotation>
									</xsd:element>
									<xsd:element name="trunkSelectionOrder" type="axl:XTrunkSelectionOrder" minOccurs="0">
										<xsd:annotation>
											<xsd:documentation>The new trunk selection order for this gateway. Not nullable.</xsd:documentation>
										</xsd:annotation>
									</xsd:element>
								</xsd:sequence>
							</xsd:complexType>
						</xsd:element>
						<xsd:element name="pri">
							<xsd:complexType>
								<xsd:sequence>
									<xsd:element name="acceptInboundRDNIS" type="xsd:boolean" minOccurs="0">
										<xsd:annotation>
											<xsd:documentation>Not nullable.</xsd:documentation>
										</xsd:annotation>
									</xsd:element>
									<xsd:element name="calledPlan" type="axl:XNumberingPlan" minOccurs="0">
										<xsd:annotation>
											<xsd:documentation>Not nullable.</xsd:documentation>
										</xsd:annotation>
									</xsd:element>
									<xsd:element name="calledPri" type="axl:XPriOfNumber" minOccurs="0">
										<xsd:annotation>
											<xsd:documentation>Not nullable.</xsd:documentation>
										</xsd:annotation>
									</xsd:element>
									<xsd:element name="callerIDDN" type="axl:XDirectoryNumber" minOccurs="0">
										<xsd:annotation>
											<xsd:documentation>Nullable.</xsd:documentation>
										</xsd:annotation>
									</xsd:element>
									<xsd:element name="callingPartySelection" type="axl:XCallingPartySelection" minOccurs="0">
										<xsd:annotation>
											<xsd:documentation>Not nullable.</xsd:documentation>
										</xsd:annotation>
									</xsd:element>
									<xsd:element name="callingPlan" type="axl:XNumberingPlan" minOccurs="0">
										<xsd:annotation>
											<xsd:documentation>Not nullable.</xsd:documentation>
										</xsd:annotation>
									</xsd:element>
									<xsd:element name="callingPri" type="axl:XPriOfNumber" minOccurs="0">
										<xsd:annotation>
											<xsd:documentation>Not nullable.</xsd:documentation>
										</xsd:annotation>
									</xsd:element>
									<xsd:element name="chanIE" type="xsd:nonNegativeInteger" minOccurs="0">
										<xsd:annotation>
											<xsd:documentation>Not nullable.</xsd:documentation>
										</xsd:annotation>
									</xsd:element>
									<xsd:element name="clockReference" type="axl:XClockReference" minOccurs="0">
										<xsd:annotation>
											<xsd:documentation>Not nullable.</xsd:documentation>
										</xsd:annotation>
									</xsd:element>
									<xsd:element name="csuParam" type="axl:XCSUParam" minOccurs="0">
										<xsd:annotation>
											<xsd:documentation>Not nullable.</xsd:documentation>
										</xsd:annotation>
									</xsd:element>
									<xsd:element name="dChannelEnable" type="xsd:boolean" minOccurs="0">
										<xsd:annotation>
											<xsd:documentation>Not nullable.</xsd:documentation>
										</xsd:annotation>
									</xsd:element>
									<xsd:element name="direction" type="xsd:boolean" minOccurs="0">
										<xsd:annotation>
											<xsd:documentation>Not nullable.</xsd:documentation>
										</xsd:annotation>
									</xsd:element>
									<xsd:element name="displayIE" type="xsd:boolean" minOccurs="0">
										<xsd:annotation>
											<xsd:documentation>Not nullable.</xsd:documentation>
										</xsd:annotation>
									</xsd:element>
									<xsd:element name="encode" type="axl:XEncode" minOccurs="0">
										<xsd:annotation>
											<xsd:documentation>Not nullable.</xsd:documentation>
										</xsd:annotation>
									</xsd:element>
									<xsd:element name="fdlChannel" type="axl:XFDLChannel" minOccurs="0">
										<xsd:annotation>
											<xsd:documentation>This field has been deprecated for SeaDragon.</xsd:documentation>
										</xsd:annotation>
									</xsd:element>
									<xsd:element name="firstDelay" type="xsd:nonNegativeInteger" minOccurs="0">
										<xsd:annotation>
											<xsd:documentation>Not nullable.</xsd:documentation>
										</xsd:annotation>
									</xsd:element>
									<xsd:element name="interfaceId" minOccurs="0">
										<xsd:annotation>
											<xsd:documentation>Neither the present attribute nor the value of this element is nullable.</xsd:documentation>
										</xsd:annotation>
										<xsd:complexType>
											<xsd:simpleContent>
												<xsd:extension base="xsd:nonNegativeInteger">
													<xsd:attribute name="present" type="xsd:boolean" use="required"/>
												</xsd:extension>
											</xsd:simpleContent>
										</xsd:complexType>
									</xsd:element>
									<xsd:element name="intraDelay" type="xsd:nonNegativeInteger" minOccurs="0">
										<xsd:annotation>
											<xsd:documentation>Not nullable.</xsd:documentation>
										</xsd:annotation>
									</xsd:element>
									<xsd:element name="mcdnEnable" type="xsd:boolean" minOccurs="0">
										<xsd:annotation>
											<xsd:documentation>Not nullable.</xsd:documentation>
										</xsd:annotation>
									</xsd:element>
									<xsd:element name="numberIE" type="xsd:boolean" minOccurs="0">
										<xsd:annotation>
											<xsd:documentation>Not nullable.</xsd:documentation>
										</xsd:annotation>
									</xsd:element>
									<xsd:element name="numDigits" type="xsd:nonNegativeInteger" minOccurs="0">
										<xsd:annotation>
											<xsd:documentation>Not nullable.</xsd:documentation>
										</xsd:annotation>
									</xsd:element>
									<xsd:element name="passingPrecedenceLevelThroughUUIE" type="xsd:boolean" minOccurs="0">
										<xsd:annotation>
											<xsd:documentation>Not nullable.</xsd:documentation>
										</xsd:annotation>
									</xsd:element>
									<xsd:element name="prefix" type="xsd:string" minOccurs="0">
										<xsd:annotation>
											<xsd:documentation>Nullable.</xsd:documentation>
										</xsd:annotation>
									</xsd:element>
									<xsd:element name="callingLinePresentationBit" type="axl:XPresentationBit" nillable="false" minOccurs="0">
										<xsd:annotation>
											<xsd:documentation>Not nullable.</xsd:documentation>
										</xsd:annotation>
									</xsd:element>
									<xsd:element name="connectedLinePresentationBit" type="axl:XPresentationBit" nillable="false" minOccurs="0">
										<xsd:annotation>
											<xsd:documentation>Not nullable.</xsd:documentation>
										</xsd:annotation>
									</xsd:element>
									<xsd:element name="connectedPBX" type="axl:XConnectedPBX" nillable="false" minOccurs="0">
										<xsd:annotation>
											<xsd:documentation>Not nullable.</xsd:documentation>
										</xsd:annotation>
									</xsd:element>
									<xsd:element name="priProtocol" type="axl:XPriProtocol" minOccurs="0">
										<xsd:annotation>
											<xsd:documentation>Not nullable.</xsd:documentation>
										</xsd:annotation>
									</xsd:element>
									<xsd:element name="securityAccessLevel" type="xsd:nonNegativeInteger" minOccurs="0">
										<xsd:annotation>
											<xsd:documentation>Not nullable.</xsd:documentation>
										</xsd:annotation>
									</xsd:element>
									<xsd:element name="sendCallingNameInFacilityIE" type="xsd:boolean" minOccurs="0">
										<xsd:annotation>
											<xsd:documentation>Not nullable.</xsd:documentation>
										</xsd:annotation>
									</xsd:element>
									<xsd:element name="sendEXLeadingCharInDispIE" type="xsd:boolean" minOccurs="0">
										<xsd:annotation>
											<xsd:documentation>Not nullable.</xsd:documentation>
										</xsd:annotation>
									</xsd:element>
									<xsd:element name="sendRestart" type="xsd:boolean" minOccurs="0">
										<xsd:annotation>
											<xsd:documentation>Not nullable.</xsd:documentation>
										</xsd:annotation>
									</xsd:element>
									<xsd:element name="setupNonISDNPI" type="xsd:boolean" nillable="false" minOccurs="0">
										<xsd:annotation>
											<xsd:documentation>Not nullable.</xsd:documentation>
										</xsd:annotation>
									</xsd:element>
									<xsd:element name="sigDigits" type="xsd:boolean" minOccurs="0">
										<xsd:annotation>
											<xsd:documentation>Not nullable.</xsd:documentation>
										</xsd:annotation>
									</xsd:element>
									<xsd:element name="span" type="xsd:nonNegativeInteger" minOccurs="0">
										<xsd:annotation>
											<xsd:documentation>Not nullable.</xsd:documentation>
										</xsd:annotation>
									</xsd:element>
									<xsd:element name="statusPoll" type="xsd:boolean" minOccurs="0">
										<xsd:annotation>
											<xsd:documentation>Not nullable.</xsd:documentation>
										</xsd:annotation>
									</xsd:element>
									<xsd:element name="stripCountOut" type="xsd:nonNegativeInteger" minOccurs="0">
										<xsd:annotation>
											<xsd:documentation>Not nullable.</xsd:documentation>
										</xsd:annotation>
									</xsd:element>
									<xsd:element name="trunkPadRx" type="axl:XTrunkPad" minOccurs="0">
										<xsd:annotation>
											<xsd:documentation>Not nullable.</xsd:documentation>
										</xsd:annotation>
									</xsd:element>
									<xsd:element name="trunkPadTx" type="axl:XTrunkPad" nillable="false" minOccurs="0">
										<xsd:annotation>
											<xsd:documentation>Not nullable.</xsd:documentation>
										</xsd:annotation>
									</xsd:element>
									<xsd:element name="trunkLevel" type="axl:XTrunkLevel" nillable="false" minOccurs="0">
										<xsd:annotation>
											<xsd:documentation>Not nullable.</xsd:documentation>
										</xsd:annotation>
									</xsd:element>
									<xsd:element name="yellowAlarm" type="axl:XYellowAlarm" minOccurs="0">
										<xsd:annotation>
											<xsd:documentation>Not nullable.</xsd:documentation>
										</xsd:annotation>
									</xsd:element>
									<xsd:element name="zeroSuppression" type="axl:XZeroSuppression" minOccurs="0">
										<xsd:annotation>
											<xsd:documentation>Not nullable.</xsd:documentation>
										</xsd:annotation>
									</xsd:element>
									<xsd:element name="sMDIBasePort" type="xsd:positiveInteger" minOccurs="0">
										<xsd:annotation>
											<xsd:documentation>Not nullable.</xsd:documentation>
										</xsd:annotation>
									</xsd:element>
									<xsd:element name="protocolProfile91NameOnly" type="xsd:boolean" minOccurs="0">
										<xsd:annotation>
											<xsd:documentation>Not nullable.</xsd:documentation>
										</xsd:annotation>
									</xsd:element>
								</xsd:sequence>
							</xsd:complexType>
						</xsd:element>
						<xsd:element name="bri">
							<xsd:complexType>
								<xsd:sequence>
									<xsd:element name="acceptInboundRDNIS" type="xsd:boolean" minOccurs="0">
										<xsd:annotation>
											<xsd:documentation>Not nullable.</xsd:documentation>
										</xsd:annotation>
									</xsd:element>
									<xsd:element name="briProtocol" type="axl:XBriProtocol" minOccurs="0">
										<xsd:annotation>
											<xsd:documentation>Not nullable.</xsd:documentation>
										</xsd:annotation>
									</xsd:element>
									<xsd:element name="calledPlan" type="axl:XNumberingPlan" minOccurs="0">
										<xsd:annotation>
											<xsd:documentation>Not nullable.</xsd:documentation>
										</xsd:annotation>
									</xsd:element>
									<xsd:element name="calledPri" type="axl:XPriOfNumber" minOccurs="0">
										<xsd:annotation>
											<xsd:documentation>Not nullable.</xsd:documentation>
										</xsd:annotation>
									</xsd:element>
									<xsd:element name="callerIDDN" type="axl:XDirectoryNumber" minOccurs="0">
										<xsd:annotation>
											<xsd:documentation>Nullable.</xsd:documentation>
										</xsd:annotation>
									</xsd:element>
									<xsd:element name="callingPartySelection" type="axl:XCallingPartySelection" minOccurs="0">
										<xsd:annotation>
											<xsd:documentation>Not nullable.</xsd:documentation>
										</xsd:annotation>
									</xsd:element>
									<xsd:element name="callingPlan" type="axl:XNumberingPlan" minOccurs="0">
										<xsd:annotation>
											<xsd:documentation>Not nullable.</xsd:documentation>
										</xsd:annotation>
									</xsd:element>
									<xsd:element name="callingPri" type="axl:XPriOfNumber" minOccurs="0">
										<xsd:annotation>
											<xsd:documentation>Not nullable.</xsd:documentation>
										</xsd:annotation>
									</xsd:element>
									<xsd:element name="chanIE" type="xsd:nonNegativeInteger" minOccurs="0">
										<xsd:annotation>
											<xsd:documentation>This field has been deprecated in Seadragon</xsd:documentation>
										</xsd:annotation>
									</xsd:element>
									<xsd:element name="clockReference" type="axl:XClockReference" minOccurs="0">
										<xsd:annotation>
											<xsd:documentation>Not nullable.</xsd:documentation>
										</xsd:annotation>
									</xsd:element>
									<xsd:element name="csuParam" type="axl:XCSUParam" minOccurs="0">
										<xsd:annotation>
											<xsd:documentation>Not nullable.</xsd:documentation>
										</xsd:annotation>
									</xsd:element>
									<xsd:element name="dChannelEnable" type="xsd:boolean" minOccurs="0">
										<xsd:annotation>
											<xsd:documentation>Not nullable.</xsd:documentation>
										</xsd:annotation>
									</xsd:element>
									<xsd:element name="direction" type="xsd:boolean" minOccurs="0">
										<xsd:annotation>
											<xsd:documentation>Not nullable.</xsd:documentation>
										</xsd:annotation>
									</xsd:element>
									<xsd:element name="displayIE" type="xsd:boolean" minOccurs="0">
										<xsd:annotation>
											<xsd:documentation>Not nullable.</xsd:documentation>
										</xsd:annotation>
									</xsd:element>
									<xsd:element name="encode" type="axl:XEncode" minOccurs="0">
										<xsd:annotation>
											<xsd:documentation>Not nullable.</xsd:documentation>
										</xsd:annotation>
									</xsd:element>
									<xsd:element name="fdlChannel" type="axl:XFDLChannel" minOccurs="0">
										<xsd:annotation>
											<xsd:documentation>This field has been deprecated for SeaDragon.</xsd:documentation>
										</xsd:annotation>
									</xsd:element>
									<xsd:element name="firstDelay" type="xsd:nonNegativeInteger" minOccurs="0">
										<xsd:annotation>
											<xsd:documentation>Not nullable.</xsd:documentation>
										</xsd:annotation>
									</xsd:element>
									<xsd:element name="framing" type="axl:XFraming" minOccurs="0">
										<xsd:annotation>
											<xsd:documentation>Not nullable.</xsd:documentation>
										</xsd:annotation>
									</xsd:element>
									<xsd:element name="intraDelay" type="xsd:nonNegativeInteger" minOccurs="0">
										<xsd:annotation>
											<xsd:documentation>Not nullable.</xsd:documentation>
										</xsd:annotation>
									</xsd:element>
									<xsd:element name="numberIE" type="xsd:boolean" minOccurs="0">
										<xsd:annotation>
											<xsd:documentation>Not nullable.</xsd:documentation>
										</xsd:annotation>
									</xsd:element>
									<xsd:element name="numDigits" type="xsd:nonNegativeInteger" minOccurs="0">
										<xsd:annotation>
											<xsd:documentation>Not nullable.</xsd:documentation>
										</xsd:annotation>
									</xsd:element>
									<xsd:element name="prefix" type="xsd:string" minOccurs="0">
										<xsd:annotation>
											<xsd:documentation>Nullable.</xsd:documentation>
										</xsd:annotation>
									</xsd:element>
									<xsd:element name="presentationBit" type="axl:XPresentationBit" minOccurs="0">
										<xsd:annotation>
											<xsd:documentation>Not nullable.</xsd:documentation>
										</xsd:annotation>
									</xsd:element>
									<xsd:element name="sendRestart" type="xsd:boolean" minOccurs="0">
										<xsd:annotation>
											<xsd:documentation>Not nullable.</xsd:documentation>
										</xsd:annotation>
									</xsd:element>
									<xsd:element name="setupNonISDNPI" type="xsd:boolean" nillable="false" minOccurs="0">
										<xsd:annotation>
											<xsd:documentation>Not nullable.</xsd:documentation>
										</xsd:annotation>
									</xsd:element>
									<xsd:element name="sigDigits" type="xsd:boolean" minOccurs="0">
										<xsd:annotation>
											<xsd:documentation>Not nullable.</xsd:documentation>
										</xsd:annotation>
									</xsd:element>
									<xsd:element name="stableIn4" type="xsd:boolean" minOccurs="0">
										<xsd:annotation>
											<xsd:documentation>Not nullable.</xsd:documentation>
										</xsd:annotation>
									</xsd:element>
									<xsd:element name="statusPoll" type="xsd:boolean" minOccurs="0">
										<xsd:annotation>
											<xsd:documentation>Not nullable.</xsd:documentation>
										</xsd:annotation>
									</xsd:element>
									<xsd:element name="stripCountOut" type="xsd:nonNegativeInteger" minOccurs="0">
										<xsd:annotation>
											<xsd:documentation>Not nullable.</xsd:documentation>
										</xsd:annotation>
									</xsd:element>
									<xsd:element name="trunkPadRx" type="axl:XTrunkPad" minOccurs="0">
										<xsd:annotation>
											<xsd:documentation>Not nullable.</xsd:documentation>
										</xsd:annotation>
									</xsd:element>
									<xsd:element name="trunkPadTx" type="axl:XTrunkPad" nillable="false" minOccurs="0">
										<xsd:annotation>
											<xsd:documentation>Not nullable.</xsd:documentation>
										</xsd:annotation>
									</xsd:element>
									<xsd:element name="trunkLevel" type="axl:XTrunkLevel" nillable="false" minOccurs="0">
										<xsd:annotation>
											<xsd:documentation>Not nullable.</xsd:documentation>
										</xsd:annotation>
									</xsd:element>
									<xsd:element name="yellowAlarm" type="axl:XYellowAlarm" minOccurs="0">
										<xsd:annotation>
											<xsd:documentation>Not nullable.</xsd:documentation>
										</xsd:annotation>
									</xsd:element>
									<xsd:element name="zeroSuppression" type="axl:XZeroSuppression" minOccurs="0">
										<xsd:annotation>
											<xsd:documentation>Not nullable.</xsd:documentation>
										</xsd:annotation>
									</xsd:element>
								</xsd:sequence>
							</xsd:complexType>
						</xsd:element>
						<xsd:element name="t1">
							<xsd:complexType>
								<xsd:sequence>
									<xsd:element name="trunkSelectionOrder" type="axl:XTrunkSelectionOrder" minOccurs="0">
										<xsd:annotation>
											<xsd:documentation>Not nullable.</xsd:documentation>
										</xsd:annotation>
									</xsd:element>
									<xsd:element name="clockReference" type="axl:XClockReference" minOccurs="0">
										<xsd:annotation>
											<xsd:documentation>Not nullable.</xsd:documentation>
										</xsd:annotation>
									</xsd:element>
									<xsd:element name="csuParam" type="axl:XCSUParam" minOccurs="0">
										<xsd:annotation>
											<xsd:documentation>Not nullable.</xsd:documentation>
										</xsd:annotation>
									</xsd:element>
									<xsd:element name="digitSending" type="axl:XDigitSending" minOccurs="0">
										<xsd:annotation>
											<xsd:documentation>Not nullable.</xsd:documentation>
										</xsd:annotation>
									</xsd:element>
									<xsd:element name="encode" type="axl:XEncode" minOccurs="0">
										<xsd:annotation>
											<xsd:documentation>Not nullable.</xsd:documentation>
										</xsd:annotation>
									</xsd:element>
									<xsd:element name="fdlChannel" type="axl:XFDLChannel" minOccurs="0">
										<xsd:annotation>
											<xsd:documentation>This field has been deprecated for SeaDragon.</xsd:documentation>
										</xsd:annotation>
									</xsd:element>
									<xsd:element name="ports" type="axl:XT1PortList" minOccurs="0">
										<xsd:annotation>
											<xsd:documentation>If the ports element is included in the request, then all existing ports on this gateway will be replaced by the ports found here.</xsd:documentation>
										</xsd:annotation>
									</xsd:element>
									<xsd:element name="yellowAlarm" type="axl:XYellowAlarm" minOccurs="0">
										<xsd:annotation>
											<xsd:documentation>Not nullable.</xsd:documentation>
										</xsd:annotation>
									</xsd:element>
									<xsd:element name="zeroSuppression" type="axl:XZeroSuppression" minOccurs="0">
										<xsd:annotation>
											<xsd:documentation>Not nullable.</xsd:documentation>
										</xsd:annotation>
									</xsd:element>
								</xsd:sequence>
							</xsd:complexType>
						</xsd:element>
					</xsd:choice>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="updateGatewayEndpoint" type="axlapi:UpdateGatewayEndpointReq"/>
	<xsd:element name="updateGatewayEndpointResponse" type="axlapi:StandardResponse"/>
	<xsd:element name="getGatewayEndpoint" type="axlapi:NameAndGUIDRequest"/>
	<xsd:complexType name="GetGatewayEndpointRes">
		<xsd:annotation>
			<xsd:documentation>Contains the Gateway specified by the request.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIResponse">
				<xsd:sequence>
					<xsd:element name="return">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="device" type="axl:XGateway"/>
							</xsd:sequence>
						</xsd:complexType>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="getGatewayEndpointResponse" type="axlapi:GetGatewayEndpointRes"/>
	<xsd:element name="removeGatewayEndpoint" type="axlapi:NameAndGUIDRequest"/>
	<xsd:element name="removeGatewayEndpointResponse" type="axlapi:StandardResponse"/>
	<xsd:complexType name="AddRouteFilterReq" abstract="false" final="#all">
		<xsd:annotation>
			<xsd:documentation>Adds a new Route Filter to the database.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIRequest">
				<xsd:sequence>
					<xsd:element name="routeFilter" type="axl:XRouteFilter" nillable="false"/>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="addRouteFilter" type="axlapi:AddRouteFilterReq"/>
	<xsd:element name="addRouteFilterResponse" type="axlapi:StandardResponse"/>
	<xsd:complexType name="UpdateRouteFilterReq" abstract="false" final="#all">
		<xsd:annotation>
			<xsd:documentation>Update an existing Route Filter in the database.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:NameAndGUIDRequest">
				<xsd:sequence>
					<xsd:element name="newName" type="axl:String50" nillable="false" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>Not nullable.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:choice minOccurs="0">
						<xsd:element name="dialPlanId" type="axl:XUUID">
							<xsd:annotation>
								<xsd:documentation>The GUID of the new Dial Plan for this Route Filter. Not Nullable.</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
						<xsd:element name="dialPlanName" type="xsd:Name">
							<xsd:annotation>
								<xsd:documentation>The name of the new Dial Plan for this Route Filter.  Not Nullable.</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
					</xsd:choice>
					<xsd:element name="members" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>The new members of this Route Filter.  If this element is null, then all members are removed from this route filter.  Note:  If the "members" element is present, then all existing members are removed and replaced with the "member" sub-elements.</xsd:documentation>
						</xsd:annotation>
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="member" type="axl:XRouteFilterMember" minOccurs="0" maxOccurs="unbounded"/>
							</xsd:sequence>
						</xsd:complexType>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="updateRouteFilter" type="axlapi:UpdateRouteFilterReq"/>
	<xsd:element name="updateRouteFilterResponse" type="axlapi:StandardResponse"/>
	<xsd:element name="getRouteFilter" type="axlapi:NameAndGUIDRequest"/>
	<xsd:complexType name="GetRouteFilterRes">
		<xsd:annotation>
			<xsd:documentation>Contains the Route Filter specified by the request.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIResponse">
				<xsd:sequence>
					<xsd:element name="return">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="routeFilter" type="axl:XRouteFilter"/>
							</xsd:sequence>
						</xsd:complexType>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="getRouteFilterResponse" type="axlapi:GetRouteFilterRes"/>
	<xsd:element name="removeRouteFilter" type="axlapi:NameAndGUIDRequest"/>
	<xsd:element name="removeRouteFilterResponse" type="axlapi:StandardResponse"/>
	<xsd:complexType name="GetServiceParameterReq">
		<xsd:annotation>
			<xsd:documentation>Retrieves the specified service parameter from the database.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIRequest">
				<xsd:sequence>
					<xsd:choice>
						<xsd:element name="uuid" type="axl:XUUID">
							<xsd:annotation>
								<xsd:documentation>The pkid of the service parameter in the ProcessConfig table.</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
						<xsd:sequence>
							<xsd:element name="name" type="axl:String50">
								<xsd:annotation>
									<xsd:documentation>Name of the service parameter. Not nullable.</xsd:documentation>
								</xsd:annotation>
							</xsd:element>
							<xsd:choice>
								<xsd:annotation>
									<xsd:documentation>The process Node that this the service parameter belongs to. Not nullable.</xsd:documentation>
								</xsd:annotation>
								<xsd:element name="processNodeId" type="axl:XUUID"/>
								<xsd:element name="processNodeName" type="axl:String50"/>
							</xsd:choice>
							<xsd:element name="service" type="axl:XService">
								<xsd:annotation>
									<xsd:documentation>The service that this service parameter belongs to.</xsd:documentation>
								</xsd:annotation>
							</xsd:element>
						</xsd:sequence>
					</xsd:choice>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="getServiceParameter" type="axlapi:GetServiceParameterReq"/>
	<xsd:complexType name="GetServiceParameterRes">
		<xsd:annotation>
			<xsd:documentation>Contains the service parameter specified by the request.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIResponse">
				<xsd:sequence>
					<xsd:element name="return">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="serviceParameter" type="axl:XProcessConfig"/>
							</xsd:sequence>
						</xsd:complexType>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="getServiceParameterResponse" type="axlapi:GetServiceParameterRes"/>
	<xsd:complexType name="UpdateServiceParameterReq">
		<xsd:annotation>
			<xsd:documentation>Modifies an existing service parameter's value.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:GetServiceParameterReq">
				<xsd:sequence>
					<xsd:element name="newValue" type="axl:String1024" nillable="true">
						<xsd:annotation>
							<xsd:documentation>The new value of the service parameter. Nullable in some cases.  Must be a valid value for this service parameter's data type or an error will be returned.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="updateServiceParameter" type="axlapi:UpdateServiceParameterReq"/>
	<xsd:element name="updateServiceParameterResponse" type="axlapi:StandardResponse">
		<xsd:annotation>
			<xsd:documentation>Would return either the GUID of the object that was altered, or return true if the operation was successful.  Whichever is possible for this request.</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<xsd:complexType name="AddLocationReq" abstract="false" final="#all">
		<xsd:annotation>
			<xsd:documentation>Adds a new Location to the database.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIRequest">
				<xsd:sequence>
					<xsd:element name="location" type="axl:XLocation" nillable="false"/>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="addLocation" type="axlapi:AddLocationReq"/>
	<xsd:element name="addLocationResponse" type="axlapi:StandardResponse"/>
	<xsd:complexType name="UpdateLocationReq" abstract="false" final="#all">
		<xsd:annotation>
			<xsd:documentation>Update an existing Location in the database.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:NameAndGUIDRequest">
				<xsd:sequence>
					<xsd:element name="newName" type="axl:String50" nillable="false" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>Not nullable.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="kbits" type="xsd:nonNegativeInteger" nillable="false" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>Not nullable.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="videoKbits" type="xsd:nonNegativeInteger" nillable="false" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>Not nullable.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="updateLocation" type="axlapi:UpdateLocationReq"/>
	<xsd:element name="updateLocationResponse" type="axlapi:StandardResponse"/>
	<xsd:element name="getLocation" type="axlapi:NameAndGUIDRequest"/>
	<xsd:complexType name="GetLocationRes">
		<xsd:annotation>
			<xsd:documentation>Contains the Location specified by the request.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIResponse">
				<xsd:sequence>
					<xsd:element name="return">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="location" type="axl:XLocation"/>
							</xsd:sequence>
						</xsd:complexType>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="getLocationResponse" type="axlapi:GetLocationRes"/>
	<xsd:element name="removeLocation" type="axlapi:NameAndGUIDRequest"/>
	<xsd:element name="removeLocationResponse" type="axlapi:StandardResponse"/>
	<xsd:complexType name="AddCMCInfoReq" abstract="false" final="#all">
		<xsd:annotation>
			<xsd:documentation>Adds a new CMCInfo to the database.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIRequest">
				<xsd:sequence>
					<xsd:element name="cmcInfo" type="axl:XCMCInfo" nillable="false"/>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="addCMCInfo" type="axlapi:AddCMCInfoReq"/>
	<xsd:element name="addCMCInfoResponse" type="axlapi:StandardResponse"/>
	<xsd:complexType name="UpdateCMCInfoReq" abstract="false" final="#all">
		<xsd:annotation>
			<xsd:documentation>Update an existing CMCInfo in the database.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:GUIDRequest">
				<xsd:sequence>
					<xsd:element name="code" type="axl:String16" nillable="false" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>Not nullable.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="description" type="axl:String16" nillable="false" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>Not nullable.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="authorizationLevel" type="xsd:nonNegativeInteger" nillable="false" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>Not nullable.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="updateCMCInfo" type="axlapi:UpdateCMCInfoReq"/>
	<xsd:element name="updateCMCInfoResponse" type="axlapi:StandardResponse"/>
	<xsd:element name="getCMCInfo" type="axlapi:GUIDRequest"/>
	<xsd:complexType name="GetCMCInfoRes">
		<xsd:annotation>
			<xsd:documentation>Contains the CMCInfo specified by the request.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIResponse">
				<xsd:sequence>
					<xsd:element name="return">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="cmcInfo" type="axl:XCMCInfo"/>
							</xsd:sequence>
						</xsd:complexType>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="getCMCInfoResponse" type="axlapi:GetCMCInfoRes"/>
	<xsd:element name="removeCMCInfo" type="axlapi:GUIDRequest"/>
	<xsd:element name="removeCMCInfoResponse" type="axlapi:StandardResponse"/>
	<xsd:complexType name="AddFACInfoReq" abstract="false" final="#all">
		<xsd:annotation>
			<xsd:documentation>Adds a new FACInfo to the database.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIRequest">
				<xsd:sequence>
					<xsd:element name="facInfo" type="axl:XFACInfo" nillable="false"/>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="addFACInfo" type="axlapi:AddFACInfoReq"/>
	<xsd:element name="addFACInfoResponse" type="axlapi:StandardResponse"/>
	<xsd:complexType name="UpdateFACInfoReq" abstract="false" final="#all">
		<xsd:annotation>
			<xsd:documentation>Update an existing FACInfo in the database.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:GUIDRequest">
				<xsd:sequence>
					<xsd:element name="code" type="axl:String16" nillable="false" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>Not nullable.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="description" type="axl:String50" nillable="false" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>Not nullable.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="authorizationLevel" type="xsd:nonNegativeInteger" nillable="false" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>Not nullable.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="updateFACInfo" type="axlapi:UpdateFACInfoReq"/>
	<xsd:element name="updateFACInfoResponse" type="axlapi:StandardResponse"/>
	<xsd:element name="getFACInfo" type="axlapi:GUIDRequest"/>
	<xsd:complexType name="GetFACInfoRes">
		<xsd:annotation>
			<xsd:documentation>Contains the FACInfo specified by the request.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIResponse">
				<xsd:sequence>
					<xsd:element name="return">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="facInfo" type="axl:XFACInfo"/>
							</xsd:sequence>
						</xsd:complexType>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="getFACInfoResponse" type="axlapi:GetFACInfoRes"/>
	<xsd:element name="removeFACInfo" type="axlapi:GUIDRequest"/>
	<xsd:element name="removeFACInfoResponse" type="axlapi:StandardResponse"/>
	<xsd:complexType name="AddRegionReq" abstract="false" final="#all">
		<xsd:annotation>
			<xsd:documentation>Adds a new Region to the database and automatically adds associated regions to the Region Matrix table.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIRequest">
				<xsd:sequence>
					<xsd:element name="region">
						<xsd:complexType>
							<xsd:complexContent>
								<xsd:extension base="axl:XRegion">
									<xsd:sequence minOccurs="0">
										<xsd:element name="defaultCodec" type="axl:XBandwidth" default="G.711" nillable="false" minOccurs="0"/>
									</xsd:sequence>
								</xsd:extension>
							</xsd:complexContent>
						</xsd:complexType>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="addRegion" type="axlapi:AddRegionReq"/>
	<xsd:element name="addRegionResponse" type="axlapi:StandardResponse"/>
	<xsd:complexType name="UpdateRegionReq" abstract="false" final="#all">
		<xsd:annotation>
			<xsd:documentation>Update an existing region in the database.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIRequest">
				<xsd:sequence>
					<xsd:choice>
						<xsd:element name="name" type="axl:String50">
							<xsd:annotation>
								<xsd:documentation>The name of the Region to update. Not nullable.</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
						<xsd:element name="uuid" type="axl:XUUID">
							<xsd:annotation>
								<xsd:documentation>The UUID of the Region to update. Not nullable.</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
					</xsd:choice>
					<xsd:element name="newName" type="axl:String50" nillable="false" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>The new name for this Region. Not nullable.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="updateRegion" type="axlapi:UpdateRegionReq"/>
	<xsd:element name="updateRegionResponse" type="axlapi:StandardResponse"/>
	<xsd:element name="removeRegion" type="axlapi:NameAndGUIDRequest"/>
	<xsd:element name="removeRegionResponse" type="axlapi:StandardResponse"/>
	<xsd:element name="getRegion" type="axlapi:NameAndGUIDRequest"/>
	<xsd:complexType name="GetRegionRes">
		<xsd:annotation>
			<xsd:documentation>Contains the Region specified by the request.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIResponse">
				<xsd:sequence>
					<xsd:element name="return">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="region" type="axl:XRegion"/>
							</xsd:sequence>
						</xsd:complexType>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="getRegionResponse" type="axlapi:GetRegionRes"/>
	<xsd:complexType name="UpdateRegionMatrixReq">
		<xsd:annotation>
			<xsd:documentation>Updates a specific entry in the RegionMatrix table.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIRequest">
				<xsd:sequence>
					<xsd:element name="uuid" type="axl:XUUID">
						<xsd:annotation>
							<xsd:documentation>The pkid of the entry in the RegionMatrix table that is to be modified.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="bandwidth" type="axl:XBandwidth" nillable="false" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>The new bandwidth value for this particular region relationship.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="videoBandwidth" type="xsd:nonNegativeInteger" nillable="false" minOccurs="0"/>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="updateRegionMatrix" type="axlapi:UpdateRegionMatrixReq"/>
	<xsd:element name="updateRegionMatrixResponse" type="axlapi:StandardResponse"/>
	<xsd:complexType name="AddMGCPReq" abstract="false" final="#all">
		<xsd:annotation>
			<xsd:documentation>Adds one new MGCP to the database.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIRequest">
				<xsd:sequence>
					<xsd:element name="newMGCP" type="axl:XMGCP"/>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="addMGCP" type="axlapi:AddMGCPReq"/>
	<xsd:element name="addMGCPResponse" type="axlapi:StandardResponse"/>
	<xsd:complexType name="AddMGCPUnitReq" abstract="false" final="#all">
		<xsd:annotation>
			<xsd:documentation>Adds one new MGCP Unit to the MGCP Gateway.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIRequest">
				<xsd:sequence>
					<xsd:choice>
						<xsd:element name="uuid" type="axl:XUUID">
							<xsd:annotation>
								<xsd:documentation>The pkid of the MGCP gateway for which the unit is being added</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
						<xsd:element name="domainName" type="axl:String64">
							<xsd:annotation>
								<xsd:documentation>the domain name of MGCP Gateway for which the unit is being added</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
					</xsd:choice>
					<xsd:element name="unit" type="axl:XMGCPUnit"/>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="addMGCPUnit" type="axlapi:AddMGCPUnitReq"/>
	<xsd:element name="addMGCPUnitResponse" type="axlapi:StandardResponse"/>
	<xsd:complexType name="AddMGCPSubunitReq" abstract="false" final="#all">
		<xsd:annotation>
			<xsd:documentation>Adds one new MGCP Subunit to the MGCP Gateway's unit(slot).</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIRequest">
				<xsd:sequence>
					<xsd:choice>
						<xsd:element name="uuid" type="axl:XUUID">
							<xsd:annotation>
								<xsd:documentation>The pkid of the MGCP gateway for which the subunit is being added</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
						<xsd:element name="domainName" type="axl:String64">
							<xsd:annotation>
								<xsd:documentation>The domain name of MGCP Gateway for which the subunit is being added</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
					</xsd:choice>
					<xsd:element name="unit">
						<xsd:annotation>
							<xsd:documentation>The unit(slot) index for which the subunit is being added</xsd:documentation>
						</xsd:annotation>
						<xsd:complexType>
							<xsd:attribute name="index" type="xsd:nonNegativeInteger" use="required"/>
						</xsd:complexType>
					</xsd:element>
					<xsd:element name="subunit" type="axl:XMGCPSubunit"/>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="addMGCPSubunit" type="axlapi:AddMGCPSubunitReq"/>
	<xsd:element name="addMGCPSubunitResponse" type="axlapi:StandardResponse"/>
	<xsd:complexType name="AddMGCPEndpointReq" abstract="false" final="#all">
		<xsd:annotation>
			<xsd:documentation>Adds one and only one new MGCP Endpoint(port) to the MGCP Gateway's subunit.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIRequest">
				<xsd:sequence>
					<xsd:choice>
						<xsd:element name="uuid" type="axl:XUUID">
							<xsd:annotation>
								<xsd:documentation>The pkid of the MGCP gateway for which the endpoint is being added</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
						<xsd:element name="domainName" type="axl:String64">
							<xsd:annotation>
								<xsd:documentation>The domain name of MGCP Gateway for which the endpoint is being added</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
					</xsd:choice>
					<xsd:element name="unit">
						<xsd:annotation>
							<xsd:documentation>The unit(slot) index for which the endpoint is being added</xsd:documentation>
						</xsd:annotation>
						<xsd:complexType>
							<xsd:attribute name="index" type="xsd:nonNegativeInteger" use="required"/>
						</xsd:complexType>
					</xsd:element>
					<xsd:element name="subunit">
						<xsd:annotation>
							<xsd:documentation>The subunit index for which the endpoint is being added</xsd:documentation>
						</xsd:annotation>
						<xsd:complexType>
							<xsd:attribute name="index" type="xsd:nonNegativeInteger" use="required"/>
						</xsd:complexType>
					</xsd:element>
					<xsd:element name="endpoint">
						<xsd:complexType>
							<xsd:complexContent>
								<xsd:extension base="axl:XMGCPEndpoint">
									<xsd:attribute name="index" type="xsd:nonNegativeInteger" use="required"/>
								</xsd:extension>
							</xsd:complexContent>
						</xsd:complexType>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="addMGCPEndpoint" type="axlapi:AddMGCPEndpointReq"/>
	<xsd:element name="addMGCPEndpointResponse" type="axlapi:StandardResponse"/>
	<xsd:complexType name="GetMGCPReq" final="#all">
		<xsd:annotation>
			<xsd:documentation>Retrieves the specified MGCP gateway info from the database.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIRequest">
				<xsd:choice>
					<xsd:element name="uuid" type="axl:XUUID" nillable="false">
						<xsd:annotation>
							<xsd:documentation>The GUID of the MGCP Gateway to be retrieved.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="domainName" type="xsd:string" nillable="false">
						<xsd:annotation>
							<xsd:documentation>The domain name of the MGCP to be retrieved.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
				</xsd:choice>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="getMGCP" type="axlapi:GetMGCPReq"/>
	<xsd:complexType name="GetMGCPRes">
		<xsd:annotation>
			<xsd:documentation>Returns the MGCP specified by the GetMGCP request.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIResponse">
				<xsd:sequence>
					<xsd:element name="return">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="mgcp" type="axl:XMGCP"/>
							</xsd:sequence>
						</xsd:complexType>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="getMGCPResponse" type="axlapi:GetMGCPRes"/>
	<xsd:complexType name="RemoveMGCPReq">
		<xsd:annotation>
			<xsd:documentation>Removes the specified MGCP Gateway from the database.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIRequest">
				<xsd:choice>
					<xsd:element name="uuid" type="axl:XUUID" nillable="false">
						<xsd:annotation>
							<xsd:documentation>The GUID of the MGCP to be removed.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="domainName" type="xsd:string" nillable="false">
						<xsd:annotation>
							<xsd:documentation>The domain name of the MGCP to be removed.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
				</xsd:choice>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="removeMGCP" type="axlapi:RemoveMGCPReq"/>
	<xsd:element name="removeMGCPResponse" type="axlapi:StandardResponse"/>
	<xsd:complexType name="RemoveMGCPUnitReq">
		<xsd:annotation>
			<xsd:documentation>Removes the specified unit(slot) of MGCP Gateway from the database.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIRequest">
				<xsd:sequence>
					<xsd:choice>
						<xsd:element name="uuid" type="axl:XUUID" nillable="false">
							<xsd:annotation>
								<xsd:documentation>The GUID of the MGCP whose unit is to be removed.</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
						<xsd:element name="domainName" type="xsd:string" nillable="false">
							<xsd:annotation>
								<xsd:documentation>The domain name of the MGCP whose unit is to be removed.</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
					</xsd:choice>
					<xsd:element name="unit" nillable="false">
						<xsd:annotation>
							<xsd:documentation>The unit or slot number to be removed from the MGCP gateway(specified as the attribute index)</xsd:documentation>
						</xsd:annotation>
						<xsd:complexType>
							<xsd:attribute name="index" type="xsd:nonNegativeInteger" use="required"/>
						</xsd:complexType>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="removeMGCPUnit" type="axlapi:RemoveMGCPUnitReq"/>
	<xsd:element name="removeMGCPUnitResponse" type="axlapi:StandardResponse"/>
	<xsd:complexType name="RemoveMGCPSubunitReq">
		<xsd:annotation>
			<xsd:documentation>Removes the specified subunit of MGCP Gateway's unit from the database.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIRequest">
				<xsd:sequence>
					<xsd:choice>
						<xsd:element name="uuid" type="axl:XUUID" nillable="false">
							<xsd:annotation>
								<xsd:documentation>The GUID of the MGCP whose unit's subunit is to be removed.</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
						<xsd:element name="domainName" type="xsd:string" nillable="false">
							<xsd:annotation>
								<xsd:documentation>The domain name of the MGCP whose subunit is to be removed.</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
					</xsd:choice>
					<xsd:element name="unit" nillable="false">
						<xsd:annotation>
							<xsd:documentation>The unit number from which the subunit is to be removed from the MGCP gateway(specified as the attribute "index")</xsd:documentation>
						</xsd:annotation>
						<xsd:complexType>
							<xsd:attribute name="index" type="xsd:nonNegativeInteger" use="required"/>
						</xsd:complexType>
					</xsd:element>
					<xsd:element name="subunit" nillable="false">
						<xsd:annotation>
							<xsd:documentation>The subunit to be removed from the MGCP gateway(specified as the attribute "index")</xsd:documentation>
						</xsd:annotation>
						<xsd:complexType>
							<xsd:attribute name="index" type="xsd:nonNegativeInteger" use="required"/>
						</xsd:complexType>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="removeMGCPSubunit" type="axlapi:RemoveMGCPSubunitReq"/>
	<xsd:element name="removeMGCPSubunitResponse" type="axlapi:StandardResponse"/>
	<xsd:complexType name="RemoveMGCPEndpointReq">
		<xsd:annotation>
			<xsd:documentation>Removes the specified endpoint(port) of MGCP Gateway from the database.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIRequest">
				<xsd:sequence>
					<xsd:choice>
						<xsd:element name="uuid" type="axl:XUUID" nillable="false">
							<xsd:annotation>
								<xsd:documentation>The GUID of the MGCP whose endpoint is to be removed.</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
						<xsd:element name="domainName" type="xsd:string" nillable="false">
							<xsd:annotation>
								<xsd:documentation>The domain name of the MGCP whose endpoint is to be removed.</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
					</xsd:choice>
					<xsd:element name="unit" nillable="false">
						<xsd:annotation>
							<xsd:documentation>The unit(slot) number from which the endpoint is to be removed(specified as the attribute "index")</xsd:documentation>
						</xsd:annotation>
						<xsd:complexType>
							<xsd:attribute name="index" type="xsd:nonNegativeInteger" use="required"/>
						</xsd:complexType>
					</xsd:element>
					<xsd:element name="subunit" nillable="false">
						<xsd:annotation>
							<xsd:documentation>The subunit from which the endpoint(port) is to be removed (specified as the attribute "index")</xsd:documentation>
						</xsd:annotation>
						<xsd:complexType>
							<xsd:attribute name="index" type="xsd:nonNegativeInteger" use="required"/>
						</xsd:complexType>
					</xsd:element>
					<xsd:element name="endpoint" nillable="false">
						<xsd:annotation>
							<xsd:documentation>The endpoint(port) number to be removed (specified as the attribute "index")</xsd:documentation>
						</xsd:annotation>
						<xsd:complexType>
							<xsd:attribute name="index" type="xsd:nonNegativeInteger" use="required"/>
						</xsd:complexType>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="removeMGCPEndpoint" type="axlapi:RemoveMGCPEndpointReq"/>
	<xsd:element name="removeMGCPEndpointResponse" type="axlapi:StandardResponse"/>
	<xsd:complexType name="UpdateMGCPReq">
		<xsd:annotation>
			<xsd:documentation>Updates an existing MGCP Gateway information in the database.
To modify unit, use removeMGCPUnit-addMGCPUnit.
To modify subunit, use removeMGCPSubunit-addMGCPSubunit
To modify endpoint, use removeMGCPEndpoint-addMGCPEndpoint</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIRequest">
				<xsd:sequence>
					<xsd:choice>
						<xsd:element name="domainName" type="axl:String64">
							<xsd:annotation>
								<xsd:documentation>The domain name of the MGCP that you want to update.</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
						<xsd:element name="uuid" type="axl:XUUID">
							<xsd:annotation>
								<xsd:documentation>The GUID of the MGCP that you want to update.</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
					</xsd:choice>
					<xsd:element name="newDomainName" type="axl:String64" nillable="false" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>The new domain name of the MGCP.  Cannot be null.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="description" type="axl:String100" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>The new description of the MGCP.  Nullable.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="product" type="axl:XProduct" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>Read only</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="model" type="axl:XModel" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>Read only</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:choice minOccurs="0">
						<xsd:element name="callManagerGroup" type="axl:XCallManagerGroup" minOccurs="0">
							<xsd:annotation>
								<xsd:documentation>The GUID of the new Call Manager Group for this MGCP.</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
						<xsd:element name="callManagerGroupName" type="axl:String50" minOccurs="0">
							<xsd:annotation>
								<xsd:documentation>The name of the new Call  Manager Group name for this MGCP. </xsd:documentation>
							</xsd:annotation>
						</xsd:element>
					</xsd:choice>
					<xsd:element name="scratch" type="axl:Name50" minOccurs="0"/>
					<xsd:element name="vendorConfig" type="axl:XVendorConfig" minOccurs="0"/>
					<xsd:element name="versionStamp" type="axl:XUUID" minOccurs="0"/>
					<xsd:element name="loadInformation" type="axl:XLoadInformation" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>The new load information for this phone.  Nullable.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="updateMGCP" type="axlapi:UpdateMGCPReq"/>
	<xsd:element name="updateMGCPResponse" type="axlapi:StandardResponse"/>
	<xsd:complexType name="AddCallManagerReq" abstract="false" final="#all">
		<xsd:annotation>
			<xsd:documentation>Adds a new CallManager to the database.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIRequest">
				<xsd:sequence>
					<xsd:element name="callManager" type="axl:XCallManager" nillable="false"/>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="addCallManager" type="axlapi:AddCallManagerReq"/>
	<xsd:element name="addCallManagerResponse" type="axlapi:StandardResponse"/>
	<xsd:complexType name="UpdateCallManagerReq" abstract="false" final="#all">
		<xsd:annotation>
			<xsd:documentation>Update an existing CallManager in the database.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:NameAndGUIDRequest">
				<xsd:sequence>
					<xsd:element name="newName" type="axl:String50" nillable="false" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>Not nullable.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="description" type="axl:String50" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>Nullable.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="autoRegistration" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>Auto-registration information block.</xsd:documentation>
						</xsd:annotation>
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="startDN" type="axl:XDirectoryNumber" minOccurs="0">
									<xsd:annotation>
										<xsd:documentation>Nullable.</xsd:documentation>
									</xsd:annotation>
								</xsd:element>
								<xsd:element name="endDN" type="axl:XDirectoryNumber" minOccurs="0">
									<xsd:annotation>
										<xsd:documentation>Nullable.</xsd:documentation>
									</xsd:annotation>
								</xsd:element>
								<xsd:element name="nextDN" type="axl:XDirectoryNumber" minOccurs="0">
									<xsd:annotation>
										<xsd:documentation>Nullable.</xsd:documentation>
									</xsd:annotation>
								</xsd:element>
								<xsd:choice minOccurs="0">
									<xsd:annotation>
										<xsd:documentation>Nullable.</xsd:documentation>
									</xsd:annotation>
									<xsd:element name="routePartitionId" type="axl:XUUID"/>
									<xsd:element name="routePartitionName" type="axl:String50"/>
								</xsd:choice>
								<xsd:element name="e164Mask" type="axl:String50" minOccurs="0">
									<xsd:annotation>
										<xsd:documentation>Nullable.</xsd:documentation>
									</xsd:annotation>
								</xsd:element>
							</xsd:sequence>
						</xsd:complexType>
					</xsd:element>
					<xsd:element name="ports" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>Port information block.</xsd:documentation>
						</xsd:annotation>
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="analogAccessPort" type="xsd:nonNegativeInteger" minOccurs="0">
									<xsd:annotation>
										<xsd:documentation>This field has been deprecated in Seadragon</xsd:documentation>
									</xsd:annotation>
								</xsd:element>
								<xsd:element name="digitalAccessPort" type="xsd:nonNegativeInteger" minOccurs="0">
									<xsd:annotation>
										<xsd:documentation>This field has been deprecated in Seadragon</xsd:documentation>
									</xsd:annotation>
								</xsd:element>
								<xsd:element name="ethernetPhonePort" type="xsd:nonNegativeInteger" nillable="false" minOccurs="0">
									<xsd:annotation>
										<xsd:documentation>Not nullable.</xsd:documentation>
									</xsd:annotation>
								</xsd:element>
								<xsd:element name="mgcpPorts" minOccurs="0">
									<xsd:annotation>
										<xsd:documentation>MGCP port information block.</xsd:documentation>
									</xsd:annotation>
									<xsd:complexType>
										<xsd:sequence>
											<xsd:element name="listen" type="xsd:nonNegativeInteger" nillable="false" minOccurs="0">
												<xsd:annotation>
													<xsd:documentation>Not nullable.</xsd:documentation>
												</xsd:annotation>
											</xsd:element>
											<xsd:element name="keepAlive" type="xsd:nonNegativeInteger" nillable="false" minOccurs="0">
												<xsd:annotation>
													<xsd:documentation>Not nullable.</xsd:documentation>
												</xsd:annotation>
											</xsd:element>
										</xsd:sequence>
									</xsd:complexType>
								</xsd:element>
							</xsd:sequence>
						</xsd:complexType>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="updateCallManager" type="axlapi:UpdateCallManagerReq"/>
	<xsd:element name="updateCallManagerResponse" type="axlapi:StandardResponse"/>
	<xsd:element name="getCallManager" type="axlapi:NameAndGUIDRequest"/>
	<xsd:complexType name="GetCallManagerRes">
		<xsd:annotation>
			<xsd:documentation>Contains the CallManager specified by the request.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIResponse">
				<xsd:sequence>
					<xsd:element name="return">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="callManager" type="axl:XCallManager"/>
							</xsd:sequence>
						</xsd:complexType>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="getCallManagerResponse" type="axlapi:GetCallManagerRes"/>
	<xsd:element name="removeCallManager" type="axlapi:NameAndGUIDRequest"/>
	<xsd:element name="removeCallManagerResponse" type="axlapi:StandardResponse"/>
	<xsd:complexType name="AddProcessNodeReq" abstract="false" final="#all">
		<xsd:annotation>
			<xsd:documentation>Adds a new ProcessNode to the database.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIRequest">
				<xsd:sequence>
					<xsd:element name="processNode" type="axl:XProcessNode" nillable="false"/>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="addProcessNode" type="axlapi:AddProcessNodeReq"/>
	<xsd:element name="addProcessNodeResponse" type="axlapi:StandardResponse"/>
	<xsd:complexType name="UpdateProcessNodeReq" abstract="false" final="#all">
		<xsd:annotation>
			<xsd:documentation>Update an existing ProcessNode in the database.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:NameAndGUIDRequest">
				<xsd:sequence>
					<xsd:element name="newName" type="axl:Name255" nillable="false" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>Not nullable.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="description" type="axl:String50" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>Nullable.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="mac" type="axl:XMacAddress" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>Nullable.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="updateProcessNode" type="axlapi:UpdateProcessNodeReq"/>
	<xsd:element name="updateProcessNodeResponse" type="axlapi:StandardResponse"/>
	<xsd:element name="getProcessNode" type="axlapi:NameAndGUIDRequest"/>
	<xsd:complexType name="GetProcessNodeRes">
		<xsd:annotation>
			<xsd:documentation>Contains the ProcessNode specified by the request.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIResponse">
				<xsd:sequence>
					<xsd:element name="return">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="processNode" type="axl:XProcessNode"/>
							</xsd:sequence>
						</xsd:complexType>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="getProcessNodeResponse" type="axlapi:GetProcessNodeRes"/>
	<xsd:element name="removeProcessNode" type="axlapi:NameAndGUIDRequest"/>
	<xsd:element name="removeProcessNodeResponse" type="axlapi:StandardResponse"/>
	<xsd:complexType name="ListAllProcessNodesReq">
		<xsd:annotation>
			<xsd:documentation>Sends a request for all ProcessNodes in the database.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIRequest"/>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="listAllProcessNodes" type="axlapi:ListAllProcessNodesReq"/>
	<xsd:complexType name="ListAllProcessNodesRes">
		<xsd:annotation>
			<xsd:documentation>Contains all the process nodes in the database.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIResponse">
				<xsd:sequence>
					<xsd:element name="return">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="processNode" type="axl:XProcessNode" minOccurs="0" maxOccurs="unbounded"/>
							</xsd:sequence>
						</xsd:complexType>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="listAllProcessNodesResponse" type="axlapi:ListAllProcessNodesRes"/>
	<xsd:complexType name="ListProcessNodesByServiceReq">
		<xsd:annotation>
			<xsd:documentation>Sends a request for all ProcessNodes in the database for this particular service.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIRequest">
				<xsd:sequence>
					<xsd:element name="service" type="axl:XService"/>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="listProcessNodesByService" type="axlapi:ListProcessNodesByServiceReq"/>
	<xsd:complexType name="ListProcessNodesByServiceRes">
		<xsd:annotation>
			<xsd:documentation>Contains all the process nodes in the database that matched the service type in the request.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIResponse">
				<xsd:sequence>
					<xsd:element name="return">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="processNode" type="axl:XProcessNode" minOccurs="0" maxOccurs="unbounded"/>
							</xsd:sequence>
						</xsd:complexType>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="listProcessNodesByServiceResponse" type="axlapi:ListProcessNodesByServiceRes"/>
	<xsd:complexType name="GetProcessNodeServiceReq">
		<xsd:annotation>
			<xsd:documentation>Retrieves the specified Process Node Service from the database.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIRequest">
				<xsd:sequence>
					<xsd:choice>
						<xsd:element name="uuid" type="axl:XUUID">
							<xsd:annotation>
								<xsd:documentation>The pkid of the Process Node Service you wish to retrieve.</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
						<xsd:sequence>
							<xsd:choice>
								<xsd:annotation>
									<xsd:documentation>The process Node that this the process node service belongs to. Not nullable.</xsd:documentation>
								</xsd:annotation>
								<xsd:element name="processNodeId" type="axl:XUUID"/>
								<xsd:element name="processNodeName" type="axl:String50"/>
							</xsd:choice>
							<xsd:element name="service" type="axl:XService">
								<xsd:annotation>
									<xsd:documentation>The service that this process node service belongs to.</xsd:documentation>
								</xsd:annotation>
							</xsd:element>
						</xsd:sequence>
					</xsd:choice>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="getProcessNodeService" type="axlapi:GetProcessNodeServiceReq"/>
	<xsd:complexType name="GetProcessNodeServiceRes">
		<xsd:annotation>
			<xsd:documentation>Contains the Process Node Service specified by the request.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIResponse">
				<xsd:sequence>
					<xsd:element name="return">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="processNodeService" type="axl:XProcessNodeService"/>
							</xsd:sequence>
						</xsd:complexType>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="getProcessNodeServiceResponse" type="axlapi:GetProcessNodeServiceRes"/>
	<xsd:complexType name="UpdateProcessNodeServiceReq">
		<xsd:annotation>
			<xsd:documentation>Modifies an existing Process Node Service's value.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:GetProcessNodeServiceReq">
				<xsd:sequence>
					<xsd:element name="fileName" type="axl:String255" nillable="true" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>This field has been deprecated in Seadragon</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="traceLevel" type="xsd:nonNegativeInteger" nillable="false" minOccurs="0"/>
					<xsd:element name="userCategories" type="xsd:nonNegativeInteger" nillable="false" minOccurs="0"/>
					<xsd:element name="enable" type="xsd:boolean" nillable="false" minOccurs="0"/>
					<xsd:element name="numFiles" type="xsd:nonNegativeInteger" nillable="false" minOccurs="0"/>
					<xsd:element name="numLines" type="xsd:nonNegativeInteger" nillable="false" minOccurs="0"/>
					<xsd:element name="numMinutes" type="xsd:nonNegativeInteger" nillable="false" minOccurs="0"/>
					<xsd:element name="includeNonDeviceTraces" type="xsd:boolean" nillable="false" minOccurs="0"/>
					<xsd:element name="useXML" type="xsd:boolean" nillable="false" minOccurs="0"/>
					<xsd:element name="serverName" type="axl:String255" nillable="true" minOccurs="0"/>
					<xsd:element name="deviceNameMonitorFlag" type="xsd:boolean" nillable="false" minOccurs="0"/>
					<xsd:element name="deviceTypeMonitorFlag" type="xsd:boolean" nillable="false" minOccurs="0"/>
					<xsd:element name="fileTraceFlag" type="xsd:boolean" nillable="false" minOccurs="0"/>
					<xsd:element name="outputDebugStringFlag" type="xsd:boolean" nillable="false" minOccurs="0"/>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="updateProcessNodeService" type="axlapi:UpdateProcessNodeServiceReq"/>
	<xsd:element name="updateProcessNodeServiceResponse" type="axlapi:StandardResponse"/>
	<xsd:element name="listRoutePartitionByName" type="axlapi:ListBySearchString">
		<xsd:annotation>
			<xsd:documentation>This method searches for all Route Partitions whose name matches the specified search string.</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<xsd:complexType name="ListRoutePartitionRes">
		<xsd:annotation>
			<xsd:documentation>This response is returned by the listRoutePartitionByXXX methods.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIResponse">
				<xsd:sequence>
					<xsd:element name="return">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="routePartition" type="axl:XRoutePartition" minOccurs="0" maxOccurs="unbounded"/>
							</xsd:sequence>
						</xsd:complexType>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="listRoutePartitionByNameResponse" type="axlapi:ListRoutePartitionRes">
		<xsd:annotation>
			<xsd:documentation>The response to listRoutePartitionsByName. Contains all the Route Partitions that matched the search string.</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<xsd:element name="listDevicePoolByName" type="axlapi:ListBySearchString">
		<xsd:annotation>
			<xsd:documentation>This method searches for all Device Pools whose name matches the specified search string.</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<xsd:complexType name="ListDevicePoolRes">
		<xsd:annotation>
			<xsd:documentation>This response is returned by the listDevicePoolByXXX methods.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIResponse">
				<xsd:sequence>
					<xsd:element name="return">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="devicePool" minOccurs="0" maxOccurs="unbounded">
									<xsd:complexType>
										<xsd:sequence>
											<xsd:element name="name" type="axl:String50"/>
										</xsd:sequence>
										<xsd:attribute name="uuid" type="axl:XUUID" use="required"/>
									</xsd:complexType>
								</xsd:element>
							</xsd:sequence>
						</xsd:complexType>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="listDevicePoolByNameResponse" type="axlapi:ListDevicePoolRes">
		<xsd:annotation>
			<xsd:documentation>The response to listDevicePoolsByName. Contains all the Device Pools that matched the search string.</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<xsd:element name="listPhoneTemplateByName" type="axlapi:ListBySearchString">
		<xsd:annotation>
			<xsd:documentation>This method searches for all Phone Templates whose name matches the specified search string.</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<xsd:complexType name="ListPhoneTemplateRes">
		<xsd:annotation>
			<xsd:documentation>This response is returned by the listPhoneTemplateByXXX methods.</xsd:documentation>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="return">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="phoneTemplate" minOccurs="0" maxOccurs="unbounded">
							<xsd:complexType>
								<xsd:sequence>
									<xsd:element name="name" type="axl:String50"/>
								</xsd:sequence>
								<xsd:attribute name="uuid" type="axl:XUUID" use="required"/>
							</xsd:complexType>
						</xsd:element>
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
		</xsd:sequence>
	</xsd:complexType>
	<xsd:element name="listPhoneTemplateByNameResponse" type="axlapi:ListPhoneTemplateRes">
		<xsd:annotation>
			<xsd:documentation>The response to listPhoneTemplatesByName. Contains all the Phone Templates that matched the search string.</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<xsd:complexType name="ListDeviceByNameAndClassReq">
		<xsd:annotation>
			<xsd:documentation>This method searches for all devices of the specified device class and whose name matches the specified search string.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:ListBySearchString">
				<xsd:sequence>
					<xsd:element name="class" type="axl:XClass"/>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="listDeviceByNameAndClass" type="axlapi:ListDeviceByNameAndClassReq"/>
	<xsd:complexType name="ListDeviceRes">
		<xsd:annotation>
			<xsd:documentation>This response is returned by the listDeviceByXXX methods.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIResponse">
				<xsd:sequence>
					<xsd:element name="return">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="device" minOccurs="0" maxOccurs="unbounded">
									<xsd:complexType>
										<xsd:sequence>
											<xsd:element name="name" type="axl:String50"/>
											<xsd:element name="product" type="axl:XProduct"/>
											<xsd:element name="model" type="axl:XModel"/>
										</xsd:sequence>
										<xsd:attribute name="uuid" type="axl:XUUID" use="required"/>
									</xsd:complexType>
								</xsd:element>
							</xsd:sequence>
						</xsd:complexType>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="listDeviceByNameAndClassResponse" type="axlapi:ListDeviceRes">
		<xsd:annotation>
			<xsd:documentation>The response to listDeviceByNameAndClass. Contains all the device that matched the search string and class type.</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<xsd:complexType name="ListDeviceByServiceNameReq">
		<xsd:annotation>
			<xsd:documentation>This method searches for all devices which are subscribed to the specified telecaster service.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:ListBySearchString">
				<xsd:sequence>
					<xsd:element name="serviceName" type="axl:XClass"/>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="listDeviceByServiceName" type="axlapi:ListDeviceByNameAndClassReq"/>
	<xsd:complexType name="ListDeviceByServiceNameRes">
		<xsd:annotation>
			<xsd:documentation>This response is returned by the listDeviceByServiceName methods.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIResponse">
				<xsd:sequence>
					<xsd:element name="return">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="device" minOccurs="0" maxOccurs="unbounded">
									<xsd:complexType>
										<xsd:sequence>
											<xsd:element name="name" type="axl:String50"/>
										</xsd:sequence>
										<xsd:attribute name="uuid" type="axl:XUUID" use="required"/>
									</xsd:complexType>
								</xsd:element>
							</xsd:sequence>
						</xsd:complexType>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="listDeviceByServiceNameResponse" type="axlapi:ListDeviceByServiceNameRes">
		<xsd:annotation>
			<xsd:documentation>The response to listDeviceByServiceName. Contains all the device that matched the ServiceName.</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<xsd:element name="listMOHAudioSourceByName" type="axlapi:ListBySearchString">
		<xsd:annotation>
			<xsd:documentation>This method searches for all MOH Audio Sources whose name matches the specified search string.</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<xsd:complexType name="ListMOHAudioSourceRes">
		<xsd:annotation>
			<xsd:documentation>This response is returned by the listMOHAudioSourceByXXX methods.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIResponse">
				<xsd:sequence>
					<xsd:element name="return">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="mohAudioSource" minOccurs="0" maxOccurs="unbounded">
									<xsd:complexType>
										<xsd:sequence>
											<xsd:element name="sourceId" type="axl:XMOHAudioSourceId"/>
											<xsd:element name="name" type="axl:String50"/>
										</xsd:sequence>
										<xsd:attribute name="uuid" type="axl:XUUID" use="required"/>
									</xsd:complexType>
								</xsd:element>
							</xsd:sequence>
						</xsd:complexType>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="listMOHAudioSourceByNameResponse" type="axlapi:ListMOHAudioSourceRes">
		<xsd:annotation>
			<xsd:documentation>The response to listMOHAudioSourcesByName. Contains all the MOH Audio Sources that matched the search string.</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<xsd:complexType name="GetMOHAudioSourceByIDAndSourceReq">
		<xsd:annotation>
			<xsd:documentation>Specifies which MOH Audio Source to retrieve.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIRequest">
				<xsd:choice>
					<xsd:element name="uuid" type="axl:XUUID" nillable="false"/>
					<xsd:element name="sourceId" type="axl:XMOHAudioSourceId" nillable="false"/>
				</xsd:choice>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="UpdateMOHAudioSourceReq">
		<xsd:complexContent>
			<xsd:extension base="axlapi:GetMOHAudioSourceByIDAndSourceReq">
				<xsd:sequence>
					<xsd:element name="name" type="axl:String50" minOccurs="0"/>
					<xsd:element name="sourceFile" type="axl:String255" minOccurs="0"/>
					<xsd:element name="multicast" type="xsd:boolean" nillable="false" minOccurs="0"/>
					<xsd:element name="repeat" type="xsd:boolean" nillable="false" minOccurs="0"/>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="updateMOHAudioSource" type="axlapi:UpdateMOHAudioSourceReq">
		<xsd:annotation>
			<xsd:documentation>Specifies which MOH Audio Source to modify.</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<xsd:element name="updateMOHAudioSourceResponse" type="axlapi:StandardResponse"/>
	<xsd:element name="getMOHAudioSource" type="axlapi:GetMOHAudioSourceByIDAndSourceReq">
		<xsd:annotation>
			<xsd:documentation>Specifies which MOH Audio Source to retrieve.</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<xsd:complexType name="GetMOHAudioSourceRes">
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIResponse">
				<xsd:sequence>
					<xsd:element name="return">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="mohAudioSource" type="axl:XMOHAudioSource"/>
							</xsd:sequence>
						</xsd:complexType>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="getMOHAudioSourceResponse" type="axlapi:GetMOHAudioSourceRes"/>
	<xsd:element name="removeMOHAudioSource" type="axlapi:GetMOHAudioSourceByIDAndSourceReq">
		<xsd:annotation>
			<xsd:documentation>Specifies which MOH Audio Source to remove.</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<xsd:element name="removeMOHAudioSourceResponse" type="axlapi:StandardResponse"/>
	<xsd:element name="listMediaResourceListByName" type="axlapi:ListBySearchString">
		<xsd:annotation>
			<xsd:documentation>This method searches for all Media Resource Lists whose name matches the specified search string.</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<xsd:complexType name="ListMediaResourceListRes">
		<xsd:annotation>
			<xsd:documentation>This response is returned by the listMediaResourceListByXXX methods.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIResponse">
				<xsd:sequence>
					<xsd:element name="return">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="mediaResourceList" minOccurs="0" maxOccurs="unbounded">
									<xsd:complexType>
										<xsd:sequence>
											<xsd:element name="name" type="axl:String50"/>
										</xsd:sequence>
										<xsd:attribute name="uuid" type="axl:XUUID" use="required"/>
									</xsd:complexType>
								</xsd:element>
							</xsd:sequence>
						</xsd:complexType>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="listMediaResourceListByNameResponse" type="axlapi:ListMediaResourceListRes">
		<xsd:annotation>
			<xsd:documentation>The response to listMediaResourceListsByName. Contains all the Media Resource Lists that matched the search string.</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<xsd:complexType name="AddMediaResourceListReq">
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIRequest">
				<xsd:sequence>
					<xsd:element name="mediaResourceList" type="axl:XMediaResourceList"/>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="addMediaResourceList" type="axlapi:AddMediaResourceListReq"/>
	<xsd:element name="addMediaResourceListResponse" type="axlapi:StandardResponse"/>
	<xsd:element name="getMediaResourceList" type="axlapi:NameAndGUIDRequest"/>
	<xsd:complexType name="GetMediaResourceListRes">
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIResponse">
				<xsd:sequence>
					<xsd:element name="return">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="mediaResourceList" type="axl:XMediaResourceList"/>
							</xsd:sequence>
						</xsd:complexType>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="getMediaResourceListResponse" type="axlapi:GetMediaResourceListRes"/>
	<xsd:element name="removeMediaResourceList" type="axlapi:NameAndGUIDRequest"/>
	<xsd:element name="removeMediaResourceListResponse" type="axlapi:StandardResponse"/>
	<xsd:complexType name="UpdateMediaResourceListReq">
		<xsd:complexContent>
			<xsd:extension base="axlapi:NameAndGUIDRequest">
				<xsd:sequence>
					<xsd:element name="newName" type="axl:String50" nillable="false" minOccurs="0"/>
					<xsd:element name="members" minOccurs="0">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="member" type="axl:XMediaResourceListMember" maxOccurs="unbounded"/>
							</xsd:sequence>
						</xsd:complexType>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="updateMediaResourceList" type="axlapi:UpdateMediaResourceListReq"/>
	<xsd:element name="updateMediaResourceListResponse" type="axlapi:StandardResponse"/>
	<xsd:element name="listMediaResourceGroupByName" type="axlapi:ListBySearchString">
		<xsd:annotation>
			<xsd:documentation>This method searches for all Media Resource Groups whose name matches the specified search string.</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<xsd:complexType name="ListMediaResourceGroupRes">
		<xsd:annotation>
			<xsd:documentation>This response is returned by the listMediaResourceGroupByXXX methods.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIResponse">
				<xsd:sequence>
					<xsd:element name="return">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="mediaResourceGroup" minOccurs="0" maxOccurs="unbounded">
									<xsd:complexType>
										<xsd:sequence>
											<xsd:element name="name" type="axl:String50"/>
										</xsd:sequence>
										<xsd:attribute name="uuid" type="axl:XUUID" use="required"/>
									</xsd:complexType>
								</xsd:element>
							</xsd:sequence>
						</xsd:complexType>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="listMediaResourceGroupByNameResponse" type="axlapi:ListMediaResourceGroupRes">
		<xsd:annotation>
			<xsd:documentation>The response to listMediaResourceGroupsByName. Contains all the Media Resource Groups that matched the search string.</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<xsd:complexType name="AddMediaResourceGroupReq">
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIRequest">
				<xsd:sequence>
					<xsd:element name="mediaResourceGroup" type="axl:XMediaResourceGroup"/>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="addMediaResourceGroup" type="axlapi:AddMediaResourceGroupReq"/>
	<xsd:element name="addMediaResourceGroupResponse" type="axlapi:StandardResponse"/>
	<xsd:element name="getMediaResourceGroup" type="axlapi:NameAndGUIDRequest"/>
	<xsd:complexType name="GetMediaResourceGroupRes">
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIResponse">
				<xsd:sequence>
					<xsd:element name="return">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="mediaResourceGroup" type="axl:XMediaResourceGroup"/>
							</xsd:sequence>
						</xsd:complexType>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="getMediaResourceGroupResponse" type="axlapi:GetMediaResourceGroupRes"/>
	<xsd:element name="removeMediaResourceGroup" type="axlapi:NameAndGUIDRequest"/>
	<xsd:element name="removeMediaResourceGroupResponse" type="axlapi:StandardResponse"/>
	<xsd:complexType name="UpdateMediaResourceGroupReq">
		<xsd:complexContent>
			<xsd:extension base="axlapi:NameAndGUIDRequest">
				<xsd:sequence>
					<xsd:element name="newName" type="axl:String50" nillable="false" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>Not nullable.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="description" type="axl:String50" minOccurs="0"/>
					<xsd:element name="multicast" type="xsd:boolean" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>Not nullable.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="members" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>Not nullable.</xsd:documentation>
						</xsd:annotation>
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="member" type="axl:XMediaResourceGroupMember" maxOccurs="unbounded"/>
							</xsd:sequence>
						</xsd:complexType>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="updateMediaResourceGroup" type="axlapi:UpdateMediaResourceGroupReq"/>
	<xsd:element name="updateMediaResourceGroupResponse" type="axlapi:StandardResponse"/>
	<xsd:complexType name="AddUserGroupReq">
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIRequest">
				<xsd:sequence>
					<xsd:element name="userGroup" type="axl:XUserGroup"/>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="addUserGroup" type="axlapi:AddUserGroupReq"/>
	<xsd:element name="addUserGroupResponse" type="axlapi:StandardResponse"/>
	<xsd:element name="getUserGroup" type="axlapi:NameAndGUIDRequest"/>
	<xsd:complexType name="GetUserGroupRes">
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIResponse">
				<xsd:sequence>
					<xsd:element name="return">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="userGroup" type="axl:XUserGroup"/>
							</xsd:sequence>
						</xsd:complexType>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="getUserGroupResponse" type="axlapi:GetUserGroupRes"/>
	<xsd:element name="removeUserGroup" type="axlapi:NameAndGUIDRequest"/>
	<xsd:element name="removeUserGroupResponse" type="axlapi:StandardResponse"/>
	<xsd:complexType name="UpdateUserGroupReq">
		<xsd:complexContent>
			<xsd:extension base="axlapi:NameAndGUIDRequest">
				<xsd:sequence>
					<xsd:element name="newName" type="axl:String128" nillable="false" minOccurs="0"/>
					<xsd:element name="members" nillable="true" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>The new members of this User Group. If this element is null, then all members are removed from this user group. Note: If the "members" element is present, then all existing members are removed and replaced with the "member" sub-elements.</xsd:documentation>
						</xsd:annotation>
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="member" type="axl:XUserGroupMember" nillable="false" minOccurs="0" maxOccurs="unbounded"/>
							</xsd:sequence>
						</xsd:complexType>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="updateUserGroup" type="axlapi:UpdateUserGroupReq"/>
	<xsd:element name="updateUserGroupResponse" type="axlapi:StandardResponse"/>
	<xsd:element name="listLocationByName" type="axlapi:ListBySearchString"/>
	<xsd:complexType name="ListLocationRes">
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIResponse">
				<xsd:sequence>
					<xsd:element name="return">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="location" type="axl:XLocation" minOccurs="0" maxOccurs="unbounded"/>
							</xsd:sequence>
						</xsd:complexType>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="listLocationByNameResponse" type="axlapi:ListLocationRes"/>
	<xsd:element name="listAARGroupByName" type="axlapi:ListBySearchString">
		<xsd:annotation>
			<xsd:documentation>List all AAR Groups that match the specified name pattern.</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<xsd:complexType name="ListAARGroupRes">
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIResponse">
				<xsd:sequence>
					<xsd:element name="return">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="aarGroup" type="axl:XAARNeighborhood" minOccurs="0" maxOccurs="unbounded"/>
							</xsd:sequence>
						</xsd:complexType>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="listAARGroupByNameResponse" type="axlapi:ListAARGroupRes">
		<xsd:annotation>
			<xsd:documentation>The response to listAARGroupByName. Contains all the AAR Groups that matched the search string.</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<xsd:element name="listVoiceMailProfileByName" type="axlapi:ListBySearchString">
		<xsd:annotation>
			<xsd:documentation>List all Voice Mail Profiles that match the specified name pattern.</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<xsd:complexType name="ListVoiceMailProfileRes">
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIResponse">
				<xsd:sequence>
					<xsd:element name="return">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="voiceMailProfile" type="axl:XVoiceMailProfile" minOccurs="0" maxOccurs="unbounded"/>
							</xsd:sequence>
						</xsd:complexType>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="listVoiceMailProfileByNameResponse" type="axlapi:ListVoiceMailProfileRes">
		<xsd:annotation>
			<xsd:documentation>The response to listVoiceMailProfileByName. Contains all the Voice Maile Profiles that matched the search string.</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<xsd:element name="listGatekeeperByName" type="axlapi:ListBySearchString">
		<xsd:annotation>
			<xsd:documentation>This method searches for all Gatekeepers whose name matches the specified search string.</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<xsd:complexType name="ListGatekeeperRes">
		<xsd:annotation>
			<xsd:documentation>This response is returned by the listGatekeeperByXXX methods.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIResponse">
				<xsd:sequence>
					<xsd:element name="return">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="gatekeeper" minOccurs="0" maxOccurs="unbounded">
									<xsd:complexType>
										<xsd:sequence>
											<xsd:element name="name" type="axl:String128"/>
										</xsd:sequence>
										<xsd:attribute name="uuid" type="axl:XUUID" use="required"/>
									</xsd:complexType>
								</xsd:element>
							</xsd:sequence>
						</xsd:complexType>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="listGatekeeperByNameResponse" type="axlapi:ListGatekeeperRes">
		<xsd:annotation>
			<xsd:documentation>The response to listGatekeepersByName. Contains all the Gatekeepers that matched the search string.</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<xsd:complexType name="AddGatekeeperReq">
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIRequest">
				<xsd:sequence>
					<xsd:element name="gatekeeper" type="axl:XGatekeeper"/>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="addGatekeeper" type="axlapi:AddGatekeeperReq"/>
	<xsd:element name="addGatekeeperResponse" type="axlapi:StandardResponse"/>
	<xsd:element name="getGatekeeper" type="axlapi:NameAndGUIDRequest"/>
	<xsd:complexType name="GetGatekeeperRes">
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIResponse">
				<xsd:sequence>
					<xsd:element name="return">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="gatekeeper" type="axl:XGatekeeper"/>
							</xsd:sequence>
						</xsd:complexType>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="getGatekeeperResponse" type="axlapi:GetGatekeeperRes"/>
	<xsd:element name="removeGatekeeper" type="axlapi:NameAndGUIDRequest"/>
	<xsd:element name="removeGatekeeperResponse" type="axlapi:StandardResponse"/>
	<xsd:complexType name="UpdateGatekeeperReq">
		<xsd:complexContent>
			<xsd:extension base="axlapi:NameAndGUIDRequest">
				<xsd:sequence>
					<xsd:element name="newName" type="axl:String50" nillable="false" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>Not nullable.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="description" type="axl:String50" minOccurs="0"/>
					<xsd:element name="rrqTimeToLive" type="xsd:nonNegativeInteger" nillable="false" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>Not nullable.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="retryTimeout" type="xsd:nonNegativeInteger" nillable="false" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>Not nullable.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="enableDevice" type="xsd:boolean" nillable="false" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>Not nullable.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="updateGatekeeper" type="axlapi:UpdateGatekeeperReq"/>
	<xsd:element name="updateGatekeeperResponse" type="axlapi:StandardResponse"/>
	<xsd:complexType name="AddH323PhoneReq">
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIRequest">
				<xsd:sequence>
					<xsd:element name="phone" type="axl:XH323Phone"/>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="addH323Phone" type="axlapi:AddH323PhoneReq"/>
	<xsd:element name="addH323PhoneResponse" type="axlapi:StandardResponse"/>
	<xsd:complexType name="AddH323GatewayReq">
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIRequest">
				<xsd:sequence>
					<xsd:element name="gateway" type="axl:XH323Gateway"/>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="addH323Gateway" type="axlapi:AddH323GatewayReq"/>
	<xsd:element name="addH323GatewayResponse" type="axlapi:StandardResponse"/>
	<xsd:complexType name="AddH323TrunkReq">
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIRequest">
				<xsd:sequence>
					<xsd:element name="trunk" type="axl:XH323Trunk"/>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="addH323Trunk" type="axlapi:AddH323TrunkReq"/>
	<xsd:element name="addH323TrunkResponse" type="axlapi:StandardResponse"/>
	<xsd:element name="getH323Phone" type="axlapi:NameAndGUIDRequest"/>
	<xsd:complexType name="GetH323PhoneRes">
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIResponse">
				<xsd:sequence>
					<xsd:element name="return">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="phone" type="axl:XH323Phone"/>
							</xsd:sequence>
						</xsd:complexType>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="getH323PhoneResponse" type="axlapi:GetH323PhoneRes"/>
	<xsd:element name="getH323Gateway" type="axlapi:NameAndGUIDRequest"/>
	<xsd:complexType name="GetH323GatewayRes">
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIResponse">
				<xsd:sequence>
					<xsd:element name="return">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="gateway" type="axl:XH323Gateway"/>
							</xsd:sequence>
						</xsd:complexType>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="getH323GatewayResponse" type="axlapi:GetH323GatewayRes"/>
	<xsd:element name="getH323Trunk" type="axlapi:NameAndGUIDRequest"/>
	<xsd:complexType name="GetH323Trunk">
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIResponse">
				<xsd:sequence>
					<xsd:element name="return">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="trunk">
									<xsd:complexType>
										<xsd:complexContent>
											<xsd:extension base="axl:XH323Gateway">
												<xsd:sequence>
													<xsd:choice>
														<xsd:element name="gatekeeperInfo">
															<xsd:complexType>
																<xsd:sequence>
																	<xsd:choice>
																		<xsd:element name="gatekeeperName" type="axl:String50" nillable="false"/>
																		<xsd:element name="gatekeeper" type="axl:XGatekeeper" nillable="false">
																			<xsd:annotation>
																				<xsd:documentation>Only the uuid attribute is read by the AXL API.</xsd:documentation>
																			</xsd:annotation>
																		</xsd:element>
																	</xsd:choice>
																	<xsd:element name="terminal" type="axl:XTerminal" nillable="false"/>
																	<xsd:element name="technologyPrefix" type="axl:String50" minOccurs="0"/>
																	<xsd:element name="zone" type="axl:String50" minOccurs="0"/>
																</xsd:sequence>
															</xsd:complexType>
														</xsd:element>
														<xsd:element name="remoteServerInfo">
															<xsd:complexType>
																<xsd:sequence>
																	<xsd:element name="server1" type="axl:String255" nillable="false"/>
																	<xsd:element name="server2" type="axl:String255" minOccurs="0"/>
																	<xsd:element name="server3" type="axl:String255" minOccurs="0"/>
																</xsd:sequence>
															</xsd:complexType>
														</xsd:element>
													</xsd:choice>
												</xsd:sequence>
											</xsd:extension>
										</xsd:complexContent>
									</xsd:complexType>
								</xsd:element>
							</xsd:sequence>
						</xsd:complexType>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="getH323TrunkResponse" type="axlapi:GetH323Trunk"/>
	<xsd:element name="removeH323Phone" type="axlapi:NameAndGUIDRequest"/>
	<xsd:element name="removeH323PhoneResponse" type="axlapi:StandardResponse"/>
	<xsd:element name="removeH323Gateway" type="axlapi:NameAndGUIDRequest"/>
	<xsd:element name="removeH323GatewayResponse" type="axlapi:StandardResponse"/>
	<xsd:element name="removeH323Trunk" type="axlapi:NameAndGUIDRequest"/>
	<xsd:element name="removeH323TrunkResponse" type="axlapi:StandardResponse"/>
	<xsd:complexType name="UpdateH323DeviceReq">
		<xsd:complexContent>
			<xsd:extension base="axlapi:NameAndGUIDRequest">
				<xsd:sequence minOccurs="0">
					<xsd:element name="newName" type="axl:String50" nillable="false" minOccurs="0"/>
					<xsd:element name="description" type="axl:String128" minOccurs="0"/>
					<xsd:choice minOccurs="0">
						<xsd:element name="callingSearchSpaceId" type="axl:XUUID" minOccurs="0"/>
						<xsd:element name="callingSearchSpaceName" type="axl:String50" minOccurs="0"/>
					</xsd:choice>
					<xsd:choice minOccurs="0">
						<xsd:element name="devicePoolId" type="axl:XUUID" nillable="false" minOccurs="0"/>
						<xsd:element name="devicePoolName" type="axl:String50" nillable="false" minOccurs="0"/>
					</xsd:choice>
					<xsd:element name="networkLocation" type="axl:XNetworkLocation" nillable="false" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>The new Device Destination flag for Trunk to Trunk Transfer and Drop Conference Feature is required for H323 Gateways and Trunks.  Not Nullable.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:choice minOccurs="0">
						<xsd:element name="locationId" type="axl:XUUID" minOccurs="0"/>
						<xsd:element name="locationName" type="axl:String50" minOccurs="0"/>
					</xsd:choice>
					<xsd:choice minOccurs="0">
						<xsd:element name="mediaResourceListId" type="axl:XUUID" minOccurs="0"/>
						<xsd:element name="mediaResourceListName" type="axl:String50" minOccurs="0"/>
					</xsd:choice>
					<xsd:element name="networkHoldMOHAudioSourceId" type="axl:XMOHAudioSourceId" nillable="false" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>Not nullable.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="userHoldMOHAudioSourceId" type="axl:XMOHAudioSourceId" nillable="false" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>Not nullable.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:choice minOccurs="0">
						<xsd:element name="automatedAlternateRoutingCSSId" type="axl:XUUID" minOccurs="0"/>
						<xsd:element name="automatedAlternateRoutingCSSName" type="axl:String50" minOccurs="0"/>
					</xsd:choice>
					<xsd:choice minOccurs="0">
						<xsd:element name="aarNeighborhoodId" type="axl:XUUID" minOccurs="0"/>
						<xsd:element name="aarNeighborhoodName" type="axl:String50" minOccurs="0"/>
					</xsd:choice>
					<xsd:element name="retryVideoCallAsAudio" type="xsd:boolean" nillable="false" minOccurs="0"/>
					<xsd:element name="waitForFarEndH245TerminalSet" type="xsd:boolean" nillable="false" minOccurs="0"/>
					<xsd:element name="mtpRequired" type="xsd:boolean" nillable="false" minOccurs="0"/>
					<xsd:element name="callerIdDN" type="axl:String50" minOccurs="0"/>
					<xsd:element name="callingPartySelection" type="axl:XCallingPartySelection" nillable="false" minOccurs="0"/>
					<xsd:element name="callingLineIdPresentation" type="axl:XPresentationBit" nillable="false" minOccurs="0"/>
					<xsd:element name="displayIEDelivery" type="xsd:boolean" nillable="false" minOccurs="0"/>
					<xsd:element name="redirectOutboundNumberIE" type="xsd:boolean" nillable="false" minOccurs="0"/>
					<xsd:element name="redirectInboundNumberIE" type="xsd:boolean" nillable="false" minOccurs="0"/>
					<xsd:element name="enableInboundFaststart" type="xsd:boolean" nillable="false" minOccurs="0"/>
					<xsd:element name="enableOutboundFaststart" type="xsd:boolean" nillable="false" minOccurs="0"/>
					<xsd:element name="packetCaptureMode" type="axl:XPacketCaptureMode" nillable="true" minOccurs="0"/>
					<xsd:element name="packetCaptureDuration" type="xsd:positiveInteger" nillable="true" minOccurs="0"/>
					<xsd:element name="srtpAllowed" type="axl:XBoolean" nillable="false" minOccurs="0"/>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="UpdateH323PhoneReq">
		<xsd:complexContent>
			<xsd:extension base="axlapi:UpdateH323DeviceReq">
				<xsd:sequence minOccurs="0">
					<xsd:element name="ownerUserId" type="axl:String255" minOccurs="0"/>
					<xsd:element name="signalingPort" type="xsd:nonNegativeInteger" nillable="false" minOccurs="0"/>
					<xsd:element name="gatekeeperInfo" minOccurs="0">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:choice minOccurs="0">
									<xsd:element name="gatekeeperId" type="axl:XUUID" nillable="false" minOccurs="0"/>
									<xsd:element name="gatekeeperName" type="axl:String50" nillable="false" minOccurs="0"/>
								</xsd:choice>
								<xsd:element name="e164" type="axl:String50" nillable="false" minOccurs="0"/>
								<xsd:element name="technologyPrefix" type="axl:String50" minOccurs="0"/>
								<xsd:element name="zone" type="axl:String50" minOccurs="0"/>
							</xsd:sequence>
						</xsd:complexType>
					</xsd:element>
					<xsd:element name="lines" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>The new lines for this phone.  If this element is null, then all lines are removed from this phone.  Note:  If the lines element is present, then all existing lines are removed and replaced with the sub-elements described by the line elements.  All directory numbers specified must already exist in the database.</xsd:documentation>
						</xsd:annotation>
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="line" type="axl:XLine" nillable="false" minOccurs="0" maxOccurs="unbounded"/>
							</xsd:sequence>
						</xsd:complexType>
					</xsd:element>
					<xsd:element name="ignorePresentationIndicators" type="xsd:boolean" default="false" nillable="false" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>The new Ignore Presentation Indicators flag for Hospitality Feature is required for most phones and device profiles.Not Nullable.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="updateH323Phone" type="axlapi:UpdateH323PhoneReq"/>
	<xsd:element name="updateH323PhoneResponse" type="axlapi:StandardResponse"/>
	<xsd:complexType name="UpdateH323GatewayReq">
		<xsd:complexContent>
			<xsd:extension base="axlapi:UpdateH323DeviceReq">
				<xsd:sequence minOccurs="0">
					<xsd:element name="significantDigits" nillable="false" minOccurs="0">
						<xsd:complexType>
							<xsd:simpleContent>
								<xsd:extension base="xsd:nonNegativeInteger">
									<xsd:attribute name="enable" type="xsd:boolean" use="required"/>
								</xsd:extension>
							</xsd:simpleContent>
						</xsd:complexType>
					</xsd:element>
					<xsd:element name="prefixDN" type="axl:String50" minOccurs="0"/>
					<xsd:element name="calledPartyIENumberType" type="axl:XPriOfNumber" nillable="false" minOccurs="0"/>
					<xsd:element name="callingPartyIENumberType" type="axl:XPriOfNumber" nillable="false" minOccurs="0"/>
					<xsd:element name="calledNumberingPlan" type="axl:XNumberingPlan" nillable="false" minOccurs="0"/>
					<xsd:element name="callingNumberingPlan" type="axl:XNumberingPlan" nillable="false" minOccurs="0"/>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="updateH323Gateway" type="axlapi:UpdateH323GatewayReq"/>
	<xsd:element name="updateH323GatewayResponse" type="axlapi:StandardResponse" nillable="false"/>
	<xsd:complexType name="UpdateH323TrunkReq">
		<xsd:complexContent>
			<xsd:extension base="axlapi:UpdateH323GatewayReq">
				<xsd:sequence minOccurs="0">
					<xsd:element name="tunneledProtocol" type="axl:XTunneledProtocol" minOccurs="0"/>
					<xsd:element name="pathReplacementSupport" type="xsd:boolean" default="false" minOccurs="0"/>
					<xsd:choice minOccurs="0">
						<xsd:element name="gatekeeperInfo" minOccurs="0">
							<xsd:complexType>
								<xsd:sequence minOccurs="0">
									<xsd:choice minOccurs="0">
										<xsd:element name="gatekeeperId" type="axl:XUUID" nillable="false" minOccurs="0"/>
										<xsd:element name="gatekeeperName" type="axl:String50" nillable="false" minOccurs="0"/>
									</xsd:choice>
									<xsd:element name="terminal" type="axl:XTerminal" nillable="false" minOccurs="0"/>
									<xsd:element name="technologyPrefix" type="axl:String50" minOccurs="0"/>
									<xsd:element name="zone" type="axl:String50" minOccurs="0"/>
								</xsd:sequence>
							</xsd:complexType>
						</xsd:element>
						<xsd:element name="remoteServerInfo" minOccurs="0">
							<xsd:complexType>
								<xsd:sequence minOccurs="0">
									<xsd:element name="server1" type="axl:String255" nillable="false" minOccurs="0"/>
									<xsd:element name="server2" type="axl:String255" minOccurs="0"/>
									<xsd:element name="server3" type="axl:String255" minOccurs="0"/>
								</xsd:sequence>
							</xsd:complexType>
						</xsd:element>
					</xsd:choice>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="updateH323Trunk" type="axlapi:UpdateH323TrunkReq" nillable="false"/>
	<xsd:element name="updateH323TrunkResponse" type="axlapi:StandardResponse"/>
	<xsd:complexType name="ExecuteSQLQueryReq">
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIRequest">
				<xsd:sequence>
					<xsd:element name="sql" type="xsd:string" nillable="false">
						<xsd:annotation>
							<xsd:documentation>WARNING:  SQL Large Text and BLOB columns cannot be fetched along with other columns.  A Large Text or BLOB column must be selected in its own SQL query.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="AddSIPTrunkReq">
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIRequest">
				<xsd:sequence>
					<xsd:element name="trunk" type="axl:XSIPTrunk"/>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="addSIPTrunk" type="axlapi:AddSIPTrunkReq"/>
	<xsd:element name="addSIPTrunkResponse" type="axlapi:StandardResponse"/>
	<xsd:element name="getSIPTrunk" type="axlapi:NameAndGUIDRequest"/>
	<xsd:complexType name="GetSIPTrunk">
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIResponse">
				<xsd:sequence>
					<xsd:element name="return">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="trunk" type="axl:XSIPTrunk"/>
							</xsd:sequence>
						</xsd:complexType>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="getSIPTrunkResponse" type="axlapi:GetSIPTrunk"/>
	<xsd:element name="removeSIPTrunk" type="axlapi:NameAndGUIDRequest"/>
	<xsd:element name="removeSIPTrunkResponse" type="axlapi:StandardResponse"/>
	<xsd:complexType name="UpdateSIPTrunkReq">
		<xsd:complexContent>
			<xsd:extension base="axlapi:NameAndGUIDRequest">
				<xsd:sequence minOccurs="0">
					<xsd:element name="newName" type="axl:String50" nillable="false" minOccurs="0"/>
					<xsd:element name="description" type="axl:String128" minOccurs="0"/>
					<xsd:choice minOccurs="0">
						<xsd:element name="callingSearchSpaceId" type="axl:XUUID" minOccurs="0"/>
						<xsd:element name="callingSearchSpaceName" type="axl:String50" minOccurs="0"/>
					</xsd:choice>
					<xsd:choice minOccurs="0">
						<xsd:element name="devicePoolId" type="axl:XUUID" nillable="false" minOccurs="0"/>
						<xsd:element name="devicePoolName" type="axl:String50" nillable="false" minOccurs="0"/>
					</xsd:choice>
					<xsd:element name="networkLocation" type="axl:XNetworkLocation" nillable="false" minOccurs="0"/>
					<xsd:choice minOccurs="0">
						<xsd:element name="locationId" type="axl:XUUID" minOccurs="0"/>
						<xsd:element name="locationName" type="axl:String50" minOccurs="0"/>
					</xsd:choice>
					<xsd:choice minOccurs="0">
						<xsd:element name="mediaResourceListId" type="axl:XUUID" minOccurs="0"/>
						<xsd:element name="mediaResourceListName" type="axl:String50" minOccurs="0"/>
					</xsd:choice>
					<xsd:element name="networkHoldMOHAudioSourceId" type="axl:XMOHAudioSourceId" nillable="false" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>Not nullable.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="userHoldMOHAudioSourceId" type="axl:XMOHAudioSourceId" nillable="false" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>Not nullable.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:choice minOccurs="0">
						<xsd:element name="automatedAlternateRoutingCSSId" type="axl:XUUID" minOccurs="0"/>
						<xsd:element name="automatedAlternateRoutingCSSName" type="axl:String50" minOccurs="0"/>
					</xsd:choice>
					<xsd:choice minOccurs="0">
						<xsd:element name="aarNeighborhoodId" type="axl:XUUID" minOccurs="0"/>
						<xsd:element name="aarNeighborhoodName" type="axl:String50" minOccurs="0"/>
					</xsd:choice>
					<xsd:element name="mlppDomainId" type="xsd:int" nillable="false" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>This setting only affects devices that support MLPP.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="mlppIndicationStatus" type="axl:XStatus" nillable="false" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>This setting only affects devices that support MLPP.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="preemption" type="axl:XPreemption" nillable="false" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>This setting only affects devices that support MLPP.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="retryVideoCallAsAudio" type="xsd:boolean" nillable="false" minOccurs="0"/>
					<xsd:element name="mtpRequired" type="xsd:boolean" nillable="false" minOccurs="0"/>
					<xsd:element name="destinationaddress" type="axl:String50" nillable="false" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>Valid characters for Destination Address are letters, numbers, dashes and dots(periods). IP address should have four 8-bit numbers seperated by periods. Host name should start with letter and end with letter or number.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="destAddrIsSRV" type="xsd:boolean" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>This tag is ignored and destAddrIsSRV is set to false if destinationaddress is an IP address and destinationport is mentioned correctly.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="destinationport" type="xsd:integer" default="0" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>This tag depends on destAddrIsSRV. It is mandatory when destAddrIsSRV is false or when destination address is an IP address. Valid values between 1024 to 65535 (inclusive)</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:choice minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>The new Security Profile for this phone.  Nullable.</xsd:documentation>
						</xsd:annotation>
						<xsd:element name="securityProfileId" type="axl:XUUID"/>
						<xsd:element name="securityProfileName" type="axl:UniqueString50"/>
					</xsd:choice>
					<xsd:element name="tkSipCodec" type="axl:XSIPCodec" nillable="false" minOccurs="0"/>
					<xsd:element name="OutgoingTransportType" type="axl:XTransport" nillable="false" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>This field has been deprecated in Seadragon</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="sigDigits" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>The 'enable' attribute enables significant digits.  The value of the 'significanDigits' element is used if enable is true.</xsd:documentation>
						</xsd:annotation>
						<xsd:complexType>
							<xsd:simpleContent>
								<xsd:extension base="xsd:nonNegativeInteger">
									<xsd:attribute name="enable" type="xsd:boolean" use="required"/>
								</xsd:extension>
							</xsd:simpleContent>
						</xsd:complexType>
					</xsd:element>
					<xsd:element name="connectedNamePresentation" type="axl:XPresentationBit" nillable="false" minOccurs="0"/>
					<xsd:element name="connectedPartyIdPresentation" type="axl:XPresentationBit" nillable="false" minOccurs="0"/>
					<xsd:element name="callingPartySelection" type="axl:XCallingPartySelection" nillable="false" minOccurs="0"/>
					<xsd:element name="callingname" type="axl:XPresentationBit" nillable="false" minOccurs="0"/>
					<xsd:element name="callingLineIdPresentation" type="axl:XPresentationBit" nillable="false" minOccurs="0"/>
					<xsd:element name="prefixDN" type="axl:String50" minOccurs="0"/>
					<xsd:element name="callerName" type="axl:String50" nillable="false" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>Characters which are not valid for caller name are ampersand, braces, less than or greater than, percentage sign, double quotes, square brackets and pipe.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="callerIdDN" type="axl:String50" minOccurs="0"/>
					<xsd:element name="acceptInboundRDNIS" type="xsd:boolean" nillable="false" minOccurs="0"/>
					<xsd:element name="acceptOutboundRDNIS" type="xsd:boolean" nillable="false" minOccurs="0"/>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="updateSIPTrunk" type="axlapi:UpdateSIPTrunkReq" nillable="false"/>
	<xsd:element name="updateSIPTrunkResponse" type="axlapi:StandardResponse"/>
	<xsd:complexType name="AddPilotPointReq">
		<xsd:annotation>
			<xsd:documentation>Adds a new Pilot Point to the database.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIRequest">
				<xsd:sequence>
					<xsd:element name="pilotPoint" type="axl:XPilotPoint"/>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="addPilotPoint" type="axlapi:AddPilotPointReq"/>
	<xsd:element name="addPilotPointResponse" type="axlapi:StandardResponse"/>
	<xsd:complexType name="UpdatePilotPointReq">
		<xsd:annotation>
			<xsd:documentation>Updates an existing Pilot Point in the database.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIRequest">
				<xsd:sequence>
					<xsd:choice>
						<xsd:element name="name" type="xsd:string" nillable="false"/>
						<xsd:element name="uuid" type="axl:XUUID" nillable="false"/>
					</xsd:choice>
					<xsd:element name="newName" type="xsd:string" nillable="false" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>The new name for this Pilot Point.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:choice minOccurs="0">
						<xsd:element name="devicePool" type="axl:XDevicePool">
							<xsd:annotation>
								<xsd:documentation>Only the uuid attribute is read by the AXL API.</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
						<xsd:element name="devicePoolName" type="axl:UniqueString50"/>
					</xsd:choice>
					<xsd:choice minOccurs="0">
						<xsd:element name="routePartition" type="axl:XRoutePartition">
							<xsd:annotation>
								<xsd:documentation>Only the uuid attribute is read by the AXL API.</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
						<xsd:element name="routePartitionName" type="axl:String50"/>
					</xsd:choice>
					<xsd:choice minOccurs="0">
						<xsd:element name="callingSearchSpace" type="axl:XCallingSearchSpace">
							<xsd:annotation>
								<xsd:documentation>Only the uuid attribute is read by the AXL API.</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
						<xsd:element name="callingSearchSpaceName" type="axl:UniqueName50"/>
					</xsd:choice>
					<xsd:element name="pilotNumber" type="xsd:string" minOccurs="0"/>
					<xsd:element name="useFirstAvailable" type="xsd:boolean" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>This field has been deprecated in Seadragon</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:choice minOccurs="0">
						<xsd:element name="location" type="axl:XLocation">
							<xsd:annotation>
								<xsd:documentation>Only the uuid attribute is read by the AXL API.</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
						<xsd:element name="locationName" type="axl:String50"/>
					</xsd:choice>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="updatePilotPoint" type="axlapi:UpdatePilotPointReq"/>
	<xsd:element name="updatePilotPointResponse" type="axlapi:StandardResponse"/>
	<xsd:element name="getPilotPoint" type="axlapi:NameAndGUIDRequest"/>
	<xsd:complexType name="GetPilotPointRes">
		<xsd:annotation>
			<xsd:documentation>Contains the Pilot Point that was specified by the request.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIResponse">
				<xsd:sequence>
					<xsd:element name="return">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="pilotPoint" type="axl:XPilotPoint"/>
							</xsd:sequence>
						</xsd:complexType>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="getPilotPointResponse" type="axlapi:GetPilotPointRes"/>
	<xsd:element name="removePilotPoint" type="axlapi:NameAndGUIDRequest"/>
	<xsd:element name="removePilotPointResponse" type="axlapi:StandardResponse"/>
	<xsd:complexType name="UpdateAppUserReq">
		<xsd:annotation>
			<xsd:documentation>Updates an existing application user. Specify the user to be modified with their user id.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIRequest">
				<xsd:sequence>
					<xsd:element name="userid" type="xsd:string">
						<xsd:annotation>
							<xsd:documentation>The userid of the user to be modified.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="password" type="xsd:string">
						<xsd:annotation>
							<xsd:documentation>The new password for the user.  Not nullable.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="digestCredentials" type="xsd:string" nillable="true" minOccurs="0"/>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="updateAppUser" type="axlapi:UpdateAppUserReq"/>
	<xsd:element name="updateAppUserResponse" type="axlapi:StandardResponse"/>
	<xsd:element name="executeSQLQuery" type="axlapi:ExecuteSQLQueryReq" nillable="false">
		<xsd:annotation>
			<xsd:documentation>This API call is used to execute a Structured Query Language query against the database.  The sql element would contain the SQL statement.  If special characters are required, wrap the SQL command inside a CDATA element.</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<xsd:complexType name="ExecuteSQLQueryRes">
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIResponse">
				<xsd:sequence>
					<xsd:element name="return">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="row" type="xsd:anyType" minOccurs="0" maxOccurs="unbounded">
									<xsd:annotation>
										<xsd:documentation>Each row element can contain any number of sub-elements, each sub-element is a column from that row in the result set.</xsd:documentation>
									</xsd:annotation>
								</xsd:element>
							</xsd:sequence>
						</xsd:complexType>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="executeSQLQueryResponse" type="axlapi:ExecuteSQLQueryRes">
		<xsd:annotation>
			<xsd:documentation>The response message to executeSQLQuery.  The return element represents the result set, which can contain 0 or more rows of data. Each row can have any number of elements as defined by columns specified in the SQL Query.  The name of each sub-element of the row element represents the column name, the value of each sub-element of the row element is the corresponding value of that column in the database.</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<xsd:complexType name="ExecuteSQLUpdateReq">
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIRequest">
				<xsd:sequence>
					<xsd:element name="sql" type="xsd:string" nillable="false">
						<xsd:annotation>
							<xsd:documentation>Request to execute an SQL update.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="executeSQLUpdate" type="axlapi:ExecuteSQLUpdateReq" nillable="false">
		<xsd:annotation>
			<xsd:documentation>This API call is used to execute a Structured Query Language Update against the database.  The sql element would contain the SQL statement</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<xsd:complexType name="ExecuteSQLUpdateRes">
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIResponse">
				<xsd:sequence>
					<xsd:element name="return">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="rowsUpdated" type="xsd:integer">
									<xsd:annotation>
										<xsd:documentation>Rows updated indicates the number of rows updated by the SQL update.</xsd:documentation>
									</xsd:annotation>
								</xsd:element>
							</xsd:sequence>
						</xsd:complexType>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="executeSQLUpdateResponse" type="axlapi:ExecuteSQLUpdateRes">
		<xsd:annotation>
			<xsd:documentation>The response message to executeSQLUpdate.</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
</xsd:schema>
