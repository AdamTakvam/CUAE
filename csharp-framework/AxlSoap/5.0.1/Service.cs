//------------------------------------------------------------------------------
// <autogenerated>
//     This code was generated by a tool.
//     Runtime Version: 1.1.4322.2032
//
//     Changes to this file may cause incorrect behavior and will be lost if 
//     the code is regenerated.
// </autogenerated>
//------------------------------------------------------------------------------

// 
// InfoVersionComment, WseWsdl2, Version=2.0.3.0, Culture=neutral, PublicKeyToken=26ba029e599ec4f8, RunTime Version: 1.1.4322.2032
// 
using System;
using System.IO;
using System.Xml;
using Microsoft.Web.Services2;
using Microsoft.Web.Services2.Addressing;
using Microsoft.Web.Services2.Messaging;
using System.Xml.Serialization;

using Metreos.Core;

namespace Metreos.AxlSoap501
{
    [System.Web.Services.WebServiceBindingAttribute(Name="AXLAPIBinding", Namespace="http://www.cisco.com/AXLAPIService/")]
    public class AXLAPIService : System.Web.Services.Protocols.SoapHttpClientProtocol 
    {
        protected override System.Net.WebRequest GetWebRequest(Uri uri)
        {
            System.Net.HttpWebRequest request = base.GetWebRequest (uri) as System.Net.HttpWebRequest;
            request.ProtocolVersion = System.Net.HttpVersion.Version10; //MSC: REQUIRED FOR TOMCAT COMPLIANCE

            return request;
        }
       
//        protected override System.Net.WebResponse GetWebResponse(System.Net.WebRequest request)
//        {
//            System.Net.HttpWebResponse response = base.GetWebResponse (request) as System.Net.HttpWebResponse;
//            System.IO.Stream stream = response.GetResponseStream();
// 
//            byte[] buffer = new byte[2048];
//            MemoryStream data = new MemoryStream(2048);
//            
//            int n = 0;
//            int bytesRead = 0;
//
//            while (true) 
//            {
//                n = stream.Read(buffer, 0, buffer.Length);
//                if (n == 0) break;
//        
//                data.Write(buffer, 0, n);
//                bytesRead += n;
//            }
//
//
//            using(FileStream file = File.Open("test.xml", FileMode.Create))
//            {
//                data.WriteTo(file);
//            }
//
//            stream.Position = 0;
//            return response;
//        }


        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.cisco.com/AXLPort/getPhone", RequestNamespace="http://www.cisco.com/AXL/API/1.0", ResponseNamespace="http://www.cisco.com/AXL/API/1.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public GetPhoneResReturn getPhone([System.Xml.Serialization.XmlElementAttribute("phoneId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string phoneName,  [System.Xml.Serialization.XmlElementAttribute("phoneName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string phoneId, [System.Xml.Serialization.XmlAttributeAttribute()] ref System.UInt64 sequence, [System.Xml.Serialization.XmlAttributeAttribute()] [System.Xml.Serialization.XmlIgnoreAttribute()] ref bool sequenceSpecified) 
        {
            object[] results = this.Invoke("getPhone", new object[] {
                                                                        phoneId,
                                                                        phoneName,
                                                                        sequence,
                                                                        sequenceSpecified});
            sequence = ((System.UInt64)(results[1]));
            sequenceSpecified = ((bool)(results[2]));
            return ((GetPhoneResReturn)(results[0]));
        }

   
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.cisco.com/AXLPort/addPhone", RequestNamespace="http://www.cisco.com/AXL/API/1.0", ResponseNamespace="http://www.cisco.com/AXL/API/1.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string addPhone([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] XIPPhone newPhone, [System.Xml.Serialization.XmlAttributeAttribute()] ref System.UInt64 sequence, [System.Xml.Serialization.XmlAttributeAttribute()] [System.Xml.Serialization.XmlIgnoreAttribute()] ref bool sequenceSpecified) 
        {
            object[] results = this.Invoke("addPhone", new object[] {
                                                                        newPhone,
                                                                        sequence,
                                                                        sequenceSpecified});
            sequence = ((System.UInt64)(results[1]));
            sequenceSpecified = ((bool)(results[2]));
            return ((string)(results[0]));
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.cisco.com/AXLPort/getLine", RequestNamespace="http://www.cisco.com/AXL/API/1.0", ResponseNamespace="http://www.cisco.com/AXL/1.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public GetLineResReturn getLine(
[System.Xml.Serialization.XmlElementAttribute("uuid", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string uuid,
[System.Xml.Serialization.XmlElementAttribute("pattern", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string pattern, 
[System.Xml.Serialization.XmlElementAttribute("routePartitionId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string routePartitionId,
[System.Xml.Serialization.XmlElementAttribute("routePartitionName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string routePartitionName, 
[System.Xml.Serialization.XmlElementAttribute("routeFilterId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string routeFilterId, 
[System.Xml.Serialization.XmlElementAttribute("routeFilterName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string routeFilterName, 
[System.Xml.Serialization.XmlAttributeAttribute()] ref System.UInt64 sequence, [System.Xml.Serialization.XmlAttributeAttribute()] [System.Xml.Serialization.XmlIgnoreAttribute()] ref bool sequenceSpecified) 
        {
            object[] results = this.Invoke("getLine", new object[] {
                                                                       uuid, 
                                                                       pattern, 
                                                                       routePartitionId,
                                                                       routePartitionName,
                                                                       routeFilterId,
                                                                       routeFilterName,
                                                                       sequence,
                                                                       sequenceSpecified});
            sequence = ((System.UInt64)(results[1]));
            sequenceSpecified = ((bool)(results[2]));
            return ((GetLineResReturn)(results[0]));
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.cisco.com/AXLPort/addLine", RequestNamespace="http://www.cisco.com/AXL/API/1.0", ResponseNamespace="http://www.cisco.com/AXL/1.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string addLine([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] XNPDirectoryNumber newLine, [System.Xml.Serialization.XmlAttributeAttribute()] ref System.UInt64 sequence, [System.Xml.Serialization.XmlAttributeAttribute()] [System.Xml.Serialization.XmlIgnoreAttribute()] ref bool sequenceSpecified) 
        {
            object[] results = this.Invoke("addLine", new object[] {
                                                                       newLine,
                                                                       sequence,
                                                                       sequenceSpecified});
            sequence = ((System.UInt64)(results[1]));
            sequenceSpecified = ((bool)(results[2]));
            return ((string)(results[0]));
        }

        public AXLAPIService(string ccmIp, string user, string password) 
        {
            System.Net.ServicePointManager.ServerCertificateValidationCallback =
                new System.Net.Security.RemoteCertificateValidationCallback(MetreosCertificatePolicy.ValidateCertificate);

            this.Url = "https://" + ccmIp + ":8443/axl/";
            this.Credentials = new System.Net.NetworkCredential(user, password);
        }    

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
            [System.Xml.Serialization.XmlRootAttribute("addPhone", Namespace="http://www.cisco.com/AXL/API/1.0", IsNullable=false)]
            public class AddPhoneReq 
        {
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public XIPPhone newPhone;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlAttributeAttribute()]
            public System.UInt64 sequence;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool sequenceSpecified;
        }

        public class SecurityProfile
        {
            [System.Xml.Serialization.XmlAttribute()]
            public string uuid;
        }

        //    <xsd:complexType name="XPresenceGroup">
        //    <xsd:sequence minOccurs="0">
        //    <xsd:element name="name" type="axl:String128"/>
        //    <xsd:element name="description" type="axl:String128" minOccurs="0"/>
        //    <xsd:element name="matrix" type="axl:XMatrix" minOccurs="0"/>
        //    <xsd:element name="isStandard" type="xsd:boolean" minOccurs="0"/>
        //    </xsd:sequence>
        //    </xsd:complexType>

        public enum XMatrix
        {
            //        <xsd:simpleType name="XMatrix">
            //    <xsd:restriction base="xsd:string">
            //    <xsd:enumeration value="Presence Group"/>
            //    <xsd:enumeration value="RSVP Policy"/>
            //    </xsd:restriction>
            //    </xsd:simpleType>

            [System.Xml.Serialization.XmlEnumAttribute("Presence Group")]
            PresenceGroup,

            [System.Xml.Serialization.XmlEnumAttribute("RSVP Policy")]
            RSVPPolicy
        }

        public class XPresenceGroup
        {
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public string name;

            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public string description;

            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public XMatrix matrix;

            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public bool isStandard;
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")] // was http://www.cisco.com/AXL/1.0 ...
            [System.Xml.Serialization.XmlIncludeAttribute(typeof(XPhoneProfile))]
            public class XIPPhone : XPhone 
        {
    
            // MSC... this must be false, not true!  If their parser encounters the presence of the addOnModules element, 
            // it will complain (even if the nil=true attr is present)
            [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]        
            [System.Xml.Serialization.XmlArrayItemAttribute("addOnModule", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
            public XAddOnModule[] addOnModules;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public XUserLocale userLocale;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool userLocaleSpecified;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public XCountry networkLocale;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool networkLocaleSpecified;
    
            //        /// <remarks/>
            //        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            //        public XDeviceSecurityMode deviceSecurityMode;
            //    
            //        /// <remarks/>
            //        [System.Xml.Serialization.XmlIgnoreAttribute()]
            //        public bool deviceSecurityModeSpecified;
    
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public SecurityProfile securityProfile;

            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public string securityProfileName;
        
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="nonNegativeInteger", IsNullable=true)]
            public string idleTimeout;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="anyURI", IsNullable=true)]
            public string authenticationURL;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="anyURI", IsNullable=true)]
            public string directoryURL;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="anyURI", IsNullable=true)]
            public string idleURL;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="anyURI", IsNullable=true)]
            public string informationURL;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="anyURI", IsNullable=true)]
            public string messagesURL;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="anyURI", IsNullable=true)]
            public string proxyServerURL;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="anyURI", IsNullable=true)]
            public string servicesURL;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlArrayItemAttribute("service", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
            public XSubscribedService[] services;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute("softkeyTemplate", typeof(XSoftkeyTemplate), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlElementAttribute("softkeyTemplateName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public object Item9;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public string loginUserId;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute("defaultProfileName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlElementAttribute("defaultProfile", typeof(XProfile), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public object Item10;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public bool enableExtensionMobility;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute("currentProfile", typeof(XProfile), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlElementAttribute("currentProfileName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public object Item11;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="nonNegativeInteger")]
            public string loginTime;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="nonNegativeInteger")]
            public string loginDuration;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public XStatus builtInBridgeStatus;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool builtInBridgeStatusSpecified;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public XStatus callInfoPrivacyStatus;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool callInfoPrivacyStatusSpecified;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
            public string ownerUserId;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.ComponentModel.DefaultValueAttribute(false)]
            public bool ignorePresentationIndicators = false;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public XPacketCaptureMode packetCaptureMode;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool packetCaptureModeSpecified;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="positiveInteger")]
            public string packetCaptureDuration;
    
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public XCallingSearchSpace subscribeCallingSearchSpace;

            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public string subscribeCallingSearchSpaceName;

            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public bool allowCtiControlFlag;

            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool allowCtiControlFlagSpecified;

            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public XPresenceGroup presenceGroup;

            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public string presenceGroupName;

            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public XCertificateOperation certificateOperation;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool certificateOperationSpecified;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="Name")]
            public string authenticationString;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public XCertificateStatus certificateStatus;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool certificateStatusSpecified;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="Name")]
            public string upgradeFinishTime;
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
            public class XAddOnModule 
        {
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public XLoadInformation loadInformation;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public XModel model;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlAttributeAttribute()]
            public string uuid;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlAttributeAttribute(DataType="nonNegativeInteger")]
            public string index;
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
            public class XLoadInformation 
        {
    
            /// <remarks/>
            [System.Xml.Serialization.XmlAttributeAttribute()]
            public bool special;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool specialSpecified;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlTextAttribute()]
            public string Value;
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
            public class XSIPTrunkSigDigits 
        {
    
            /// <remarks/>
            [System.Xml.Serialization.XmlAttributeAttribute()]
            public bool enable;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlTextAttribute(DataType="nonNegativeInteger")]
            public string Value;
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
            public class XH323PhoneGatekeeperInfo 
        {
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute("gatekeeperName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlElementAttribute("gatekeeper", typeof(XGatekeeper), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public object Item;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public string e164;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public string technologyPrefix;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public string zone;
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
            public class XGatekeeper 
        {
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public string name;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public string description;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="nonNegativeInteger")]
            public string rrqTimeToLive;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="nonNegativeInteger")]
            public string retryTimeout;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public bool enableDevice;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool enableDeviceSpecified;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlAttributeAttribute()]
            public string uuid;
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
            public class XH323TrunkRemoteServerInfo 
        {
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public string server1;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public string server2;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public string server3;
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
            public class XH323TrunkGatekeeperInfo 
        {
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute("gatekeeperName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlElementAttribute("gatekeeper", typeof(XGatekeeper), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public object Item;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public XTerminal terminal;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public string technologyPrefix;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public string zone;
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
            public enum XTerminal 
        {
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("-- Not Selected --")]
            NotSelected,
    
            /// <remarks/>
            Terminal,
    
            /// <remarks/>
            Gateway,
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
            public class XH323GatewaySignificantDigits 
        {
    
            /// <remarks/>
            [System.Xml.Serialization.XmlAttributeAttribute()]
            public bool enable;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlTextAttribute(DataType="nonNegativeInteger")]
            public string Value;
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
            public class XTelecasterService 
        {
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public string name;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public string description;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="anyURI")]
            public string templateURL;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlAttributeAttribute()]
            public string uuid;
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
            public class XSubscribedService 
        {
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute("telecasterServiceName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlElementAttribute("telecasterService", typeof(XTelecasterService), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public object Item;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public string name;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="anyURI")]
            public string url;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="nonNegativeInteger")]
            public string urlButtonIndex;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public string urlLabel;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlAttributeAttribute()]
            public string uuid;
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
            public class XSpeeddial 
        {
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public string dirn;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public string label;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlAttributeAttribute(DataType="positiveInteger")]
            public string index;
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
            public class XButton 
        {
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public XFeature feature;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public string label;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="integer")]
            public string paramN1;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="integer")]
            public string paramN2;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public string paramT1;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public string paramT2;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlAttributeAttribute()]
            public string uuid;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlAttributeAttribute(DataType="positiveInteger")]
            public string index;
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
            public enum XFeature 
        {
    
            /// <remarks/>
            Redial,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("Speed Dial")]
            SpeedDial,
    
            /// <remarks/>
            Hold,
    
            /// <remarks/>
            Transfer,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("Forward All")]
            ForwardAll,
    
            /// <remarks/>
            Display,
    
            /// <remarks/>
            Line,
    
            /// <remarks/>
            Chat,
    
            /// <remarks/>
            Whiteboard,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("Application Sharing")]
            ApplicationSharing,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("File Transfer")]
            FileTransfer,
    
            /// <remarks/>
            Video,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("Message Waiting")]
            MessageWaiting,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("Answer/Release")]
            AnswerRelease,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("Auto Answer")]
            AutoAnswer,
    
            /// <remarks/>
            Settings,
    
            /// <remarks/>
            Privacy,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("Service URL")]
            ServiceURL,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("Malicious Call Identification")]
            MaliciousCallIdentification,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("Meet Me Conference")]
            MeetMeConference,
    
            /// <remarks/>
            Conference,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("Call Park")]
            CallPark,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("Call Pickup")]
            CallPickup,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("Group Call Pickup")]
            GroupCallPickup,
    
            /// <remarks/>
            AEC,
    
            /// <remarks/>
            None,
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
            public class XPhoneTemplate 
        {
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public string name;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlArrayItemAttribute("button", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
            public XButton[] buttons;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public XPhoneTemplateUsage usage;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlAttributeAttribute()]
            public string uuid;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlAttributeAttribute()]
            public bool userModifiable;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool userModifiableSpecified;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlAttributeAttribute()]
            public bool removeAtMigration;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool removeAtMigrationSpecified;
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
            public enum XPhoneTemplateUsage 
        {
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("Traditional Phone Template")]
            TraditionalPhoneTemplate,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("Side Car 14-Buttons")]
            SideCar14Buttons,
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
            public class XPhoneLines 
        {
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute("lineId", typeof(XLineId), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlElementAttribute("line", typeof(XLine), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlElementAttribute("lineLabel", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlElementAttribute("lineIdentifier", typeof(XNumplanIdentifier), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public object[] Items;
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
            public class XLineId 
        {
    
            /// <remarks/>
            [System.Xml.Serialization.XmlAttributeAttribute(DataType="nonNegativeInteger")]
            public string index;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlAttributeAttribute(DataType="nonNegativeInteger")]
            public string ctiid;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlTextAttribute()]
            public string Value;
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
            public class XLine 
        {
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
            public string label;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
            public string display;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute("dirn", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public XNPDirectoryNumber Item;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.ComponentModel.DefaultValueAttribute(XRingSetting.Ring)]
            public XRingSetting ringSetting = XRingSetting.Ring;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.ComponentModel.DefaultValueAttribute(XRingSetting.UseSystemDefault)]
            public XRingSetting consecutiveRingSetting = XRingSetting.UseSystemDefault;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
            public string e164Mask;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="nonNegativeInteger")]
            public string dialPlanWizardId;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public XMWLPolicy mwlPolicy;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool mwlPolicySpecified;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="nonNegativeInteger")]
            public string maxNumCalls;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="nonNegativeInteger")]
            public string busyTrigger;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public XLineCallInfoDisplay callInfoDisplay;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlAttributeAttribute()]
            public string uuid;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlAttributeAttribute(DataType="positiveInteger")]
            public string index;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlAttributeAttribute(DataType="nonNegativeInteger")]
            public string ctiid;
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
            [System.Xml.Serialization.XmlIncludeAttribute(typeof(XNPMessageWaiting))]
            [System.Xml.Serialization.XmlIncludeAttribute(typeof(XNPCTIDirectoryNumber))]
            public class XNPDirectoryNumber : XNumPlan 
        {
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute("aarNeighborhoodName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlElementAttribute("aarNeighborhood", typeof(XAARNeighborhood), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public object Item1;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public XCallForwardInfo callForwardAll;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public XCallForwardInfo callForwardBusy;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public XCallForwardInfo callForwardBusyInt;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public XCallForwardInfo callForwardNoAnswer;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public XCallForwardInfo callForwardNoAnswerInt;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public XCallForwardInfo callForwardNoCoverage;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public XCallForwardInfo callForwardNoCoverageInt;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public XCallForwardInfo callForwardOnFailure;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public XCallForwardInfo callForwardAlternateParty;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute("callPickupGroup", typeof(XNPCallPickupGroup), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlElementAttribute("callPickupGroupName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public object Item2;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public XAutoAnswer autoAnswer;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool autoAnswerSpecified;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="nonNegativeInteger", IsNullable=true)]
            public string networkHoldMOHAudioSourceId;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="nonNegativeInteger", IsNullable=true)]
            public string userHoldMOHAudioSourceId;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public string cfaCSSClause;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
            public string alertingName;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute("shareLineAppearanceCSS", typeof(XNPDirectoryNumberShareLineAppearanceCSS), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlElementAttribute("shareLineAppearanceCSSName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public object Item3;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute("voiceMailProfile", typeof(XVoiceMailProfile), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlElementAttribute("voiceMailProfileName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public object Item4;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public XPatternPrecedence patternPrecedence;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool patternPrecedenceSpecified;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public XReleaseCauseValue releaseCause;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool releaseCauseSpecified;
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
            public class XAARNeighborhood 
        {
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public string name;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlAttributeAttribute()]
            public string uuid;
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
            public class XCallForwardInfo 
        {
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
                //Incorrect AXL Schema.  Default is not false.  Default is ignore currently configured
                //[System.ComponentModel.DefaultValueAttribute(false)]
            public bool forwardToVoiceMail;

            [XmlIgnoreAttribute()]
            public bool forwardToVoiceMailSpecified;

            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute("callingSearchSpace", typeof(XCallingSearchSpace), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlElementAttribute("callingSearchSpaceName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public object Item;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public string destination;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="nonNegativeInteger")]
            public string duration;
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
            [System.Xml.Serialization.XmlIncludeAttribute(typeof(XNPDirectoryNumberShareLineAppearanceCSS))]
            public class XCallingSearchSpace 
        {
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="Name")]
            public string name;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public string description;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public string clause;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="nonNegativeInteger")]
            public string dialPlanWizardGenId;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlArrayItemAttribute("member", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
            public XCallingSearchSpaceMember[] members;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlAttributeAttribute()]
            public string uuid;
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
            public class XCallingSearchSpaceMember 
        {
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute("routePartition", typeof(XRoutePartition), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlElementAttribute("routePartitionId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlElementAttribute("routePartitionName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")]
            public object Item;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public ItemChoiceType1 ItemElementName;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlAttributeAttribute(DataType="positiveInteger")]
            public string index;
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
            public class XRoutePartition 
        {
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public string name;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public string description;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="nonNegativeInteger")]
            public string dialPlanWizardGenId;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute("timeScheduleName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlElementAttribute("timeScheduleId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")]
            public string Item;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public ItemChoiceType ItemElementName;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public bool useOriginatingDeviceTimeZone;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool useOriginatingDeviceTimeZoneSpecified;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public XTimeZone timeZone;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool timeZoneSpecified;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlAttributeAttribute()]
            public string uuid;
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0", IncludeInSchema=false)]
            public enum ItemChoiceType 
        {
    
            /// <remarks/>
            timeScheduleName,
    
            /// <remarks/>
            timeScheduleId,
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
            public enum XTimeZone 
        {
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("Dateline Standard Time")]
            DatelineStandardTime,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("Samoa Standard Time")]
            SamoaStandardTime,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("Hawaiian Standard Time")]
            HawaiianStandardTime,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("Alaskan Standard/Daylight Time")]
            AlaskanStandardDaylightTime,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("Pacific Standard/Daylight Time")]
            PacificStandardDaylightTime,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("US Mountain Standard Time")]
            USMountainStandardTime,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("Mountain Standard/Daylight Time")]
            MountainStandardDaylightTime,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("Central Standard/Daylight Time")]
            CentralStandardDaylightTime,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("Mexico Standard/Daylight Time")]
            MexicoStandardDaylightTime,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("Canada Central Standard Time")]
            CanadaCentralStandardTime,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("SA Pacific Standard Time")]
            SAPacificStandardTime,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("Eastern Standard/Daylight Time")]
            EasternStandardDaylightTime,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("US Eastern Standard Time")]
            USEasternStandardTime,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("Atlantic Standard/Daylight Time")]
            AtlanticStandardDaylightTime,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("SA Western Standard Time")]
            SAWesternStandardTime,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("Newfoundland Standard/Daylight Time")]
            NewfoundlandStandardDaylightTime,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("E. South America Standard/Daylight Time")]
            ESouthAmericaStandardDaylightTime,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("SA Eastern Standard Time")]
            SAEasternStandardTime,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("Mid-Atlantic Standard/Daylight Time")]
            MidAtlanticStandardDaylightTime,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("Azores Standard/Daylight Time")]
            AzoresStandardDaylightTime,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("GMT Standard/Daylight Time")]
            GMTStandardDaylightTime,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("Greenwich Standard Time")]
            GreenwichStandardTime,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("W. Europe Standard/Daylight Time")]
            WEuropeStandardDaylightTime,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("GTB Standard/Daylight Time")]
            GTBStandardDaylightTime,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("Egypt Standard/Daylight Time")]
            EgyptStandardDaylightTime,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("E. Europe Standard/Daylight Time")]
            EEuropeStandardDaylightTime,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("Romance Standard/Daylight Time")]
            RomanceStandardDaylightTime,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("Central Europe Standard/Daylight Time")]
            CentralEuropeStandardDaylightTime,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("South Africa Standard Time")]
            SouthAfricaStandardTime,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("Jerusalem Standard/Daylight Time")]
            JerusalemStandardDaylightTime,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("Saudi Arabia Standard Time")]
            SaudiArabiaStandardTime,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("Russian Standard/Daylight Time")]
            RussianStandardDaylightTime,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("Iran Standard/Daylight Time")]
            IranStandardDaylightTime,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("Caucasus Standard/Daylight Time")]
            CaucasusStandardDaylightTime,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("Afghanistan Standard Time")]
            AfghanistanStandardTime,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("West Asia Standard Time")]
            WestAsiaStandardTime,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("India Standard Time")]
            IndiaStandardTime,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("Central Asia Standard Time")]
            CentralAsiaStandardTime,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("SE Asia Standard Time")]
            SEAsiaStandardTime,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("China Standard/Daylight Time")]
            ChinaStandardDaylightTime,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("Taipei Standard Time")]
            TaipeiStandardTime,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("Tokyo Standard Time")]
            TokyoStandardTime,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("Cen. Australia Standard/Daylight Time")]
            CenAustraliaStandardDaylightTime,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("AUS Central Standard Time")]
            AUSCentralStandardTime,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("E. Australia Standard Time")]
            EAustraliaStandardTime,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("AUS Eastern Standard/Daylight Time")]
            AUSEasternStandardDaylightTime,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("West Pacific Standard Time")]
            WestPacificStandardTime,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("Tasmania Standard/Daylight Time")]
            TasmaniaStandardDaylightTime,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("Central Pacific Standard Time")]
            CentralPacificStandardTime,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("Fiji Standard Time")]
            FijiStandardTime,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("New Zealand Standard/Daylight Time")]
            NewZealandStandardDaylightTime,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("Arabian Standard Time")]
            ArabianStandardTime,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("Ekaterinburg Standard Time")]
            EkaterinburgStandardTime,
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0", IncludeInSchema=false)]
            public enum ItemChoiceType1 
        {
    
            /// <remarks/>
            routePartition,
    
            /// <remarks/>
            routePartitionId,
    
            /// <remarks/>
            routePartitionName,
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
            public class XNPDirectoryNumberShareLineAppearanceCSS : XCallingSearchSpace 
        {
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
            public class XNPCallPickupGroup : XNumPlan 
        {
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="Name")]
            public string name;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlArrayItemAttribute("member", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
            public XPickupGroupMember[] members;
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
            public class XPickupGroupMember 
        {
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="nonNegativeInteger")]
            public string priority;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute("pickupGroupName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlElementAttribute("pickupGroup", typeof(XPickupGroupMemberPickupGroup), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlElementAttribute("pickupDNAndPartition", typeof(XPickupGroupMemberPickupDNAndPartition), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public object Item;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlAttributeAttribute()]
            public string uuid;
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
            public class XPickupGroupMemberPickupGroup 
        {
    
            /// <remarks/>
            [System.Xml.Serialization.XmlAttributeAttribute()]
            public string uuid;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlTextAttribute()]
            public string Value;
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
            public class XPickupGroupMemberPickupDNAndPartition 
        {
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public string dnPattern;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute("routePartition", typeof(XRoutePartition), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlElementAttribute("routePartitionId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlElementAttribute("routePartitionName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")]
            public object Item;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public ItemChoiceType2 ItemElementName;
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0", IncludeInSchema=false)]
            public enum ItemChoiceType2 
        {
    
            /// <remarks/>
            routePartition,
    
            /// <remarks/>
            routePartitionId,
    
            /// <remarks/>
            routePartitionName,
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
            [System.Xml.Serialization.XmlIncludeAttribute(typeof(XNPCallPark))]
            [System.Xml.Serialization.XmlIncludeAttribute(typeof(XNPConference))]
            [System.Xml.Serialization.XmlIncludeAttribute(typeof(XNPCallPickupGroup))]
            [System.Xml.Serialization.XmlIncludeAttribute(typeof(XNPDirectoryNumber))]
            [System.Xml.Serialization.XmlIncludeAttribute(typeof(XNPMessageWaiting))]
            [System.Xml.Serialization.XmlIncludeAttribute(typeof(XNPCTIDirectoryNumber))]
            public abstract class XNumPlan 
        {
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public string pattern;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public string description;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public XPatternUsage usage;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute("routePartition", typeof(XRoutePartition), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlElementAttribute("routePartitionName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public object Item;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlAttributeAttribute()]
            public string uuid;
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
            public enum XPatternUsage 
        {
    
            /// <remarks/>
            CallPark,
    
            /// <remarks/>
            Conference,
    
            /// <remarks/>
            Device,
    
            /// <remarks/>
            Translation,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("Call Pick Up Group")]
            CallPickUpGroup,
    
            /// <remarks/>
            Route,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("Message Waiting")]
            MessageWaiting,
    
            /// <remarks/>
            Hunt,
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
            public class XNPCallPark : XNumPlan 
        {
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute("callManagerName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlElementAttribute("callManagerId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlChoiceIdentifierAttribute("Item1ElementName")]
            public string Item1;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public Item1ChoiceType Item1ElementName;
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0", IncludeInSchema=false)]
            public enum Item1ChoiceType 
        {
    
            /// <remarks/>
            callManagerName,
    
            /// <remarks/>
            callManagerId,
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
            public class XNPConference : XNumPlan 
        {
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public XMixer mixer;
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
            public enum XMixer 
        {
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("Not Selected")]
            NotSelected,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("Multicast Point")]
            MulticastPoint,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("Unicast Bridge")]
            UnicastBridge,
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
            public enum XAutoAnswer 
        {
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("Auto Answer Off")]
            AutoAnswerOff,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("Auto Answer with Headset")]
            AutoAnswerwithHeadset,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("Auto Answer with Speakerphone")]
            AutoAnswerwithSpeakerphone,
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
            public class XVoiceMailProfile 
        {
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public string name;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public string description;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.ComponentModel.DefaultValueAttribute(false)]
            public bool isDefault = false;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public string voiceMailboxMask;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public XVoiceMailPilot voiceMailPilot;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlAttributeAttribute()]
            public string uuid;
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
            public class XVoiceMailPilot 
        {
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public string dirn;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public string description;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute("CSS", typeof(XCallingSearchSpace), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlElementAttribute("CSSName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public object Item;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.ComponentModel.DefaultValueAttribute(false)]
            public bool isDefault = false;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlAttributeAttribute()]
            public string uuid;
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
            public enum XPatternPrecedence 
        {
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("Flash Override")]
            FlashOverride,
    
            /// <remarks/>
            Flash,
    
            /// <remarks/>
            Immediate,
    
            /// <remarks/>
            Priority,
    
            /// <remarks/>
            Routine,
    
            /// <remarks/>
            Default,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("Executive Override")]
            ExecutiveOverride,
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
            public enum XReleaseCauseValue 
        {
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("No Error")]
            NoError,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("Unallocated Number")]
            UnallocatedNumber,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("Call Rejected")]
            CallRejected,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("Number Changed")]
            NumberChanged,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("Invalid Number Format")]
            InvalidNumberFormat,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("Precedence Level Exceeded")]
            PrecedenceLevelExceeded,
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
            public class XNPMessageWaiting : XNPDirectoryNumber 
        {
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public bool isMessageWaitingOn;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public XCallingSearchSpace mwiCSS;
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
            public class XNPCTIDirectoryNumber : XNPDirectoryNumber 
        {
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public XCallForwardInfo callForwardCTIFailure;
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
            public enum XRingSetting 
        {
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("Use System Default")]
            UseSystemDefault,
    
            /// <remarks/>
            Disable,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("Flash Only")]
            FlashOnly,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("Ring Once")]
            RingOnce,
    
            /// <remarks/>
            Ring,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("Beep Only")]
            BeepOnly,
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
            public enum XMWLPolicy 
        {
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("Use System Policy")]
            UseSystemPolicy,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("Light and Prompt")]
            LightandPrompt,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("Prompt Only")]
            PromptOnly,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("Light Only")]
            LightOnly,
    
            /// <remarks/>
            None,
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
            public class XLineCallInfoDisplay 
        {
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public bool callerName;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public bool callerNumber;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public bool redirectedNumber;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public bool dialedNumber;
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
            public class XNumplanIdentifier 
        {
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public string directoryNumber;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public string routePartitionName;
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
            public class XCTIRoutePointLines 
        {
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute("lineId", typeof(XLineId), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlElementAttribute("line", typeof(XLine), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlElementAttribute("lineIdentifier", typeof(XNumplanIdentifier), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public object[] Items;
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
            public class XPRIGatewayInterfaceId 
        {
    
            /// <remarks/>
            [System.Xml.Serialization.XmlAttributeAttribute()]
            public bool present;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool presentSpecified;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlTextAttribute(DataType="nonNegativeInteger")]
            public string Value;
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
            public class XAnalogPortFinalDigits 
        {
    
            /// <remarks/>
            [System.Xml.Serialization.XmlAttributeAttribute()]
            public bool significant;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlTextAttribute(DataType="nonNegativeInteger")]
            public string Value;
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
            [System.Xml.Serialization.XmlIncludeAttribute(typeof(XT1Port))]
            public class XAnalogPort 
        {
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public string attendantDN;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public string callerIdDN;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public bool callerIdEnable;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public XCallingPartySelection callingPartySelection;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public XDigitSending digitSending;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="nonNegativeInteger")]
            public string expectedDigits;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public XAnalogPortFinalDigits finalDigits;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute("lineId", typeof(XLineId), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlElementAttribute("line", typeof(XLine), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public object Item;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public string prefixDN;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public XPresentationBit presentationBit;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public XSilenceSuppressionThreshold silenceSuppressionThreshold;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="nonNegativeInteger")]
            public string smdiPortNumber;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public XStartDialProtocol startDialProtocol;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlArrayItemAttribute("timer", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="nonNegativeInteger", IsNullable=false)]
            public string[] timers;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public XTrunk trunk;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public XTrunkDirection trunkDirection;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public XTrunkLevel trunkLevel;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public XTrunkPad trunkPadRx;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public XTrunkPad trunkPadTx;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public System.Xml.XmlElement vendorConfig;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlAttributeAttribute()]
            public string uuid;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlAttributeAttribute(DataType="positiveInteger")]
            public string portNumber;
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
            public enum XCallingPartySelection 
        {
    
            /// <remarks/>
            Originator,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("First Redirect Number")]
            FirstRedirectNumber,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("Last Redirect Number")]
            LastRedirectNumber,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("First Redirect Number (External)")]
            FirstRedirectNumberExternal,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("Last Redirect Number (External)")]
            LastRedirectNumberExternal,
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
            public enum XDigitSending 
        {
    
            /// <remarks/>
            DTMF,
    
            /// <remarks/>
            MF,
    
            /// <remarks/>
            PULSE,
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
            public enum XPresentationBit 
        {
    
            /// <remarks/>
            Default,
    
            /// <remarks/>
            Allowed,
    
            /// <remarks/>
            Restricted,
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
            public enum XSilenceSuppressionThreshold 
        {
    
            /// <remarks/>
            Disable,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("-48dbm0")]
            Item48dbm0,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("-45dbm0")]
            Item45dbm0,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("-42dbm0")]
            Item42dbm0,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("-39dbm0")]
            Item39dbm0,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("-36dbm0")]
            Item36dbm0,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("-33dbm0")]
            Item33dbm0,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("-30dbm0")]
            Item30dbm0,
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
            public enum XStartDialProtocol 
        {
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("Not Set")]
            NotSet,
    
            /// <remarks/>
            Immediate,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("Wink Start Feature Group B")]
            WinkStartFeatureGroupB,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("Delay Dial")]
            DelayDial,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("Wink Start Feature Group D")]
            WinkStartFeatureGroupD,
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
            public enum XTrunk 
        {
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("Ground Start")]
            GroundStart,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("Loop Start")]
            LoopStart,
    
            /// <remarks/>
            DID,
    
            /// <remarks/>
            POTS,
    
            /// <remarks/>
            EANDM,
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
            public enum XTrunkDirection 
        {
    
            /// <remarks/>
            Inbound,
    
            /// <remarks/>
            Outbound,
    
            /// <remarks/>
            Bothways,
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
            public enum XTrunkLevel 
        {
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("AAL(A)")]
            AALA,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("AAL(D)")]
            AALD,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("A/TT")]
            ATT,
    
            /// <remarks/>
            DAL,
    
            /// <remarks/>
            ICS,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("ISD/TT")]
            ISDTT,
    
            /// <remarks/>
            IST,
    
            /// <remarks/>
            ONS,
    
            /// <remarks/>
            OPS,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("S/ATT")]
            SATT,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("S/DTT")]
            SDTT,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("A/TO")]
            ATO,
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
            public enum XTrunkPad 
        {
    
            /// <remarks/>
            Minus32db,
    
            /// <remarks/>
            Minus31db,
    
            /// <remarks/>
            Minus30db,
    
            /// <remarks/>
            Minus29db,
    
            /// <remarks/>
            Minus28db,
    
            /// <remarks/>
            Minus27db,
    
            /// <remarks/>
            Minus26db,
    
            /// <remarks/>
            Minus25db,
    
            /// <remarks/>
            Minus24db,
    
            /// <remarks/>
            Minus23db,
    
            /// <remarks/>
            Minus22db,
    
            /// <remarks/>
            Minus21db,
    
            /// <remarks/>
            Minus20db,
    
            /// <remarks/>
            Minus19db,
    
            /// <remarks/>
            Minus18db,
    
            /// <remarks/>
            Minus17db,
    
            /// <remarks/>
            Minus16db,
    
            /// <remarks/>
            Minus15db,
    
            /// <remarks/>
            Minus14db,
    
            /// <remarks/>
            Minus13db,
    
            /// <remarks/>
            Minus12db,
    
            /// <remarks/>
            Minus11db,
    
            /// <remarks/>
            Minus10db,
    
            /// <remarks/>
            Minus9db,
    
            /// <remarks/>
            Minus8db,
    
            /// <remarks/>
            Minus7db,
    
            /// <remarks/>
            Minus6db,
    
            /// <remarks/>
            Minus5db,
    
            /// <remarks/>
            Minus4db,
    
            /// <remarks/>
            Minus3db,
    
            /// <remarks/>
            Minus2db,
    
            /// <remarks/>
            Minus1db,
    
            /// <remarks/>
            NoDbPadding,
    
            /// <remarks/>
            Plus1db,
    
            /// <remarks/>
            Plus2db,
    
            /// <remarks/>
            Plus3db,
    
            /// <remarks/>
            Plus4db,
    
            /// <remarks/>
            Plus5db,
    
            /// <remarks/>
            Plus6db,
    
            /// <remarks/>
            Plus7db,
    
            /// <remarks/>
            Plus8db,
    
            /// <remarks/>
            Plus9db,
    
            /// <remarks/>
            Plus10db,
    
            /// <remarks/>
            Plus11db,
    
            /// <remarks/>
            Plus12db,
    
            /// <remarks/>
            Plus13db,
    
            /// <remarks/>
            Plus14db,
    
            /// <remarks/>
            Plus15db,
    
            /// <remarks/>
            Plus16db,
    
            /// <remarks/>
            Plus17db,
    
            /// <remarks/>
            Plus18db,
    
            /// <remarks/>
            Plus19db,
    
            /// <remarks/>
            Plus20db,
    
            /// <remarks/>
            Plus21db,
    
            /// <remarks/>
            Plus22db,
    
            /// <remarks/>
            Plus23db,
    
            /// <remarks/>
            Plus24db,
    
            /// <remarks/>
            Plus25db,
    
            /// <remarks/>
            Plus26db,
    
            /// <remarks/>
            Plus27db,
    
            /// <remarks/>
            Plus28db,
    
            /// <remarks/>
            Plus29db,
    
            /// <remarks/>
            Plus30db,
    
            /// <remarks/>
            Plus31db,
    
            /// <remarks/>
            Plus32db,
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
            public class XT1Port : XAnalogPort 
        {
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public XCallerID callerId;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public string endpointId;
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
            public enum XCallerID 
        {
    
            /// <remarks/>
            ANI,
    
            /// <remarks/>
            DNIS,
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
            public class XLocation 
        {
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public string name;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="nonNegativeInteger")]
            public string id;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="nonNegativeInteger")]
            public string kbits;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="nonNegativeInteger")]
            public string videoKbits;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlAttributeAttribute()]
            public string uuid;
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
            public class XSRSTInfo 
        {
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="Name")]
            public string name;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.ComponentModel.DefaultValueAttribute(XSRSTOption.UserSpecific)]
            public XSRSTOption srstOption = XSRSTOption.UserSpecific;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.ComponentModel.DefaultValueAttribute(true)]
            public bool userModifiable = true;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public string ipAddr1;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="nonNegativeInteger")]
            [System.ComponentModel.DefaultValueAttribute("2000")]
            public string port1 = "2000";
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public string ipAddr2;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="nonNegativeInteger")]
            [System.ComponentModel.DefaultValueAttribute("2000")]
            public string port2 = "2000";
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public string ipAddr3;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="nonNegativeInteger")]
            [System.ComponentModel.DefaultValueAttribute("2000")]
            public string port3 = "2000";
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public string certificate;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.ComponentModel.DefaultValueAttribute(false)]
            public bool isSecure = false;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlAttributeAttribute()]
            public string uuid;
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
            public enum XSRSTOption 
        {
    
            /// <remarks/>
            Disable,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("Use Default Gateway")]
            UseDefaultGateway,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("Legacy Configuration")]
            LegacyConfiguration,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("User Specific")]
            UserSpecific,
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
            public class XSoftkeyTemplate 
        {
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public string name;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public string description;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.ComponentModel.DefaultValueAttribute(true)]
            public bool isStandard = true;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
            public string softkeyClause;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
            public string softkeySetClause;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlAttributeAttribute()]
            public string uuid;
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
            public class XRegionRelationship 
        {
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute("region", typeof(XRegion), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlElementAttribute("name", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public object Item;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.ComponentModel.DefaultValueAttribute(XBandwidth.G711)]
            public XBandwidth bandwidth = XBandwidth.G711;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="nonNegativeInteger")]
            public string videoBandwidth;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlAttributeAttribute()]
            public string uuid;
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
            public class XRegion 
        {
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public string name;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlArrayItemAttribute("relatedRegion", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
            public XRegionRelationship[] relatedRegions;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlAttributeAttribute()]
            public string uuid;
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
            public enum XBandwidth 
        {
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("G.723")]
            G723,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("G.729")]
            G729,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("G.722")]
            G722,
    
            /// <remarks/>
            GSM,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("G.728")]
            G728,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("G.711")]
            G711,
    
            /// <remarks/>
            Wideband,
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
            public class XMediaResourceGroupMember 
        {
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute("deviceName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlElementAttribute("device", typeof(XDevice), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public object Item;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlAttributeAttribute()]
            public string uuid;
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
            [System.Xml.Serialization.XmlIncludeAttribute(typeof(XSIPTrunk))]
            [System.Xml.Serialization.XmlIncludeAttribute(typeof(XMGCPEndpoint))]
            [System.Xml.Serialization.XmlIncludeAttribute(typeof(XVoiceMailPort))]
            [System.Xml.Serialization.XmlIncludeAttribute(typeof(XServerDevice))]
            [System.Xml.Serialization.XmlIncludeAttribute(typeof(XH323Device))]
            [System.Xml.Serialization.XmlIncludeAttribute(typeof(XH323Phone))]
            [System.Xml.Serialization.XmlIncludeAttribute(typeof(XH323Gateway))]
            [System.Xml.Serialization.XmlIncludeAttribute(typeof(XH323Trunk))]
            [System.Xml.Serialization.XmlIncludeAttribute(typeof(XProfile))]
            [System.Xml.Serialization.XmlIncludeAttribute(typeof(XPhone))]
            [System.Xml.Serialization.XmlIncludeAttribute(typeof(XIPPhone))]
            [System.Xml.Serialization.XmlIncludeAttribute(typeof(XPhoneProfile))]
            [System.Xml.Serialization.XmlIncludeAttribute(typeof(XCTIRoutePoint))]
            [System.Xml.Serialization.XmlIncludeAttribute(typeof(XGateway))]
            [System.Xml.Serialization.XmlIncludeAttribute(typeof(XAnalogGateway))]
            [System.Xml.Serialization.XmlIncludeAttribute(typeof(XDigitalGateway))]
            [System.Xml.Serialization.XmlIncludeAttribute(typeof(XPRIGateway))]
            [System.Xml.Serialization.XmlIncludeAttribute(typeof(XT1Gateway))]
            [System.Xml.Serialization.XmlIncludeAttribute(typeof(XBRIGateway))]
            public class XDevice 
        {
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="Name")]
            public string name;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public string description;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute("productInfo", typeof(XProductInfo), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlElementAttribute("product", typeof(XProduct), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public object Item;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute("modelInfo", typeof(XModelInfo), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlElementAttribute("model", typeof(XModel), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public object Item1;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public XClass @class;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public XDeviceProtocol protocol;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public XProtocolSide protocolSide;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute("callingSearchSpace", typeof(XCallingSearchSpace), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlElementAttribute("callingSearchSpaceName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="Name")]
            public object Item2;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute("devicePoolName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlElementAttribute("devicePool", typeof(XDevicePool), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public object Item3;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public XNetworkLocation networkLocation;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool networkLocationSpecified;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute("location", typeof(XLocation), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlElementAttribute("locationName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public object Item4;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute("mediaResourceList", typeof(XMediaResourceList), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlElementAttribute("mediaResourceListName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public object Item5;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="nonNegativeInteger")]
            public string networkHoldMOHAudioSourceId;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="nonNegativeInteger")]
            public string userHoldMOHAudioSourceId;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute("automatedAlternateRoutingCSSName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlElementAttribute("automatedAlternateRoutingCSS", typeof(XCallingSearchSpace), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public object Item6;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute("aarNeighborhoodName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlElementAttribute("aarNeighborhood", typeof(XAARNeighborhood), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public object Item7;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public XLoadInformation loadInformation;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public System.Xml.XmlElement vendorConfig;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public string versionStamp;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public bool traceFlag;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool traceFlagSpecified;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public int mlppDomainId;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool mlppDomainIdSpecified;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public XStatus mlppIndicationStatus;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool mlppIndicationStatusSpecified;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public XPreemption preemption;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool preemptionSpecified;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.ComponentModel.DefaultValueAttribute(true)]
            public bool retryVideoCallAsAudio = true;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlAttributeAttribute(DataType="positiveInteger")]
            public string ctiid;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlAttributeAttribute()]
            public string uuid;
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
            public class XProductInfo 
        {
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public XModel model;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="nonNegativeInteger")]
            public string maxPorts;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public bool showInDropDown;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool showInDropDownSpecified;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlAttributeAttribute()]
            public XProduct name;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool nameSpecified;
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
            public enum XModel 
        {
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("Cisco 7961G-GE")]
            Cisco7961GGE,

            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("Cisco 7941G-GE")]
            Cisco7941GGE,

            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("Third-party SIP Device (Advanced)")]
            ThirdPartySipAdvanced,

            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("Cisco 30 SP+")]
            Cisco30SP,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("Cisco 12 SP+")]
            Cisco12SP,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("Cisco 12 SP")]
            Cisco12SP1,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("Cisco 12 S")]
            Cisco12S,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("Cisco 30 VIP")]
            Cisco30VIP,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("Cisco 7910")]
            Cisco7910,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("Cisco 7960")]
            Cisco7960,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("Cisco 7940")]
            Cisco7940,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("Cisco 7935")]
            Cisco7935,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("Cisco VGC Phone")]
            CiscoVGCPhone,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("Cisco VGC Virtual Phone")]
            CiscoVGCVirtualPhone,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("Cisco ATA 186")]
            CiscoATA186,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("Selsius Soft Phone")]
            SelsiusSoftPhone,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("Analog Access")]
            AnalogAccess,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("Digital Access")]
            DigitalAccess,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("Digital Access+")]
            DigitalAccess1,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("Digital Access WS-X6608")]
            DigitalAccessWSX6608,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("Analog Access WS-X6624")]
            AnalogAccessWSX6624,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("VGC Gateway")]
            VGCGateway,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("Conference Bridge")]
            ConferenceBridge,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("Conference Bridge Hardware")]
            ConferenceBridgeHardware,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("Cisco IOS Conference Bridge (HDV2)")]
            CiscoIOSConferenceBridgeHDV2,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("Cisco Conference Bridge (WS-SVC-CMM)")]
            CiscoConferenceBridgeWSSVCCMM,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("H.323 Phone")]
            H323Phone,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("H.323 Gateway")]
            H323Gateway,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("Music On Hold")]
            MusicOnHold,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("Device Pilot")]
            DevicePilot,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("CTI Port")]
            CTIPort,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("CTI Route Point")]
            CTIRoutePoint,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("Voice Mail Port")]
            VoiceMailPort,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("Cisco IOS Software Media Termination Point (HDV2)")]
            CiscoIOSSoftwareMediaTerminationPointHDV2,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("Cisco Video Conference Bridge (IPVC-35xx)")]
            CiscoVideoConferenceBridgeIPVC35xx,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("Route List")]
            RouteList,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("Load Simulator")]
            LoadSimulator,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("Media Termination Point")]
            MediaTerminationPoint,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("Media Termination Point Hardware")]
            MediaTerminationPointHardware,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("Cisco IOS Media Termination Point (HDV2)")]
            CiscoIOSMediaTerminationPointHDV2,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("Cisco Media Termination Point (WS-SVC-CMM)")]
            CiscoMediaTerminationPointWSSVCCMM,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("MGCP Station")]
            MGCPStation,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("MGCP Trunk")]
            MGCPTrunk,
    
            /// <remarks/>
            GateKeeper,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("7914 14-Button Line Expansion Module")]
            Item791414ButtonLineExpansionModule,
    
            /// <remarks/>
            Trunk,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("Tone Announcement Player")]
            ToneAnnouncementPlayer,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("SIP Trunk")]
            SIPTrunk,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("SIP Gateway")]
            SIPGateway,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("Unknown MGCP Gateway")]
            UnknownMGCPGateway,
    
            /// <remarks/>
            Unknown,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("Cisco 7905")]
            Cisco7905,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("Cisco 7920")]
            Cisco7920,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("Ubiquity I")]
            UbiquityI,
    
            /// <remarks/>
            IP250D,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("Cisco 7970")]
            Cisco7970,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("Cisco 7912")]
            Cisco7912,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("Cisco 7902")]
            Cisco7902,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("Cisco SoftPhone SE-S")]
            CiscoSoftPhoneSES,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("Cisco IP Communicator")]
            CiscoIPCommunicator,
    
            /// <remarks/>
            SamplePhone,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("Cisco 7965")]
            Cisco7965,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("Cisco 7936")]
            Cisco7936,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("Analog Phone")]
            AnalogPhone,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("ISDN BRI Phone")]
            ISDNBRIPhone,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("SCCP gateway virtual phone")]
            SCCPgatewayvirtualphone,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("IP-STE")]
            IPSTE,
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
            public enum XProduct 
        {
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("Cisco 7961G-GE")]
            Cisco7961GGE,

            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("Cisco 7941G-GE")]
            Cisco7941GGE,

            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("Third-party SIP Device (Advanced)")]
            ThirdPartySipAdvanced,
    
            /// <remarks/>
            Pilot,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("Cisco Catalyst 6000 T1 VoIP Gateway")]
            CiscoCatalyst6000T1VoIPGateway,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("Cisco Catalyst 6000 E1 VoIP Gateway")]
            CiscoCatalyst6000E1VoIPGateway,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("Cisco Catalyst 6000 24 port FXS Gateway")]
            CiscoCatalyst600024portFXSGateway,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("Cisco Catalyst 6000 12 port FXO Gateway")]
            CiscoCatalyst600012portFXOGateway,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("Cisco DT-24+ Gateway")]
            CiscoDT24Gateway,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("Cisco DE-30+ Gateway")]
            CiscoDE30Gateway,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("Cisco AT-2 Gateway")]
            CiscoAT2Gateway,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("Cisco AT-4 Gateway")]
            CiscoAT4Gateway,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("Cisco AT-8 Gateway")]
            CiscoAT8Gateway,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("Cisco AS-2 Gateway")]
            CiscoAS2Gateway,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("Cisco AS-4 Gateway")]
            CiscoAS4Gateway,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("Cisco AS-8 Gateway")]
            CiscoAS8Gateway,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("H.323 Client")]
            H323Client,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("H.323 Gateway")]
            H323Gateway,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("Cisco MGCP FXO Port")]
            CiscoMGCPFXOPort,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("Cisco MGCP FXS Port")]
            CiscoMGCPFXSPort,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("Cisco 12 SP+")]
            Cisco12SP,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("Cisco 12 SP")]
            Cisco12SP1,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("Cisco 12 S")]
            Cisco12S,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("Cisco 30 SP+")]
            Cisco30SP,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("Cisco 30 VIP")]
            Cisco30VIP,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("CTI Port")]
            CTIPort,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("Cisco Web Attendant Pilot")]
            CiscoWebAttendantPilot,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("Cisco Voice Mail Port")]
            CiscoVoiceMailPort,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("Cisco Conference Bridge Software")]
            CiscoConferenceBridgeSoftware,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("Cisco Conference Bridge Hardware")]
            CiscoConferenceBridgeHardware,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("Cisco Media Termination Point Software")]
            CiscoMediaTerminationPointSoftware,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("Cisco Media Termination Point Hardware")]
            CiscoMediaTerminationPointHardware,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("Cisco 7935")]
            Cisco7935,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("Selsius Soft Phone")]
            SelsiusSoftPhone,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("Cisco 7910")]
            Cisco7910,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("Cisco 7960")]
            Cisco7960,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("Cisco 7940")]
            Cisco7940,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("Route List")]
            RouteList,
    
            /// <remarks/>
            Unknown,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("Load Simulator")]
            LoadSimulator,
    
            /// <remarks/>
            Gatekeeper,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("NM-1V")]
            NM1V,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("NM-2V")]
            NM2V,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("Cisco VG200")]
            CiscoVG200,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("Cisco 26XX")]
            Cisco26XX,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("Cisco 362X")]
            Cisco362X,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("Cisco 364X")]
            Cisco364X,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("Cisco 366X")]
            Cisco366X,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("CTI Route Point")]
            CTIRoutePoint,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("Music On Hold")]
            MusicOnHold,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("Cisco MGCP T1 Port")]
            CiscoMGCPT1Port,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("NM-HDV")]
            NMHDV,
    
            /// <remarks/>
            VIC_SLOT,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("Cisco MGCP E1 Port")]
            CiscoMGCPE1Port,
    
            /// <remarks/>
            VWIC_SLOT,
    
            /// <remarks/>
            FLEX_SLOT,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("Cisco Catalyst 4224 Voice Gateway Switch")]
            CiscoCatalyst4224VoiceGatewaySwitch,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("Cisco Catalyst 4000 Access Gateway  Module")]
            CiscoCatalyst4000AccessGatewayModule,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("Cisco IOS Conference Bridge")]
            CiscoIOSConferenceBridge,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("Cisco IOS Media Termination Point")]
            CiscoIOSMediaTerminationPoint,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("Cisco IAD 2420 (end of sale product)")]
            CiscoIAD2420endofsaleproduct,
    
            /// <remarks/>
            IAD2400_ANALOG,
    
            /// <remarks/>
            IAD2400_DIGITAL,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("Cisco VGC Phone")]
            CiscoVGCPhone,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("Cisco VG248 Gateway")]
            CiscoVG248Gateway,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("VGC Port")]
            VGCPort,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("Cisco VGC Virtual Phone")]
            CiscoVGCVirtualPhone,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("Cisco ATA 186")]
            CiscoATA186,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("Cisco ICS77XX-MRP2xx")]
            CiscoICS77XXMRP2xx,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("Cisco ICS77XX-ASI81")]
            CiscoICS77XXASI81,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("Cisco ICS77XX-ASI160")]
            CiscoICS77XXASI160,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("H.225 Trunk (Gatekeeper Controlled)")]
            H225TrunkGatekeeperControlled,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("Inter-Cluster Trunk (Gatekeeper Controlled)")]
            InterClusterTrunkGatekeeperControlled,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("Inter-Cluster Trunk (Non-Gatekeeper Controlled)")]
            InterClusterTrunkNonGatekeeperControlled,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("Communication Media Module")]
            CommunicationMediaModule,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("WS-X6600")]
            WSX6600,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("AIM-VOICE-30")]
            AIMVOICE30,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("NM-HDA")]
            NMHDA,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("PA-VXA")]
            PAVXA,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("PA-VXB")]
            PAVXB,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("PA-VXC")]
            PAVXC,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("PA-MCX")]
            PAMCX,
    
            /// <remarks/>
            Annunciator,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("Cisco MGCP BRI Port")]
            CiscoMGCPBRIPort,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("NM-HD-1V")]
            NMHD1V,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("NM-HD-2V")]
            NMHD2V,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("NM-HD-2VE")]
            NMHD2VE,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("SIP Trunk")]
            SIPTrunk,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("Cisco Conference Bridge (WS-SVC-CMM)")]
            CiscoConferenceBridgeWSSVCCMM,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("Cisco Media Termination Point (WS-SVC-CMM)")]
            CiscoMediaTerminationPointWSSVCCMM,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("Cisco IOS Enhanced Software Media Termination Point")]
            CiscoIOSEnhancedSoftwareMediaTerminationPoint,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("7914 14-Button Line Expansion Module")]
            Item791414ButtonLineExpansionModule,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("Cisco IOS Enhanced Conference Bridge")]
            CiscoIOSEnhancedConferenceBridge,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("Cisco IOS Enhanced Media Termination Point")]
            CiscoIOSEnhancedMediaTerminationPoint,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("Cisco Video Conference Bridge(IPVC-35xx)")]
            CiscoVideoConferenceBridgeIPVC35xx,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("Hunt List")]
            HuntList,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("WS-SVC-CMM-MS")]
            WSSVCCMMMS,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("NM-4VWIC-MBRD")]
            NM4VWICMBRD,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("VNM-HDA")]
            VNMHDA,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("NM-HDV2-0PORT")]
            NMHDV20PORT,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("NM-HDV2-1PORT")]
            NMHDV21PORT,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("NM-HDV2-2PORT")]
            NMHDV22PORT,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("Cisco 3745")]
            Cisco3745,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("Cisco 3725")]
            Cisco3725,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("Cisco 7905")]
            Cisco7905,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("Cisco 7920")]
            Cisco7920,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("Cisco ICS77XX-MRP3xx")]
            CiscoICS77XXMRP3xx,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("Cisco ICS77XX-MRP3-8FXS")]
            CiscoICS77XXMRP38FXS,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("Cisco ICS77XX-MRP3-16FXS")]
            CiscoICS77XXMRP316FXS,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("Cisco ICS77XX-MRP3-8FXO-M1")]
            CiscoICS77XXMRP38FXOM1,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("Ubiquity I")]
            UbiquityI,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("Cisco 269X")]
            Cisco269X,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("Cisco 72XX")]
            Cisco72XX,
    
            /// <remarks/>
            IP250D,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("Cisco 7970")]
            Cisco7970,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("Cisco 1760")]
            Cisco1760,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("Cisco 1751")]
            Cisco1751,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("Cisco 7912")]
            Cisco7912,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("Cisco 7902")]
            Cisco7902,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("WS-X6600-6E1")]
            WSX66006E1,
    
            /// <remarks/>
            VG224,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("Cisco SoftPhone SE-S")]
            CiscoSoftPhoneSES,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("Cisco 2821")]
            Cisco2821,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("Cisco IP Communicator")]
            CiscoIPCommunicator,
    
            /// <remarks/>
            SampleGW,
    
            /// <remarks/>
            SamplePhone,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("Cisco 7965")]
            Cisco7965,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("366xA")]
            Item366xA,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("366xB")]
            Item366xB,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("3745")]
            Item3745,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("3745A")]
            Item3745A,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("Cisco 7936")]
            Cisco7936,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("Cisco 3825")]
            Cisco3825,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("Cisco 3845")]
            Cisco3845,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("Cisco 2811")]
            Cisco2811,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("Cisco 2851")]
            Cisco2851,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("Analog Phone")]
            AnalogPhone,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("ISDN BRI Phone")]
            ISDNBRIPhone,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("SCCP gateway virtual phone")]
            SCCPgatewayvirtualphone,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("IP-STE")]
            IPSTE,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("Cisco 2801")]
            Cisco2801,
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
            public class XModelInfo 
        {
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public XClass @class;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="nonNegativeInteger")]
            public string defaultDTMFCapability;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlArrayItemAttribute("feature", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
            public XFeature[] features;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public bool hasFirmwardLoad;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool hasFirmwardLoadSpecified;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public bool hasPhoneTemplate;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool hasPhoneTemplateSpecified;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="nonNegativeInteger")]
            public string numberOfButtons;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public bool phoneTemplateIsUserModifiable;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool phoneTemplateIsUserModifiableSpecified;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public bool showInDeviceDefaults;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool showInDeviceDefaultsSpecified;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlAttributeAttribute()]
            public XModel name;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool nameSpecified;
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
            public enum XClass 
        {
            /// <remarks/>
            Phone,
    
            /// <remarks/>
            Gateway,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("Conference Bridge")]
            ConferenceBridge,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("Media Termination Point")]
            MediaTerminationPoint,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("Route List")]
            RouteList,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("Voice Mail")]
            VoiceMail,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("CTI Route Point")]
            CTIRoutePoint,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("Music On Hold")]
            MusicOnHold,
    
            /// <remarks/>
            Simulation,
    
            /// <remarks/>
            Pilot,
    
            /// <remarks/>
            GateKeeper,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("Add-on modules")]
            Addonmodules,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("Hidden Phone")]
            HiddenPhone,
    
            /// <remarks/>
            Trunk,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("Tone Announcement Player")]
            ToneAnnouncementPlayer,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("Device Profile")]
            DeviceProfile,
    
            /// <remarks/>
            Invalid,
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
            public enum XDeviceProtocol 
        {
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("Cisco-station")]
            Ciscostation,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("Digital Access PRI")]
            DigitalAccessPRI,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("H.225")]
            H225,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("Analog Access")]
            AnalogAccess,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("Digital Access T1")]
            DigitalAccessT1,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("Route Point")]
            RoutePoint,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("Unicast Bridge")]
            UnicastBridge,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("Multicast Point")]
            MulticastPoint,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("Inter-Cluster Trunk")]
            InterClusterTrunk,
    
            /// <remarks/>
            RAS,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("Digital Access BRI")]
            DigitalAccessBRI,
    
            /// <remarks/>
            SIP,
    
            /// <remarks/>
            MGCP,
    
            /// <remarks/>
            SCCP,
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
            public enum XProtocolSide 
        {
    
            /// <remarks/>
            Network,
    
            /// <remarks/>
            User,
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
            public class XDevicePool 
        {
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public string name;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute("autoSearchSpaceName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlElementAttribute("autoSearchSpace", typeof(XCallingSearchSpace), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public object Item;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute("dateTimeSetting", typeof(XDateTimeSetting), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlElementAttribute("dateTimeSettingName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public object Item1;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute("callManagerGroupName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlElementAttribute("callManagerGroup", typeof(XCallManagerGroup), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public object Item2;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute("mediaResourceList", typeof(XMediaResourceList), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlElementAttribute("mediaResourceListName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public object Item3;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute("region", typeof(XRegion), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlElementAttribute("regionName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public object Item4;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute("softkeyTemplate", typeof(XSoftkeyTemplate), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlElementAttribute("softkeyTemplateName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public object Item5;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public XCountry networkLocale;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool networkLocaleSpecified;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public XUserLocale userLocale;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool userLocaleSpecified;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="nonNegativeInteger")]
            public string networkHoldMOHAudioSourceId;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="nonNegativeInteger")]
            public string userHoldMOHAudioSourceId;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute("srstName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlElementAttribute("srstInfo", typeof(XSRSTInfo), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public object Item6;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public int mlppDomainId;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool mlppDomainIdSpecified;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public XStatus mlppIndicationStatus;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool mlppIndicationStatusSpecified;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public XPreemption preemption;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool preemptionSpecified;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public int connectionMonitorDuration;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool connectionMonitorDurationSpecified;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlAttributeAttribute()]
            public string uuid;
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
            public class XDateTimeSetting 
        {
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public string name;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public string dateTemplate;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public XTimeZone timeZone;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlAttributeAttribute()]
            public string uuid;
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
            public class XCallManagerGroup 
        {
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public string name;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public bool tftpDefault;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool tftpDefaultSpecified;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlArrayItemAttribute("member", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
            public XCallManagerMember[] members;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlAttributeAttribute()]
            public string uuid;
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
            public class XCallManagerMember 
        {
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute("callManager", typeof(XCallManager), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlElementAttribute("callManagerName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public object Item;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlAttributeAttribute(DataType="nonNegativeInteger")]
            public string priority;
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
            public class XCallManager 
        {
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public string name;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public string description;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public XCallManagerAutoRegistration autoRegistration;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public XCallManagerPorts ports;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute("processNodeName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlElementAttribute("processNode", typeof(XProcessNode), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public object Item;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlAttributeAttribute()]
            public string uuid;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlAttributeAttribute(DataType="nonNegativeInteger")]
            public string ctiid;
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
            public class XCallManagerAutoRegistration 
        {
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public string startDN;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public string endDN;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public string nextDN;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute("routePartition", typeof(XRoutePartition), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlElementAttribute("routePartitionName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public object Item;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public string e164Mask;
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
            public class XCallManagerPorts 
        {
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="nonNegativeInteger")]
            public string analogAccessPort;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="nonNegativeInteger")]
            public string digitalAccessPort;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="nonNegativeInteger")]
            public string ethernetPhonePort;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public XCallManagerPortsMgcpPorts mgcpPorts;
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
            public class XCallManagerPortsMgcpPorts 
        {
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="nonNegativeInteger")]
            public string listen;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="nonNegativeInteger")]
            public string keepAlive;
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
            public class XProcessNode 
        {
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public string name;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public string description;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public string mac;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlAttributeAttribute()]
            public string uuid;
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
            public class XMediaResourceList 
        {
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public string name;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public string clause;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlArrayItemAttribute("member", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
            public XMediaResourceListMember[] members;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlAttributeAttribute()]
            public string uuid;
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
            public class XMediaResourceListMember 
        {
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute("mediaResourceGroupName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlElementAttribute("mediaResourceGroup", typeof(XMediaResourceGroup), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public object Item;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlAttributeAttribute()]
            public string uuid;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlAttributeAttribute(DataType="nonNegativeInteger")]
            public string order;
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
            public class XMediaResourceGroup 
        {
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public string name;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public string description;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public bool multicast;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlArrayItemAttribute("member", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
            public XMediaResourceGroupMember[] members;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlAttributeAttribute()]
            public string uuid;
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
            public enum XCountry 
        {
    
            /// <remarks/>
            Argentina,
    
            /// <remarks/>
            Australia,
    
            /// <remarks/>
            Austria,
    
            /// <remarks/>
            Belgium,
    
            /// <remarks/>
            Brazil,
    
            /// <remarks/>
            Canada,
    
            /// <remarks/>
            China,
    
            /// <remarks/>
            Colombia,
    
            /// <remarks/>
            Cyprus,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("Czech Republic")]
            CzechRepublic,
    
            /// <remarks/>
            Denmark,
    
            /// <remarks/>
            Egypt,
    
            /// <remarks/>
            Finland,
    
            /// <remarks/>
            France,
    
            /// <remarks/>
            Germany,
    
            /// <remarks/>
            Ghana,
    
            /// <remarks/>
            Greece,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("Hong Kong")]
            HongKong,
    
            /// <remarks/>
            Hungary,
    
            /// <remarks/>
            Iceland,
    
            /// <remarks/>
            India,
    
            /// <remarks/>
            Indonesia,
    
            /// <remarks/>
            Ireland,
    
            /// <remarks/>
            Israel,
    
            /// <remarks/>
            Italy,
    
            /// <remarks/>
            Japan,
    
            /// <remarks/>
            Jordan,
    
            /// <remarks/>
            Kenya,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("Korea Republic")]
            KoreaRepublic,
    
            /// <remarks/>
            Lebanon,
    
            /// <remarks/>
            Luxembourg,
    
            /// <remarks/>
            Malaysia,
    
            /// <remarks/>
            Mexico,
    
            /// <remarks/>
            Nepal,
    
            /// <remarks/>
            Netherlands,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("New Zealand")]
            NewZealand,
    
            /// <remarks/>
            Nigeria,
    
            /// <remarks/>
            Norway,
    
            /// <remarks/>
            Pakistan,
    
            /// <remarks/>
            Panama,
    
            /// <remarks/>
            Peru,
    
            /// <remarks/>
            Philippines,
    
            /// <remarks/>
            Poland,
    
            /// <remarks/>
            Portugal,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("Russian Federation")]
            RussianFederation,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("Saudi Arabia")]
            SaudiArabia,
    
            /// <remarks/>
            Singapore,
    
            /// <remarks/>
            Slovakia,
    
            /// <remarks/>
            Slovenia,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("South Africa")]
            SouthAfrica,
    
            /// <remarks/>
            Spain,
    
            /// <remarks/>
            Sweden,
    
            /// <remarks/>
            Switzerland,
    
            /// <remarks/>
            Taiwan,
    
            /// <remarks/>
            Thailand,
    
            /// <remarks/>
            Turkey,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("United Kingdom")]
            UnitedKingdom,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("United States")]
            UnitedStates,
    
            /// <remarks/>
            Venezuela,
    
            /// <remarks/>
            Zimbabwe,
    
            /// <remarks/>
            Itu,
    
            /// <remarks/>
            Chile,
    
            /// <remarks/>
            Bulgaria,
    
            /// <remarks/>
            Croatia,
    
            /// <remarks/>
            Romania,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("Serbia and Montenegro")]
            SerbiaandMontenegro,
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
            public enum XUserLocale 
        {
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("English United States")]
            EnglishUnitedStates,
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
            public enum XStatus 
        {
    
            /// <remarks/>
            Off,
    
            /// <remarks/>
            On,
    
            /// <remarks/>
            Default,
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
            public enum XPreemption 
        {
    
            /// <remarks/>
            Disabled,
    
            /// <remarks/>
            Forceful,
    
            /// <remarks/>
            Default,
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
            public enum XNetworkLocation 
        {
    
            /// <remarks/>
            OnNet,
    
            /// <remarks/>
            OffNet,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("Use System Default")]
            UseSystemDefault,
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
            public class XSIPTrunk : XDevice 
        {
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public bool mtpRequired;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool mtpRequiredSpecified;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public string destinationaddress;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.ComponentModel.DefaultValueAttribute(false)]
            public bool destAddrIsSRV = false;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="integer")]
            [System.ComponentModel.DefaultValueAttribute("0")]
            public string destinationport = "0";
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="integer")]
            public string incomingport;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public XSIPCodec tkSipCodec;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool tkSipCodecSpecified;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public XTransport OutgoingTransportType;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool OutgoingTransportTypeSpecified;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public XSIPTrunkSigDigits sigDigits;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public XPresentationBit connectedNamePresentation;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool connectedNamePresentationSpecified;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public XPresentationBit connectedPartyIdPresentation;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool connectedPartyIdPresentationSpecified;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public XCallingPartySelection callingPartySelection;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool callingPartySelectionSpecified;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public XPresentationBit callingname;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool callingnameSpecified;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public XPresentationBit callingLineIdPresentation;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool callingLineIdPresentationSpecified;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public string prefixDN;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public string callerName;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public string callerIdDN;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public bool acceptInboundRDNIS;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool acceptInboundRDNISSpecified;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public bool acceptOutboundRDNIS;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool acceptOutboundRDNISSpecified;
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
            public enum XSIPCodec 
        {
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("711ulaw")]
            Item711ulaw,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("711alaw")]
            Item711alaw,
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
            public enum XTransport 
        {
    
            /// <remarks/>
            TCP,
    
            /// <remarks/>
            UDP,
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
            public class XMGCPEndpoint : XDevice 
        {
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.ComponentModel.DefaultValueAttribute(XPacketCaptureMode.None)]
            public XPacketCaptureMode packetCaptureMode = XPacketCaptureMode.None;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="positiveInteger")]
            [System.ComponentModel.DefaultValueAttribute("60")]
            public string packetCaptureDuration = "60";
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
            public enum XPacketCaptureMode 
        {
    
            /// <remarks/>
            None,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("Real-time Mode")]
            RealtimeMode,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("Batch Processing Mode")]
            BatchProcessingMode,
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
            public class XVoiceMailPort : XDevice 
        {
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public XLine line;
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
            public class XServerDevice : XDevice 
        {
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute("processNodeName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="Name")]
            [System.Xml.Serialization.XmlElementAttribute("processNodeId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlElementAttribute("processNode", typeof(XProcessNode), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlChoiceIdentifierAttribute("Item8ElementName")]
            public object Item8;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public Item8ChoiceType Item8ElementName;
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0", IncludeInSchema=false)]
            public enum Item8ChoiceType 
        {
    
            /// <remarks/>
            processNodeName,
    
            /// <remarks/>
            processNodeId,
    
            /// <remarks/>
            processNode,
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
            [System.Xml.Serialization.XmlIncludeAttribute(typeof(XH323Phone))]
            [System.Xml.Serialization.XmlIncludeAttribute(typeof(XH323Gateway))]
            [System.Xml.Serialization.XmlIncludeAttribute(typeof(XH323Trunk))]
            public class XH323Device : XDevice 
        {
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public bool waitForFarEndH245TerminalSet;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool waitForFarEndH245TerminalSetSpecified;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public bool mtpRequired;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool mtpRequiredSpecified;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public string callerIdDN;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public XCallingPartySelection callingPartySelection;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool callingPartySelectionSpecified;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public XPresentationBit callingLineIdPresentation;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool callingLineIdPresentationSpecified;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public bool displayIEDelivery;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool displayIEDeliverySpecified;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public bool redirectOutboundNumberIE;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool redirectOutboundNumberIESpecified;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public bool redirectInboundNumberIE;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool redirectInboundNumberIESpecified;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public bool enableInboundFaststart;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool enableInboundFaststartSpecified;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public bool enableOutboundFaststart;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool enableOutboundFaststartSpecified;
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
            public class XH323Phone : XH323Device 
        {
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
            public string ownerUserId;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="nonNegativeInteger")]
            public string signalingPort;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public XH323PhoneGatekeeperInfo gatekeeperInfo;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlArrayItemAttribute("line", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
            public XLine[] lines;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.ComponentModel.DefaultValueAttribute(false)]
            public bool ignorePresentationIndicators = false;
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
            [System.Xml.Serialization.XmlIncludeAttribute(typeof(XH323Trunk))]
            public class XH323Gateway : XH323Device 
        {
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public XH323GatewaySignificantDigits significantDigits;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public string prefixDN;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public XPriOfNumber calledPartyIENumberType;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool calledPartyIENumberTypeSpecified;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public XPriOfNumber callingPartyIENumberType;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool callingPartyIENumberTypeSpecified;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public XNumberingPlan calledNumberingPlan;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool calledNumberingPlanSpecified;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public XNumberingPlan callingNumberingPlan;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool callingNumberingPlanSpecified;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public XTunneledProtocol tunneledProtocol;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.ComponentModel.DefaultValueAttribute(false)]
            public bool pathReplacementSupport = false;
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
            public enum XPriOfNumber 
        {
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("Cisco CallManager")]
            CiscoCallManager,
    
            /// <remarks/>
            Unknown,
    
            /// <remarks/>
            National,
    
            /// <remarks/>
            International,
    
            /// <remarks/>
            Subscriber,
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
            public enum XNumberingPlan 
        {
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("Cisco CallManager")]
            CiscoCallManager,
    
            /// <remarks/>
            ISDN,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("National Standard")]
            NationalStandard,
    
            /// <remarks/>
            Private,
    
            /// <remarks/>
            Unknown,
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
            public enum XTunneledProtocol 
        {
    
            /// <remarks/>
            None,
    
            /// <remarks/>
            QSIG,
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
            public class XH323Trunk : XH323Gateway 
        {
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute("remoteServerInfo", typeof(XH323TrunkRemoteServerInfo), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlElementAttribute("gatekeeperInfo", typeof(XH323TrunkGatekeeperInfo), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public object Item8;
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
            public class XProfile : XDevice 
        {
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public XDeviceProfile deviceProfile;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public string loginUserid;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="time")]
            public System.DateTime loginTime;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="nonNegativeInteger")]
            public string loginDuration;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public bool allowHoteling;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public string defaultProfileId;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.ComponentModel.DefaultValueAttribute(false)]
            public bool ignorePresentationIndicators = false;
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
            public enum XDeviceProfile 
        {
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("Real Device")]
            RealDevice,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("User Profile")]
            UserProfile,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("Autogenerated Profile")]
            AutogeneratedProfile,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("Model Profile")]
            ModelProfile,
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
            [System.Xml.Serialization.XmlIncludeAttribute(typeof(XIPPhone))]
            [System.Xml.Serialization.XmlIncludeAttribute(typeof(XPhoneProfile))]
            public class XPhone : XDevice 
        {
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public string associatedPC;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public XPhoneLines lines;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="positiveInteger")]
            public string numberOfButtons;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute("phoneTemplateName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlElementAttribute("phoneTemplate", typeof(XPhoneTemplate), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public object Item8;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlArrayItemAttribute("speeddial", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
            public XSpeeddial[] speeddials;
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
            public class XCTIRoutePoint : XDevice 
        {
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public XCTIRoutePointLines lines;
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
            [System.Xml.Serialization.XmlIncludeAttribute(typeof(XAnalogGateway))]
            [System.Xml.Serialization.XmlIncludeAttribute(typeof(XDigitalGateway))]
            [System.Xml.Serialization.XmlIncludeAttribute(typeof(XPRIGateway))]
            [System.Xml.Serialization.XmlIncludeAttribute(typeof(XT1Gateway))]
            [System.Xml.Serialization.XmlIncludeAttribute(typeof(XBRIGateway))]
            public class XGateway : XDevice 
        {
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.ComponentModel.DefaultValueAttribute(XPacketCaptureMode.None)]
            public XPacketCaptureMode packetCaptureMode = XPacketCaptureMode.None;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="positiveInteger")]
            [System.ComponentModel.DefaultValueAttribute("60")]
            public string packetCaptureDuration = "60";
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
            public class XAnalogGateway : XGateway 
        {
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public XCountry country;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool countrySpecified;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="positiveInteger")]
            public string maxPorts;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlArrayItemAttribute("port", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
            public XAnalogPort[] ports;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public XTrunkSelectionOrder trunkSelectionOrder;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="anyURI")]
            public string helpURL;
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
            public enum XTrunkSelectionOrder 
        {
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("Bottom Up")]
            BottomUp,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("Top Down")]
            TopDown,
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
            [System.Xml.Serialization.XmlIncludeAttribute(typeof(XPRIGateway))]
            [System.Xml.Serialization.XmlIncludeAttribute(typeof(XT1Gateway))]
            [System.Xml.Serialization.XmlIncludeAttribute(typeof(XBRIGateway))]
            public abstract class XDigitalGateway : XGateway 
        {
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public XCountry country;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool countrySpecified;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public XTrunkSelectionOrder trunkSelectionOrder;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool trunkSelectionOrderSpecified;
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
            public class XPRIGateway : XDigitalGateway 
        {
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public bool acceptInboundRDNIS;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public XNumberingPlan calledPlan;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public XPriOfNumber calledPri;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public string callerIDDN;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public XCallingPartySelection callingPartySelection;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public XNumberingPlan callingPlan;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public XPriOfNumber callingPri;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="nonNegativeInteger")]
            public string chanIE;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public XClockReference clockReference;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public XCSUParam csuParam;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public bool dChannelEnable;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public bool direction;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public bool displayIE;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public XEncode encode;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public XFDLChannel fdlChannel;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="nonNegativeInteger")]
            public string firstDelay;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public XPRIGatewayInterfaceId interfaceId;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="nonNegativeInteger")]
            public string intraDelay;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public bool mcdnEnable;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public bool numberIE;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="nonNegativeInteger")]
            public string numDigits;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public bool passingPrecedenceLevelThroughUUIE;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool passingPrecedenceLevelThroughUUIESpecified;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public string prefix;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public XPresentationBit callingLinePresentationBit;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public XPresentationBit connectedLinePresentationBit;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public XConnectedPBX connectedPBX;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public XPriProtocol priProtocol;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="nonNegativeInteger")]
            public string securityAccessLevel;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public bool sendCallingNameInFacilityIE;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public bool sendEXLeadingCharInDispIE;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public bool sendRestart;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public bool setupNonISDNPI;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public bool sigDigits;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="nonNegativeInteger")]
            public string span;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public bool statusPoll;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="nonNegativeInteger")]
            public string stripCountOut;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public XTrunkPad trunkPadRx;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public XTrunkPad trunkPadTx;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public XTrunkLevel trunkLevel;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public XYellowAlarm yellowAlarm;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public XZeroSuppression zeroSuppression;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="positiveInteger")]
            public string sMDIBasePort;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public bool protocolProfile91NameOnly;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="anyURI")]
            public string helpURL;
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
            public enum XClockReference 
        {
    
            /// <remarks/>
            Network,
    
            /// <remarks/>
            Internal,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("Span 1")]
            Span1,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("Span 2")]
            Span2,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("Span 3")]
            Span3,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("Span 4")]
            Span4,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("Span 5")]
            Span5,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("Span 6")]
            Span6,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("Span 7")]
            Span7,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("Span 8")]
            Span8,
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
            public enum XCSUParam 
        {
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("0dB")]
            Item0dB,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("-7.5dB")]
            Item75dB,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("-15dB")]
            Item15dB,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("-22.5dB")]
            Item225dB,
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
            public enum XEncode 
        {
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("A-law")]
            Alaw,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("u-law")]
            ulaw,
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
            public enum XFDLChannel 
        {
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("ATT 54016")]
            ATT54016,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("ANSI T1.403 NI")]
            ANSIT1403NI,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("ANSI T1.403.CI")]
            ANSIT1403CI,
    
            /// <remarks/>
            None,
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
            public enum XConnectedPBX 
        {
    
            /// <remarks/>
            None,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("Siemens Hicom")]
            SiemensHicom,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("Ericsson MD-110")]
            EricssonMD110,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("Alcatel PBX")]
            AlcatelPBX,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("Meridian Option 11C")]
            MeridianOption11C,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("Lucent Definity G3")]
            LucentDefinityG3,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("IPC MX")]
            IPCMX,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("Cisco CCM")]
            CiscoCCM,
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
            public enum XPriProtocol 
        {
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("PRI 4ESS")]
            PRI4ESS,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("PRI 5E8")]
            PRI5E8,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("PRI 5E8 TELEOS")]
            PRI5E8TELEOS,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("PRI 5E8 INTECOME")]
            PRI5E8INTECOME,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("PRI 5E9")]
            PRI5E9,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("PRI DMS-100")]
            PRIDMS100,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("PRI DMS-250")]
            PRIDMS250,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("PRI EURO")]
            PRIEURO,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("PRI NI2")]
            PRINI2,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("PRI AUSTRALIAN")]
            PRIAUSTRALIAN,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("PRI 5E8 CUSTOM")]
            PRI5E8CUSTOM,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("PRI ETSI SC")]
            PRIETSISC,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("PRI NTT")]
            PRINTT,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("PRI ISO QSIG T1")]
            PRIISOQSIGT1,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("PRI ISO QSIG E1")]
            PRIISOQSIGE1,
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
            public enum XYellowAlarm 
        {
    
            /// <remarks/>
            Bit2,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("F-Bit")]
            FBit,
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
            public enum XZeroSuppression 
        {
    
            /// <remarks/>
            B8ZS,
    
            /// <remarks/>
            AMI,
    
            /// <remarks/>
            HDB3,
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
            public class XT1Gateway : XDigitalGateway 
        {
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public XClockReference clockReference;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public XCSUParam csuParam;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public XDigitSending digitSending;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public XEncode encode;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public XFDLChannel fdlChannel;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="positiveInteger")]
            public string maxPorts;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlArrayItemAttribute("port", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
            public XT1Port[] ports;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public XYellowAlarm yellowAlarm;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public XZeroSuppression zeroSuppression;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="positiveInteger")]
            public string sMDIBasePort;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="anyURI")]
            public string helpURL;
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
            public class XBRIGateway : XDigitalGateway 
        {
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public bool acceptInboundRDNIS;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public XBriProtocol briProtocol;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public XNumberingPlan calledPlan;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool calledPlanSpecified;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public XPriOfNumber calledPri;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public string callerIDDN;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public XCallingPartySelection callingPartySelection;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public XNumberingPlan callingPlan;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool callingPlanSpecified;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public XPriOfNumber callingPri;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="nonNegativeInteger")]
            public string chanIE;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public XClockReference clockReference;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public XCSUParam csuParam;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public bool dChannelEnable;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public bool direction;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public bool displayIE;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public XEncode encode;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public XFDLChannel fdlChannel;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="nonNegativeInteger")]
            public string firstDelay;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public XFraming framing;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="nonNegativeInteger")]
            public string intraDelay;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public bool numberIE;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="nonNegativeInteger")]
            public string numDigits;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public string prefix;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public XPresentationBit presentationBit;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public bool sendRestart;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public bool setupNonISDNPI;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public bool sigDigits;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public bool stableIn4;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public bool statusPoll;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="nonNegativeInteger")]
            public string stripCountOut;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public XTrunkPad trunkPadRx;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public XTrunkPad trunkPadTx;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public XTrunkLevel trunkLevel;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public XYellowAlarm yellowAlarm;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public XZeroSuppression zeroSuppression;
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
            public enum XBriProtocol 
        {
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("BRI NET3")]
            BRINET3,
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
            public enum XFraming 
        {
    
            /// <remarks/>
            D4,
    
            /// <remarks/>
            ESF,
    
            /// <remarks/>
            CRC4,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("Non CRC4")]
            NonCRC4,
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
            public enum XDeviceSecurityMode 
        {
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("Use System Default")]
            UseSystemDefault,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("Non Secure")]
            NonSecure,
    
            /// <remarks/>
            Authenticated,
    
            /// <remarks/>
            Encrypted,
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
            public enum XCertificateOperation 
        {
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("No Pending Operation")]
            NoPendingOperation,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("Install/Upgrade")]
            InstallUpgrade,
    
            /// <remarks/>
            Delete,
    
            /// <remarks/>
            Troubleshoot,
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
            public enum XAuthenticationMode 
        {
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("By Authentication String")]
            ByAuthenticationString,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("By Null String")]
            ByNullString,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("By Existing Certificate (precedence to LSC)")]
            ByExistingCertificateprecedencetoLSC,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("By Existing Certificate (precedence to MIC)")]
            ByExistingCertificateprecedencetoMIC,
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
            public enum XCertificateStatus 
        {
    
            /// <remarks/>
            None,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("Operation Pending")]
            OperationPending,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("Upgrade Success")]
            UpgradeSuccess,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("Delete Success")]
            DeleteSuccess,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("Troubleshoot Success")]
            TroubleshootSuccess,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("Upgrade Failed")]
            UpgradeFailed,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("Delete Failed")]
            DeleteFailed,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("Troubleshoot Failed")]
            TroubleshootFailed,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("Upgrade Failed: Invalid LSC")]
            UpgradeFailedInvalidLSC,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("Upgrade Failed: Invalid Authentication String")]
            UpgradeFailedInvalidAuthenticationString,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("Upgrade Failed: Invalid MIC")]
            UpgradeFailedInvalidMIC,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("Upgrade Failed: Invalid Credentials")]
            UpgradeFailedInvalidCredentials,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("Upgrade Failed: Phone Communication Failure")]
            UpgradeFailedPhoneCommunicationFailure,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("Upgrade Failed: Key Generation Failed/Timeout")]
            UpgradeFailedKeyGenerationFailedTimeout,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("Upgrade Failed: CA Communication Failure")]
            UpgradeFailedCACommunicationFailure,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("Upgrade Failed: CA Rejected Connection")]
            UpgradeFailedCARejectedConnection,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("Upgrade Failed: User Initiated Request Late/Timedout")]
            UpgradeFailedUserInitiatedRequestLateTimedout,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("Delete Failed: Invalid LSC")]
            DeleteFailedInvalidLSC,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("Delete Failed: Invalid Authentication String")]
            DeleteFailedInvalidAuthenticationString,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("Delete Failed: Invalid MIC")]
            DeleteFailedInvalidMIC,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("Delete Failed: Invalid Credentials")]
            DeleteFailedInvalidCredentials,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("Delete Failed: Phone Communication Failure")]
            DeleteFailedPhoneCommunicationFailure,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("Delete Failed: Key Generation Failed/Timeout")]
            DeleteFailedKeyGenerationFailedTimeout,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("Delete Failed: CA Communication Failure")]
            DeleteFailedCACommunicationFailure,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("Delete Failed: CA Rejected Connection")]
            DeleteFailedCARejectedConnection,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("Delete Failed: User Initiated Request Late/Timedout")]
            DeleteFailedUserInitiatedRequestLateTimedout,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("Troubleshoot Failed: Invalid LSC")]
            TroubleshootFailedInvalidLSC,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("Troubleshoot Failed: Invalid Authentication String")]
            TroubleshootFailedInvalidAuthenticationString,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("Troubleshoot Failed: Invalid MIC")]
            TroubleshootFailedInvalidMIC,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("Troubleshoot Failed: Invalid Credentials")]
            TroubleshootFailedInvalidCredentials,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("Troubleshoot Failed: Phone Communication Failure")]
            TroubleshootFailedPhoneCommunicationFailure,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("Troubleshoot Failed: Key Generation Failed/Timeout")]
            TroubleshootFailedKeyGenerationFailedTimeout,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("Troubleshoot Failed: User Initiated Request Late/Timedout")]
            TroubleshootFailedUserInitiatedRequestLateTimedout,
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
            public enum XKeySize 
        {
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("512")]
            Item512,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("1024")]
            Item1024,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("2048")]
            Item2048,
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
            public enum XCertificate 
        {
    
            /// <remarks/>
            Unknown,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("No Certificate Exists")]
            NoCertificateExists,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("Locally Significant Certificate")]
            LocallySignificantCertificate,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("Manufacture Installed Certificate Exists")]
            ManufactureInstalledCertificateExists,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("Locally Significant Certificate and Manufacture Installed Certificate Exists")]
            LocallySignificantCertificateandManufactureInstalledCertificateExists,
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
            public class XPhoneProfile : XIPPhone 
        {
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
            [System.Xml.Serialization.XmlRootAttribute("addPhoneResponse", Namespace="http://www.cisco.com/AXL/API/1.0", IsNullable=false)]
            public class StandardResponse 
        {
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public string @return;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlAttributeAttribute()]
            public System.UInt64 sequence;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool sequenceSpecified;
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
            [System.Xml.Serialization.XmlRootAttribute("removePhone", Namespace="http://www.cisco.com/AXL/API/1.0", IsNullable=false)]
            public class RemovePhoneReq 
        {
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute("phoneId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlElementAttribute("phoneName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")]
            public string Item;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public ItemChoiceType3 ItemElementName;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlAttributeAttribute()]
            public System.UInt64 sequence;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool sequenceSpecified;
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
            public enum ItemChoiceType3 
        {
    
            /// <remarks/>
            phoneId,
    
            /// <remarks/>
            phoneName,
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
            [System.Xml.Serialization.XmlRootAttribute("updatePhone", Namespace="http://www.cisco.com/AXL/API/1.0", IsNullable=false)]
            public class UpdatePhoneReq 
        {
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute("name", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlElementAttribute("uuid", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")]
            public string Item;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public ItemChoiceType4 ItemElementName;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="Name")]
            public string newName;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public string description;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute("callingSearchSpaceId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlElementAttribute("callingSearchSpaceName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="Name")]
            [System.Xml.Serialization.XmlChoiceIdentifierAttribute("Item1ElementName")]
            public string Item1;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public Item1ChoiceType1 Item1ElementName;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute("devicePoolName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlElementAttribute("devicePoolId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlChoiceIdentifierAttribute("Item2ElementName")]
            public string Item2;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public Item2ChoiceType Item2ElementName;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute("locationName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="Name")]
            [System.Xml.Serialization.XmlElementAttribute("locationId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlChoiceIdentifierAttribute("Item3ElementName")]
            public string Item3;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public Item3ChoiceType Item3ElementName;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute("mediaResourceListId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlElementAttribute("mediaResourceListName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="Name")]
            [System.Xml.Serialization.XmlChoiceIdentifierAttribute("Item4ElementName")]
            public string Item4;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public Item4ChoiceType Item4ElementName;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="nonNegativeInteger")]
            public string networkHoldMOHAudioSourceId;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="nonNegativeInteger")]
            public string userHoldMOHAudioSourceId;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute("automatedAlternateRoutingCSSId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlElementAttribute("automatedAlternateRoutingCSSName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlChoiceIdentifierAttribute("Item5ElementName")]
            public string Item5;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public Item5ChoiceType Item5ElementName;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute("aarNeighborhoodName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlElementAttribute("aarNeighborhoodId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlChoiceIdentifierAttribute("Item6ElementName")]
            public string Item6;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public Item6ChoiceType Item6ElementName;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public XLoadInformation loadInformation;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public System.Xml.XmlElement vendorConfig;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public bool traceFlag;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool traceFlagSpecified;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public int mlppDomainId;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool mlppDomainIdSpecified;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public XStatus mlppIndicationStatus;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool mlppIndicationStatusSpecified;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public XPreemption preemption;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool preemptionSpecified;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public bool retryVideoCallAsVoice;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool retryVideoCallAsVoiceSpecified;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public string associatedPC;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public UpdatePhoneReqLines lines;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute("phoneTemplateId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlElementAttribute("phoneTemplateName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlChoiceIdentifierAttribute("Item7ElementName")]
            public string Item7;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public Item7ChoiceType Item7ElementName;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlArrayItemAttribute("speeddial", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
            public XSpeeddial[] speeddials;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlArrayItemAttribute("addOnModule", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
            public XAddOnModule[] addOnModules;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public XUserLocale userLocale;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool userLocaleSpecified;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public XCountry networkLocale;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool networkLocaleSpecified;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public XDeviceSecurityMode deviceSecurityMode;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool deviceSecurityModeSpecified;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="nonNegativeInteger")]
            public string idleTimeout;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="anyURI")]
            public string authenticationURL;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="anyURI")]
            public string directoryURL;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="anyURI")]
            public string idleURL;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="anyURI")]
            public string informationURL;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="anyURI")]
            public string messagesURL;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="anyURI")]
            public string proxyServerURL;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="anyURI")]
            public string servicesURL;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlArrayItemAttribute("service", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
            public XSubscribedService[] services;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute("softkeyTemplateName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlElementAttribute("softkeyTemplateId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlChoiceIdentifierAttribute("Item8ElementName")]
            public string Item8;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public Item8ChoiceType1 Item8ElementName;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute("defaultProfileId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlElementAttribute("defaultProfileName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlChoiceIdentifierAttribute("Item9ElementName")]
            public string Item9;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public Item9ChoiceType Item9ElementName;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public bool enableExtensionMobility;

            // Added by Metreos for more serialization control.  
            //
            // From the schema docs on this action:   
            // enableExtensionMobility:     Whether or not to enable extension mobility.  
            //                              A default profile is required regardless if this is true or false.  Not nullable.
            //
            // Seth:  this is odd for the AXL SOAP api:  it has never before required that you set something when not needed.
            // While it's true that for whatever reason the AXL SOAP API is in fact requiring that
            // in the case enableExtensionMobility is true or false, that you then have to set the DefaultProfileName field,
            // it is not the case that the field is not nillable.  It IS nillable, and when you null it, it allows you
            // to not have to specify, and thereby alter, the configuration of the phone you are updating in this regard.
            // So, long story short, this field allows us to do what a developer will tend to want to do: not worry
            // about the state of extension mobility on their phone device they are updating

            // Also odd is the correct behavior bit: when you disable extension mobility of a phone, why in the world
            // must you set the default profile name!  This is contrary to ccmadmin validation behavior 
            // as wellas and my understanding of the purpose of the default profile name 
            // (i.e, its only needed if enableExtMob is TRUE!)
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool enableExtensionMobilitySpecified;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public XStatus builtInBridgeStatus;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool builtInBridgeStatusSpecified;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public XStatus callInfoPrivacyStatus;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool callInfoPrivacyStatusSpecified;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
            public string ownerUserId;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.ComponentModel.DefaultValueAttribute(false)]
            public bool ignorePresentationIndicators = false;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public XPacketCaptureMode packetCaptureMode;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool packetCaptureModeSpecified;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="positiveInteger", IsNullable=true)]
            public string packetCaptureDuration;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public XCertificateOperation certificateOperation;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool certificateOperationSpecified;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public XAuthenticationMode authenticationMode;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool authenticationModeSpecified;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="Name", IsNullable=true)]
            public string authenticationString;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public XCertificateStatus certificateStatus;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool certificateStatusSpecified;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public XKeySize keySize;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool keySizeSpecified;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="Name", IsNullable=true)]
            public string upgradeFinishTime;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public XCertificate certificate;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool certificateSpecified;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlAttributeAttribute()]
            public System.UInt64 sequence;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool sequenceSpecified;
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
            public enum ItemChoiceType4 
        {
    
            /// <remarks/>
            name,
    
            /// <remarks/>
            uuid,
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
            public enum Item1ChoiceType1 
        {
    
            /// <remarks/>
            callingSearchSpaceId,
    
            /// <remarks/>
            callingSearchSpaceName,
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
            public enum Item2ChoiceType 
        {
    
            /// <remarks/>
            devicePoolName,
    
            /// <remarks/>
            devicePoolId,
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
            public enum Item3ChoiceType 
        {
    
            /// <remarks/>
            locationName,
    
            /// <remarks/>
            locationId,
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
            public enum Item4ChoiceType 
        {
    
            /// <remarks/>
            mediaResourceListId,
    
            /// <remarks/>
            mediaResourceListName,
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
            public enum Item5ChoiceType 
        {
    
            /// <remarks/>
            automatedAlternateRoutingCSSId,
    
            /// <remarks/>
            automatedAlternateRoutingCSSName,
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
            public enum Item6ChoiceType 
        {
    
            /// <remarks/>
            aarNeighborhoodName,
    
            /// <remarks/>
            aarNeighborhoodId,
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
            public class UpdatePhoneReqLines 
        {
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute("lineIdentifier", typeof(XNumplanIdentifier), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlElementAttribute("line", typeof(XLine), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public object[] Items;
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
            public enum Item7ChoiceType 
        {
    
            /// <remarks/>
            phoneTemplateId,
    
            /// <remarks/>
            phoneTemplateName,
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
            public enum Item8ChoiceType1 
        {
    
            /// <remarks/>
            softkeyTemplateName,
    
            /// <remarks/>
            softkeyTemplateId,
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
            public enum Item9ChoiceType 
        {
    
            /// <remarks/>
            defaultProfileId,
    
            /// <remarks/>
            defaultProfileName,
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
            [System.Xml.Serialization.XmlRootAttribute("getPhone", Namespace="http://www.cisco.com/AXL/API/1.0", IsNullable=false)]
            public class GetPhoneReq 
        {
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute("phoneId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlElementAttribute("phoneName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")]
            public string Item;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public ItemChoiceType5 ItemElementName;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlAttributeAttribute()]
            public System.UInt64 sequence;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool sequenceSpecified;
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
            public enum ItemChoiceType5 
        {
    
            /// <remarks/>
            phoneId,
    
            /// <remarks/>
            phoneName,
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
            [System.Xml.Serialization.XmlRootAttribute("getPhoneResponse", Namespace="http://www.cisco.com/AXL/API/1.0", IsNullable=false)]
            public class GetPhoneRes 
        {
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public GetPhoneResReturn @return;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlAttributeAttribute()]
            public System.UInt64 sequence;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool sequenceSpecified;
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
            public class GetPhoneResReturn 
        {
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public XIPPhone device;
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
            [System.Xml.Serialization.XmlRootAttribute("doDeviceLogin", Namespace="http://www.cisco.com/AXL/API/1.0", IsNullable=false)]
            public class DeviceLoginReq 
        {
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute("deviceId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlElementAttribute("deviceName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")]
            public string Item;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public ItemChoiceType6 ItemElementName;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="nonNegativeInteger")]
            public string loginDuration;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute("profileName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlElementAttribute("profileId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlChoiceIdentifierAttribute("Item1ElementName")]
            public string Item1;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public Item1ChoiceType2 Item1ElementName;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public string userId;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlAttributeAttribute()]
            public System.UInt64 sequence;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool sequenceSpecified;
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
            public enum ItemChoiceType6 
        {
    
            /// <remarks/>
            deviceId,
    
            /// <remarks/>
            deviceName,
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
            public enum Item1ChoiceType2 
        {
    
            /// <remarks/>
            profileName,
    
            /// <remarks/>
            profileId,
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
            [System.Xml.Serialization.XmlRootAttribute("doDeviceLoginResponse", Namespace="http://www.cisco.com/AXL/API/1.0", IsNullable=false)]
            public class DeviceLoginResponse 
        {
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public string @return;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlAttributeAttribute()]
            public System.UInt64 sequence;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool sequenceSpecified;
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
            [System.Xml.Serialization.XmlRootAttribute("doDeviceLogout", Namespace="http://www.cisco.com/AXL/API/1.0", IsNullable=false)]
            public class DeviceLogoutReq 
        {
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute("deviceId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlElementAttribute("deviceName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")]
            public string Item;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public ItemChoiceType7 ItemElementName;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlAttributeAttribute()]
            public System.UInt64 sequence;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool sequenceSpecified;
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
            public enum ItemChoiceType7 
        {
    
            /// <remarks/>
            deviceId,
    
            /// <remarks/>
            deviceName,
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
            [System.Xml.Serialization.XmlRootAttribute("doDeviceLogoutResponse", Namespace="http://www.cisco.com/AXL/API/1.0", IsNullable=false)]
            public class DeviceLogoutRes 
        {
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public string @return;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlAttributeAttribute()]
            public System.UInt64 sequence;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool sequenceSpecified;
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
            [System.Xml.Serialization.XmlRootAttribute("doDeviceReset", Namespace="http://www.cisco.com/AXL/API/1.0", IsNullable=false)]
            public class DeviceResetReq 
        {
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute("deviceId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlElementAttribute("deviceName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")]
            public string Item;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public ItemChoiceType8 ItemElementName;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.ComponentModel.DefaultValueAttribute(false)]
            public bool isHardReset = false;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlAttributeAttribute()]
            public System.UInt64 sequence;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool sequenceSpecified;
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
            public enum ItemChoiceType8 
        {
    
            /// <remarks/>
            deviceId,
    
            /// <remarks/>
            deviceName,
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
            [System.Xml.Serialization.XmlRootAttribute("doDeviceResetResponse", Namespace="http://www.cisco.com/AXL/API/1.0", IsNullable=false)]
            public class DeviceResetRes 
        {
            // The commented out section below is .NET choking on too much sequence/choice XSD specifications.
            // The following is valid, however, it does not force correct usage
            //(i.e, if you specify routePartitionId, don't specify routePartitionName)
            public string uuid;

            public string pattern;

            public string routePartitionId;

            public string routePartitionName;

            public string routeFilterId;

            public string routeFilterName;

            //        /// <remarks/>
            //        [System.Xml.Serialization.XmlElementAttribute("routePartitionId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            //        [System.Xml.Serialization.XmlElementAttribute("routePartitionName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            //        [System.Xml.Serialization.XmlElementAttribute("uuid", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            //        [System.Xml.Serialization.XmlElementAttribute("pattern", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            //        [System.Xml.Serialization.XmlElementAttribute("routeFilterId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            //        [System.Xml.Serialization.XmlElementAttribute("routeFilterName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            //        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")]
            //        public string Item;
            //    
            //        /// <remarks/>
            //        [System.Xml.Serialization.XmlIgnoreAttribute()]
            //        public ItemChoiceType9 ItemElementName;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlAttributeAttribute()]
            public System.UInt64 sequence;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool sequenceSpecified;
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
            public enum ItemChoiceType9 
        {
    
            /// <remarks/>
            routePartitionId,
    
            /// <remarks/>
            routePartitionName,
    
            /// <remarks/>
            uuid,
    
            /// <remarks/>
            pattern,
    
            /// <remarks/>
            routeFilterId,
    
            /// <remarks/>
            routeFilterName,
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
            [System.Xml.Serialization.XmlRootAttribute("addLine", Namespace="http://www.cisco.com/AXL/API/1.0", IsNullable=false)]
            public class AddLineReq 
        {
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public XNPDirectoryNumber newLine;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlAttributeAttribute()]
            public System.UInt64 sequence;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool sequenceSpecified;
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
            [System.Xml.Serialization.XmlRootAttribute("removeLine", Namespace="http://www.cisco.com/AXL/API/1.0", IsNullable=false)]
            public class RemoveLineReq 
        {
            // The commented out section below is .NET choking on too much sequence/choice XSD specifications.
            // The following is valid, however, it does not force correct usage
            //(i.e, if you specify routePartitionId, don't specify routePartitionName)
            public string uuid;

            public string pattern;

            public string routePartitionId;

            public string routePartitionName;

            public string routeFilterId;

            public string routeFilterName;
    
            //        /// <remarks/>
            //        [System.Xml.Serialization.XmlElementAttribute("routePartitionId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            //        [System.Xml.Serialization.XmlElementAttribute("routePartitionName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            //        [System.Xml.Serialization.XmlElementAttribute("uuid", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            //        [System.Xml.Serialization.XmlElementAttribute("pattern", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            //        [System.Xml.Serialization.XmlElementAttribute("routeFilterId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            //        [System.Xml.Serialization.XmlElementAttribute("routeFilterName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            //        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")]
            //        public string Item;
            //    
            //        /// <remarks/>
            //        [System.Xml.Serialization.XmlIgnoreAttribute()]
            //        public ItemChoiceType10 ItemElementName;
            //    
            /// <remarks/>
            [System.Xml.Serialization.XmlAttributeAttribute()]
            public System.UInt64 sequence;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool sequenceSpecified;
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
            public enum ItemChoiceType10 
        {
    
            /// <remarks/>
            routePartitionId,
    
            /// <remarks/>
            routePartitionName,
    
            /// <remarks/>
            uuid,
    
            /// <remarks/>
            pattern,
    
            /// <remarks/>
            routeFilterId,
    
            /// <remarks/>
            routeFilterName,
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
            [System.Xml.Serialization.XmlRootAttribute("updateLine", Namespace="http://www.cisco.com/AXL/API/1.0", IsNullable=false)]
            public class UpdateLineReq 
        {

            // The commented out section below is .NET choking on too much sequence/choice XSD specifications.
            // The following is valid, however, it does not force correct usage
            //(i.e, if you specify routePartitionId, don't specify routePartitionName)
            public string uuid;

            public string pattern;

            public string routePartitionId;

            public string routePartitionName;

            public string routeFilterId;

            public string routeFilterName;
    
            //        /// <remarks/>
            //        [System.Xml.Serialization.XmlElementAttribute("routePartitionId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            //        [System.Xml.Serialization.XmlElementAttribute("routePartitionName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            //        [System.Xml.Serialization.XmlElementAttribute("uuid", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            //        [System.Xml.Serialization.XmlElementAttribute("pattern", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            //        [System.Xml.Serialization.XmlElementAttribute("routeFilterId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            //        [System.Xml.Serialization.XmlElementAttribute("routeFilterName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            //        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")]
            //        public string Item;
            //    
            //        /// <remarks/>
            //        [System.Xml.Serialization.XmlIgnoreAttribute()]
            //        public ItemChoiceType11 ItemElementName;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public string newPattern;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public string description;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute("newRoutePartitionId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlElementAttribute("newRoutePartitionName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlChoiceIdentifierAttribute("Item1ElementName")]
            public string Item1;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public Item1ChoiceType3 Item1ElementName;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute("aarNeighborhoodName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlElementAttribute("aarNeighborhoodId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlChoiceIdentifierAttribute("Item2ElementName")]
            public string Item2;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public Item2ChoiceType1 Item2ElementName;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
            public XCallForwardInfo callForwardAll;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
            public XCallForwardInfo callForwardBusy;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
            public XCallForwardInfo callForwardBusyInt;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
            public XCallForwardInfo callForwardNoAnswer;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
            public XCallForwardInfo callForwardNoAnswerInt;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
            public XCallForwardInfo callForwardNoCoverage;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
            public XCallForwardInfo callForwardNoCoverageInt;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public XCallForwardInfo callForwardOnFailure;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public XCallForwardInfo callForwardAlternateParty;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute("callPickupGroupName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlElementAttribute("callPickupGroupId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlChoiceIdentifierAttribute("Item3ElementName")]
            public string Item3;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public Item3ChoiceType1 Item3ElementName;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public XAutoAnswer autoAnswer;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool autoAnswerSpecified;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="nonNegativeInteger")]
            public string networkHoldMOHAudioSourceId;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="nonNegativeInteger")]
            public string userHoldMOHAudioSourceId;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
            public string alertingName;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute("shareLineAppearanceCSSId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlElementAttribute("shareLineAppearanceCSSName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlChoiceIdentifierAttribute("Item4ElementName")]
            public string Item4;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public Item4ChoiceType1 Item4ElementName;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute("voiceMailProfileId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlElementAttribute("voiceMailProfileName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlChoiceIdentifierAttribute("Item5ElementName")]
            public string Item5;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public Item5ChoiceType1 Item5ElementName;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public XPatternPrecedence patternPrecedence;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool patternPrecedenceSpecified;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public XReleaseCauseValue releaseCause;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool releaseCauseSpecified;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlAttributeAttribute()]
            public System.UInt64 sequence;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool sequenceSpecified;
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
            public enum ItemChoiceType11 
        {
    
            /// <remarks/>
            routePartitionId,
    
            /// <remarks/>
            routePartitionName,
    
            /// <remarks/>
            uuid,
    
            /// <remarks/>
            pattern,
    
            /// <remarks/>
            routeFilterId,
    
            /// <remarks/>
            routeFilterName,
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
            public enum Item1ChoiceType3 
        {
    
            /// <remarks/>
            newRoutePartitionId,
    
            /// <remarks/>
            newRoutePartitionName,
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
            public enum Item2ChoiceType1 
        {
    
            /// <remarks/>
            aarNeighborhoodName,
    
            /// <remarks/>
            aarNeighborhoodId,
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
            public enum Item3ChoiceType1 
        {
    
            /// <remarks/>
            callPickupGroupName,
    
            /// <remarks/>
            callPickupGroupId,
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
            public enum Item4ChoiceType1 
        {
    
            /// <remarks/>
            shareLineAppearanceCSSId,
    
            /// <remarks/>
            shareLineAppearanceCSSName,
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
            public enum Item5ChoiceType1 
        {
    
            /// <remarks/>
            voiceMailProfileId,
    
            /// <remarks/>
            voiceMailProfileName,
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
            [System.Xml.Serialization.XmlRootAttribute("getLine", Namespace="http://www.cisco.com/AXL/API/1.0", IsNullable=false)]
            public class GetLineReq 
        {
            // The commented out section below is .NET choking on too much sequence/choice XSD specifications.
            // The following is valid, however, it does not force correct usage 
            //(i.e, if you specify routePartitionId, don't specify routePartitionName)
            public string uuid;

            public string pattern;

            public string routePartitionId;

            public string routePartitionName;

            public string routeFilterId;

            public string routeFilterName;

            //        /// <remarks/>
            //        [System.Xml.Serialization.XmlElementAttribute("routePartitionId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            //        [System.Xml.Serialization.XmlElementAttribute("routePartitionName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            //        [System.Xml.Serialization.XmlElementAttribute("uuid", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            //        [System.Xml.Serialization.XmlElementAttribute("pattern", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            //        [System.Xml.Serialization.XmlElementAttribute("routeFilterId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            //        [System.Xml.Serialization.XmlElementAttribute("routeFilterName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            //        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")]
            //        public string Item;
            //    
            //        /// <remarks/>
            //        [System.Xml.Serialization.XmlIgnoreAttribute()]
            //        public ItemChoiceType12 ItemElementName;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlAttributeAttribute()]
            public System.UInt64 sequence;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool sequenceSpecified;
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
            public enum ItemChoiceType12 
        {
    
            /// <remarks/>
            routePartitionId,
    
            /// <remarks/>
            routePartitionName,
    
            /// <remarks/>
            uuid,
    
            /// <remarks/>
            pattern,
    
            /// <remarks/>
            routeFilterId,
    
            /// <remarks/>
            routeFilterName,
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
            [System.Xml.Serialization.XmlRootAttribute("getLineResponse", Namespace="http://www.cisco.com/AXL/API/1.0", IsNullable=false)]
            public class GetLineRes 
        {
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public GetLineResReturn @return;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlAttributeAttribute()]
            public System.UInt64 sequence;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool sequenceSpecified;
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
            public class GetLineResReturn 
        {
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public XNPDirectoryNumber directoryNumber;
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
            [System.Xml.Serialization.XmlRootAttribute("addUser", Namespace="http://www.cisco.com/AXL/API/1.0", IsNullable=false)]
            public class AddUserReq 
        {
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public XUser newUser;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlAttributeAttribute()]
            public System.UInt64 sequence;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool sequenceSpecified;
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
            public class XUser 
        {
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public string firstname;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public string lastname;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public string userid;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public string password;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public string pin;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public string telephoneNumber;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public string extension;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public string department;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public string manager;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public XUserLocale locale;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool localeSpecified;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlArrayItemAttribute("device", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
            public string[] associatedDevices;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public string associatedPC;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public bool authenticationProxyRights;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool authenticationProxyRightsSpecified;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public bool enableCTI;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool enableCTISpecified;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public bool enableCTISuperProvider;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool enableCTISuperProviderSpecified;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public bool allowCallParkRetrieval;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool allowCallParkRetrievalSpecified;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public bool callingNumberModAllowed;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool callingNumberModAllowedSpecified;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public string iaqExtension;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public XUserPhoneProfiles phoneProfiles;
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
            public class XUserPhoneProfiles 
        {
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute("profile", typeof(XPhoneProfile), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlElementAttribute("profileName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public object[] Items;
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
            [System.Xml.Serialization.XmlRootAttribute("removeUser", Namespace="http://www.cisco.com/AXL/API/1.0", IsNullable=false)]
            public class RemoveUserReq 
        {
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public string userid;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlAttributeAttribute()]
            public System.UInt64 sequence;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool sequenceSpecified;
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
            [System.Xml.Serialization.XmlRootAttribute("updateUser", Namespace="http://www.cisco.com/AXL/API/1.0", IsNullable=false)]
            public class UpdateUserReq 
        {
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public string userid;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public string firstname;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public string lastname;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public string password;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public string pin;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public string telephoneNumber;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public string extension;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public string department;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public string manager;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public XCountry locale;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool localeSpecified;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlArrayItemAttribute("device", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
            public string[] associatedDevices;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public string associatedPC;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public bool authenticationProxyRights;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool authenticationProxyRightsSpecified;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public bool enableCTI;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool enableCTISpecified;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public bool enableCTISuperProvider;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool enableCTISuperProviderSpecified;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public bool allowCallParkRetrieval;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool allowCallParkRetrievalSpecified;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public bool callingNumberModAllowed;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool callingNumberModAllowedSpecified;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public string iaqExtension;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public UpdateUserReqPhoneProfiles phoneProfiles;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlAttributeAttribute()]
            public System.UInt64 sequence;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool sequenceSpecified;
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
            public class UpdateUserReqPhoneProfiles 
        {
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute("profile", typeof(XPhoneProfile), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlElementAttribute("profileName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public object[] Items;
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
            [System.Xml.Serialization.XmlRootAttribute("getUser", Namespace="http://www.cisco.com/AXL/API/1.0", IsNullable=false)]
            public class GetUserReq 
        {
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public string userid;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlAttributeAttribute()]
            public System.UInt64 sequence;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool sequenceSpecified;
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
            [System.Xml.Serialization.XmlRootAttribute("getUserResponse", Namespace="http://www.cisco.com/AXL/API/1.0", IsNullable=false)]
            public class GetUserRes 
        {
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public GetUserResReturn @return;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlAttributeAttribute()]
            public System.UInt64 sequence;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool sequenceSpecified;
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
            public class GetUserResReturn 
        {
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public XUser user;
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
            [System.Xml.Serialization.XmlRootAttribute("addDeviceProfile", Namespace="http://www.cisco.com/AXL/API/1.0", IsNullable=false)]
            public class AddDeviceProfileReq 
        {
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public XPhoneProfile newProfile;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlAttributeAttribute()]
            public System.UInt64 sequence;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool sequenceSpecified;
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
            [System.Xml.Serialization.XmlRootAttribute("removeDeviceProfile", Namespace="http://www.cisco.com/AXL/API/1.0", IsNullable=false)]
            public class RemoveDeviceProfileReq 
        {
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute("profileName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlElementAttribute("profileId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")]
            public string Item;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public ItemChoiceType13 ItemElementName;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlAttributeAttribute()]
            public System.UInt64 sequence;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool sequenceSpecified;
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
            public enum ItemChoiceType13 
        {
    
            /// <remarks/>
            profileName,
    
            /// <remarks/>
            profileId,
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
            [System.Xml.Serialization.XmlRootAttribute("updateDeviceProfile", Namespace="http://www.cisco.com/AXL/API/1.0", IsNullable=false)]
            public class UpdateDeviceProfileReq 
        {
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute("name", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlElementAttribute("uuid", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")]
            public string Item;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public ItemChoiceType14 ItemElementName;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="Name")]
            public string newName;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public string description;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="nonNegativeInteger")]
            public string networkHoldMOHAudioSourceId;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="nonNegativeInteger")]
            public string userHoldMOHAudioSourceId;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public int mlppDomainId;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool mlppDomainIdSpecified;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public XStatus mlppIndicationStatus;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool mlppIndicationStatusSpecified;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public XPreemption preemption;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool preemptionSpecified;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public UpdateDeviceProfileReqLines lines;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute("phoneTemplateId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlElementAttribute("phoneTemplateName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlChoiceIdentifierAttribute("Item1ElementName")]
            public string Item1;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public Item1ChoiceType4 Item1ElementName;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlArrayItemAttribute("speeddial", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
            public XSpeeddial[] speeddials;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlArrayItemAttribute("addOnModule", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
            public XAddOnModule[] addOnModules;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public XUserLocale userLocale;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool userLocaleSpecified;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlArrayItemAttribute("service", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
            public XSubscribedService[] services;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute("softkeyTemplateName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlElementAttribute("softkeyTemplateId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlChoiceIdentifierAttribute("Item2ElementName")]
            public string Item2;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public Item2ChoiceType2 Item2ElementName;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public string loginUserId;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.ComponentModel.DefaultValueAttribute(false)]
            public bool ignorePresentationIndicators = false;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlAttributeAttribute()]
            public System.UInt64 sequence;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool sequenceSpecified;
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
            public enum ItemChoiceType14 
        {
    
            /// <remarks/>
            name,
    
            /// <remarks/>
            uuid,
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
            public class UpdateDeviceProfileReqLines 
        {
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute("lineIdentifier", typeof(XNumplanIdentifier), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlElementAttribute("line", typeof(XLine), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public object[] Items;
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
            public enum Item1ChoiceType4 
        {
    
            /// <remarks/>
            phoneTemplateId,
    
            /// <remarks/>
            phoneTemplateName,
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
            public enum Item2ChoiceType2 
        {
    
            /// <remarks/>
            softkeyTemplateName,
    
            /// <remarks/>
            softkeyTemplateId,
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
            [System.Xml.Serialization.XmlRootAttribute("getDeviceProfile", Namespace="http://www.cisco.com/AXL/API/1.0", IsNullable=false)]
            public class GetDeviceProfileReq 
        {
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute("profileName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlElementAttribute("profileId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")]
            public string Item;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public ItemChoiceType15 ItemElementName;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlAttributeAttribute()]
            public System.UInt64 sequence;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool sequenceSpecified;
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
            public enum ItemChoiceType15 
        {
    
            /// <remarks/>
            profileName,
    
            /// <remarks/>
            profileId,
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
            [System.Xml.Serialization.XmlRootAttribute("getDeviceProfileResponse", Namespace="http://www.cisco.com/AXL/API/1.0", IsNullable=false)]
            public class GetDeviceProfileRes 
        {
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public GetDeviceProfileResReturn @return;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlAttributeAttribute()]
            public System.UInt64 sequence;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool sequenceSpecified;
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
            public class GetDeviceProfileResReturn 
        {
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public XPhoneProfile profile;
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
            [System.Xml.Serialization.XmlRootAttribute("addTimePeriod", Namespace="http://www.cisco.com/AXL/API/1.0", IsNullable=false)]
            public class AddTimePeriodReq 
        {
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public XTimePeriod timePeriod;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlAttributeAttribute()]
            public System.UInt64 sequence;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool sequenceSpecified;
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
            public class XTimePeriod 
        {
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public string name;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public XTimeOfDay startTime;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool startTimeSpecified;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public XTimeOfDay endTime;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool endTimeSpecified;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public XDayOfWeek startDay;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool startDaySpecified;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public XDayOfWeek endDay;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool endDaySpecified;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public XMonthOfYear monthOfYear;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool monthOfYearSpecified;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="nonNegativeInteger")]
            public string dayOfMonth;
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
            public enum XTimeOfDay 
        {
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("No Office Hours")]
            NoOfficeHours,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("0:00")]
            Item000,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("0:15")]
            Item015,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("0:30")]
            Item030,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("0:45")]
            Item045,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("1:00")]
            Item100,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("1:15")]
            Item115,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("1:30")]
            Item130,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("1:45")]
            Item145,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("2:00")]
            Item200,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("2:15")]
            Item215,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("2:30")]
            Item230,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("2:45")]
            Item245,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("3:00")]
            Item300,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("3:15")]
            Item315,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("3:30")]
            Item330,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("3:45")]
            Item345,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("4:00")]
            Item400,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("4:15")]
            Item415,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("4:30")]
            Item430,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("4:45")]
            Item445,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("5:00")]
            Item500,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("5:15")]
            Item515,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("5:30")]
            Item530,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("5:45")]
            Item545,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("6:00")]
            Item600,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("6:15")]
            Item615,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("6:30")]
            Item630,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("6:45")]
            Item645,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("7:00")]
            Item700,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("7:15")]
            Item715,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("7:30")]
            Item730,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("7:45")]
            Item745,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("8:00")]
            Item800,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("8:15")]
            Item815,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("8:30")]
            Item830,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("8:45")]
            Item845,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("9:00")]
            Item900,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("9:15")]
            Item915,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("9:30")]
            Item930,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("9:45")]
            Item945,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("10:00")]
            Item1000,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("10:15")]
            Item1015,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("10:30")]
            Item1030,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("10:45")]
            Item1045,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("11:00")]
            Item1100,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("11:15")]
            Item1115,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("11:30")]
            Item1130,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("11:45")]
            Item1145,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("12:00")]
            Item1200,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("12:15")]
            Item1215,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("12:30")]
            Item1230,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("12:45")]
            Item1245,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("13:00")]
            Item1300,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("13:15")]
            Item1315,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("13:30")]
            Item1330,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("13:45")]
            Item1345,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("14:00")]
            Item1400,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("14:15")]
            Item1415,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("14:30")]
            Item1430,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("14:45")]
            Item1445,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("15:00")]
            Item1500,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("15:15")]
            Item1515,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("15:30")]
            Item1530,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("15:45")]
            Item1545,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("16:00")]
            Item1600,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("16:15")]
            Item1615,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("16:30")]
            Item1630,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("16:45")]
            Item1645,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("17:00")]
            Item1700,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("17:15")]
            Item1715,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("17:30")]
            Item1730,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("17:45")]
            Item1745,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("18:00")]
            Item1800,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("18:15")]
            Item1815,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("18:30")]
            Item1830,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("18:45")]
            Item1845,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("19:00")]
            Item1900,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("19:15")]
            Item1915,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("19:30")]
            Item1930,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("19:45")]
            Item1945,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("20:00")]
            Item2000,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("20:15")]
            Item2015,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("20:30")]
            Item2030,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("20:45")]
            Item2045,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("21:00")]
            Item2100,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("21:15")]
            Item2115,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("21:30")]
            Item2130,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("21:45")]
            Item2145,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("22:00")]
            Item2200,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("22:15")]
            Item2215,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("22:30")]
            Item2230,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("22:45")]
            Item2245,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("23:00")]
            Item2300,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("23:15")]
            Item2315,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("23:30")]
            Item2330,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("23:45")]
            Item2345,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("24:00")]
            Item2400,
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
            public enum XDayOfWeek 
        {
    
            /// <remarks/>
            Sun,
    
            /// <remarks/>
            Mon,
    
            /// <remarks/>
            Tue,
    
            /// <remarks/>
            Wed,
    
            /// <remarks/>
            Thu,
    
            /// <remarks/>
            Fri,
    
            /// <remarks/>
            Sat,
    
            /// <remarks/>
            None,
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
            public enum XMonthOfYear 
        {
    
            /// <remarks/>
            None,
    
            /// <remarks/>
            Jan,
    
            /// <remarks/>
            Feb,
    
            /// <remarks/>
            Mar,
    
            /// <remarks/>
            Apr,
    
            /// <remarks/>
            May,
    
            /// <remarks/>
            Jun,
    
            /// <remarks/>
            Jul,
    
            /// <remarks/>
            Aug,
    
            /// <remarks/>
            Sep,
    
            /// <remarks/>
            Oct,
    
            /// <remarks/>
            Nov,
    
            /// <remarks/>
            Dec,
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
            [System.Xml.Serialization.XmlRootAttribute("getTimePeriod", Namespace="http://www.cisco.com/AXL/API/1.0", IsNullable=false)]
            public class NameAndGUIDRequest 
        {
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute("name", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlElementAttribute("uuid", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")]
            public string Item;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public ItemChoiceType16 ItemElementName;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlAttributeAttribute()]
            public System.UInt64 sequence;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool sequenceSpecified;
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
            public enum ItemChoiceType16 
        {
    
            /// <remarks/>
            name,
    
            /// <remarks/>
            uuid,
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
            [System.Xml.Serialization.XmlRootAttribute("getTimePeriodResponse", Namespace="http://www.cisco.com/AXL/API/1.0", IsNullable=false)]
            public class GetTimePeriodRes 
        {
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public GetTimePeriodResReturn @return;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlAttributeAttribute()]
            public System.UInt64 sequence;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool sequenceSpecified;
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
            public class GetTimePeriodResReturn 
        {
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public XTimePeriod timePeriod;
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
            [System.Xml.Serialization.XmlRootAttribute("updateTimePeriod", Namespace="http://www.cisco.com/AXL/API/1.0", IsNullable=false)]
            public class UpdateTimePeriodReq 
        {
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute("name", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlElementAttribute("uuid", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")]
            public string Item;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public ItemChoiceType17 ItemElementName;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public string newName;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public XTimeOfDay startTime;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool startTimeSpecified;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public XTimeOfDay endTime;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool endTimeSpecified;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public XDayOfWeek startDay;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool startDaySpecified;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public XDayOfWeek endDay;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool endDaySpecified;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public XMonthOfYear monthOfYear;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool monthOfYearSpecified;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="nonNegativeInteger")]
            public string dayOfMonth;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlAttributeAttribute()]
            public System.UInt64 sequence;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool sequenceSpecified;
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
            public enum ItemChoiceType17 
        {
    
            /// <remarks/>
            name,
    
            /// <remarks/>
            uuid,
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
            [System.Xml.Serialization.XmlRootAttribute("addTimeSchedule", Namespace="http://www.cisco.com/AXL/API/1.0", IsNullable=false)]
            public class AddTimeScheduleReq 
        {
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public XTimeSchedule timeSchedule;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlAttributeAttribute()]
            public System.UInt64 sequence;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool sequenceSpecified;
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
            public class XTimeSchedule 
        {
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public string name;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlArrayItemAttribute("member", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
            public XTimeScheduleTimePeriod[] members;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlAttributeAttribute()]
            public string uuid;
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
            public class XTimeScheduleTimePeriod 
        {
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute("timePeriodName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlElementAttribute("timePeriod", typeof(XTimeScheduleTimePeriodTimePeriod), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public object Item;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlAttributeAttribute()]
            public string uuid;
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
            public class XTimeScheduleTimePeriodTimePeriod : XTimePeriod 
        {
    
            /// <remarks/>
            [System.Xml.Serialization.XmlAttributeAttribute()]
            public string uuid;
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
            [System.Xml.Serialization.XmlRootAttribute("getTimeScheduleResponse", Namespace="http://www.cisco.com/AXL/API/1.0", IsNullable=false)]
            public class GetTimeScheduleRes 
        {
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public GetTimeScheduleResReturn @return;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlAttributeAttribute()]
            public System.UInt64 sequence;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool sequenceSpecified;
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
            public class GetTimeScheduleResReturn 
        {
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public XTimeSchedule timeSchedule;
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
            [System.Xml.Serialization.XmlRootAttribute("updateTimeSchedule", Namespace="http://www.cisco.com/AXL/API/1.0", IsNullable=false)]
            public class UpdateTimeScheduleReq 
        {
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute("name", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlElementAttribute("uuid", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")]
            public string Item;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public ItemChoiceType18 ItemElementName;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public string newName;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlArrayItemAttribute("member", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
            public XTimeScheduleTimePeriod[] members;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlAttributeAttribute()]
            public System.UInt64 sequence;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool sequenceSpecified;
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
            public enum ItemChoiceType18 
        {
    
            /// <remarks/>
            name,
    
            /// <remarks/>
            uuid,
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
            [System.Xml.Serialization.XmlRootAttribute("addRoutePartition", Namespace="http://www.cisco.com/AXL/API/1.0", IsNullable=false)]
            public class AddRoutePartitionReq 
        {
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public XRoutePartition newRoutePartition;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlAttributeAttribute()]
            public System.UInt64 sequence;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool sequenceSpecified;
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
            [System.Xml.Serialization.XmlRootAttribute("updateRoutePartition", Namespace="http://www.cisco.com/AXL/API/1.0", IsNullable=false)]
            public class UpdateRoutePartitionReq 
        {
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute("name", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlElementAttribute("uuid", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")]
            public string Item;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public ItemChoiceType19 ItemElementName;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public string newName;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public string description;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute("newTimeScheduleName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlElementAttribute("newTimeScheduleId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlChoiceIdentifierAttribute("Item1ElementName")]
            public string Item1;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public Item1ChoiceType5 Item1ElementName;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public bool useOriginatingDeviceTimeZone;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool useOriginatingDeviceTimeZoneSpecified;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public XTimeZone timeZone;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool timeZoneSpecified;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlAttributeAttribute()]
            public System.UInt64 sequence;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool sequenceSpecified;
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
            public enum ItemChoiceType19 
        {
    
            /// <remarks/>
            name,
    
            /// <remarks/>
            uuid,
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
            public enum Item1ChoiceType5 
        {
    
            /// <remarks/>
            newTimeScheduleName,
    
            /// <remarks/>
            newTimeScheduleId,
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
            [System.Xml.Serialization.XmlRootAttribute("removeRoutePartition", Namespace="http://www.cisco.com/AXL/API/1.0", IsNullable=false)]
            public class RemoveRoutePartitionReq 
        {
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute("partitionId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlElementAttribute("partitionName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")]
            public string Item;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public ItemChoiceType20 ItemElementName;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlAttributeAttribute()]
            public System.UInt64 sequence;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool sequenceSpecified;
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
            public enum ItemChoiceType20 
        {
    
            /// <remarks/>
            partitionId,
    
            /// <remarks/>
            partitionName,
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
            [System.Xml.Serialization.XmlRootAttribute("getRoutePartition", Namespace="http://www.cisco.com/AXL/API/1.0", IsNullable=false)]
            public class GetRoutePartitionReq 
        {
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute("partitionId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlElementAttribute("partitionName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")]
            public string Item;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public ItemChoiceType21 ItemElementName;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlAttributeAttribute()]
            public System.UInt64 sequence;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool sequenceSpecified;
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
            public enum ItemChoiceType21 
        {
    
            /// <remarks/>
            partitionId,
    
            /// <remarks/>
            partitionName,
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
            [System.Xml.Serialization.XmlRootAttribute("getRoutePartitionResponse", Namespace="http://www.cisco.com/AXL/API/1.0", IsNullable=false)]
            public class GetRoutePartitionRes 
        {
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public GetRoutePartitionResReturn @return;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlAttributeAttribute()]
            public System.UInt64 sequence;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool sequenceSpecified;
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
            public class GetRoutePartitionResReturn 
        {
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public XRoutePartition routePartition;
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
            [System.Xml.Serialization.XmlRootAttribute("getCSSResponse", Namespace="http://www.cisco.com/AXL/API/1.0", IsNullable=false)]
            public class GetCSSRes 
        {
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public GetCSSResReturn @return;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlAttributeAttribute()]
            public System.UInt64 sequence;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool sequenceSpecified;
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
            public class GetCSSResReturn 
        {
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public XCallingSearchSpace callingSearchSpace;
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
            [System.Xml.Serialization.XmlRootAttribute("addCSS", Namespace="http://www.cisco.com/AXL/API/1.0", IsNullable=false)]
            public class AddCSSReq 
        {
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public XCallingSearchSpace newCSS;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlAttributeAttribute()]
            public System.UInt64 sequence;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool sequenceSpecified;
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
            [System.Xml.Serialization.XmlRootAttribute("updateCSS", Namespace="http://www.cisco.com/AXL/API/1.0", IsNullable=false)]
            public class UpdateCSSReq 
        {
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute("name", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlElementAttribute("uuid", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")]
            public string Item;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public ItemChoiceType22 ItemElementName;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public string newName;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public string description;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlArrayItemAttribute("member", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
            public XCallingSearchSpaceMember[] members;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlAttributeAttribute()]
            public System.UInt64 sequence;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool sequenceSpecified;
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
            public enum ItemChoiceType22 
        {
    
            /// <remarks/>
            name,
    
            /// <remarks/>
            uuid,
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
            [System.Xml.Serialization.XmlRootAttribute("getTransPattern", Namespace="http://www.cisco.com/AXL/API/1.0", IsNullable=false)]
            public class GetTransPatternReq 
        {
    
            // The commented out section below is .NET choking on too much sequence/choice XSD specifications.
            // The following is valid, however, it does not force correct usage
            //(i.e, if you specify routePartitionId, don't specify routePartitionName)
            public string uuid;

            public string pattern;

            public string routePartitionId;

            public string routePartitionName;

            public string routeFilterId;

            public string routeFilterName;

            //        /// <remarks/>
            //        [System.Xml.Serialization.XmlElementAttribute("routePartitionId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            //        [System.Xml.Serialization.XmlElementAttribute("routePartitionName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            //        [System.Xml.Serialization.XmlElementAttribute("uuid", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            //        [System.Xml.Serialization.XmlElementAttribute("pattern", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            //        [System.Xml.Serialization.XmlElementAttribute("routeFilterId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            //        [System.Xml.Serialization.XmlElementAttribute("routeFilterName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            //        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")]
            //        public string Item;
            //    
            //        /// <remarks/>
            //        [System.Xml.Serialization.XmlIgnoreAttribute()]
            //        public ItemChoiceType23 ItemElementName;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlAttributeAttribute()]
            public System.UInt64 sequence;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool sequenceSpecified;
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
            public enum ItemChoiceType23 
        {
    
            /// <remarks/>
            routePartitionId,
    
            /// <remarks/>
            routePartitionName,
    
            /// <remarks/>
            uuid,
    
            /// <remarks/>
            pattern,
    
            /// <remarks/>
            routeFilterId,
    
            /// <remarks/>
            routeFilterName,
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
            [System.Xml.Serialization.XmlRootAttribute("getTransPatternResponse", Namespace="http://www.cisco.com/AXL/API/1.0", IsNullable=false)]
            public class GetTransPatternRes 
        {
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public GetTransPatternResReturn @return;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlAttributeAttribute()]
            public System.UInt64 sequence;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool sequenceSpecified;
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
            public class GetTransPatternResReturn 
        {
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public XNPTranslationPattern pattern;
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
            public class XNPTranslationPattern : XNPPattern 
        {
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute("callingSearchSpace", typeof(XCallingSearchSpace), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlElementAttribute("callingSearchSpaceName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public object CallingSearchSpace;
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
            [System.Xml.Serialization.XmlIncludeAttribute(typeof(XNPTranslationPattern))]
            [System.Xml.Serialization.XmlIncludeAttribute(typeof(XNPRoutePattern))]
            [System.Xml.Serialization.XmlIncludeAttribute(typeof(XNPHuntPilot))]
            public abstract class XNPPattern 
        {
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public string pattern;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public string description;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public XPatternUsage usage;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute("routePartition", typeof(XRoutePartition), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlElementAttribute("routePartitionName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public object Item;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public bool blockEnable;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public string calledPartyTransformationMask;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public string callingPartyTransformationMask;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public XStatus useCallingPartyPhoneMask;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public string callingPartyPrefixDigits;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute("dialPlan", typeof(XDialPlan), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlElementAttribute("dialPlanName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public object Item1;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="nonNegativeInteger")]
            public string dialPlanWizardGenId;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute("digitDiscardInstructionName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlElementAttribute("digitDiscardInstruction", typeof(XDigitDiscardInstruction), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public object Item2;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public XLampBlinkRate messageWaiting;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public XNetworkLocation networkLocation;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public bool patternUrgency;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public string prefixDigitsOut;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute("routeFilter", typeof(XRouteFilter), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlElementAttribute("routeFilterName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public object Item3;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public XPresentationBit callingLinePresentationBit;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool callingLinePresentationBitSpecified;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public XPresentationBit callingNamePresentationBit;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool callingNamePresentationBitSpecified;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public XPresentationBit connectedLinePresentationBit;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool connectedLinePresentationBitSpecified;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public XPresentationBit connectedNamePresentationBit;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool connectedNamePresentationBitSpecified;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public bool supportOverlapSending;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool supportOverlapSendingSpecified;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public XPatternPrecedence patternPrecedence;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool patternPrecedenceSpecified;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public XReleaseCauseValue releaseCause;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool releaseCauseSpecified;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public object allowDeviceOverride;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public object provideOutsideDialtone;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlAttributeAttribute()]
            public string uuid;
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
            public class XDialPlan 
        {
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public string name;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public string description;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlAttributeAttribute()]
            public string uuid;
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
            public class XDigitDiscardInstruction 
        {
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public string name;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public string clause;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute("dialPlan", typeof(XDialPlan), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlElementAttribute("dialPlanName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public object Item;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="nonNegativeInteger")]
            public string digitAnalysisId;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlArrayItemAttribute("member", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
            public XDigitDiscardInstructionMember[] members;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlAttributeAttribute()]
            public string uuid;
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
            public class XDigitDiscardInstructionMember 
        {
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute("dialPlanTag", typeof(XDialPlanTag), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlElementAttribute("dialPlanTagName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public object Item;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlAttributeAttribute()]
            public string uuid;
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
            public class XDialPlanTag 
        {
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public string name;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute("dialPlan", typeof(XDialPlan), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlElementAttribute("dialPlanName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public object Item;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public XOperator @operator;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public bool suppressFromRouteFilter;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool suppressFromRouteFilterSpecified;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlAttributeAttribute()]
            public string uuid;
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
            public enum XOperator 
        {
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("NOT-SELECTED")]
            NOTSELECTED,
    
            /// <remarks/>
            EXISTS,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("DOES-NOT-EXIST")]
            DOESNOTEXIST,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("==")]
            Item,
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
            public enum XLampBlinkRate 
        {
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("Lamp Off")]
            LampOff,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("Lamp On")]
            LampOn,
    
            /// <remarks/>
            Wink,
    
            /// <remarks/>
            Flash,
    
            /// <remarks/>
            Blink,
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
            public class XRouteFilter 
        {
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public string name;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public string clause;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute("dialPlan", typeof(XDialPlan), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlElementAttribute("dialPlanName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public object Item;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="nonNegativeInteger")]
            public string dialPlanWizardGenId;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlArrayItemAttribute("member", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
            public XRouteFilterMember[] members;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlAttributeAttribute()]
            public string uuid;
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
            public class XRouteFilterMember 
        {
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute("dialPlanTag", typeof(XDialPlanTag), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlElementAttribute("dialPlanTagName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public object Item;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="nonNegativeInteger")]
            public string digits;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public XOperator @operator;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlAttributeAttribute()]
            public string uuid;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlAttributeAttribute(DataType="nonNegativeInteger")]
            public string priority;
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
            public class XNPRoutePattern : XNPPattern 
        {
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public XNPRoutePatternDestination destination;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public bool authorizationCodeRequired;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool authorizationCodeRequiredSpecified;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="nonNegativeInteger")]
            public string authorizationLevelRequired;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public bool clientCodeRequired;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool clientCodeRequiredSpecified;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public string withTag;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public string withValueClause;
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
            public class XNPRoutePatternDestination 
        {
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute("routeList", typeof(XRouteList), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlElementAttribute("gateway", typeof(XDevice), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlElementAttribute("routeListName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlElementAttribute("gatewayName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")]
            public object Item;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public ItemChoiceType55 ItemElementName;
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
            public class XRouteList 
        {
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="Name")]
            public string name;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public string description;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute("callManagerGroupName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlElementAttribute("callManagerGroup", typeof(XCallManagerGroup), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public object Item;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public bool routeListEnabled;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool routeListEnabledSpecified;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlArrayItemAttribute("member", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
            public XRouteListMember[] members;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlAttributeAttribute()]
            public string uuid;
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
            public class XRouteListMember 
        {
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute("routeGroupName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlElementAttribute("routeGroup", typeof(XRouteGroup), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public object Item;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="nonNegativeInteger")]
            public string selectionOrder;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public string calledPartyTransformationMask;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public string callingPartyTransformationMask;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute("callingSearchSpace", typeof(XCallingSearchSpace), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlElementAttribute("callingSearchSpaceName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="Name")]
            public object Item1;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="nonNegativeInteger")]
            public string dialPlanWizardGenId;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute("digitDiscardInstructionName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="Name")]
            [System.Xml.Serialization.XmlElementAttribute("digitDiscardInstruction", typeof(XDigitDiscardInstruction), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public object Item2;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public string prefixDigitsOut;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public string callingPartyPrefixDigits;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public XStatus useFullyQualifiedCallingPartyNumber;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlAttributeAttribute()]
            public string uuid;
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
            public class XRouteGroup 
        {
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="Name")]
            public string name;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="nonNegativeInteger")]
            public string dialPlanWizardGenId;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlArrayItemAttribute("member", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
            public XRouteGroupMember[] members;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlAttributeAttribute()]
            public string uuid;
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
            public class XRouteGroupMember 
        {
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="nonNegativeInteger")]
            public string deviceSelectionOrder;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="nonNegativeInteger")]
            public string dialPlanWizardGenId;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute("deviceId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlElementAttribute("deviceName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlElementAttribute("device", typeof(XDevice), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")]
            public object Item;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public ItemChoiceType26 ItemElementName;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlAttributeAttribute()]
            public string uuid;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlAttributeAttribute(DataType="nonNegativeInteger")]
            public string port;
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0", IncludeInSchema=false)]
            public enum ItemChoiceType26 
        {
    
            /// <remarks/>
            deviceId,
    
            /// <remarks/>
            deviceName,
    
            /// <remarks/>
            device,
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0", IncludeInSchema=false)]
            public enum ItemChoiceType55 
        {
    
            /// <remarks/>
            routeList,
    
            /// <remarks/>
            gateway,
    
            /// <remarks/>
            routeListName,
    
            /// <remarks/>
            gatewayName,
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
            public class XNPHuntPilot : XNPPattern 
        {
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public XNPHuntPilotDestination destination;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public XHuntForwardInfo ForwardHuntBusy;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public XHuntForwardInfo ForwardHuntNoAnswer;
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
            public class XNPHuntPilotDestination 
        {
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute("huntListName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlElementAttribute("huntList", typeof(XHuntList), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public object Item;
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
            public class XHuntList 
        {
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="Name")]
            public string name;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public string description;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute("callManagerGroupName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlElementAttribute("callManagerGroup", typeof(XCallManagerGroup), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public object Item;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public bool routeListEnabled;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool routeListEnabledSpecified;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlArrayItemAttribute("member", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
            public XHuntListMember[] members;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlAttributeAttribute()]
            public string uuid;
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
            public class XHuntListMember 
        {
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute("lineGroup", typeof(XLineGroup), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlElementAttribute("lineGroupName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public object Item;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="nonNegativeInteger")]
            public string selectionOrder;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public string calledPartyTransformationMask;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public string callingPartyTransformationMask;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute("callingSearchSpace", typeof(XCallingSearchSpace), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlElementAttribute("callingSearchSpaceName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="Name")]
            public object Item1;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="nonNegativeInteger")]
            public string dialPlanWizardGenId;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute("digitDiscardInstructionName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="Name")]
            [System.Xml.Serialization.XmlElementAttribute("digitDiscardInstruction", typeof(XDigitDiscardInstruction), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public object Item2;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public string prefixDigitsOut;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public string callingPartyPrefixDigits;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public XStatus useFullyQualifiedCallingPartyNumber;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlAttributeAttribute()]
            public string uuid;
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
            public class XLineGroup 
        {
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="Name")]
            public string name;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public XDistributeAlgorithm distributionAlgorithm;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="nonNegativeInteger")]
            [System.ComponentModel.DefaultValueAttribute("10")]
            public string rnaReversionTimeout = "10";
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public XHuntAlgorithm huntAlgorithmNoAnswer;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public XHuntAlgorithm huntAlgorithmBusy;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public XHuntAlgorithm huntAlgorithmNotAvailable;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlArrayItemAttribute("member", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
            public XLineGroupMember[] members;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlAttributeAttribute()]
            public string uuid;
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
            public enum XDistributeAlgorithm 
        {
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("Top Down")]
            TopDown,
    
            /// <remarks/>
            Circular,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("Longest Idle Time")]
            LongestIdleTime,
    
            /// <remarks/>
            Broadcast,
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
            public enum XHuntAlgorithm 
        {
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("Try next member; then, try next group in Hunt List")]
            TrynextmemberthentrynextgroupinHuntList,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("Try next member, but do not go to next group")]
            Trynextmemberbutdonotgotonextgroup,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("Skip remaining members, and go directly to next group")]
            Skipremainingmembersandgodirectlytonextgroup,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("Stop hunting")]
            Stophunting,
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
            public class XLineGroupMember 
        {
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="nonNegativeInteger")]
            public string lineSelectionOrder;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute("dnPatternAndPartition", typeof(XLineGroupMemberDnPatternAndPartition), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlElementAttribute("directoryNumber", typeof(XNPDirectoryNumber), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlElementAttribute("directoryNumberId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public object Item;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlAttributeAttribute()]
            public string uuid;
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
            public class XLineGroupMemberDnPatternAndPartition 
        {
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public string dnPattern;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute("routePartition", typeof(XRoutePartition), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlElementAttribute("routePartitionId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlElementAttribute("routePartitionName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")]
            public object Item;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public ItemChoiceType24 ItemElementName;
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0", IncludeInSchema=false)]
            public enum ItemChoiceType24 
        {
    
            /// <remarks/>
            routePartition,
    
            /// <remarks/>
            routePartitionId,
    
            /// <remarks/>
            routePartitionName,
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
            public class XHuntForwardInfo 
        {
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.ComponentModel.DefaultValueAttribute(false)]
            public bool usePersonalPreferences = false;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute("callingSearchSpace", typeof(XCallingSearchSpace), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlElementAttribute("callingSearchSpaceName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public object Item;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public string destination;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="nonNegativeInteger")]
            public string maxHuntduration;
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
            [System.Xml.Serialization.XmlRootAttribute("removeTransPattern", Namespace="http://www.cisco.com/AXL/API/1.0", IsNullable=false)]
            public class RemoveTransPatternReq 
        {
    
            // The commented out section below is .NET choking on too much sequence/choice XSD specifications.
            // The following is valid, however, it does not force correct usage
            //(i.e, if you specify routePartitionId, don't specify routePartitionName)
            public string uuid;

            public string pattern;

            public string routePartitionId;

            public string routePartitionName;

            public string routeFilterId;

            public string routeFilterName;

            //        /// <remarks/>
            //        [System.Xml.Serialization.XmlElementAttribute("routePartitionId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            //        [System.Xml.Serialization.XmlElementAttribute("routePartitionName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            //        [System.Xml.Serialization.XmlElementAttribute("uuid", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            //        [System.Xml.Serialization.XmlElementAttribute("pattern", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            //        [System.Xml.Serialization.XmlElementAttribute("routeFilterId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            //        [System.Xml.Serialization.XmlElementAttribute("routeFilterName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            //        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")]
            //        public string Item;
            //    
            //        /// <remarks/>
            //        [System.Xml.Serialization.XmlIgnoreAttribute()]
            //        public ItemChoiceType67 ItemElementName;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlAttributeAttribute()]
            public System.UInt64 sequence;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool sequenceSpecified;
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
            public enum ItemChoiceType67 
        {
    
            /// <remarks/>
            routePartitionId,
    
            /// <remarks/>
            routePartitionName,
    
            /// <remarks/>
            uuid,
    
            /// <remarks/>
            pattern,
    
            /// <remarks/>
            routeFilterId,
    
            /// <remarks/>
            routeFilterName,
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
            [System.Xml.Serialization.XmlRootAttribute("addTransPattern", Namespace="http://www.cisco.com/AXL/API/1.0", IsNullable=false)]
            public class AddTransPatternReq 
        {
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public XNPTranslationPattern newPattern;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlAttributeAttribute()]
            public System.UInt64 sequence;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool sequenceSpecified;
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
            [System.Xml.Serialization.XmlRootAttribute("updateTransPattern", Namespace="http://www.cisco.com/AXL/API/1.0", IsNullable=false)]
            public class UpdateTransPatternReq 
        {

            // The commented out section below is .NET choking on too much sequence/choice XSD specifications.
            // The following is valid, however, it does not force correct usage
            //(i.e, if you specify routePartitionId, don't specify routePartitionName)
            public string uuid;

            public string pattern;

            public string routePartitionId;

            public string routePartitionName;

            public string routeFilterId;

            public string routeFilterName;

            //        /// <remarks/>
            //        [System.Xml.Serialization.XmlElementAttribute("routePartitionId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            //        [System.Xml.Serialization.XmlElementAttribute("routePartitionName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            //        [System.Xml.Serialization.XmlElementAttribute("uuid", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            //        [System.Xml.Serialization.XmlElementAttribute("pattern", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            //        [System.Xml.Serialization.XmlElementAttribute("routeFilterId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            //        [System.Xml.Serialization.XmlElementAttribute("routeFilterName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            //        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")]
            //        public string Item;
            //    
            //        /// <remarks/>
            //        [System.Xml.Serialization.XmlIgnoreAttribute()]
            //        public ItemChoiceType66 ItemElementName;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public string newPattern;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public string description;
    
            //        /// <remarks/>
            //        [System.Xml.Serialization.XmlElementAttribute("routePartitionId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            //        [System.Xml.Serialization.XmlElementAttribute("routePartitionName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            //        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("Item1ElementName")]
            //        public string Item1;
            //    
            //        /// <remarks/>
            //        [System.Xml.Serialization.XmlIgnoreAttribute()]
            //        public Item1ChoiceType13 Item1ElementName;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public bool blockEnable;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool blockEnableSpecified;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public string calledPartyTransformationMask;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public string callingPartyTransformationMask;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public XStatus useCallingPartyPhoneMask;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool useCallingPartyPhoneMaskSpecified;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
            public string callingPartyPrefixDigits;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public XPresentationBit callingPartyPresentation;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool callingPartyPresentationSpecified;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute("dialPlanName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlElementAttribute("dialPlanId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlChoiceIdentifierAttribute("Item2ElementName")]
            public string Item2;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public Item2ChoiceType10 Item2ElementName;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute("digitDiscardInstructionName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlElementAttribute("digitDiscardInstructionId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlChoiceIdentifierAttribute("Item3ElementName")]
            public string Item3;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public Item3ChoiceType9 Item3ElementName;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public XLampBlinkRate messageWaiting;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool messageWaitingSpecified;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public XNetworkLocation networkLocation;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool networkLocationSpecified;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public bool patternUrgency;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool patternUrgencySpecified;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public string prefixDigitsOut;
    
            //        /// <remarks/>
            //        [System.Xml.Serialization.XmlElementAttribute("routeFilterId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            //        [System.Xml.Serialization.XmlElementAttribute("routeFilterName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            //        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("Item4ElementName")]
            //        public string Item4;
            //    
            //        /// <remarks/>
            //        [System.Xml.Serialization.XmlIgnoreAttribute()]
            //        public Item4ChoiceType8 Item4ElementName;
            //    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public XPresentationBit callingLinePresentationBit;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool callingLinePresentationBitSpecified;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public XPresentationBit callingNamePresentationBit;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool callingNamePresentationBitSpecified;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public XPresentationBit connectedLinePresentationBit;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool connectedLinePresentationBitSpecified;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public XPresentationBit connectedNamePresentationBit;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool connectedNamePresentationBitSpecified;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public bool supportOverlapSending;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool supportOverlapSendingSpecified;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public XPatternPrecedence patternPrecedence;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool patternPrecedenceSpecified;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public XReleaseCauseValue releaseCause;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool releaseCauseSpecified;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute("callingSearchSpaceId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlElementAttribute("callingSearchSpaceName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlChoiceIdentifierAttribute("Item5ElementName")]
            public string Item5;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public Item5ChoiceType6 Item5ElementName;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlAttributeAttribute()]
            public System.UInt64 sequence;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool sequenceSpecified;
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
            [System.Xml.Serialization.XmlRootAttribute("updateTransPattern", Namespace="http://www.cisco.com/AXL/API/1.0", IsNullable=false)]
            public class UpdateTransPatternReq2
        {
            public string uuid;

            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute("routePartitionId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlElementAttribute("routePartitionName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlChoiceIdentifierAttribute("Item1ElementName")]
            public string Item1;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public Item1ChoiceType13 Item1ElementName;

            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute("routeFilterId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlElementAttribute("routeFilterName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlChoiceIdentifierAttribute("Item4ElementName")]
            public string Item4;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public Item4ChoiceType8 Item4ElementName;
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
            public enum ItemChoiceType66 
        {
    
            /// <remarks/>
            routePartitionId,
    
            /// <remarks/>
            routePartitionName,
    
            /// <remarks/>
            uuid,
    
            /// <remarks/>
            pattern,
    
            /// <remarks/>
            routeFilterId,
    
            /// <remarks/>
            routeFilterName,
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
            public enum Item1ChoiceType13 
        {
    
            /// <remarks/>
            routePartitionId,
    
            /// <remarks/>
            routePartitionName,
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
            public enum Item2ChoiceType10 
        {
    
            /// <remarks/>
            dialPlanName,
    
            /// <remarks/>
            dialPlanId,
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
            public enum Item3ChoiceType9 
        {
    
            /// <remarks/>
            digitDiscardInstructionName,
    
            /// <remarks/>
            digitDiscardInstructionId,
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
            public enum Item4ChoiceType8 
        {
    
            /// <remarks/>
            routeFilterId,
    
            /// <remarks/>
            routeFilterName,
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
            public enum Item5ChoiceType6 
        {
    
            /// <remarks/>
            callingSearchSpaceId,
    
            /// <remarks/>
            callingSearchSpaceName,
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
            [System.Xml.Serialization.XmlRootAttribute("getRoutePattern", Namespace="http://www.cisco.com/AXL/API/1.0", IsNullable=false)]
            public class GetRoutePatternReq 
        {
            // The commented out section below is .NET choking on too much sequence/choice XSD specifications.
            // The following is valid, however, it does not force correct usage
            //(i.e, if you specify routePartitionId, don't specify routePartitionName)
            public string uuid;

            public string pattern;

            public string routePartitionId;

            public string routePartitionName;

            public string routeFilterId;

            public string routeFilterName;
    
            //        /// <remarks/>
            //        [System.Xml.Serialization.XmlElementAttribute("routePartitionId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            //        [System.Xml.Serialization.XmlElementAttribute("routePartitionName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            //        [System.Xml.Serialization.XmlElementAttribute("uuid", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            //        [System.Xml.Serialization.XmlElementAttribute("pattern", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            //        [System.Xml.Serialization.XmlElementAttribute("routeFilterId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            //        [System.Xml.Serialization.XmlElementAttribute("routeFilterName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            //        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")]
            //        public string Item;
            //    
            //        /// <remarks/>
            //        [System.Xml.Serialization.XmlIgnoreAttribute()]
            //        public ItemChoiceType88 ItemElementName;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlAttributeAttribute()]
            public System.UInt64 sequence;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool sequenceSpecified;
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
            public enum ItemChoiceType88 
        {
    
            /// <remarks/>
            routePartitionId,
    
            /// <remarks/>
            routePartitionName,
    
            /// <remarks/>
            uuid,
    
            /// <remarks/>
            pattern,
    
            /// <remarks/>
            routeFilterId,
    
            /// <remarks/>
            routeFilterName,
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
            [System.Xml.Serialization.XmlRootAttribute("getRoutePatternResponse", Namespace="http://www.cisco.com/AXL/API/1.0", IsNullable=false)]
            public class GetRoutePatternRes 
        {
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public GetRoutePatternResReturn @return;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlAttributeAttribute()]
            public System.UInt64 sequence;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool sequenceSpecified;
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
            public class GetRoutePatternResReturn 
        {
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public XNPRoutePattern pattern;
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
            [System.Xml.Serialization.XmlRootAttribute("removeRoutePattern", Namespace="http://www.cisco.com/AXL/API/1.0", IsNullable=false)]
            public class RemoveRoutePatternReq 
        {
            // The commented out section below is .NET choking on too much sequence/choice XSD specifications.
            // The following is valid, however, it does not force correct usage
            //(i.e, if you specify routePartitionId, don't specify routePartitionName)
            public string uuid;

            public string pattern;

            public string routePartitionId;

            public string routePartitionName;

            public string routeFilterId;

            public string routeFilterName;

            //        /// <remarks/>
            //        [System.Xml.Serialization.XmlElementAttribute("routePartitionId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            //        [System.Xml.Serialization.XmlElementAttribute("routePartitionName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            //        [System.Xml.Serialization.XmlElementAttribute("uuid", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            //        [System.Xml.Serialization.XmlElementAttribute("pattern", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            //        [System.Xml.Serialization.XmlElementAttribute("routeFilterId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            //        [System.Xml.Serialization.XmlElementAttribute("routeFilterName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            //        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")]
            //        public string Item;
            //    
            //        /// <remarks/>
            //        [System.Xml.Serialization.XmlIgnoreAttribute()]
            //        public ItemChoiceType81 ItemElementName;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlAttributeAttribute()]
            public System.UInt64 sequence;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool sequenceSpecified;
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
            public enum ItemChoiceType81 
        {
    
            /// <remarks/>
            routePartitionId,
    
            /// <remarks/>
            routePartitionName,
    
            /// <remarks/>
            uuid,
    
            /// <remarks/>
            pattern,
    
            /// <remarks/>
            routeFilterId,
    
            /// <remarks/>
            routeFilterName,
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
            [System.Xml.Serialization.XmlRootAttribute("addRoutePattern", Namespace="http://www.cisco.com/AXL/API/1.0", IsNullable=false)]
            public class AddRoutePatternReq 
        {
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public XNPRoutePattern newPattern;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlAttributeAttribute()]
            public System.UInt64 sequence;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool sequenceSpecified;
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
            [System.Xml.Serialization.XmlRootAttribute("updateRoutePattern", Namespace="http://www.cisco.com/AXL/API/1.0", IsNullable=false)]
            public class UpdateRoutePatternReq 
        {
            // The commented out section below is .NET choking on too much sequence/choice XSD specifications.
            // The following is valid, however, it does not force correct usage
            //(i.e, if you specify routePartitionId, don't specify routePartitionName)
            public string uuid;

            public string pattern;

            public string routePartitionId;

            public string routePartitionName;

            public string routeFilterId;

            public string routeFilterName;

            //        /// <remarks/>
            //        [System.Xml.Serialization.XmlElementAttribute("routePartitionId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            //        [System.Xml.Serialization.XmlElementAttribute("routePartitionName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            //        [System.Xml.Serialization.XmlElementAttribute("uuid", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            //        [System.Xml.Serialization.XmlElementAttribute("pattern", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            //        [System.Xml.Serialization.XmlElementAttribute("routeFilterId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            //        [System.Xml.Serialization.XmlElementAttribute("routeFilterName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            //        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")]
            //        public string Item;
            //    
            //        /// <remarks/>
            //        [System.Xml.Serialization.XmlIgnoreAttribute()]
            //        public ItemChoiceType46 ItemElementName;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public string newPattern;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public string description;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute("routePartitionId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlElementAttribute("routePartitionName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlChoiceIdentifierAttribute("Item1ElementName")]
            public string Item1;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public Item1ChoiceType9 Item1ElementName;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public bool blockEnable;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool blockEnableSpecified;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public string calledPartyTransformationMask;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public string callingPartyTransformationMask;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public XStatus useCallingPartyPhoneMask;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool useCallingPartyPhoneMaskSpecified;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
            public string callingPartyPrefixDigits;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute("dialPlanName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlElementAttribute("dialPlanId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlChoiceIdentifierAttribute("Item2ElementName")]
            public string Item2;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public Item2ChoiceType6 Item2ElementName;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute("digitDiscardInstructionName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlElementAttribute("digitDiscardInstructionId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlChoiceIdentifierAttribute("Item3ElementName")]
            public string Item3;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public Item3ChoiceType5 Item3ElementName;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public XLampBlinkRate messageWaiting;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool messageWaitingSpecified;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public XNetworkLocation networkLocation;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool networkLocationSpecified;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public bool patternUrgency;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool patternUrgencySpecified;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public string prefixDigitsOut;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute("routeFilterId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlElementAttribute("routeFilterName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlChoiceIdentifierAttribute("Item4ElementName")]
            public string Item4;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public Item4ChoiceType5 Item4ElementName;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public XPresentationBit callingLinePresentationBit;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool callingLinePresentationBitSpecified;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public XPresentationBit callingNamePresentationBit;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool callingNamePresentationBitSpecified;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public XPresentationBit connectedLinePresentationBit;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool connectedLinePresentationBitSpecified;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public XPresentationBit connectedNamePresentationBit;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool connectedNamePresentationBitSpecified;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public bool supportOverlapSending;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool supportOverlapSendingSpecified;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public XPatternPrecedence patternPrecedence;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool patternPrecedenceSpecified;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public XReleaseCauseValue releaseCause;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool releaseCauseSpecified;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public object allowDeviceOverride;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public object provideOutsideDialtone;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public UpdateRoutePatternReqDestination destination;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public bool authorizationCodeRequired;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool authorizationCodeRequiredSpecified;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="nonNegativeInteger")]
            public string authorizationLevelRequired;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public bool clientCodeRequired;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool clientCodeRequiredSpecified;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public string withTag;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public string withValueClause;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlAttributeAttribute()]
            public System.UInt64 sequence;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool sequenceSpecified;
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
            public enum ItemChoiceType46 
        {
    
            /// <remarks/>
            routePartitionId,
    
            /// <remarks/>
            routePartitionName,
    
            /// <remarks/>
            uuid,
    
            /// <remarks/>
            pattern,
    
            /// <remarks/>
            routeFilterId,
    
            /// <remarks/>
            routeFilterName,
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
            public enum Item1ChoiceType9 
        {
    
            /// <remarks/>
            routePartitionId,
    
            /// <remarks/>
            routePartitionName,
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
            public enum Item2ChoiceType6 
        {
    
            /// <remarks/>
            dialPlanName,
    
            /// <remarks/>
            dialPlanId,
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
            public enum Item3ChoiceType5 
        {
    
            /// <remarks/>
            digitDiscardInstructionName,
    
            /// <remarks/>
            digitDiscardInstructionId,
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
            public enum Item4ChoiceType5 
        {
    
            /// <remarks/>
            routeFilterId,
    
            /// <remarks/>
            routeFilterName,
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
            public class UpdateRoutePatternReqDestination 
        {
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute("gatewayName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlElementAttribute("routeList", typeof(XRouteList), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlElementAttribute("gateway", typeof(XDevice), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlElementAttribute("routeListName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")]
            public object Item;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public ItemChoiceType47 ItemElementName;
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
            public enum ItemChoiceType47 
        {
    
            /// <remarks/>
            gatewayName,
    
            /// <remarks/>
            routeList,
    
            /// <remarks/>
            gateway,
    
            /// <remarks/>
            routeListName,
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
            [System.Xml.Serialization.XmlRootAttribute("getHuntPilot", Namespace="http://www.cisco.com/AXL/API/1.0", IsNullable=false)]
            public class GetHuntPilotReq 
        {
            // The commented out section below is .NET choking on too much sequence/choice XSD specifications.
            // The following is valid, however, it does not force correct usage
            //(i.e, if you specify routePartitionId, don't specify routePartitionName)
            public string uuid;

            public string pattern;

            public string routePartitionId;

            public string routePartitionName;

            public string routeFilterId;

            public string routeFilterName;

            //        /// <remarks/>
            //        [System.Xml.Serialization.XmlElementAttribute("routePartitionId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            //        [System.Xml.Serialization.XmlElementAttribute("routePartitionName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            //        [System.Xml.Serialization.XmlElementAttribute("uuid", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            //        [System.Xml.Serialization.XmlElementAttribute("pattern", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            //        [System.Xml.Serialization.XmlElementAttribute("routeFilterId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            //        [System.Xml.Serialization.XmlElementAttribute("routeFilterName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            //        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")]
            //        public string Item;
            //    
            //        /// <remarks/>
            //        [System.Xml.Serialization.XmlIgnoreAttribute()]
            //        public ItemChoiceType34 ItemElementName;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlAttributeAttribute()]
            public System.UInt64 sequence;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool sequenceSpecified;
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
            public enum ItemChoiceType34 
        {
    
            /// <remarks/>
            routePartitionId,
    
            /// <remarks/>
            routePartitionName,
    
            /// <remarks/>
            uuid,
    
            /// <remarks/>
            pattern,
    
            /// <remarks/>
            routeFilterId,
    
            /// <remarks/>
            routeFilterName,
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
            [System.Xml.Serialization.XmlRootAttribute("getHuntPilotResponse", Namespace="http://www.cisco.com/AXL/API/1.0", IsNullable=false)]
            public class GetHuntPilotRes 
        {
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public GetHuntPilotResReturn @return;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlAttributeAttribute()]
            public System.UInt64 sequence;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool sequenceSpecified;
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
            public class GetHuntPilotResReturn 
        {
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public XNPHuntPilot pattern;
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
            [System.Xml.Serialization.XmlRootAttribute("removeHuntPilot", Namespace="http://www.cisco.com/AXL/API/1.0", IsNullable=false)]
            public class RemoveHuntPilotReq 
        {
            // The commented out section below is .NET choking on too much sequence/choice XSD specifications.
            // The following is valid, however, it does not force correct usage
            //(i.e, if you specify routePartitionId, don't specify routePartitionName)
            public string uuid;

            public string pattern;

            public string routePartitionId;

            public string routePartitionName;

            public string routeFilterId;

            public string routeFilterName;

            //        /// <remarks/>
            //        [System.Xml.Serialization.XmlElementAttribute("routePartitionId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            //        [System.Xml.Serialization.XmlElementAttribute("routePartitionName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            //        [System.Xml.Serialization.XmlElementAttribute("uuid", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            //        [System.Xml.Serialization.XmlElementAttribute("pattern", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            //        [System.Xml.Serialization.XmlElementAttribute("routeFilterId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            //        [System.Xml.Serialization.XmlElementAttribute("routeFilterName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            //        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")]
            //        public string Item;
            //    
            //        /// <remarks/>
            //        [System.Xml.Serialization.XmlIgnoreAttribute()]
            //        public ItemChoiceType50 ItemElementName;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlAttributeAttribute()]
            public System.UInt64 sequence;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool sequenceSpecified;
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
            public enum ItemChoiceType50 
        {
    
            /// <remarks/>
            routePartitionId,
    
            /// <remarks/>
            routePartitionName,
    
            /// <remarks/>
            uuid,
    
            /// <remarks/>
            pattern,
    
            /// <remarks/>
            routeFilterId,
    
            /// <remarks/>
            routeFilterName,
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
            [System.Xml.Serialization.XmlRootAttribute("addHuntPilot", Namespace="http://www.cisco.com/AXL/API/1.0", IsNullable=false)]
            public class AddHuntPilotReq 
        {
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public XNPHuntPilot newPattern;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlAttributeAttribute()]
            public System.UInt64 sequence;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool sequenceSpecified;
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
            [System.Xml.Serialization.XmlRootAttribute("updateHuntPilot", Namespace="http://www.cisco.com/AXL/API/1.0", IsNullable=false)]
            public class UpdateHuntPilotReq 
        {
    
            // The commented out section below is .NET choking on too much sequence/choice XSD specifications.
            // The following is valid, however, it does not force correct usage
            //(i.e, if you specify routePartitionId, don't specify routePartitionName)
            public string uuid;

            public string pattern;

            public string routePartitionId;

            public string routePartitionName;

            public string routeFilterId;

            public string routeFilterName;

            //        /// <remarks/>
            //        [System.Xml.Serialization.XmlElementAttribute("routePartitionId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            //        [System.Xml.Serialization.XmlElementAttribute("routePartitionName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            //        [System.Xml.Serialization.XmlElementAttribute("uuid", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            //        [System.Xml.Serialization.XmlElementAttribute("pattern", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            //        [System.Xml.Serialization.XmlElementAttribute("routeFilterId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            //        [System.Xml.Serialization.XmlElementAttribute("routeFilterName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            //        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")]
            //        public string Item;
            //    
            //        /// <remarks/>
            //        [System.Xml.Serialization.XmlIgnoreAttribute()]
            //        public ItemChoiceType63 ItemElementName;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public string newPattern;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public string description;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute("newRoutePartitionId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlElementAttribute("newRoutePartitionName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlChoiceIdentifierAttribute("Item1ElementName")]
            public string Item1;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public Item1ChoiceType12 Item1ElementName;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public bool blockEnable;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool blockEnableSpecified;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public string calledPartyTransformationMask;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public string callingPartyTransformationMask;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public XStatus useCallingPartyPhoneMask;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool useCallingPartyPhoneMaskSpecified;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
            public string callingPartyPrefixDigits;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute("dialPlanName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlElementAttribute("dialPlanId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlChoiceIdentifierAttribute("Item2ElementName")]
            public string Item2;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public Item2ChoiceType9 Item2ElementName;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute("digitDiscardInstructionName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlElementAttribute("digitDiscardInstructionId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlChoiceIdentifierAttribute("Item3ElementName")]
            public string Item3;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public Item3ChoiceType8 Item3ElementName;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public XLampBlinkRate messageWaiting;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool messageWaitingSpecified;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public XNetworkLocation networkLocation;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool networkLocationSpecified;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public bool patternUrgency;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool patternUrgencySpecified;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public string prefixDigitsOut;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute("routeFilterId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlElementAttribute("routeFilterName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlChoiceIdentifierAttribute("Item4ElementName")]
            public string Item4;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public Item4ChoiceType7 Item4ElementName;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public XPresentationBit callingLinePresentationBit;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool callingLinePresentationBitSpecified;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public XPresentationBit callingNamePresentationBit;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool callingNamePresentationBitSpecified;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public XPresentationBit connectedLinePresentationBit;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool connectedLinePresentationBitSpecified;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public XPresentationBit connectedNamePresentationBit;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool connectedNamePresentationBitSpecified;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public XPatternPrecedence patternPrecedence;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool patternPrecedenceSpecified;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public XReleaseCauseValue releaseCause;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool releaseCauseSpecified;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public UpdateHuntPilotReqDestination destination;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public XHuntForwardInfo ForwardHuntBusy;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public XHuntForwardInfo ForwardHuntNoAnswer;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlAttributeAttribute()]
            public System.UInt64 sequence;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool sequenceSpecified;
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
            public enum ItemChoiceType63 
        {
    
            /// <remarks/>
            routePartitionId,
    
            /// <remarks/>
            routePartitionName,
    
            /// <remarks/>
            uuid,
    
            /// <remarks/>
            pattern,
    
            /// <remarks/>
            routeFilterId,
    
            /// <remarks/>
            routeFilterName,
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
            public enum Item1ChoiceType12 
        {
    
            /// <remarks/>
            newRoutePartitionId,
    
            /// <remarks/>
            newRoutePartitionName,
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
            public enum Item2ChoiceType9 
        {
    
            /// <remarks/>
            dialPlanName,
    
            /// <remarks/>
            dialPlanId,
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
            public enum Item3ChoiceType8 
        {
    
            /// <remarks/>
            digitDiscardInstructionName,
    
            /// <remarks/>
            digitDiscardInstructionId,
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
            public enum Item4ChoiceType7 
        {
    
            /// <remarks/>
            routeFilterId,
    
            /// <remarks/>
            routeFilterName,
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
            public class UpdateHuntPilotReqDestination 
        {
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute("huntListName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlElementAttribute("huntList", typeof(XHuntList), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public object Item;
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
            [System.Xml.Serialization.XmlRootAttribute("addLineGroup", Namespace="http://www.cisco.com/AXL/API/1.0", IsNullable=false)]
            public class AddLineGroupReq 
        {
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public XLineGroup lineGroup;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlAttributeAttribute()]
            public System.UInt64 sequence;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool sequenceSpecified;
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
            [System.Xml.Serialization.XmlRootAttribute("updateLineGroup", Namespace="http://www.cisco.com/AXL/API/1.0", IsNullable=false)]
            public class UpdateLineGroupReq 
        {
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute("name", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlElementAttribute("uuid", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")]
            public string Item;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public ItemChoiceType68 ItemElementName;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public string newName;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public XDistributeAlgorithm distributionAlgorithm;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="nonNegativeInteger")]
            [System.ComponentModel.DefaultValueAttribute("10")]
            public string rnaReversionTimeout = "10";
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public XHuntAlgorithm huntAlgorithmNoAnswer;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public XHuntAlgorithm huntAlgorithmBusy;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public XHuntAlgorithm huntAlgorithmNotAvailable;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlArrayItemAttribute("member", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
            public XLineGroupMember[] members;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlAttributeAttribute()]
            public System.UInt64 sequence;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool sequenceSpecified;
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
            public enum ItemChoiceType68 
        {
    
            /// <remarks/>
            name,
    
            /// <remarks/>
            uuid,
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
            [System.Xml.Serialization.XmlRootAttribute("getLineGroupResponse", Namespace="http://www.cisco.com/AXL/API/1.0", IsNullable=false)]
            public class GetLineGroupRes 
        {
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public GetLineGroupResReturn @return;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlAttributeAttribute()]
            public System.UInt64 sequence;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool sequenceSpecified;
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
            public class GetLineGroupResReturn 
        {
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public XLineGroup lineGroup;
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
            [System.Xml.Serialization.XmlRootAttribute("addRouteGroup", Namespace="http://www.cisco.com/AXL/API/1.0", IsNullable=false)]
            public class AddRouteGroupReq 
        {
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public XRouteGroup routeGroup;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlAttributeAttribute()]
            public System.UInt64 sequence;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool sequenceSpecified;
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
            [System.Xml.Serialization.XmlRootAttribute("updateRouteGroup", Namespace="http://www.cisco.com/AXL/API/1.0", IsNullable=false)]
            public class UpdateRouteGroupReq 
        {
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute("name", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlElementAttribute("uuid", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")]
            public string Item;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public ItemChoiceType25 ItemElementName;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public string newName;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlArrayItemAttribute("member", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
            public XRouteGroupMember[] members;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlAttributeAttribute()]
            public System.UInt64 sequence;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool sequenceSpecified;
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
            public enum ItemChoiceType25 
        {
    
            /// <remarks/>
            name,
    
            /// <remarks/>
            uuid,
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
            [System.Xml.Serialization.XmlRootAttribute("getRouteGroupResponse", Namespace="http://www.cisco.com/AXL/API/1.0", IsNullable=false)]
            public class GetRouteGroupRes 
        {
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public GetRouteGroupResReturn @return;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlAttributeAttribute()]
            public System.UInt64 sequence;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool sequenceSpecified;
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
            public class GetRouteGroupResReturn 
        {
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public XRouteGroup routeGroup;
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
            [System.Xml.Serialization.XmlRootAttribute("addRouteList", Namespace="http://www.cisco.com/AXL/API/1.0", IsNullable=false)]
            public class AddRouteListReq 
        {
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public XRouteList routeList;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlAttributeAttribute()]
            public System.UInt64 sequence;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool sequenceSpecified;
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
            [System.Xml.Serialization.XmlRootAttribute("updateRouteList", Namespace="http://www.cisco.com/AXL/API/1.0", IsNullable=false)]
            public class UpdateRouteListReq 
        {
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute("name", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlElementAttribute("uuid", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")]
            public string Item;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public ItemChoiceType58 ItemElementName;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public string newName;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public string description;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute("callManagerGroupName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlElementAttribute("callManagerGroup", typeof(XCallManagerGroup), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public object Item1;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public bool routeListEnabled;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool routeListEnabledSpecified;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlArrayItemAttribute("member", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
            public XRouteListMember[] members;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlAttributeAttribute()]
            public System.UInt64 sequence;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool sequenceSpecified;
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
            public enum ItemChoiceType58 
        {
    
            /// <remarks/>
            name,
    
            /// <remarks/>
            uuid,
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
            [System.Xml.Serialization.XmlRootAttribute("getRouteListResponse", Namespace="http://www.cisco.com/AXL/API/1.0", IsNullable=false)]
            public class GetRouteListRes 
        {
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public GetRouteListResReturn @return;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlAttributeAttribute()]
            public System.UInt64 sequence;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool sequenceSpecified;
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
            public class GetRouteListResReturn 
        {
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public XRouteList routeList;
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
            [System.Xml.Serialization.XmlRootAttribute("addHuntList", Namespace="http://www.cisco.com/AXL/API/1.0", IsNullable=false)]
            public class AddHuntListReq 
        {
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public XHuntList huntList;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlAttributeAttribute()]
            public System.UInt64 sequence;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool sequenceSpecified;
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
            [System.Xml.Serialization.XmlRootAttribute("updateHuntList", Namespace="http://www.cisco.com/AXL/API/1.0", IsNullable=false)]
            public class UpdateHuntListReq 
        {
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute("name", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlElementAttribute("uuid", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")]
            public string Item;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public ItemChoiceType73 ItemElementName;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public string newName;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public string description;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute("callManagerGroupName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlElementAttribute("callManagerGroup", typeof(XCallManagerGroup), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public object Item1;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public bool routeListEnabled;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool routeListEnabledSpecified;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlArrayItemAttribute("member", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
            public XHuntListMember[] members;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlAttributeAttribute()]
            public System.UInt64 sequence;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool sequenceSpecified;
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
            public enum ItemChoiceType73 
        {
    
            /// <remarks/>
            name,
    
            /// <remarks/>
            uuid,
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
            [System.Xml.Serialization.XmlRootAttribute("getHuntListResponse", Namespace="http://www.cisco.com/AXL/API/1.0", IsNullable=false)]
            public class GetHuntListRes 
        {
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public GetHuntListResReturn @return;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlAttributeAttribute()]
            public System.UInt64 sequence;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool sequenceSpecified;
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
            public class GetHuntListResReturn 
        {
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public XHuntList huntList;
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
            [System.Xml.Serialization.XmlRootAttribute("addCTIRoutePoint", Namespace="http://www.cisco.com/AXL/API/1.0", IsNullable=false)]
            public class AddCTIRoutePointReq 
        {
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public XCTIRoutePoint routePoint;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlAttributeAttribute()]
            public System.UInt64 sequence;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool sequenceSpecified;
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
            [System.Xml.Serialization.XmlRootAttribute("updateCTIRoutePoint", Namespace="http://www.cisco.com/AXL/API/1.0", IsNullable=false)]
            public class UpdateCTIRoutePointReq 
        {
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute("name", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="Name")]
            [System.Xml.Serialization.XmlElementAttribute("uuid", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")]
            public string Item;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public ItemChoiceType48 ItemElementName;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="Name")]
            public string newName;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public string description;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute("callingSearchSpaceId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlElementAttribute("callingSearchSpaceName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="Name")]
            [System.Xml.Serialization.XmlChoiceIdentifierAttribute("Item1ElementName")]
            public string Item1;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public Item1ChoiceType10 Item1ElementName;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute("devicePoolName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="Name")]
            [System.Xml.Serialization.XmlElementAttribute("devicePoolId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlChoiceIdentifierAttribute("Item2ElementName")]
            public string Item2;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public Item2ChoiceType7 Item2ElementName;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute("locationName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlElementAttribute("locationId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlChoiceIdentifierAttribute("Item3ElementName")]
            public string Item3;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public Item3ChoiceType6 Item3ElementName;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public UpdateCTIRoutePointReqLines lines;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlAttributeAttribute()]
            public System.UInt64 sequence;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool sequenceSpecified;
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
            public enum ItemChoiceType48 
        {
    
            /// <remarks/>
            name,
    
            /// <remarks/>
            uuid,
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
            public enum Item1ChoiceType10 
        {
    
            /// <remarks/>
            callingSearchSpaceId,
    
            /// <remarks/>
            callingSearchSpaceName,
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
            public enum Item2ChoiceType7 
        {
    
            /// <remarks/>
            devicePoolName,
    
            /// <remarks/>
            devicePoolId,
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
            public enum Item3ChoiceType6 
        {
    
            /// <remarks/>
            locationName,
    
            /// <remarks/>
            locationId,
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
            public class UpdateCTIRoutePointReqLines 
        {
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute("lineIdentifier", typeof(XNumplanIdentifier), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlElementAttribute("line", typeof(XLine), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public object[] Items;
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
            [System.Xml.Serialization.XmlRootAttribute("getCTIRoutePointResponse", Namespace="http://www.cisco.com/AXL/API/1.0", IsNullable=false)]
            public class GetCTIRoutePointRes 
        {
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public GetCTIRoutePointResReturn @return;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlAttributeAttribute()]
            public System.UInt64 sequence;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool sequenceSpecified;
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
            public class GetCTIRoutePointResReturn 
        {
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public XCTIRoutePoint routePoint;
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
            [System.Xml.Serialization.XmlRootAttribute("addDialPlan", Namespace="http://www.cisco.com/AXL/API/1.0", IsNullable=false)]
            public class AddDialPlanReq 
        {
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public XDialPlan dialPlan;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlAttributeAttribute()]
            public System.UInt64 sequence;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool sequenceSpecified;
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
            [System.Xml.Serialization.XmlRootAttribute("updateDialPlan", Namespace="http://www.cisco.com/AXL/API/1.0", IsNullable=false)]
            public class UpdateDialPlanReq 
        {
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute("name", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlElementAttribute("uuid", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")]
            public string Item;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public ItemChoiceType35 ItemElementName;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public string newName;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public string description;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlAttributeAttribute()]
            public System.UInt64 sequence;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool sequenceSpecified;
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
            public enum ItemChoiceType35 
        {
    
            /// <remarks/>
            name,
    
            /// <remarks/>
            uuid,
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
            [System.Xml.Serialization.XmlRootAttribute("getDialPlanResponse", Namespace="http://www.cisco.com/AXL/API/1.0", IsNullable=false)]
            public class GetDialPlanRes 
        {
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public GetDialPlanResReturn @return;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlAttributeAttribute()]
            public System.UInt64 sequence;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool sequenceSpecified;
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
            public class GetDialPlanResReturn 
        {
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public XDialPlan dialPlan;
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
            [System.Xml.Serialization.XmlRootAttribute("addDialPlanTag", Namespace="http://www.cisco.com/AXL/API/1.0", IsNullable=false)]
            public class AddDialPlanTagReq 
        {
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public XDialPlanTag dialPlanTag;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlAttributeAttribute()]
            public System.UInt64 sequence;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool sequenceSpecified;
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
            [System.Xml.Serialization.XmlRootAttribute("updateDialPlanTag", Namespace="http://www.cisco.com/AXL/API/1.0", IsNullable=false)]
            public class UpdateDialPlanTagReq 
        {
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute("name", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlElementAttribute("uuid", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")]
            public string Item;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public ItemChoiceType79 ItemElementName;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="Name")]
            public string newName;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute("dialPlanName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlElementAttribute("dialPlan", typeof(XDialPlan), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public object Item1;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public XOperator @operator;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool operatorSpecified;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public bool suppressFromRouteFilter;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool suppressFromRouteFilterSpecified;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlAttributeAttribute()]
            public System.UInt64 sequence;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool sequenceSpecified;
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
            public enum ItemChoiceType79 
        {
    
            /// <remarks/>
            name,
    
            /// <remarks/>
            uuid,
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
            [System.Xml.Serialization.XmlRootAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IsNullable=false)]
            public class getDialPlanTag 
        {
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute("name", typeof(object), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlElementAttribute("dialPlanUuid", typeof(object), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlElementAttribute("uuid", typeof(object), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlElementAttribute("dialPlanName", typeof(object), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")]
            public object Item;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public ItemChoiceType90 ItemElementName;
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
            public enum ItemChoiceType90 
        {
    
            /// <remarks/>
            name,
    
            /// <remarks/>
            dialPlanUuid,
    
            /// <remarks/>
            uuid,
    
            /// <remarks/>
            dialPlanName,
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
            [System.Xml.Serialization.XmlRootAttribute("getDialPlanTagResponse", Namespace="http://www.cisco.com/AXL/API/1.0", IsNullable=false)]
            public class GetDialPlanTagRes 
        {
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public GetDialPlanTagResReturn @return;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlAttributeAttribute()]
            public System.UInt64 sequence;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool sequenceSpecified;
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
            public class GetDialPlanTagResReturn 
        {
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public XDialPlanTag dialPlanTag;
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
            [System.Xml.Serialization.XmlRootAttribute("addCallPark", Namespace="http://www.cisco.com/AXL/API/1.0", IsNullable=false)]
            public class AddCallParkReq 
        {
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public XNPCallPark callPark;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlAttributeAttribute()]
            public System.UInt64 sequence;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool sequenceSpecified;
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
            [System.Xml.Serialization.XmlRootAttribute("updateCallPark", Namespace="http://www.cisco.com/AXL/API/1.0", IsNullable=false)]
            public class UpdateCallParkReq 
        {
            // The commented out section below is .NET choking on too much sequence/choice XSD specifications.
            // The following is valid, however, it does not force correct usage
            //(i.e, if you specify routePartitionId, don't specify routePartitionName)
            public string uuid;

            public string pattern;

            public string routePartitionId;

            public string routePartitionName;

            public string routeFilterId;

            public string routeFilterName;

            //        /// <remarks/>
            //        [System.Xml.Serialization.XmlElementAttribute("routePartitionId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            //        [System.Xml.Serialization.XmlElementAttribute("routePartitionName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            //        [System.Xml.Serialization.XmlElementAttribute("uuid", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            //        [System.Xml.Serialization.XmlElementAttribute("pattern", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            //        [System.Xml.Serialization.XmlElementAttribute("routeFilterId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            //        [System.Xml.Serialization.XmlElementAttribute("routeFilterName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            //        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")]
            //        public string Item;
            //    
            //        /// <remarks/>
            //        [System.Xml.Serialization.XmlIgnoreAttribute()]
            //        public ItemChoiceType85 ItemElementName;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public string newPattern;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public string description;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute("newRoutePartitionId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlElementAttribute("newRoutePartitionName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlChoiceIdentifierAttribute("Item1ElementName")]
            public string Item1;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public Item1ChoiceType18 Item1ElementName;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute("callManagerName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlElementAttribute("callManagerId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlChoiceIdentifierAttribute("Item2ElementName")]
            public string Item2;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public Item2ChoiceType14 Item2ElementName;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlAttributeAttribute()]
            public System.UInt64 sequence;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool sequenceSpecified;
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
            public enum ItemChoiceType85 
        {
    
            /// <remarks/>
            routePartitionId,
    
            /// <remarks/>
            routePartitionName,
    
            /// <remarks/>
            uuid,
    
            /// <remarks/>
            pattern,
    
            /// <remarks/>
            routeFilterId,
    
            /// <remarks/>
            routeFilterName,
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
            public enum Item1ChoiceType18 
        {
    
            /// <remarks/>
            newRoutePartitionId,
    
            /// <remarks/>
            newRoutePartitionName,
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
            public enum Item2ChoiceType14 
        {
    
            /// <remarks/>
            callManagerName,
    
            /// <remarks/>
            callManagerId,
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
            [System.Xml.Serialization.XmlRootAttribute("getCallPark", Namespace="http://www.cisco.com/AXL/API/1.0", IsNullable=false)]
            public class GetCallParkReq 
        {
            // The commented out section below is .NET choking on too much sequence/choice XSD specifications.
            // The following is valid, however, it does not force correct usage
            //(i.e, if you specify routePartitionId, don't specify routePartitionName)
            public string uuid;

            public string pattern;

            public string routePartitionId;

            public string routePartitionName;

            public string routeFilterId;

            public string routeFilterName;

            //        /// <remarks/>
            //        [System.Xml.Serialization.XmlElementAttribute("routePartitionId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            //        [System.Xml.Serialization.XmlElementAttribute("routePartitionName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            //        [System.Xml.Serialization.XmlElementAttribute("uuid", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            //        [System.Xml.Serialization.XmlElementAttribute("pattern", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            //        [System.Xml.Serialization.XmlElementAttribute("routeFilterId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            //        [System.Xml.Serialization.XmlElementAttribute("routeFilterName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            //        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")]
            //        public string Item;
            //    
            //        /// <remarks/>
            //        [System.Xml.Serialization.XmlIgnoreAttribute()]
            //        public ItemChoiceType44 ItemElementName;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlAttributeAttribute()]
            public System.UInt64 sequence;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool sequenceSpecified;
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
            public enum ItemChoiceType44 
        {
    
            /// <remarks/>
            routePartitionId,
    
            /// <remarks/>
            routePartitionName,
    
            /// <remarks/>
            uuid,
    
            /// <remarks/>
            pattern,
    
            /// <remarks/>
            routeFilterId,
    
            /// <remarks/>
            routeFilterName,
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
            [System.Xml.Serialization.XmlRootAttribute("getCallParkResponse", Namespace="http://www.cisco.com/AXL/API/1.0", IsNullable=false)]
            public class GetCallParkRes 
        {
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public GetCallParkResReturn @return;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlAttributeAttribute()]
            public System.UInt64 sequence;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool sequenceSpecified;
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
            public class GetCallParkResReturn 
        {
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public XNPCallPark callPark;
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
            [System.Xml.Serialization.XmlRootAttribute("removeCallPark", Namespace="http://www.cisco.com/AXL/API/1.0", IsNullable=false)]
            public class RemoveCallParkReq 
        {
            // The commented out section below is .NET choking on too much sequence/choice XSD specifications.
            // The following is valid, however, it does not force correct usage
            //(i.e, if you specify routePartitionId, don't specify routePartitionName)
            public string uuid;

            public string pattern;

            public string routePartitionId;

            public string routePartitionName;

            public string routeFilterId;

            public string routeFilterName;

            //        /// <remarks/>
            //        [System.Xml.Serialization.XmlElementAttribute("routePartitionId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            //        [System.Xml.Serialization.XmlElementAttribute("routePartitionName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            //        [System.Xml.Serialization.XmlElementAttribute("uuid", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            //        [System.Xml.Serialization.XmlElementAttribute("pattern", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            //        [System.Xml.Serialization.XmlElementAttribute("routeFilterId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            //        [System.Xml.Serialization.XmlElementAttribute("routeFilterName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            //        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")]
            //        public string Item;
            //    
            //        /// <remarks/>
            //        [System.Xml.Serialization.XmlIgnoreAttribute()]
            //        public ItemChoiceType33 ItemElementName;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlAttributeAttribute()]
            public System.UInt64 sequence;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool sequenceSpecified;
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
            public enum ItemChoiceType33 
        {
    
            /// <remarks/>
            routePartitionId,
    
            /// <remarks/>
            routePartitionName,
    
            /// <remarks/>
            uuid,
    
            /// <remarks/>
            pattern,
    
            /// <remarks/>
            routeFilterId,
    
            /// <remarks/>
            routeFilterName,
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
            [System.Xml.Serialization.XmlRootAttribute("addCallPickupGroup", Namespace="http://www.cisco.com/AXL/API/1.0", IsNullable=false)]
            public class AddCallPickupGroupReq 
        {
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public XNPCallPickupGroup callPickup;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlAttributeAttribute()]
            public System.UInt64 sequence;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool sequenceSpecified;
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
            [System.Xml.Serialization.XmlRootAttribute("updateCallPickupGroup", Namespace="http://www.cisco.com/AXL/API/1.0", IsNullable=false)]
            public class UpdateCallPickupGroupReq 
        {
            // The commented out section below is .NET choking on too much sequence/choice XSD specifications.
            // The following is valid, however, it does not force correct usage
            //(i.e, if you specify routePartitionId, don't specify routePartitionName)
            public string uuid;

            public string pattern;

            public string routePartitionId;

            public string routePartitionName;

            public string routeFilterId;

            public string routeFilterName;

            //        /// <remarks/>
            //        [System.Xml.Serialization.XmlElementAttribute("routePartitionId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            //        [System.Xml.Serialization.XmlElementAttribute("name", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            //        [System.Xml.Serialization.XmlElementAttribute("routePartitionName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            //        [System.Xml.Serialization.XmlElementAttribute("uuid", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            //        [System.Xml.Serialization.XmlElementAttribute("pattern", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            //        [System.Xml.Serialization.XmlElementAttribute("routeFilterId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            //        [System.Xml.Serialization.XmlElementAttribute("routeFilterName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            //        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")]
            //        public string Item;
            //    
            //        /// <remarks/>
            //        [System.Xml.Serialization.XmlIgnoreAttribute()]
            //        public ItemChoiceType86 ItemElementName;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public string newPattern;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public string description;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute("newRoutePartitionId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlElementAttribute("newRoutePartitionName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlChoiceIdentifierAttribute("Item1ElementName")]
            public string Item1;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public Item1ChoiceType19 Item1ElementName;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public string newName;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlArrayItemAttribute("member", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
            public XPickupGroupMember[] members;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlAttributeAttribute()]
            public System.UInt64 sequence;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool sequenceSpecified;
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
            public enum ItemChoiceType86 
        {
    
            /// <remarks/>
            routePartitionId,
    
            /// <remarks/>
            name,
    
            /// <remarks/>
            routePartitionName,
    
            /// <remarks/>
            uuid,
    
            /// <remarks/>
            pattern,
    
            /// <remarks/>
            routeFilterId,
    
            /// <remarks/>
            routeFilterName,
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
            public enum Item1ChoiceType19 
        {
    
            /// <remarks/>
            newRoutePartitionId,
    
            /// <remarks/>
            newRoutePartitionName,
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
            [System.Xml.Serialization.XmlRootAttribute("getCallPickupGroup", Namespace="http://www.cisco.com/AXL/API/1.0", IsNullable=false)]
            public class GetCallPickupGroupReq 
        {
            // The commented out section below is .NET choking on too much sequence/choice XSD specifications.
            // The following is valid, however, it does not force correct usage
            //(i.e, if you specify routePartitionId, don't specify routePartitionName)
            public string uuid;

            public string pattern;

            public string routePartitionId;

            public string routePartitionName;

            public string routeFilterId;

            public string routeFilterName;

            //        /// <remarks/>
            //        [System.Xml.Serialization.XmlElementAttribute("routePartitionId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            //        [System.Xml.Serialization.XmlElementAttribute("name", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            //        [System.Xml.Serialization.XmlElementAttribute("routePartitionName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            //        [System.Xml.Serialization.XmlElementAttribute("uuid", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            //        [System.Xml.Serialization.XmlElementAttribute("pattern", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            //        [System.Xml.Serialization.XmlElementAttribute("routeFilterId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            //        [System.Xml.Serialization.XmlElementAttribute("routeFilterName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            //        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")]
            //        public string Item;
            //    
            //        /// <remarks/>
            //        [System.Xml.Serialization.XmlIgnoreAttribute()]
            //        public ItemChoiceType57 ItemElementName;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlAttributeAttribute()]
            public System.UInt64 sequence;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool sequenceSpecified;
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
            public enum ItemChoiceType57 
        {
    
            /// <remarks/>
            routePartitionId,
    
            /// <remarks/>
            name,
    
            /// <remarks/>
            routePartitionName,
    
            /// <remarks/>
            uuid,
    
            /// <remarks/>
            pattern,
    
            /// <remarks/>
            routeFilterId,
    
            /// <remarks/>
            routeFilterName,
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
            [System.Xml.Serialization.XmlRootAttribute("getCallPickupGroupResponse", Namespace="http://www.cisco.com/AXL/API/1.0", IsNullable=false)]
            public class GetCallPickupGroupRes 
        {
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public GetCallPickupGroupResReturn @return;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlAttributeAttribute()]
            public System.UInt64 sequence;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool sequenceSpecified;
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
            public class GetCallPickupGroupResReturn 
        {
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public XNPCallPickupGroup callPickup;
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
            [System.Xml.Serialization.XmlRootAttribute("removeCallPickupGroup", Namespace="http://www.cisco.com/AXL/API/1.0", IsNullable=false)]
            public class RemoveCallPickupGroupReq 
        {
            // The commented out section below is .NET choking on too much sequence/choice XSD specifications.
            // The following is valid, however, it does not force correct usage
            //(i.e, if you specify routePartitionId, don't specify routePartitionName)
            public string uuid;

            public string pattern;

            public string routePartitionId;

            public string routePartitionName;

            public string routeFilterId;

            public string routeFilterName;

            //        /// <remarks/>
            //        [System.Xml.Serialization.XmlElementAttribute("routePartitionId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            //        [System.Xml.Serialization.XmlElementAttribute("name", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            //        [System.Xml.Serialization.XmlElementAttribute("routePartitionName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            //        [System.Xml.Serialization.XmlElementAttribute("uuid", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            //        [System.Xml.Serialization.XmlElementAttribute("pattern", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            //        [System.Xml.Serialization.XmlElementAttribute("routeFilterId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            //        [System.Xml.Serialization.XmlElementAttribute("routeFilterName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            //        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")]
            //        public string Item;
            //    
            //        /// <remarks/>
            //        [System.Xml.Serialization.XmlIgnoreAttribute()]
            //        public ItemChoiceType72 ItemElementName;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlAttributeAttribute()]
            public System.UInt64 sequence;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool sequenceSpecified;
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
            public enum ItemChoiceType72 
        {
    
            /// <remarks/>
            routePartitionId,
    
            /// <remarks/>
            name,
    
            /// <remarks/>
            routePartitionName,
    
            /// <remarks/>
            uuid,
    
            /// <remarks/>
            pattern,
    
            /// <remarks/>
            routeFilterId,
    
            /// <remarks/>
            routeFilterName,
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
            [System.Xml.Serialization.XmlRootAttribute("addDDI", Namespace="http://www.cisco.com/AXL/API/1.0", IsNullable=false)]
            public class AddDDIReq 
        {
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public XDigitDiscardInstruction ddi;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlAttributeAttribute()]
            public System.UInt64 sequence;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool sequenceSpecified;
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
            [System.Xml.Serialization.XmlRootAttribute("updateDDI", Namespace="http://www.cisco.com/AXL/API/1.0", IsNullable=false)]
            public class UpdateDDIReq 
        {
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute("name", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlElementAttribute("uuid", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")]
            public string Item;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public ItemChoiceType87 ItemElementName;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="Name")]
            public string newName;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute("dialPlanName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlElementAttribute("dialPlanId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlChoiceIdentifierAttribute("Item1ElementName")]
            public string Item1;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public Item1ChoiceType20 Item1ElementName;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlArrayItemAttribute("member", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
            public XDigitDiscardInstructionMember[] members;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlAttributeAttribute()]
            public System.UInt64 sequence;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool sequenceSpecified;
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
            public enum ItemChoiceType87 
        {
    
            /// <remarks/>
            name,
    
            /// <remarks/>
            uuid,
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
            public enum Item1ChoiceType20 
        {
    
            /// <remarks/>
            dialPlanName,
    
            /// <remarks/>
            dialPlanId,
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
            [System.Xml.Serialization.XmlRootAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IsNullable=false)]
            public class getDDI 
        {
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute("name", typeof(object), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlElementAttribute("dialPlanUuid", typeof(object), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlElementAttribute("uuid", typeof(object), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlElementAttribute("dialPlanName", typeof(object), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")]
            public object Item;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public ItemChoiceType91 ItemElementName;
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
            public enum ItemChoiceType91 
        {
    
            /// <remarks/>
            name,
    
            /// <remarks/>
            dialPlanUuid,
    
            /// <remarks/>
            uuid,
    
            /// <remarks/>
            dialPlanName,
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
            [System.Xml.Serialization.XmlRootAttribute("getDDIResponse", Namespace="http://www.cisco.com/AXL/API/1.0", IsNullable=false)]
            public class GetDDIRes 
        {
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public GetDDIResReturn @return;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlAttributeAttribute()]
            public System.UInt64 sequence;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool sequenceSpecified;
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
            public class GetDDIResReturn 
        {
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public XDigitDiscardInstruction ddi;
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
            [System.Xml.Serialization.XmlRootAttribute("createAutogeneratedProfile", Namespace="http://www.cisco.com/AXL/API/1.0", IsNullable=false)]
            public class CreateAutogeneratedProfileReq 
        {
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute("phoneId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlElementAttribute("phoneName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")]
            public string Item;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public ItemChoiceType51 ItemElementName;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlAttributeAttribute()]
            public System.UInt64 sequence;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool sequenceSpecified;
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
            public enum ItemChoiceType51 
        {
    
            /// <remarks/>
            phoneId,
    
            /// <remarks/>
            phoneName,
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
            [System.Xml.Serialization.XmlRootAttribute("listPhoneByName", Namespace="http://www.cisco.com/AXL/API/1.0", IsNullable=false)]
            public class ListPhoneByNameReq 
        {
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public string searchString;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlAttributeAttribute()]
            public System.UInt64 sequence;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool sequenceSpecified;
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
            [System.Xml.Serialization.XmlRootAttribute("listPhoneByNameResponse", Namespace="http://www.cisco.com/AXL/API/1.0", IsNullable=false)]
            public class ListPhoneByNameRes 
        {
    
            /// <remarks/>
            [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlArrayItemAttribute("phone", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
            public ListPhoneByNameResPhone[] @return;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlAttributeAttribute()]
            public System.UInt64 sequence;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool sequenceSpecified;
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
            public class ListPhoneByNameResPhone 
        {
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public string name;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public XProduct product;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public XModel model;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlAttributeAttribute()]
            public string uuid;
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
            [System.Xml.Serialization.XmlRootAttribute("listPhoneByDescription", Namespace="http://www.cisco.com/AXL/API/1.0", IsNullable=false)]
            public class ListPhoneByDescriptionReq 
        {
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public string searchString;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlAttributeAttribute()]
            public System.UInt64 sequence;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool sequenceSpecified;
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
            [System.Xml.Serialization.XmlRootAttribute("listPhoneByDescriptionResponse", Namespace="http://www.cisco.com/AXL/API/1.0", IsNullable=false)]
            public class ListPhoneByDescriptionRes 
        {
    
            /// <remarks/>
            [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlArrayItemAttribute("phone", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
            public ListPhoneByDescriptionResPhone[] @return;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlAttributeAttribute()]
            public System.UInt64 sequence;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool sequenceSpecified;
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
            public class ListPhoneByDescriptionResPhone 
        {
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public string name;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public XProduct product;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public XModel model;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlAttributeAttribute()]
            public string uuid;
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
            [System.Xml.Serialization.XmlRootAttribute("listUserByName", Namespace="http://www.cisco.com/AXL/API/1.0", IsNullable=false)]
            public class ListUserByNameReq 
        {
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public string firstname;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public string lastname;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public int searchLimit;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlAttributeAttribute()]
            public System.UInt64 sequence;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool sequenceSpecified;
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
            [System.Xml.Serialization.XmlRootAttribute("listUserByNameResponse", Namespace="http://www.cisco.com/AXL/API/1.0", IsNullable=false)]
            public class ListUserByNameRes 
        {
    
            /// <remarks/>
            [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlArrayItemAttribute("user", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
            public ListUserByNameResUser[] @return;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlAttributeAttribute()]
            public System.UInt64 sequence;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool sequenceSpecified;
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
            public class ListUserByNameResUser 
        {
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public string firstname;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public string lastname;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlAttributeAttribute()]
            public string ldapRN;
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
            [System.Xml.Serialization.XmlRootAttribute("listRoutePlanByType", Namespace="http://www.cisco.com/AXL/API/1.0", IsNullable=false)]
            public class ListRoutePlanByTypeReq 
        {
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public XPatternUsage usage;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlAttributeAttribute()]
            public System.UInt64 sequence;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool sequenceSpecified;
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
            [System.Xml.Serialization.XmlRootAttribute("listRoutePlanByTypeResponse", Namespace="http://www.cisco.com/AXL/API/1.0", IsNullable=false)]
            public class ListRoutePlanByTypeRes 
        {
    
            /// <remarks/>
            [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlArrayItemAttribute("routePlan", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
            public ListRoutePlanByTypeResRoutePlan[] @return;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlAttributeAttribute()]
            public System.UInt64 sequence;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool sequenceSpecified;
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
            public class ListRoutePlanByTypeResRoutePlan 
        {
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public string directoryNumber;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public string routePartitionName;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public XPatternUsage usage;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public string routeFilterName;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlAttributeAttribute()]
            public string uuid;
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
            [System.Xml.Serialization.XmlRootAttribute("getNumDevices", Namespace="http://www.cisco.com/AXL/API/1.0", IsNullable=false)]
            public class GetNumDevicesReq 
        {
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public XClass @class;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlAttributeAttribute()]
            public System.UInt64 sequence;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool sequenceSpecified;
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
            [System.Xml.Serialization.XmlRootAttribute("getNumDevicesResponse", Namespace="http://www.cisco.com/AXL/API/1.0", IsNullable=false)]
            public class GetNumDevicesRes 
        {
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="nonNegativeInteger")]
            public string @return;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlAttributeAttribute()]
            public System.UInt64 sequence;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool sequenceSpecified;
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
            [System.Xml.Serialization.XmlRootAttribute("listServiceParameters", Namespace="http://www.cisco.com/AXL/API/1.0", IsNullable=false)]
            public class ListServiceParametersReq 
        {
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public string nodeName;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public XService serviceType;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlAttributeAttribute()]
            public System.UInt64 sequence;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool sequenceSpecified;
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
            public enum XService 
        {
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("Cisco CallManager")]
            CiscoCallManager,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("Cisco Tftp")]
            CiscoTftp,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("Cisco Messaging Interface")]
            CiscoMessagingInterface,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("Cisco IP Voice Media Streaming App")]
            CiscoIPVoiceMediaStreamingApp,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("Cisco CTI Manager")]
            CiscoCTIManager,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("Cisco Telephony Call Dispatcher")]
            CiscoTelephonyCallDispatcher,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("Cisco MOH Audio Translator")]
            CiscoMOHAudioTranslator,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("Cisco RIS Data Collector")]
            CiscoRISDataCollector,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("Cisco Extension Mobility")]
            CiscoExtensionMobility,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("Cisco Database Layer Monitor")]
            CiscoDatabaseLayerMonitor,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("Cisco CDR Insert")]
            CiscoCDRInsert,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("Enterprise Wide")]
            EnterpriseWide,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("Cisco IP Manager Assistant")]
            CiscoIPManagerAssistant,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("Cisco Extended Functions")]
            CiscoExtendedFunctions,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("Cisco Serviceability Reporter")]
            CiscoServiceabilityReporter,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("Cisco CTL Provider")]
            CiscoCTLProvider,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("Cisco WebDialer")]
            CiscoWebDialer,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("Cisco Dialed Number Analyzer")]
            CiscoDialedNumberAnalyzer,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("Cisco Certificate Authority Proxy Function")]
            CiscoCertificateAuthorityProxyFunction,
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
            [System.Xml.Serialization.XmlRootAttribute("listServiceParametersResponse", Namespace="http://www.cisco.com/AXL/API/1.0", IsNullable=false)]
            public class ListServiceParametersRes 
        {
    
            /// <remarks/>
            [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlArrayItemAttribute("param", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
            public ListServiceParametersResParam[] @return;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlAttributeAttribute()]
            public System.UInt64 sequence;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool sequenceSpecified;
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
            public class ListServiceParametersResParam 
        {
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public string name;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public string value;
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
            [System.Xml.Serialization.XmlRootAttribute("listCSSByName", Namespace="http://www.cisco.com/AXL/API/1.0", IsNullable=false)]
            public class ListCSSByNameReq 
        {
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public string searchString;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlAttributeAttribute()]
            public System.UInt64 sequence;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool sequenceSpecified;
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
            [System.Xml.Serialization.XmlRootAttribute("listCSSByNameResponse", Namespace="http://www.cisco.com/AXL/API/1.0", IsNullable=false)]
            public class ListCSSByNameRes 
        {
    
            /// <remarks/>
            [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlArrayItemAttribute("callingSearchSpace", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
            public XCallingSearchSpace[] @return;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlAttributeAttribute()]
            public System.UInt64 sequence;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool sequenceSpecified;
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
            [System.Xml.Serialization.XmlRootAttribute("addDevicePool", Namespace="http://www.cisco.com/AXL/API/1.0", IsNullable=false)]
            public class AddDevicePoolReq 
        {
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public XDevicePool devicePool;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlAttributeAttribute()]
            public System.UInt64 sequence;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool sequenceSpecified;
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
            [System.Xml.Serialization.XmlRootAttribute("updateDevicePool", Namespace="http://www.cisco.com/AXL/API/1.0", IsNullable=false)]
            public class UpdateDevicePoolReq 
        {
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute("name", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlElementAttribute("uuid", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")]
            public string Item;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public ItemChoiceType77 ItemElementName;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public string newName;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute("autoSearchSpaceName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
            [System.Xml.Serialization.XmlElementAttribute("autoSearchSpaceId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
            [System.Xml.Serialization.XmlChoiceIdentifierAttribute("Item1ElementName")]
            public string Item1;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public Item1ChoiceType17 Item1ElementName;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute("dateTimeSettingId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlElementAttribute("dateTimeSettingName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlChoiceIdentifierAttribute("Item2ElementName")]
            public string Item2;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public Item2ChoiceType13 Item2ElementName;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute("callManagerGroupId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlElementAttribute("callManagerGroupName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlChoiceIdentifierAttribute("Item3ElementName")]
            public string Item3;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public Item3ChoiceType12 Item3ElementName;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute("mediaResourceListId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
            [System.Xml.Serialization.XmlElementAttribute("mediaResourceListName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
            [System.Xml.Serialization.XmlChoiceIdentifierAttribute("Item4ElementName")]
            public string Item4;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public Item4ChoiceType11 Item4ElementName;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute("regionId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlElementAttribute("regionName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlChoiceIdentifierAttribute("Item5ElementName")]
            public string Item5;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public Item5ChoiceType9 Item5ElementName;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute("softkeyTemplateName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlElementAttribute("softkeyTemplateId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlChoiceIdentifierAttribute("Item6ElementName")]
            public string Item6;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public Item6ChoiceType7 Item6ElementName;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public XCountry networkLocale;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool networkLocaleSpecified;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public XUserLocale userLocale;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool userLocaleSpecified;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="integer")]
            public string networkHoldMOHAudioSourceId;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="integer")]
            public string userHoldMOHAudioSourceId;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute("srstName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlElementAttribute("srstInfoId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlChoiceIdentifierAttribute("Item7ElementName")]
            public string Item7;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public Item7ChoiceType1 Item7ElementName;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public int mlppDomainId;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool mlppDomainIdSpecified;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public XStatus mlppIndicationStatus;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool mlppIndicationStatusSpecified;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public XPreemption preemption;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool preemptionSpecified;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public int connectionMonitorDuration;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool connectionMonitorDurationSpecified;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlAttributeAttribute()]
            public System.UInt64 sequence;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool sequenceSpecified;
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
            public enum ItemChoiceType77 
        {
    
            /// <remarks/>
            name,
    
            /// <remarks/>
            uuid,
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
            public enum Item1ChoiceType17 
        {
    
            /// <remarks/>
            autoSearchSpaceName,
    
            /// <remarks/>
            autoSearchSpaceId,
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
            public enum Item2ChoiceType13 
        {
    
            /// <remarks/>
            dateTimeSettingId,
    
            /// <remarks/>
            dateTimeSettingName,
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
            public enum Item3ChoiceType12 
        {
    
            /// <remarks/>
            callManagerGroupId,
    
            /// <remarks/>
            callManagerGroupName,
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
            public enum Item4ChoiceType11 
        {
    
            /// <remarks/>
            mediaResourceListId,
    
            /// <remarks/>
            mediaResourceListName,
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
            public enum Item5ChoiceType9 
        {
    
            /// <remarks/>
            regionId,
    
            /// <remarks/>
            regionName,
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
            public enum Item6ChoiceType7 
        {
    
            /// <remarks/>
            softkeyTemplateName,
    
            /// <remarks/>
            softkeyTemplateId,
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
            public enum Item7ChoiceType1 
        {
    
            /// <remarks/>
            srstName,
    
            /// <remarks/>
            srstInfoId,
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
            [System.Xml.Serialization.XmlRootAttribute("getDevicePoolResponse", Namespace="http://www.cisco.com/AXL/API/1.0", IsNullable=false)]
            public class GetDevicePoolRes 
        {
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public GetDevicePoolResReturn @return;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlAttributeAttribute()]
            public System.UInt64 sequence;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool sequenceSpecified;
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
            public class GetDevicePoolResReturn 
        {
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public XDevicePool devicePool;
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
            [System.Xml.Serialization.XmlRootAttribute("addCallManagerGroup", Namespace="http://www.cisco.com/AXL/API/1.0", IsNullable=false)]
            public class AddCallManagerGroupReq 
        {
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public XCallManagerGroup callManagerGroup;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlAttributeAttribute()]
            public System.UInt64 sequence;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool sequenceSpecified;
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
            [System.Xml.Serialization.XmlRootAttribute("updateCallManagerGroup", Namespace="http://www.cisco.com/AXL/API/1.0", IsNullable=false)]
            public class UpdateCallManagerGroupReq 
        {
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute("name", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlElementAttribute("uuid", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")]
            public string Item;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public ItemChoiceType60 ItemElementName;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public string newName;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public bool tftpDefault;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool tftpDefaultSpecified;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlArrayItemAttribute("member", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
            public XCallManagerMember[] members;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlAttributeAttribute()]
            public System.UInt64 sequence;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool sequenceSpecified;
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
            public enum ItemChoiceType60 
        {
    
            /// <remarks/>
            name,
    
            /// <remarks/>
            uuid,
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
            [System.Xml.Serialization.XmlRootAttribute("getCallManagerGroupResponse", Namespace="http://www.cisco.com/AXL/API/1.0", IsNullable=false)]
            public class GetCallManagerGroupRes 
        {
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public GetCallManagerGroupResReturn @return;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlAttributeAttribute()]
            public System.UInt64 sequence;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool sequenceSpecified;
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
            public class GetCallManagerGroupResReturn 
        {
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public XCallManagerGroup callManagerGroup;
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
            [System.Xml.Serialization.XmlRootAttribute("addVoiceMailPort", Namespace="http://www.cisco.com/AXL/API/1.0", IsNullable=false)]
            public class AddVoiceMailPortReq 
        {
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public XVoiceMailPort voiceMailPort;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlAttributeAttribute()]
            public System.UInt64 sequence;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool sequenceSpecified;
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
            [System.Xml.Serialization.XmlRootAttribute("updateVoiceMailPort", Namespace="http://www.cisco.com/AXL/API/1.0", IsNullable=false)]
            public class UpdateVoiceMailPortReq 
        {
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute("name", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlElementAttribute("uuid", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")]
            public string Item;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public ItemChoiceType30 ItemElementName;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public string newName;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public string description;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute("callingSearchSpaceId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlElementAttribute("callingSearchSpaceName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="Name")]
            [System.Xml.Serialization.XmlChoiceIdentifierAttribute("Item1ElementName")]
            public string Item1;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public Item1ChoiceType6 Item1ElementName;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute("devicePoolName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlElementAttribute("devicePoolId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlChoiceIdentifierAttribute("Item2ElementName")]
            public string Item2;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public Item2ChoiceType3 Item2ElementName;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute("locationName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="Name")]
            [System.Xml.Serialization.XmlElementAttribute("locationId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlChoiceIdentifierAttribute("Item3ElementName")]
            public string Item3;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public Item3ChoiceType2 Item3ElementName;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute("mediaResourceListId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlElementAttribute("mediaResourceListName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="Name")]
            [System.Xml.Serialization.XmlChoiceIdentifierAttribute("Item4ElementName")]
            public string Item4;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public Item4ChoiceType2 Item4ElementName;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute("automatedAlternateRoutingCSSId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlElementAttribute("automatedAlternateRoutingCSSName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlChoiceIdentifierAttribute("Item5ElementName")]
            public string Item5;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public Item5ChoiceType2 Item5ElementName;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute("aarNeighborhoodName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlElementAttribute("aarNeighborhoodId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlChoiceIdentifierAttribute("Item6ElementName")]
            public string Item6;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public Item6ChoiceType1 Item6ElementName;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public XLoadInformation loadInformation;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public System.Xml.XmlElement vendorConfig;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public bool traceFlag;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool traceFlagSpecified;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
            public XLine line;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlAttributeAttribute()]
            public System.UInt64 sequence;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool sequenceSpecified;
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
            public enum ItemChoiceType30 
        {
    
            /// <remarks/>
            name,
    
            /// <remarks/>
            uuid,
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
            public enum Item1ChoiceType6 
        {
    
            /// <remarks/>
            callingSearchSpaceId,
    
            /// <remarks/>
            callingSearchSpaceName,
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
            public enum Item2ChoiceType3 
        {
    
            /// <remarks/>
            devicePoolName,
    
            /// <remarks/>
            devicePoolId,
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
            public enum Item3ChoiceType2 
        {
    
            /// <remarks/>
            locationName,
    
            /// <remarks/>
            locationId,
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
            public enum Item4ChoiceType2 
        {
    
            /// <remarks/>
            mediaResourceListId,
    
            /// <remarks/>
            mediaResourceListName,
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
            public enum Item5ChoiceType2 
        {
    
            /// <remarks/>
            automatedAlternateRoutingCSSId,
    
            /// <remarks/>
            automatedAlternateRoutingCSSName,
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
            public enum Item6ChoiceType1 
        {
    
            /// <remarks/>
            aarNeighborhoodName,
    
            /// <remarks/>
            aarNeighborhoodId,
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
            [System.Xml.Serialization.XmlRootAttribute("getVoiceMailPortResponse", Namespace="http://www.cisco.com/AXL/API/1.0", IsNullable=false)]
            public class GetVoiceMailPortRes 
        {
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public GetVoiceMailPortResReturn @return;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlAttributeAttribute()]
            public System.UInt64 sequence;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool sequenceSpecified;
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
            public class GetVoiceMailPortResReturn 
        {
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public XVoiceMailPort voiceMailPort;
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
            [System.Xml.Serialization.XmlRootAttribute("addGatewayEndpoint", Namespace="http://www.cisco.com/AXL/API/1.0", IsNullable=false)]
            public class AddGatewayEndpointReq 
        {
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public XGateway gateway;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlAttributeAttribute()]
            public System.UInt64 sequence;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool sequenceSpecified;
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
            [System.Xml.Serialization.XmlRootAttribute("updateGatewayEndpoint", Namespace="http://www.cisco.com/AXL/API/1.0", IsNullable=false)]
            public class UpdateGatewayEndpointReq 
        {
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute("name", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlElementAttribute("uuid", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")]
            public string Item;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public ItemChoiceType39 ItemElementName;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public string newName;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public string description;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public XProtocolSide protocolSide;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool protocolSideSpecified;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute("callingSearchSpaceId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlElementAttribute("callingSearchSpaceName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="Name")]
            [System.Xml.Serialization.XmlChoiceIdentifierAttribute("Item1ElementName")]
            public string Item1;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public Item1ChoiceType7 Item1ElementName;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute("devicePoolName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlElementAttribute("devicePoolId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlChoiceIdentifierAttribute("Item2ElementName")]
            public string Item2;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public Item2ChoiceType4 Item2ElementName;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public XNetworkLocation networkLocation;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool networkLocationSpecified;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute("locationName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="Name")]
            [System.Xml.Serialization.XmlElementAttribute("locationId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlChoiceIdentifierAttribute("Item3ElementName")]
            public string Item3;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public Item3ChoiceType3 Item3ElementName;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute("mediaResourceListId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlElementAttribute("mediaResourceListName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="Name")]
            [System.Xml.Serialization.XmlChoiceIdentifierAttribute("Item4ElementName")]
            public string Item4;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public Item4ChoiceType3 Item4ElementName;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="nonNegativeInteger")]
            public string networkHoldMOHAudioSourceId;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="nonNegativeInteger")]
            public string userHoldMOHAudioSourceId;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute("automatedAlternateRoutingCSSId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlElementAttribute("automatedAlternateRoutingCSSName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlChoiceIdentifierAttribute("Item5ElementName")]
            public string Item5;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public Item5ChoiceType3 Item5ElementName;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute("aarNeighborhoodName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlElementAttribute("aarNeighborhoodId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlChoiceIdentifierAttribute("Item6ElementName")]
            public string Item6;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public Item6ChoiceType2 Item6ElementName;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public XLoadInformation loadInformation;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public System.Xml.XmlElement vendorConfig;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public bool traceFlag;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool traceFlagSpecified;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public int mlppDomainId;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool mlppDomainIdSpecified;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public XStatus mlppIndicationStatus;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool mlppIndicationStatusSpecified;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public XPreemption preemption;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool preemptionSpecified;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public XCountry country;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool countrySpecified;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public XPacketCaptureMode packetCaptureMode;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool packetCaptureModeSpecified;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="positiveInteger")]
            public string packetCaptureDuration;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute("pri", typeof(UpdateGatewayEndpointReqPri), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlElementAttribute("analog", typeof(UpdateGatewayEndpointReqAnalog), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlElementAttribute("bri", typeof(UpdateGatewayEndpointReqBri), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlElementAttribute("t1", typeof(UpdateGatewayEndpointReqT1), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public object Item7;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlAttributeAttribute()]
            public System.UInt64 sequence;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool sequenceSpecified;
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
            public enum ItemChoiceType39 
        {
    
            /// <remarks/>
            name,
    
            /// <remarks/>
            uuid,
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
            public enum Item1ChoiceType7 
        {
    
            /// <remarks/>
            callingSearchSpaceId,
    
            /// <remarks/>
            callingSearchSpaceName,
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
            public enum Item2ChoiceType4 
        {
    
            /// <remarks/>
            devicePoolName,
    
            /// <remarks/>
            devicePoolId,
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
            public enum Item3ChoiceType3 
        {
    
            /// <remarks/>
            locationName,
    
            /// <remarks/>
            locationId,
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
            public enum Item4ChoiceType3 
        {
    
            /// <remarks/>
            mediaResourceListId,
    
            /// <remarks/>
            mediaResourceListName,
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
            public enum Item5ChoiceType3 
        {
    
            /// <remarks/>
            automatedAlternateRoutingCSSId,
    
            /// <remarks/>
            automatedAlternateRoutingCSSName,
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
            public enum Item6ChoiceType2 
        {
    
            /// <remarks/>
            aarNeighborhoodName,
    
            /// <remarks/>
            aarNeighborhoodId,
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
            public class UpdateGatewayEndpointReqPri 
        {
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public bool acceptInboundRDNIS;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool acceptInboundRDNISSpecified;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public XNumberingPlan calledPlan;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool calledPlanSpecified;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public XPriOfNumber calledPri;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool calledPriSpecified;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public string callerIDDN;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public XCallingPartySelection callingPartySelection;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool callingPartySelectionSpecified;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public XNumberingPlan callingPlan;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool callingPlanSpecified;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public XPriOfNumber callingPri;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool callingPriSpecified;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="nonNegativeInteger")]
            public string chanIE;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public XClockReference clockReference;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool clockReferenceSpecified;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public XCSUParam csuParam;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool csuParamSpecified;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public bool dChannelEnable;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool dChannelEnableSpecified;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public bool direction;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool directionSpecified;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public bool displayIE;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool displayIESpecified;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public XEncode encode;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool encodeSpecified;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public XFDLChannel fdlChannel;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool fdlChannelSpecified;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="nonNegativeInteger")]
            public string firstDelay;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public UpdateGatewayEndpointReqPriInterfaceId interfaceId;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="nonNegativeInteger")]
            public string intraDelay;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public bool mcdnEnable;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool mcdnEnableSpecified;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public bool numberIE;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool numberIESpecified;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="nonNegativeInteger")]
            public string numDigits;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public bool passingPrecedenceLevelThroughUUIE;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool passingPrecedenceLevelThroughUUIESpecified;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public string prefix;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public XPresentationBit callingLinePresentationBit;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool callingLinePresentationBitSpecified;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public XPresentationBit connectedLinePresentationBit;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool connectedLinePresentationBitSpecified;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public XConnectedPBX connectedPBX;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool connectedPBXSpecified;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public XPriProtocol priProtocol;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool priProtocolSpecified;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="nonNegativeInteger")]
            public string securityAccessLevel;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public bool sendCallingNameInFacilityIE;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool sendCallingNameInFacilityIESpecified;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public bool sendEXLeadingCharInDispIE;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool sendEXLeadingCharInDispIESpecified;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public bool sendRestart;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool sendRestartSpecified;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public bool setupNonISDNPI;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool setupNonISDNPISpecified;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public bool sigDigits;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool sigDigitsSpecified;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="nonNegativeInteger")]
            public string span;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public bool statusPoll;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool statusPollSpecified;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="nonNegativeInteger")]
            public string stripCountOut;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public XTrunkPad trunkPadRx;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool trunkPadRxSpecified;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public XTrunkPad trunkPadTx;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool trunkPadTxSpecified;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public XTrunkLevel trunkLevel;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool trunkLevelSpecified;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public XYellowAlarm yellowAlarm;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool yellowAlarmSpecified;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public XZeroSuppression zeroSuppression;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool zeroSuppressionSpecified;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="positiveInteger")]
            public string sMDIBasePort;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public bool protocolProfile91NameOnly;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool protocolProfile91NameOnlySpecified;
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
            public class UpdateGatewayEndpointReqPriInterfaceId 
        {
    
            /// <remarks/>
            [System.Xml.Serialization.XmlAttributeAttribute()]
            public bool present;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlTextAttribute(DataType="nonNegativeInteger")]
            public string Value;
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
            public class UpdateGatewayEndpointReqAnalog 
        {
    
            /// <remarks/>
            [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlArrayItemAttribute("port", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Namespace="http://www.cisco.com/AXL/1.0", IsNullable=false)]
            public XAnalogPort[] ports;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public XTrunkSelectionOrder trunkSelectionOrder;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool trunkSelectionOrderSpecified;
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
            public class UpdateGatewayEndpointReqBri 
        {
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public bool acceptInboundRDNIS;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool acceptInboundRDNISSpecified;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public XBriProtocol briProtocol;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool briProtocolSpecified;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public XNumberingPlan calledPlan;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool calledPlanSpecified;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public XPriOfNumber calledPri;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool calledPriSpecified;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public string callerIDDN;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public XCallingPartySelection callingPartySelection;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool callingPartySelectionSpecified;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public XNumberingPlan callingPlan;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool callingPlanSpecified;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public XPriOfNumber callingPri;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool callingPriSpecified;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="nonNegativeInteger")]
            public string chanIE;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public XClockReference clockReference;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool clockReferenceSpecified;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public XCSUParam csuParam;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool csuParamSpecified;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public bool dChannelEnable;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool dChannelEnableSpecified;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public bool direction;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool directionSpecified;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public bool displayIE;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool displayIESpecified;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public XEncode encode;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool encodeSpecified;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public XFDLChannel fdlChannel;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool fdlChannelSpecified;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="nonNegativeInteger")]
            public string firstDelay;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public XFraming framing;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool framingSpecified;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="nonNegativeInteger")]
            public string intraDelay;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public bool numberIE;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool numberIESpecified;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="nonNegativeInteger")]
            public string numDigits;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public string prefix;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public XPresentationBit presentationBit;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool presentationBitSpecified;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public bool sendRestart;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool sendRestartSpecified;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public bool setupNonISDNPI;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool setupNonISDNPISpecified;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public bool sigDigits;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool sigDigitsSpecified;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public bool stableIn4;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool stableIn4Specified;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public bool statusPoll;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool statusPollSpecified;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="nonNegativeInteger")]
            public string stripCountOut;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public XTrunkPad trunkPadRx;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool trunkPadRxSpecified;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public XTrunkPad trunkPadTx;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool trunkPadTxSpecified;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public XTrunkLevel trunkLevel;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool trunkLevelSpecified;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public XYellowAlarm yellowAlarm;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool yellowAlarmSpecified;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public XZeroSuppression zeroSuppression;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool zeroSuppressionSpecified;
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
            public class UpdateGatewayEndpointReqT1 
        {
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public XTrunkSelectionOrder trunkSelectionOrder;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool trunkSelectionOrderSpecified;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public XClockReference clockReference;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool clockReferenceSpecified;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public XCSUParam csuParam;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool csuParamSpecified;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public XDigitSending digitSending;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool digitSendingSpecified;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public XEncode encode;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool encodeSpecified;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public XFDLChannel fdlChannel;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool fdlChannelSpecified;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlArrayItemAttribute("port", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Namespace="http://www.cisco.com/AXL/1.0", IsNullable=false)]
            public XT1Port[] ports;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public XYellowAlarm yellowAlarm;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool yellowAlarmSpecified;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public XZeroSuppression zeroSuppression;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool zeroSuppressionSpecified;
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
            [System.Xml.Serialization.XmlRootAttribute("getGatewayEndpointResponse", Namespace="http://www.cisco.com/AXL/API/1.0", IsNullable=false)]
            public class GetGatewayEndpointRes 
        {
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public GetGatewayEndpointResReturn @return;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlAttributeAttribute()]
            public System.UInt64 sequence;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool sequenceSpecified;
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
            public class GetGatewayEndpointResReturn 
        {
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public XGateway device;
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
            [System.Xml.Serialization.XmlRootAttribute("addRouteFilter", Namespace="http://www.cisco.com/AXL/API/1.0", IsNullable=false)]
            public class AddRouteFilterReq 
        {
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public XRouteFilter routeFilter;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlAttributeAttribute()]
            public System.UInt64 sequence;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool sequenceSpecified;
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
            [System.Xml.Serialization.XmlRootAttribute("updateRouteFilter", Namespace="http://www.cisco.com/AXL/API/1.0", IsNullable=false)]
            public class UpdateRouteFilterReq 
        {
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute("name", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlElementAttribute("uuid", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")]
            public string Item;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public ItemChoiceType74 ItemElementName;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public string newName;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute("dialPlanName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="Name")]
            [System.Xml.Serialization.XmlElementAttribute("dialPlanId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlChoiceIdentifierAttribute("Item1ElementName")]
            public string Item1;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public Item1ChoiceType16 Item1ElementName;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlArrayItemAttribute("member", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
            public XRouteFilterMember[] members;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlAttributeAttribute()]
            public System.UInt64 sequence;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool sequenceSpecified;
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
            public enum ItemChoiceType74 
        {
    
            /// <remarks/>
            name,
    
            /// <remarks/>
            uuid,
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
            public enum Item1ChoiceType16 
        {
    
            /// <remarks/>
            dialPlanName,
    
            /// <remarks/>
            dialPlanId,
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
            [System.Xml.Serialization.XmlRootAttribute("getRouteFilterResponse", Namespace="http://www.cisco.com/AXL/API/1.0", IsNullable=false)]
            public class GetRouteFilterRes 
        {
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public GetRouteFilterResReturn @return;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlAttributeAttribute()]
            public System.UInt64 sequence;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool sequenceSpecified;
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
            public class GetRouteFilterResReturn 
        {
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public XRouteFilter routeFilter;
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
            [System.Xml.Serialization.XmlRootAttribute("getServiceParameter", Namespace="http://www.cisco.com/AXL/API/1.0", IsNullable=false)]
            public class GetServiceParameterReq 
        {
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute("name", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlElementAttribute("uuid", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlElementAttribute("processNodeId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlElementAttribute("processNodeName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlElementAttribute("service", typeof(XService), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")]
            public object Item;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public ItemChoiceType43 ItemElementName;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlAttributeAttribute()]
            public System.UInt64 sequence;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool sequenceSpecified;
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
            public enum ItemChoiceType43 
        {
    
            /// <remarks/>
            name,
    
            /// <remarks/>
            uuid,
    
            /// <remarks/>
            processNodeId,
    
            /// <remarks/>
            processNodeName,
    
            /// <remarks/>
            service,
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
            [System.Xml.Serialization.XmlRootAttribute("getServiceParameterResponse", Namespace="http://www.cisco.com/AXL/API/1.0", IsNullable=false)]
            public class GetServiceParameterRes 
        {
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public GetServiceParameterResReturn @return;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlAttributeAttribute()]
            public System.UInt64 sequence;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool sequenceSpecified;
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
            public class GetServiceParameterResReturn 
        {
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public XProcessConfig serviceParameter;
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
            public class XProcessConfig 
        {
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute("processNodeName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlElementAttribute("processNode", typeof(XProcessNode), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public object Item;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public string name;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public XService service;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
            public string value;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public XParam valueType;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.ComponentModel.DefaultValueAttribute(false)]
            public bool primaryData = false;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlAttributeAttribute()]
            public string uuid;
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
            public enum XParam 
        {
    
            /// <remarks/>
            boolean,
    
            /// <remarks/>
            @double,
    
            /// <remarks/>
            @long,
    
            /// <remarks/>
            @string,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("date/time")]
            datetime,
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
            [System.Xml.Serialization.XmlRootAttribute("updateServiceParameter", Namespace="http://www.cisco.com/AXL/API/1.0", IsNullable=false)]
            public class UpdateServiceParameterReq 
        {
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute("name", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlElementAttribute("uuid", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlElementAttribute("processNodeId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlElementAttribute("processNodeName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlElementAttribute("service", typeof(XService), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")]
            public object Item;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public ItemChoiceType62 ItemElementName;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
            public string newValue;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlAttributeAttribute()]
            public System.UInt64 sequence;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool sequenceSpecified;
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
            public enum ItemChoiceType62 
        {
    
            /// <remarks/>
            name,
    
            /// <remarks/>
            uuid,
    
            /// <remarks/>
            processNodeId,
    
            /// <remarks/>
            processNodeName,
    
            /// <remarks/>
            service,
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
            [System.Xml.Serialization.XmlRootAttribute("addLocation", Namespace="http://www.cisco.com/AXL/API/1.0", IsNullable=false)]
            public class AddLocationReq 
        {
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public XLocation location;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlAttributeAttribute()]
            public System.UInt64 sequence;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool sequenceSpecified;
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
            [System.Xml.Serialization.XmlRootAttribute("updateLocation", Namespace="http://www.cisco.com/AXL/API/1.0", IsNullable=false)]
            public class UpdateLocationReq 
        {
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute("name", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlElementAttribute("uuid", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")]
            public string Item;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public ItemChoiceType38 ItemElementName;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public string newName;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="nonNegativeInteger")]
            public string kbits;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="nonNegativeInteger")]
            public string videoKbits;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlAttributeAttribute()]
            public System.UInt64 sequence;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool sequenceSpecified;
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
            public enum ItemChoiceType38 
        {
    
            /// <remarks/>
            name,
    
            /// <remarks/>
            uuid,
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
            [System.Xml.Serialization.XmlRootAttribute("getLocationResponse", Namespace="http://www.cisco.com/AXL/API/1.0", IsNullable=false)]
            public class GetLocationRes 
        {
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public GetLocationResReturn @return;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlAttributeAttribute()]
            public System.UInt64 sequence;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool sequenceSpecified;
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
            public class GetLocationResReturn 
        {
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public XLocation location;
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
            [System.Xml.Serialization.XmlRootAttribute("addCMCInfo", Namespace="http://www.cisco.com/AXL/API/1.0", IsNullable=false)]
            public class AddCMCInfoReq 
        {
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public XCMCInfo cmcInfo;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlAttributeAttribute()]
            public System.UInt64 sequence;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool sequenceSpecified;
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
            public class XCMCInfo 
        {
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public string code;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public string description;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlAttributeAttribute()]
            public string uuid;
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
            [System.Xml.Serialization.XmlRootAttribute("updateCMCInfo", Namespace="http://www.cisco.com/AXL/API/1.0", IsNullable=false)]
            public class UpdateCMCInfoReq : GUIDRequest 
        {
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public string code;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public string description;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="nonNegativeInteger")]
            public string authorizationLevel;
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
            [System.Xml.Serialization.XmlIncludeAttribute(typeof(UpdateCMCInfoReq))]
            [System.Xml.Serialization.XmlIncludeAttribute(typeof(UpdateFACInfoReq))]
            [System.Xml.Serialization.XmlRootAttribute("getCMCInfo", Namespace="http://www.cisco.com/AXL/API/1.0", IsNullable=false)]
            public class GUIDRequest 
        {
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public string uuid;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlAttributeAttribute()]
            public System.UInt64 sequence;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool sequenceSpecified;
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
            [System.Xml.Serialization.XmlRootAttribute("updateFACInfo", Namespace="http://www.cisco.com/AXL/API/1.0", IsNullable=false)]
            public class UpdateFACInfoReq : GUIDRequest 
        {
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public string code;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public string description;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="nonNegativeInteger")]
            public string authorizationLevel;
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
            [System.Xml.Serialization.XmlRootAttribute("getCMCInfoResponse", Namespace="http://www.cisco.com/AXL/API/1.0", IsNullable=false)]
            public class GetCMCInfoRes 
        {
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public GetCMCInfoResReturn @return;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlAttributeAttribute()]
            public System.UInt64 sequence;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool sequenceSpecified;
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
            public class GetCMCInfoResReturn 
        {
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public XCMCInfo cmcInfo;
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
            [System.Xml.Serialization.XmlRootAttribute("addFACInfo", Namespace="http://www.cisco.com/AXL/API/1.0", IsNullable=false)]
            public class AddFACInfoReq 
        {
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public XFACInfo facInfo;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlAttributeAttribute()]
            public System.UInt64 sequence;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool sequenceSpecified;
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
            public class XFACInfo 
        {
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public string code;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public string description;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="nonNegativeInteger")]
            public string authorizationLevel;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlAttributeAttribute()]
            public string uuid;
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
            [System.Xml.Serialization.XmlRootAttribute("getFACInfoResponse", Namespace="http://www.cisco.com/AXL/API/1.0", IsNullable=false)]
            public class GetFACInfoRes 
        {
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public GetFACInfoResReturn @return;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlAttributeAttribute()]
            public System.UInt64 sequence;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool sequenceSpecified;
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
            public class GetFACInfoResReturn 
        {
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public XFACInfo facInfo;
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
            [System.Xml.Serialization.XmlRootAttribute("addRegion", Namespace="http://www.cisco.com/AXL/API/1.0", IsNullable=false)]
            public class AddRegionReq 
        {
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public XRegion region;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlAttributeAttribute()]
            public System.UInt64 sequence;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool sequenceSpecified;
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
            [System.Xml.Serialization.XmlRootAttribute("updateRegion", Namespace="http://www.cisco.com/AXL/API/1.0", IsNullable=false)]
            public class UpdateRegionReq 
        {
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute("name", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlElementAttribute("uuid", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")]
            public string Item;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public ItemChoiceType56 ItemElementName;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public string newName;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlAttributeAttribute()]
            public System.UInt64 sequence;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool sequenceSpecified;
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
            public enum ItemChoiceType56 
        {
    
            /// <remarks/>
            name,
    
            /// <remarks/>
            uuid,
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
            [System.Xml.Serialization.XmlRootAttribute("getRegionResponse", Namespace="http://www.cisco.com/AXL/API/1.0", IsNullable=false)]
            public class GetRegionRes 
        {
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public GetRegionResReturn @return;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlAttributeAttribute()]
            public System.UInt64 sequence;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool sequenceSpecified;
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
            public class GetRegionResReturn 
        {
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public XRegion region;
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
            [System.Xml.Serialization.XmlRootAttribute("updateRegionMatrix", Namespace="http://www.cisco.com/AXL/API/1.0", IsNullable=false)]
            public class UpdateRegionMatrixReq 
        {
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public string uuid;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public XBandwidth bandwidth;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool bandwidthSpecified;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="nonNegativeInteger")]
            public string videoBandwidth;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlAttributeAttribute()]
            public System.UInt64 sequence;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool sequenceSpecified;
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
            [System.Xml.Serialization.XmlRootAttribute("addMGCP", Namespace="http://www.cisco.com/AXL/API/1.0", IsNullable=false)]
            public class AddMGCPReq 
        {
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public XMGCP newMGCP;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlAttributeAttribute()]
            public System.UInt64 sequence;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool sequenceSpecified;
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
            public class XMGCP 
        {
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public string domainName;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public string description;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public XProduct product;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public XModel model;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute("callManagerGroupName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlElementAttribute("callManagerGroup", typeof(XCallManagerGroup), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public object Item;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public XMGCPUnits units;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public string scratch;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public System.Xml.XmlElement vendorConfig;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public string versionStamp;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public XLoadInformation loadInformation;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlAttributeAttribute()]
            public string uuid;
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
            public class XMGCPUnits 
        {
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute("unit", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public XMGCPUnit[] unit;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlAttributeAttribute(DataType="positiveInteger")]
            public string max;
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
            public class XMGCPUnit 
        {
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public XMGCPSlotModule product;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public XMGCPSubunits subunits;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlAttributeAttribute(DataType="nonNegativeInteger")]
            public string index;
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
            public enum XMGCPSlotModule 
        {
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("NM-1V")]
            NM1V,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("NM-2V")]
            NM2V,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("NM-HDV")]
            NMHDV,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("VIC-SLOT")]
            VICSLOT,
    
            /// <remarks/>
            NONE,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("VWIC-SLOT")]
            VWICSLOT,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("FLEX-SLOT")]
            FLEXSLOT,
    
            /// <remarks/>
            ANALOG,
    
            /// <remarks/>
            DIGITAL,
    
            /// <remarks/>
            VGC_PORT,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("WS-X6600")]
            WSX6600,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("AIM-VOICE-30 (2 subunits)")]
            AIMVOICE302subunits,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("NM-HDA")]
            NMHDA,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("PA-VXA")]
            PAVXA,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("PA-VXB")]
            PAVXB,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("PA-VXC")]
            PAVXC,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("PA-MCX")]
            PAMCX,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("NM-HD-1V")]
            NMHD1V,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("NM-HD-2V")]
            NMHD2V,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("NM-HD-2VE")]
            NMHD2VE,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("GENERIC-SLOT")]
            GENERICSLOT,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("NM-4VWIC-MBRD")]
            NM4VWICMBRD,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("EVM-HD")]
            EVMHD,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("NM-HDV2-0PORT")]
            NMHDV20PORT,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("NM-HDV2-1PORT-T1")]
            NMHDV21PORTT1,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("NM-HDV2-1PORT-E1")]
            NMHDV21PORTE1,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("NM-HDV2-2PORT-T1")]
            NMHDV22PORTT1,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("NM-HDV2-2PORT-E1")]
            NMHDV22PORTE1,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("AIM-VOICE-30-SLOT-0 (3 subunits- slot 0 only)")]
            AIMVOICE30SLOT03subunitsslot0only,
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
            public class XMGCPSubunits 
        {
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute("subunit", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public XMGCPSubunit[] subunit;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlAttributeAttribute(DataType="nonNegativeInteger")]
            public string index;
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
            public class XMGCPSubunit 
        {
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public XMGCPVic product;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public XMGCPEndpoints endpoints;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlAttributeAttribute(DataType="nonNegativeInteger")]
            public string index;
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
            public enum XMGCPVic 
        {
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("VIC-2FXS")]
            VIC2FXS,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("VIC-2FXO")]
            VIC2FXO,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("VWIC-1MFT-T1")]
            VWIC1MFTT1,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("VWIC-2MFT-T1")]
            VWIC2MFTT1,
    
            /// <remarks/>
            VIC_NONE,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("VWIC-1MFT-E1")]
            VWIC1MFTE1,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("VWIC-2MFT-E1")]
            VWIC2MFTE1,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("WS-U4604-8FXS")]
            WSU46048FXS,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("8FXS")]
            Item8FXS,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("16FXS")]
            Item16FXS,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("1T1")]
            Item1T1,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("16FXS8FXO")]
            Item16FXS8FXO,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("48_PORTS")]
            Item48_PORTS,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("VIC-4FXS")]
            VIC4FXS,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("VIC-4FXO")]
            VIC4FXO,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("VIC-8FXS")]
            VIC8FXS,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("VIC-16FXS")]
            VIC16FXS,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("WS-SVC-CMM-24FXS")]
            WSSVCCMM24FXS,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("WS-SVC-CMM-6T1")]
            WSSVCCMM6T1,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("WS-SVC-CMM-6E1")]
            WSSVCCMM6E1,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("EM-4FXO-EM0")]
            EM4FXOEM0,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("EM-4FXO-EM1")]
            EM4FXOEM1,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("EM-8FXS-EM0")]
            EM8FXSEM0,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("EM-8FXS-EM1")]
            EM8FXSEM1,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("NM-HDA-4FXS")]
            NMHDA4FXS,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("PA-VXA-1TE1-24-T1")]
            PAVXA1TE124T1,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("PA-VXA-1TE1-30-E1")]
            PAVXA1TE130E1,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("PA-VXB-2TE1-T1")]
            PAVXB2TE1T1,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("PA-VXB-2TE1-E1")]
            PAVXB2TE1E1,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("PA-VXC-2TE1-T1")]
            PAVXC2TE1T1,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("PA-VXC-2TE1-E1")]
            PAVXC2TE1E1,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("PA-MCX-2TE1-T1")]
            PAMCX2TE1T1,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("PA-MCX-2TE1-E1")]
            PAMCX2TE1E1,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("PA-MCX-4TE1-T1")]
            PAMCX4TE1T1,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("PA-MCX-4TE1-E1")]
            PAMCX4TE1E1,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("PA-MCX-6TE1-T1")]
            PAMCX6TE1T1,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("PA-MCX-6TE1-E1")]
            PAMCX6TE1E1,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("PA-MCX-8TE1-T1")]
            PAMCX8TE1T1,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("PA-MCX-8TE1-E1")]
            PAMCX8TE1E1,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("VIC-8FXO")]
            VIC8FXO,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("WS-U4604-8FXO-2FXS")]
            WSU46048FXO2FXS,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("WS-U4604-16FXS")]
            WSU460416FXS,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("VIC-2BRI")]
            VIC2BRI,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("VIC-2FXS-SCCP")]
            VIC2FXSSCCP,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("VIC-4FXS-SCCP")]
            VIC4FXSSCCP,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("VIC2-2FXS-SCCP")]
            VIC22FXSSCCP,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("VIC2-2BRI-NT/TE-SCCP")]
            VIC22BRINTTESCCP,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("NM-HDA-4FXS-SCCP")]
            NMHDA4FXSSCCP,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("EM-8FXS-EM0-SCCP")]
            EM8FXSEM0SCCP,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("24FXS-SCCP")]
            Item24FXSSCCP,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("EM-8FXS-EM1-SCCP")]
            EM8FXSEM1SCCP,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("WS-SVC-CMM-ACT")]
            WSSVCCMMACT,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("VIC2-2FXS")]
            VIC22FXS,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("VIC2-2FXO")]
            VIC22FXO,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("VIC2-2BRI")]
            VIC22BRI,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("VIC-4FXS/DID")]
            VIC4FXSDID,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("VIC2-4FXO")]
            VIC24FXO,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("NM-HDV2-ONBOARD-T1")]
            NMHDV2ONBOARDT1,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("NM-HDV2-ONBOARD-E1")]
            NMHDV2ONBOARDE1,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("VWIC2-1MFT-T1E1-T1")]
            VWIC21MFTT1E1T1,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("VWIC2-1MFT-T1E1-E1")]
            VWIC21MFTT1E1E1,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("VWIC2-2MFT-T1E1-T1")]
            VWIC22MFTT1E1T1,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("VWIC2-2MFT-T1E1-E1")]
            VWIC22MFTT1E1E1,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("VWIC2-1MFT-G703-T1")]
            VWIC21MFTG703T1,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("VWIC2-1MFT-G703-E1")]
            VWIC21MFTG703E1,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("VWIC2-2MFT-G703-T1")]
            VWIC22MFTG703T1,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("VWIC2-2MFT-G703-E1")]
            VWIC22MFTG703E1,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("EVM-HD-8FXS/DID")]
            EVMHD8FXSDID,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("EM-4BRI-NT/TE-EM0")]
            EM4BRINTTEEM0,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("EM-4BRI-NT/TE-EM1")]
            EM4BRINTTEEM1,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("24FXS")]
            Item24FXS,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("NM-HDV2-ONBOARD-T1-2PORT")]
            NMHDV2ONBOARDT12PORT,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("NM-HDV2-ONBOARD-E1-2PORT")]
            NMHDV2ONBOARDE12PORT,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("EM-HDA-8FXS")]
            EMHDA8FXS,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("EM-HDA-6FXO")]
            EMHDA6FXO,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("EM-HDA-3FXS/4FXO")]
            EMHDA3FXS4FXO,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("EM2-HDA-4FXO")]
            EM2HDA4FXO,
    
            /// <remarks/>
            [System.Xml.Serialization.XmlEnumAttribute("EM-4BRI-NT/TE")]
            EM4BRINTTE,
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
            public class XMGCPEndpoints 
        {
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute("deviceName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlElementAttribute("endpoint", typeof(XGateway), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public object[] Items;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlAttributeAttribute(DataType="positiveInteger")]
            public string max;
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
            [System.Xml.Serialization.XmlRootAttribute("addMGCPUnit", Namespace="http://www.cisco.com/AXL/API/1.0", IsNullable=false)]
            public class AddMGCPUnitReq 
        {
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute("uuid", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlElementAttribute("domainName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")]
            public string Item;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public ItemChoiceType27 ItemElementName;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public XMGCPUnit unit;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlAttributeAttribute()]
            public System.UInt64 sequence;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool sequenceSpecified;
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
            public enum ItemChoiceType27 
        {
    
            /// <remarks/>
            uuid,
    
            /// <remarks/>
            domainName,
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
            [System.Xml.Serialization.XmlRootAttribute("addMGCPSubunit", Namespace="http://www.cisco.com/AXL/API/1.0", IsNullable=false)]
            public class AddMGCPSubunitReq 
        {
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute("uuid", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlElementAttribute("domainName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")]
            public string Item;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public ItemChoiceType83 ItemElementName;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public AddMGCPSubunitReqUnit unit;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public XMGCPSubunit subunit;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlAttributeAttribute()]
            public System.UInt64 sequence;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool sequenceSpecified;
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
            public enum ItemChoiceType83 
        {
    
            /// <remarks/>
            uuid,
    
            /// <remarks/>
            domainName,
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
            public class AddMGCPSubunitReqUnit 
        {
    
            /// <remarks/>
            [System.Xml.Serialization.XmlAttributeAttribute(DataType="nonNegativeInteger")]
            public string index;
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
            [System.Xml.Serialization.XmlRootAttribute("addMGCPEndpoint", Namespace="http://www.cisco.com/AXL/API/1.0", IsNullable=false)]
            public class AddMGCPEndpointReq 
        {
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute("uuid", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlElementAttribute("domainName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")]
            public string Item;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public ItemChoiceType80 ItemElementName;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public AddMGCPEndpointReqUnit unit;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public AddMGCPEndpointReqSubunit subunit;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public AddMGCPEndpointReqEndpoint endpoint;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlAttributeAttribute()]
            public System.UInt64 sequence;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool sequenceSpecified;
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
            public enum ItemChoiceType80 
        {
    
            /// <remarks/>
            uuid,
    
            /// <remarks/>
            domainName,
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
            public class AddMGCPEndpointReqUnit 
        {
    
            /// <remarks/>
            [System.Xml.Serialization.XmlAttributeAttribute(DataType="nonNegativeInteger")]
            public string index;
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
            public class AddMGCPEndpointReqSubunit 
        {
    
            /// <remarks/>
            [System.Xml.Serialization.XmlAttributeAttribute(DataType="nonNegativeInteger")]
            public string index;
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
            public class AddMGCPEndpointReqEndpoint : XMGCPEndpoint 
        {
    
            /// <remarks/>
            [System.Xml.Serialization.XmlAttributeAttribute(DataType="nonNegativeInteger")]
            public string index;
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
            [System.Xml.Serialization.XmlRootAttribute("getMGCP", Namespace="http://www.cisco.com/AXL/API/1.0", IsNullable=false)]
            public class GetMGCPReq 
        {
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute("uuid", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlElementAttribute("domainName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")]
            public string Item;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public ItemChoiceType52 ItemElementName;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlAttributeAttribute()]
            public System.UInt64 sequence;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool sequenceSpecified;
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
            public enum ItemChoiceType52 
        {
    
            /// <remarks/>
            uuid,
    
            /// <remarks/>
            domainName,
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
            [System.Xml.Serialization.XmlRootAttribute("getMGCPResponse", Namespace="http://www.cisco.com/AXL/API/1.0", IsNullable=false)]
            public class GetMGCPRes 
        {
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public GetMGCPResReturn @return;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlAttributeAttribute()]
            public System.UInt64 sequence;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool sequenceSpecified;
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
            public class GetMGCPResReturn 
        {
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public XMGCP mgcp;
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
            [System.Xml.Serialization.XmlRootAttribute("removeMGCP", Namespace="http://www.cisco.com/AXL/API/1.0", IsNullable=false)]
            public class RemoveMGCPReq 
        {
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute("uuid", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlElementAttribute("domainName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")]
            public string Item;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public ItemChoiceType29 ItemElementName;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlAttributeAttribute()]
            public System.UInt64 sequence;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool sequenceSpecified;
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
            public enum ItemChoiceType29 
        {
    
            /// <remarks/>
            uuid,
    
            /// <remarks/>
            domainName,
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
            [System.Xml.Serialization.XmlRootAttribute("removeMGCPUnit", Namespace="http://www.cisco.com/AXL/API/1.0", IsNullable=false)]
            public class RemoveMGCPUnitReq 
        {
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute("uuid", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlElementAttribute("domainName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")]
            public string Item;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public ItemChoiceType64 ItemElementName;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public RemoveMGCPUnitReqUnit unit;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlAttributeAttribute()]
            public System.UInt64 sequence;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool sequenceSpecified;
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
            public enum ItemChoiceType64 
        {
    
            /// <remarks/>
            uuid,
    
            /// <remarks/>
            domainName,
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
            public class RemoveMGCPUnitReqUnit 
        {
    
            /// <remarks/>
            [System.Xml.Serialization.XmlAttributeAttribute(DataType="nonNegativeInteger")]
            public string index;
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
            [System.Xml.Serialization.XmlRootAttribute("removeMGCPSubunit", Namespace="http://www.cisco.com/AXL/API/1.0", IsNullable=false)]
            public class RemoveMGCPSubunitReq 
        {
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute("uuid", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlElementAttribute("domainName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")]
            public string Item;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public ItemChoiceType61 ItemElementName;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public RemoveMGCPSubunitReqUnit unit;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public RemoveMGCPSubunitReqSubunit subunit;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlAttributeAttribute()]
            public System.UInt64 sequence;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool sequenceSpecified;
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
            public enum ItemChoiceType61 
        {
    
            /// <remarks/>
            uuid,
    
            /// <remarks/>
            domainName,
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
            public class RemoveMGCPSubunitReqUnit 
        {
    
            /// <remarks/>
            [System.Xml.Serialization.XmlAttributeAttribute(DataType="nonNegativeInteger")]
            public string index;
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
            public class RemoveMGCPSubunitReqSubunit 
        {
    
            /// <remarks/>
            [System.Xml.Serialization.XmlAttributeAttribute(DataType="nonNegativeInteger")]
            public string index;
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
            [System.Xml.Serialization.XmlRootAttribute("removeMGCPEndpoint", Namespace="http://www.cisco.com/AXL/API/1.0", IsNullable=false)]
            public class RemoveMGCPEndpointReq 
        {
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute("uuid", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlElementAttribute("domainName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")]
            public string Item;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public ItemChoiceType76 ItemElementName;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public RemoveMGCPEndpointReqUnit unit;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public RemoveMGCPEndpointReqSubunit subunit;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public RemoveMGCPEndpointReqEndpoint endpoint;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlAttributeAttribute()]
            public System.UInt64 sequence;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool sequenceSpecified;
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
            public enum ItemChoiceType76 
        {
    
            /// <remarks/>
            uuid,
    
            /// <remarks/>
            domainName,
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
            public class RemoveMGCPEndpointReqUnit 
        {
    
            /// <remarks/>
            [System.Xml.Serialization.XmlAttributeAttribute(DataType="nonNegativeInteger")]
            public string index;
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
            public class RemoveMGCPEndpointReqSubunit 
        {
    
            /// <remarks/>
            [System.Xml.Serialization.XmlAttributeAttribute(DataType="nonNegativeInteger")]
            public string index;
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
            public class RemoveMGCPEndpointReqEndpoint 
        {
    
            /// <remarks/>
            [System.Xml.Serialization.XmlAttributeAttribute(DataType="nonNegativeInteger")]
            public string index;
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
            [System.Xml.Serialization.XmlRootAttribute("updateMGCP", Namespace="http://www.cisco.com/AXL/API/1.0", IsNullable=false)]
            public class UpdateMGCPReq 
        {
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute("uuid", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlElementAttribute("domainName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")]
            public string Item;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public ItemChoiceType28 ItemElementName;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public string newDomainName;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public string description;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public XProduct product;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool productSpecified;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public XModel model;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool modelSpecified;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute("callManagerGroupName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlElementAttribute("callManagerGroup", typeof(XCallManagerGroup), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public object Item1;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="Name")]
            public string scratch;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public System.Xml.XmlElement vendorConfig;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public string versionStamp;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public XLoadInformation loadInformation;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlAttributeAttribute()]
            public System.UInt64 sequence;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool sequenceSpecified;
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
            public enum ItemChoiceType28 
        {
    
            /// <remarks/>
            uuid,
    
            /// <remarks/>
            domainName,
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
            [System.Xml.Serialization.XmlRootAttribute("addCallManager", Namespace="http://www.cisco.com/AXL/API/1.0", IsNullable=false)]
            public class AddCallManagerReq 
        {
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public XCallManager callManager;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlAttributeAttribute()]
            public System.UInt64 sequence;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool sequenceSpecified;
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
            [System.Xml.Serialization.XmlRootAttribute("updateCallManager", Namespace="http://www.cisco.com/AXL/API/1.0", IsNullable=false)]
            public class UpdateCallManagerReq 
        {
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute("name", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlElementAttribute("uuid", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")]
            public string Item;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public ItemChoiceType31 ItemElementName;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public string newName;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public string description;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public UpdateCallManagerReqAutoRegistration autoRegistration;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public UpdateCallManagerReqPorts ports;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlAttributeAttribute()]
            public System.UInt64 sequence;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool sequenceSpecified;
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
            public enum ItemChoiceType31 
        {
    
            /// <remarks/>
            name,
    
            /// <remarks/>
            uuid,
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
            public class UpdateCallManagerReqAutoRegistration 
        {
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public string startDN;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public string endDN;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public string nextDN;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute("routePartitionId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlElementAttribute("routePartitionName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")]
            public string Item;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public ItemChoiceType32 ItemElementName;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public string e164Mask;
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
            public enum ItemChoiceType32 
        {
    
            /// <remarks/>
            routePartitionId,
    
            /// <remarks/>
            routePartitionName,
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
            public class UpdateCallManagerReqPorts 
        {
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="nonNegativeInteger")]
            public string analogAccessPort;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="nonNegativeInteger")]
            public string digitalAccessPort;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="nonNegativeInteger")]
            public string ethernetPhonePort;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public UpdateCallManagerReqPortsMgcpPorts mgcpPorts;
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
            public class UpdateCallManagerReqPortsMgcpPorts 
        {
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="nonNegativeInteger")]
            public string listen;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="nonNegativeInteger")]
            public string keepAlive;
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
            [System.Xml.Serialization.XmlRootAttribute("getCallManagerResponse", Namespace="http://www.cisco.com/AXL/API/1.0", IsNullable=false)]
            public class GetCallManagerRes 
        {
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public GetCallManagerResReturn @return;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlAttributeAttribute()]
            public System.UInt64 sequence;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool sequenceSpecified;
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
            public class GetCallManagerResReturn 
        {
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public XCallManager callManager;
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
            [System.Xml.Serialization.XmlRootAttribute("addProcessNode", Namespace="http://www.cisco.com/AXL/API/1.0", IsNullable=false)]
            public class AddProcessNodeReq 
        {
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public XProcessNode processNode;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlAttributeAttribute()]
            public System.UInt64 sequence;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool sequenceSpecified;
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
            [System.Xml.Serialization.XmlRootAttribute("updateProcessNode", Namespace="http://www.cisco.com/AXL/API/1.0", IsNullable=false)]
            public class UpdateProcessNodeReq 
        {
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute("name", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlElementAttribute("uuid", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")]
            public string Item;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public ItemChoiceType82 ItemElementName;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="Name")]
            public string newName;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public string description;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public string mac;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlAttributeAttribute()]
            public System.UInt64 sequence;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool sequenceSpecified;
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
            public enum ItemChoiceType82 
        {
    
            /// <remarks/>
            name,
    
            /// <remarks/>
            uuid,
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
            [System.Xml.Serialization.XmlRootAttribute("getProcessNodeResponse", Namespace="http://www.cisco.com/AXL/API/1.0", IsNullable=false)]
            public class GetProcessNodeRes 
        {
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public GetProcessNodeResReturn @return;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlAttributeAttribute()]
            public System.UInt64 sequence;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool sequenceSpecified;
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
            public class GetProcessNodeResReturn 
        {
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public XProcessNode processNode;
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
            [System.Xml.Serialization.XmlRootAttribute("listAllProcessNodes", Namespace="http://www.cisco.com/AXL/API/1.0", IsNullable=false)]
            public class ListAllProcessNodesReq 
        {
    
            /// <remarks/>
            [System.Xml.Serialization.XmlAttributeAttribute()]
            public System.UInt64 sequence;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool sequenceSpecified;
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
            [System.Xml.Serialization.XmlRootAttribute("listAllProcessNodesResponse", Namespace="http://www.cisco.com/AXL/API/1.0", IsNullable=false)]
            public class ListAllProcessNodesRes 
        {
    
            /// <remarks/>
            [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlArrayItemAttribute("processNode", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
            public XProcessNode[] @return;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlAttributeAttribute()]
            public System.UInt64 sequence;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool sequenceSpecified;
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
            [System.Xml.Serialization.XmlRootAttribute("listProcessNodesByService", Namespace="http://www.cisco.com/AXL/API/1.0", IsNullable=false)]
            public class ListProcessNodesByServiceReq 
        {
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public XService service;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlAttributeAttribute()]
            public System.UInt64 sequence;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool sequenceSpecified;
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
            [System.Xml.Serialization.XmlRootAttribute("listProcessNodesByServiceResponse", Namespace="http://www.cisco.com/AXL/API/1.0", IsNullable=false)]
            public class ListProcessNodesByServiceRes 
        {
    
            /// <remarks/>
            [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlArrayItemAttribute("processNode", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
            public XProcessNode[] @return;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlAttributeAttribute()]
            public System.UInt64 sequence;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool sequenceSpecified;
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
            [System.Xml.Serialization.XmlRootAttribute("getProcessNodeService", Namespace="http://www.cisco.com/AXL/API/1.0", IsNullable=false)]
            public class GetProcessNodeServiceReq 
        {
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute("uuid", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlElementAttribute("processNodeId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlElementAttribute("processNodeName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlElementAttribute("service", typeof(XService), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")]
            public object Item;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public ItemChoiceType42 ItemElementName;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlAttributeAttribute()]
            public System.UInt64 sequence;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool sequenceSpecified;
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
            public enum ItemChoiceType42 
        {
    
            /// <remarks/>
            uuid,
    
            /// <remarks/>
            processNodeId,
    
            /// <remarks/>
            processNodeName,
    
            /// <remarks/>
            service,
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
            [System.Xml.Serialization.XmlRootAttribute("getProcessNodeServiceResponse", Namespace="http://www.cisco.com/AXL/API/1.0", IsNullable=false)]
            public class GetProcessNodeServiceRes 
        {
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public GetProcessNodeServiceResReturn @return;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlAttributeAttribute()]
            public System.UInt64 sequence;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool sequenceSpecified;
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
            public class GetProcessNodeServiceResReturn 
        {
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public XProcessNodeService processNodeService;
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
            public class XProcessNodeService 
        {
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute("processNodeName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlElementAttribute("processNode", typeof(XProcessNode), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public object Item;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public XService service;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public string fileName;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="nonNegativeInteger")]
            [System.ComponentModel.DefaultValueAttribute("0")]
            public string traceLevel = "0";
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="nonNegativeInteger")]
            [System.ComponentModel.DefaultValueAttribute("0")]
            public string userCategories = "0";
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.ComponentModel.DefaultValueAttribute(false)]
            public bool enable = false;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="nonNegativeInteger")]
            [System.ComponentModel.DefaultValueAttribute("250")]
            public string numFiles = "250";
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="nonNegativeInteger")]
            [System.ComponentModel.DefaultValueAttribute("10000")]
            public string numLines = "10000";
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="nonNegativeInteger")]
            [System.ComponentModel.DefaultValueAttribute("1440")]
            public string numMinutes = "1440";
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.ComponentModel.DefaultValueAttribute(false)]
            public bool includeNonDeviceTraces = false;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public bool useXML;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public string serverName;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.ComponentModel.DefaultValueAttribute(false)]
            public bool deviceNameMonitorFlag = false;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public bool deviceTypeMonitorFlag;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.ComponentModel.DefaultValueAttribute(false)]
            public bool fileTraceFlag = false;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.ComponentModel.DefaultValueAttribute(false)]
            public bool outputDebugStringFlag = false;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlAttributeAttribute()]
            public string uuid;
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
            [System.Xml.Serialization.XmlRootAttribute("updateProcessNodeService", Namespace="http://www.cisco.com/AXL/API/1.0", IsNullable=false)]
            public class UpdateProcessNodeServiceReq 
        {
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute("uuid", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlElementAttribute("processNodeId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlElementAttribute("processNodeName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlElementAttribute("service", typeof(XService), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")]
            public object Item;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public ItemChoiceType54 ItemElementName;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
            public string fileName;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="nonNegativeInteger")]
            public string traceLevel;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="nonNegativeInteger")]
            public string userCategories;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public bool enable;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool enableSpecified;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="nonNegativeInteger")]
            public string numFiles;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="nonNegativeInteger")]
            public string numLines;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="nonNegativeInteger")]
            public string numMinutes;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public bool includeNonDeviceTraces;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool includeNonDeviceTracesSpecified;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public bool useXML;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool useXMLSpecified;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
            public string serverName;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public bool deviceNameMonitorFlag;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool deviceNameMonitorFlagSpecified;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public bool deviceTypeMonitorFlag;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool deviceTypeMonitorFlagSpecified;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public bool fileTraceFlag;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool fileTraceFlagSpecified;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public bool outputDebugStringFlag;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool outputDebugStringFlagSpecified;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlAttributeAttribute()]
            public System.UInt64 sequence;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool sequenceSpecified;
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
            public enum ItemChoiceType54 
        {
    
            /// <remarks/>
            uuid,
    
            /// <remarks/>
            processNodeId,
    
            /// <remarks/>
            processNodeName,
    
            /// <remarks/>
            service,
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
            [System.Xml.Serialization.XmlRootAttribute("listRoutePartitionByName", Namespace="http://www.cisco.com/AXL/API/1.0", IsNullable=false)]
            public class ListBySearchString 
        {
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public string searchString;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlAttributeAttribute()]
            public System.UInt64 sequence;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool sequenceSpecified;
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
            [System.Xml.Serialization.XmlRootAttribute("listRoutePartitionByNameResponse", Namespace="http://www.cisco.com/AXL/API/1.0", IsNullable=false)]
            public class ListRoutePartitionRes 
        {
    
            /// <remarks/>
            [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlArrayItemAttribute("routePartition", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
            public XRoutePartition[] @return;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlAttributeAttribute()]
            public System.UInt64 sequence;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool sequenceSpecified;
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
            [System.Xml.Serialization.XmlRootAttribute("listDevicePoolByNameResponse", Namespace="http://www.cisco.com/AXL/API/1.0", IsNullable=false)]
            public class ListDevicePoolRes 
        {
    
            /// <remarks/>
            [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlArrayItemAttribute("devicePool", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
            public ListDevicePoolResDevicePool[] @return;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlAttributeAttribute()]
            public System.UInt64 sequence;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool sequenceSpecified;
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
            public class ListDevicePoolResDevicePool 
        {
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public string name;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlAttributeAttribute()]
            public string uuid;
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
            [System.Xml.Serialization.XmlRootAttribute("listPhoneTemplateByNameResponse", Namespace="http://www.cisco.com/AXL/API/1.0", IsNullable=false)]
            public class ListPhoneTemplateRes 
        {
    
            /// <remarks/>
            [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlArrayItemAttribute("phoneTemplate", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
            public ListPhoneTemplateResPhoneTemplate[] @return;
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
            public class ListPhoneTemplateResPhoneTemplate 
        {
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public string name;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlAttributeAttribute()]
            public string uuid;
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
            [System.Xml.Serialization.XmlRootAttribute("listDeviceByNameAndClass", Namespace="http://www.cisco.com/AXL/API/1.0", IsNullable=false)]
            public class ListDeviceByNameAndClassReq 
        {
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public string searchString;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public XClass @class;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlAttributeAttribute()]
            public System.UInt64 sequence;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool sequenceSpecified;
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
            [System.Xml.Serialization.XmlRootAttribute("listDeviceByNameAndClassResponse", Namespace="http://www.cisco.com/AXL/API/1.0", IsNullable=false)]
            public class ListDeviceRes 
        {
    
            /// <remarks/>
            [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlArrayItemAttribute("device", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
            public ListDeviceResDevice[] @return;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlAttributeAttribute()]
            public System.UInt64 sequence;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool sequenceSpecified;
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
            public class ListDeviceResDevice 
        {
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public string name;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public XProduct product;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public XModel model;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlAttributeAttribute()]
            public string uuid;
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
            [System.Xml.Serialization.XmlRootAttribute("listDeviceByServiceNameResponse", Namespace="http://www.cisco.com/AXL/API/1.0", IsNullable=false)]
            public class ListDeviceByServiceNameRes 
        {
    
            /// <remarks/>
            [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlArrayItemAttribute("device", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
            public ListDeviceByServiceNameResDevice[] @return;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlAttributeAttribute()]
            public System.UInt64 sequence;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool sequenceSpecified;
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
            public class ListDeviceByServiceNameResDevice 
        {
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public string name;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlAttributeAttribute()]
            public string uuid;
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
            [System.Xml.Serialization.XmlRootAttribute("listMOHAudioSourceByNameResponse", Namespace="http://www.cisco.com/AXL/API/1.0", IsNullable=false)]
            public class ListMOHAudioSourceRes 
        {
    
            /// <remarks/>
            [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlArrayItemAttribute("mohAudioSource", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
            public ListMOHAudioSourceResMohAudioSource[] @return;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlAttributeAttribute()]
            public System.UInt64 sequence;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool sequenceSpecified;
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
            public class ListMOHAudioSourceResMohAudioSource 
        {
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="nonNegativeInteger")]
            public string sourceId;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public string name;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlAttributeAttribute()]
            public string uuid;
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
            [System.Xml.Serialization.XmlRootAttribute("updateMOHAudioSource", Namespace="http://www.cisco.com/AXL/API/1.0", IsNullable=false)]
            public class UpdateMOHAudioSourceReq 
        {
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute("sourceId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="nonNegativeInteger")]
            [System.Xml.Serialization.XmlElementAttribute("uuid", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")]
            public string Item;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public ItemChoiceType75 ItemElementName;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public string name;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public string sourceFile;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public bool multicast;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool multicastSpecified;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public bool repeat;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool repeatSpecified;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlAttributeAttribute()]
            public System.UInt64 sequence;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool sequenceSpecified;
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
            public enum ItemChoiceType75 
        {
    
            /// <remarks/>
            sourceId,
    
            /// <remarks/>
            uuid,
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
            [System.Xml.Serialization.XmlRootAttribute("getMOHAudioSource", Namespace="http://www.cisco.com/AXL/API/1.0", IsNullable=false)]
            public class GetMOHAudioSourceByIDAndSourceReq 
        {
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute("sourceId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="nonNegativeInteger")]
            [System.Xml.Serialization.XmlElementAttribute("uuid", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")]
            public string Item;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public ItemChoiceType45 ItemElementName;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlAttributeAttribute()]
            public System.UInt64 sequence;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool sequenceSpecified;
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
            public enum ItemChoiceType45 
        {
    
            /// <remarks/>
            sourceId,
    
            /// <remarks/>
            uuid,
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
            [System.Xml.Serialization.XmlRootAttribute("getMOHAudioSourceResponse", Namespace="http://www.cisco.com/AXL/API/1.0", IsNullable=false)]
            public class GetMOHAudioSourceRes 
        {
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public GetMOHAudioSourceResReturn @return;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlAttributeAttribute()]
            public System.UInt64 sequence;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool sequenceSpecified;
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
            public class GetMOHAudioSourceResReturn 
        {
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public XMOHAudioSource mohAudioSource;
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
            public class XMOHAudioSource 
        {
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="nonNegativeInteger")]
            public string sourceId;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public string name;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public string sourceFile;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public bool multicast;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public bool repeat;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlAttributeAttribute()]
            public string uuid;
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
            [System.Xml.Serialization.XmlRootAttribute("listMediaResourceListByNameResponse", Namespace="http://www.cisco.com/AXL/API/1.0", IsNullable=false)]
            public class ListMediaResourceListRes 
        {
    
            /// <remarks/>
            [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlArrayItemAttribute("mediaResourceList", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
            public ListMediaResourceListResMediaResourceList[] @return;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlAttributeAttribute()]
            public System.UInt64 sequence;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool sequenceSpecified;
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
            public class ListMediaResourceListResMediaResourceList 
        {
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public string name;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlAttributeAttribute()]
            public string uuid;
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
            [System.Xml.Serialization.XmlRootAttribute("addMediaResourceList", Namespace="http://www.cisco.com/AXL/API/1.0", IsNullable=false)]
            public class AddMediaResourceListReq 
        {
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public XMediaResourceList mediaResourceList;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlAttributeAttribute()]
            public System.UInt64 sequence;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool sequenceSpecified;
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
            [System.Xml.Serialization.XmlRootAttribute("getMediaResourceListResponse", Namespace="http://www.cisco.com/AXL/API/1.0", IsNullable=false)]
            public class GetMediaResourceListRes 
        {
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public GetMediaResourceListResReturn @return;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlAttributeAttribute()]
            public System.UInt64 sequence;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool sequenceSpecified;
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
            public class GetMediaResourceListResReturn 
        {
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public XMediaResourceList mediaResourceList;
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
            [System.Xml.Serialization.XmlRootAttribute("updateMediaResourceList", Namespace="http://www.cisco.com/AXL/API/1.0", IsNullable=false)]
            public class UpdateMediaResourceListReq 
        {
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute("name", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlElementAttribute("uuid", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")]
            public string Item;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public ItemChoiceType37 ItemElementName;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public string newName;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlArrayItemAttribute("member", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
            public XMediaResourceListMember[] members;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlAttributeAttribute()]
            public System.UInt64 sequence;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool sequenceSpecified;
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
            public enum ItemChoiceType37 
        {
    
            /// <remarks/>
            name,
    
            /// <remarks/>
            uuid,
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
            [System.Xml.Serialization.XmlRootAttribute("listMediaResourceGroupByNameResponse", Namespace="http://www.cisco.com/AXL/API/1.0", IsNullable=false)]
            public class ListMediaResourceGroupRes 
        {
    
            /// <remarks/>
            [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlArrayItemAttribute("mediaResourceGroup", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
            public ListMediaResourceGroupResMediaResourceGroup[] @return;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlAttributeAttribute()]
            public System.UInt64 sequence;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool sequenceSpecified;
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
            public class ListMediaResourceGroupResMediaResourceGroup 
        {
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public string name;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlAttributeAttribute()]
            public string uuid;
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
            [System.Xml.Serialization.XmlRootAttribute("addMediaResourceGroup", Namespace="http://www.cisco.com/AXL/API/1.0", IsNullable=false)]
            public class AddMediaResourceGroupReq 
        {
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public XMediaResourceGroup mediaResourceGroup;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlAttributeAttribute()]
            public System.UInt64 sequence;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool sequenceSpecified;
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
            [System.Xml.Serialization.XmlRootAttribute("getMediaResourceGroupResponse", Namespace="http://www.cisco.com/AXL/API/1.0", IsNullable=false)]
            public class GetMediaResourceGroupRes 
        {
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public GetMediaResourceGroupResReturn @return;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlAttributeAttribute()]
            public System.UInt64 sequence;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool sequenceSpecified;
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
            public class GetMediaResourceGroupResReturn 
        {
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public XMediaResourceGroup mediaResourceGroup;
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
            [System.Xml.Serialization.XmlRootAttribute("updateMediaResourceGroup", Namespace="http://www.cisco.com/AXL/API/1.0", IsNullable=false)]
            public class UpdateMediaResourceGroupReq 
        {
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute("name", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlElementAttribute("uuid", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")]
            public string Item;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public ItemChoiceType65 ItemElementName;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public string newName;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public string description;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public bool multicast;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool multicastSpecified;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlArrayItemAttribute("member", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
            public XMediaResourceGroupMember[] members;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlAttributeAttribute()]
            public System.UInt64 sequence;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool sequenceSpecified;
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
            public enum ItemChoiceType65 
        {
    
            /// <remarks/>
            name,
    
            /// <remarks/>
            uuid,
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
            [System.Xml.Serialization.XmlRootAttribute("listLocationByNameResponse", Namespace="http://www.cisco.com/AXL/API/1.0", IsNullable=false)]
            public class ListLocationRes 
        {
    
            /// <remarks/>
            [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlArrayItemAttribute("location", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
            public XLocation[] @return;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlAttributeAttribute()]
            public System.UInt64 sequence;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool sequenceSpecified;
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
            [System.Xml.Serialization.XmlRootAttribute("listAARGroupByNameResponse", Namespace="http://www.cisco.com/AXL/API/1.0", IsNullable=false)]
            public class ListAARGroupRes 
        {
    
            /// <remarks/>
            [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlArrayItemAttribute("aarGroup", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
            public XAARNeighborhood[] @return;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlAttributeAttribute()]
            public System.UInt64 sequence;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool sequenceSpecified;
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
            [System.Xml.Serialization.XmlRootAttribute("listVoiceMailProfileByNameResponse", Namespace="http://www.cisco.com/AXL/API/1.0", IsNullable=false)]
            public class ListVoiceMailProfileRes 
        {
    
            /// <remarks/>
            [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlArrayItemAttribute("voiceMailProfile", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
            public XVoiceMailProfile[] @return;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlAttributeAttribute()]
            public System.UInt64 sequence;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool sequenceSpecified;
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
            [System.Xml.Serialization.XmlRootAttribute("listGatekeeperByNameResponse", Namespace="http://www.cisco.com/AXL/API/1.0", IsNullable=false)]
            public class ListGatekeeperRes 
        {
    
            /// <remarks/>
            [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlArrayItemAttribute("gatekeeper", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
            public ListGatekeeperResGatekeeper[] @return;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlAttributeAttribute()]
            public System.UInt64 sequence;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool sequenceSpecified;
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
            public class ListGatekeeperResGatekeeper 
        {
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public string name;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlAttributeAttribute()]
            public string uuid;
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
            [System.Xml.Serialization.XmlRootAttribute("addGatekeeper", Namespace="http://www.cisco.com/AXL/API/1.0", IsNullable=false)]
            public class AddGatekeeperReq 
        {
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public XGatekeeper gatekeeper;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlAttributeAttribute()]
            public System.UInt64 sequence;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool sequenceSpecified;
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
            [System.Xml.Serialization.XmlRootAttribute("getGatekeeperResponse", Namespace="http://www.cisco.com/AXL/API/1.0", IsNullable=false)]
            public class GetGatekeeperRes 
        {
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public GetGatekeeperResReturn @return;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlAttributeAttribute()]
            public System.UInt64 sequence;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool sequenceSpecified;
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
            public class GetGatekeeperResReturn 
        {
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public XGatekeeper gatekeeper;
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
            [System.Xml.Serialization.XmlRootAttribute("updateGatekeeper", Namespace="http://www.cisco.com/AXL/API/1.0", IsNullable=false)]
            public class UpdateGatekeeperReq 
        {
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute("name", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlElementAttribute("uuid", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")]
            public string Item;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public ItemChoiceType84 ItemElementName;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public string newName;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public string description;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="nonNegativeInteger")]
            public string rrqTimeToLive;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public bool retryTimeout;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool retryTimeoutSpecified;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public bool enableDevice;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool enableDeviceSpecified;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlAttributeAttribute()]
            public System.UInt64 sequence;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool sequenceSpecified;
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
            public enum ItemChoiceType84 
        {
    
            /// <remarks/>
            name,
    
            /// <remarks/>
            uuid,
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
            [System.Xml.Serialization.XmlRootAttribute("addH323Phone", Namespace="http://www.cisco.com/AXL/API/1.0", IsNullable=false)]
            public class AddH323PhoneReq 
        {
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public XH323Phone phone;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlAttributeAttribute()]
            public System.UInt64 sequence;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool sequenceSpecified;
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
            [System.Xml.Serialization.XmlRootAttribute("addH323Gateway", Namespace="http://www.cisco.com/AXL/API/1.0", IsNullable=false)]
            public class AddH323GatewayReq 
        {
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public XH323Gateway gateway;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlAttributeAttribute()]
            public System.UInt64 sequence;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool sequenceSpecified;
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
            [System.Xml.Serialization.XmlRootAttribute("addH323Trunk", Namespace="http://www.cisco.com/AXL/API/1.0", IsNullable=false)]
            public class AddH323TrunkReq 
        {
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public XH323Trunk trunk;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlAttributeAttribute()]
            public System.UInt64 sequence;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool sequenceSpecified;
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
            [System.Xml.Serialization.XmlRootAttribute("getH323PhoneResponse", Namespace="http://www.cisco.com/AXL/API/1.0", IsNullable=false)]
            public class GetH323PhoneRes 
        {
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public GetH323PhoneResReturn @return;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlAttributeAttribute()]
            public System.UInt64 sequence;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool sequenceSpecified;
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
            public class GetH323PhoneResReturn 
        {
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public XH323Phone phone;
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
            [System.Xml.Serialization.XmlRootAttribute("getH323GatewayResponse", Namespace="http://www.cisco.com/AXL/API/1.0", IsNullable=false)]
            public class GetH323GatewayRes 
        {
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public GetH323GatewayResReturn @return;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlAttributeAttribute()]
            public System.UInt64 sequence;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool sequenceSpecified;
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
            public class GetH323GatewayResReturn 
        {
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public XH323Gateway gateway;
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
            [System.Xml.Serialization.XmlRootAttribute("getH323TrunkResponse", Namespace="http://www.cisco.com/AXL/API/1.0", IsNullable=false)]
            public class GetH323Trunk 
        {
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public GetH323TrunkReturn @return;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlAttributeAttribute()]
            public System.UInt64 sequence;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool sequenceSpecified;
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
            public class GetH323TrunkReturn 
        {
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public XH323Gateway trunk;
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
            [System.Xml.Serialization.XmlRootAttribute("updateH323Phone", Namespace="http://www.cisco.com/AXL/API/1.0", IsNullable=false)]
            public class UpdateH323PhoneReq 
        {
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute("name", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlElementAttribute("uuid", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")]
            public string Item;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public ItemChoiceType40 ItemElementName;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public string newName;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public string description;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute("callingSearchSpaceId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlElementAttribute("callingSearchSpaceName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlChoiceIdentifierAttribute("Item1ElementName")]
            public string Item1;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public Item1ChoiceType8 Item1ElementName;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute("devicePoolName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlElementAttribute("devicePoolId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlChoiceIdentifierAttribute("Item2ElementName")]
            public string Item2;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public Item2ChoiceType5 Item2ElementName;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public XNetworkLocation networkLocation;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool networkLocationSpecified;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute("locationName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlElementAttribute("locationId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlChoiceIdentifierAttribute("Item3ElementName")]
            public string Item3;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public Item3ChoiceType4 Item3ElementName;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute("mediaResourceListId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlElementAttribute("mediaResourceListName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlChoiceIdentifierAttribute("Item4ElementName")]
            public string Item4;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public Item4ChoiceType4 Item4ElementName;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="nonNegativeInteger")]
            public string networkHoldMOHAudioSourceId;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="nonNegativeInteger")]
            public string userHoldMOHAudioSourceId;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute("automatedAlternateRoutingCSSId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlElementAttribute("automatedAlternateRoutingCSSName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlChoiceIdentifierAttribute("Item5ElementName")]
            public string Item5;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public Item5ChoiceType4 Item5ElementName;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute("aarNeighborhoodName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlElementAttribute("aarNeighborhoodId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlChoiceIdentifierAttribute("Item6ElementName")]
            public string Item6;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public Item6ChoiceType3 Item6ElementName;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public bool retryVideoCallAsAudio;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool retryVideoCallAsAudioSpecified;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public bool waitForFarEndH245TerminalSet;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool waitForFarEndH245TerminalSetSpecified;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public bool mtpRequired;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool mtpRequiredSpecified;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public string callerIdDN;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public XCallingPartySelection callingPartySelection;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool callingPartySelectionSpecified;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public XPresentationBit callingLineIdPresentation;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool callingLineIdPresentationSpecified;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public bool displayIEDelivery;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool displayIEDeliverySpecified;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public bool redirectOutboundNumberIE;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool redirectOutboundNumberIESpecified;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public bool redirectInboundNumberIE;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool redirectInboundNumberIESpecified;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public bool enableInboundFaststart;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool enableInboundFaststartSpecified;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public bool enableOutboundFaststart;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool enableOutboundFaststartSpecified;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public string ownerUserId;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="nonNegativeInteger")]
            public string signalingPort;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public UpdateH323PhoneReqGatekeeperInfo gatekeeperInfo;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlArrayItemAttribute("line", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
            public XLine[] lines;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.ComponentModel.DefaultValueAttribute(false)]
            public bool ignorePresentationIndicators = false;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlAttributeAttribute()]
            public System.UInt64 sequence;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool sequenceSpecified;
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
            public enum ItemChoiceType40 
        {
    
            /// <remarks/>
            name,
    
            /// <remarks/>
            uuid,
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
            public enum Item1ChoiceType8 
        {
    
            /// <remarks/>
            callingSearchSpaceId,
    
            /// <remarks/>
            callingSearchSpaceName,
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
            public enum Item2ChoiceType5 
        {
    
            /// <remarks/>
            devicePoolName,
    
            /// <remarks/>
            devicePoolId,
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
            public enum Item3ChoiceType4 
        {
    
            /// <remarks/>
            locationName,
    
            /// <remarks/>
            locationId,
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
            public enum Item4ChoiceType4 
        {
    
            /// <remarks/>
            mediaResourceListId,
    
            /// <remarks/>
            mediaResourceListName,
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
            public enum Item5ChoiceType4 
        {
    
            /// <remarks/>
            automatedAlternateRoutingCSSId,
    
            /// <remarks/>
            automatedAlternateRoutingCSSName,
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
            public enum Item6ChoiceType3 
        {
    
            /// <remarks/>
            aarNeighborhoodName,
    
            /// <remarks/>
            aarNeighborhoodId,
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
            public class UpdateH323PhoneReqGatekeeperInfo 
        {
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute("gatekeeperName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlElementAttribute("gatekeeperId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")]
            public string Item;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public ItemChoiceType41 ItemElementName;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public string e164;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public string technologyPrefix;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public string zone;
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
            public enum ItemChoiceType41 
        {
    
            /// <remarks/>
            gatekeeperName,
    
            /// <remarks/>
            gatekeeperId,
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
            [System.Xml.Serialization.XmlIncludeAttribute(typeof(UpdateH323TrunkReq))]
            [System.Xml.Serialization.XmlRootAttribute("updateH323Gateway", Namespace="http://www.cisco.com/AXL/API/1.0", IsNullable=false)]
            public class UpdateH323GatewayReq 
        {
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute("name", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlElementAttribute("uuid", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")]
            public string Item;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public ItemChoiceType70 ItemElementName;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public string newName;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public string description;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute("callingSearchSpaceId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlElementAttribute("callingSearchSpaceName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlChoiceIdentifierAttribute("Item1ElementName")]
            public string Item1;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public Item1ChoiceType15 Item1ElementName;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute("devicePoolName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlElementAttribute("devicePoolId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlChoiceIdentifierAttribute("Item2ElementName")]
            public string Item2;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public Item2ChoiceType12 Item2ElementName;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public XNetworkLocation networkLocation;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool networkLocationSpecified;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute("locationName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlElementAttribute("locationId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlChoiceIdentifierAttribute("Item3ElementName")]
            public string Item3;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public Item3ChoiceType11 Item3ElementName;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute("mediaResourceListId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlElementAttribute("mediaResourceListName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlChoiceIdentifierAttribute("Item4ElementName")]
            public string Item4;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public Item4ChoiceType10 Item4ElementName;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="nonNegativeInteger")]
            public string networkHoldMOHAudioSourceId;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="nonNegativeInteger")]
            public string userHoldMOHAudioSourceId;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute("automatedAlternateRoutingCSSId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlElementAttribute("automatedAlternateRoutingCSSName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlChoiceIdentifierAttribute("Item5ElementName")]
            public string Item5;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public Item5ChoiceType8 Item5ElementName;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute("aarNeighborhoodName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlElementAttribute("aarNeighborhoodId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlChoiceIdentifierAttribute("Item6ElementName")]
            public string Item6;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public Item6ChoiceType6 Item6ElementName;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public bool retryVideoCallAsAudio;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool retryVideoCallAsAudioSpecified;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public bool waitForFarEndH245TerminalSet;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool waitForFarEndH245TerminalSetSpecified;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public bool mtpRequired;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool mtpRequiredSpecified;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public string callerIdDN;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public XCallingPartySelection callingPartySelection;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool callingPartySelectionSpecified;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public XPresentationBit callingLineIdPresentation;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool callingLineIdPresentationSpecified;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public bool displayIEDelivery;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool displayIEDeliverySpecified;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public bool redirectOutboundNumberIE;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool redirectOutboundNumberIESpecified;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public bool redirectInboundNumberIE;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool redirectInboundNumberIESpecified;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public bool enableInboundFaststart;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool enableInboundFaststartSpecified;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public bool enableOutboundFaststart;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool enableOutboundFaststartSpecified;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public UpdateH323GatewayReqSignificantDigits significantDigits;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public string prefixDN;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public XPriOfNumber calledPartyIENumberType;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool calledPartyIENumberTypeSpecified;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public XPriOfNumber callingPartyIENumberType;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool callingPartyIENumberTypeSpecified;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public XNumberingPlan calledNumberingPlan;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool calledNumberingPlanSpecified;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public XNumberingPlan callingNumberingPlan;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool callingNumberingPlanSpecified;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public XTunneledProtocol tunneledProtocol;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.ComponentModel.DefaultValueAttribute(false)]
            public bool pathReplacementSupport = false;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlAttributeAttribute()]
            public System.UInt64 sequence;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool sequenceSpecified;
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
            public enum ItemChoiceType70 
        {
    
            /// <remarks/>
            name,
    
            /// <remarks/>
            uuid,
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
            public enum Item1ChoiceType15 
        {
    
            /// <remarks/>
            callingSearchSpaceId,
    
            /// <remarks/>
            callingSearchSpaceName,
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
            public enum Item2ChoiceType12 
        {
    
            /// <remarks/>
            devicePoolName,
    
            /// <remarks/>
            devicePoolId,
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
            public enum Item3ChoiceType11 
        {
    
            /// <remarks/>
            locationName,
    
            /// <remarks/>
            locationId,
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
            public enum Item4ChoiceType10 
        {
    
            /// <remarks/>
            mediaResourceListId,
    
            /// <remarks/>
            mediaResourceListName,
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
            public enum Item5ChoiceType8 
        {
    
            /// <remarks/>
            automatedAlternateRoutingCSSId,
    
            /// <remarks/>
            automatedAlternateRoutingCSSName,
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
            public enum Item6ChoiceType6 
        {
    
            /// <remarks/>
            aarNeighborhoodName,
    
            /// <remarks/>
            aarNeighborhoodId,
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
            public class UpdateH323GatewayReqSignificantDigits 
        {
    
            /// <remarks/>
            [System.Xml.Serialization.XmlAttributeAttribute()]
            public bool enable;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlTextAttribute(DataType="nonNegativeInteger")]
            public string Value;
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
            [System.Xml.Serialization.XmlRootAttribute("updateH323Trunk", Namespace="http://www.cisco.com/AXL/API/1.0", IsNullable=false)]
            public class UpdateH323TrunkReq : UpdateH323GatewayReq 
        {
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute("remoteServerInfo", typeof(UpdateH323TrunkReqRemoteServerInfo), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlElementAttribute("gatekeeperInfo", typeof(UpdateH323TrunkReqGatekeeperInfo), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public object Item7;
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
            public class UpdateH323TrunkReqRemoteServerInfo 
        {
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public string server1;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public string server2;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public string server3;
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
            public class UpdateH323TrunkReqGatekeeperInfo 
        {
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute("gatekeeperName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlElementAttribute("gatekeeperId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")]
            public string Item;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public ItemChoiceType71 ItemElementName;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public XTerminal terminal;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool terminalSpecified;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public string technologyPrefix;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public string zone;
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
            public enum ItemChoiceType71 
        {
    
            /// <remarks/>
            gatekeeperName,
    
            /// <remarks/>
            gatekeeperId,
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
            [System.Xml.Serialization.XmlRootAttribute("addSIPTrunk", Namespace="http://www.cisco.com/AXL/API/1.0", IsNullable=false)]
            public class AddSIPTrunkReq 
        {
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public XSIPTrunk trunk;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlAttributeAttribute()]
            public System.UInt64 sequence;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool sequenceSpecified;
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
            [System.Xml.Serialization.XmlRootAttribute("getSIPTrunkResponse", Namespace="http://www.cisco.com/AXL/API/1.0", IsNullable=false)]
            public class GetSIPTrunk 
        {
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public GetSIPTrunkReturn @return;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlAttributeAttribute()]
            public System.UInt64 sequence;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool sequenceSpecified;
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
            public class GetSIPTrunkReturn 
        {
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public XSIPTrunk trunk;
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
            [System.Xml.Serialization.XmlRootAttribute("updateSIPTrunk", Namespace="http://www.cisco.com/AXL/API/1.0", IsNullable=false)]
            public class UpdateSIPTrunkReq 
        {
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute("name", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlElementAttribute("uuid", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")]
            public string Item;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public ItemChoiceType59 ItemElementName;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public string newName;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public string description;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute("callingSearchSpaceId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlElementAttribute("callingSearchSpaceName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlChoiceIdentifierAttribute("Item1ElementName")]
            public string Item1;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public Item1ChoiceType11 Item1ElementName;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute("devicePoolName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlElementAttribute("devicePoolId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlChoiceIdentifierAttribute("Item2ElementName")]
            public string Item2;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public Item2ChoiceType8 Item2ElementName;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public XNetworkLocation networkLocation;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool networkLocationSpecified;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute("locationName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlElementAttribute("locationId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlChoiceIdentifierAttribute("Item3ElementName")]
            public string Item3;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public Item3ChoiceType7 Item3ElementName;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute("mediaResourceListId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlElementAttribute("mediaResourceListName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlChoiceIdentifierAttribute("Item4ElementName")]
            public string Item4;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public Item4ChoiceType6 Item4ElementName;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="nonNegativeInteger")]
            public string networkHoldMOHAudioSourceId;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="nonNegativeInteger")]
            public string userHoldMOHAudioSourceId;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute("automatedAlternateRoutingCSSId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlElementAttribute("automatedAlternateRoutingCSSName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlChoiceIdentifierAttribute("Item5ElementName")]
            public string Item5;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public Item5ChoiceType5 Item5ElementName;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute("aarNeighborhoodName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlElementAttribute("aarNeighborhoodId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlChoiceIdentifierAttribute("Item6ElementName")]
            public string Item6;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public Item6ChoiceType4 Item6ElementName;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public int mlppDomainId;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool mlppDomainIdSpecified;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public XStatus mlppIndicationStatus;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool mlppIndicationStatusSpecified;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public XPreemption preemption;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool preemptionSpecified;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public bool retryVideoCallAsAudio;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool retryVideoCallAsAudioSpecified;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public bool mtpRequired;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool mtpRequiredSpecified;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public string destinationaddress;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public bool destAddrIsSRV;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool destAddrIsSRVSpecified;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="integer")]
            [System.ComponentModel.DefaultValueAttribute("0")]
            public string destinationport = "0";
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="integer")]
            public string incomingport;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public XSIPCodec tkSipCodec;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool tkSipCodecSpecified;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public XTransport OutgoingTransportType;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool OutgoingTransportTypeSpecified;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public UpdateSIPTrunkReqSigDigits sigDigits;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public XPresentationBit connectedNamePresentation;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool connectedNamePresentationSpecified;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public XPresentationBit connectedPartyIdPresentation;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool connectedPartyIdPresentationSpecified;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public XCallingPartySelection callingPartySelection;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool callingPartySelectionSpecified;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public XPresentationBit callingname;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool callingnameSpecified;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public XPresentationBit callingLineIdPresentation;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool callingLineIdPresentationSpecified;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public string prefixDN;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public string callerName;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public string callerIdDN;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public bool acceptInboundRDNIS;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool acceptInboundRDNISSpecified;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public bool acceptOutboundRDNIS;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool acceptOutboundRDNISSpecified;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlAttributeAttribute()]
            public System.UInt64 sequence;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool sequenceSpecified;
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
            public enum ItemChoiceType59 
        {
    
            /// <remarks/>
            name,
    
            /// <remarks/>
            uuid,
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
            public enum Item1ChoiceType11 
        {
    
            /// <remarks/>
            callingSearchSpaceId,
    
            /// <remarks/>
            callingSearchSpaceName,
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
            public enum Item2ChoiceType8 
        {
    
            /// <remarks/>
            devicePoolName,
    
            /// <remarks/>
            devicePoolId,
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
            public enum Item3ChoiceType7 
        {
    
            /// <remarks/>
            locationName,
    
            /// <remarks/>
            locationId,
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
            public enum Item4ChoiceType6 
        {
    
            /// <remarks/>
            mediaResourceListId,
    
            /// <remarks/>
            mediaResourceListName,
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
            public enum Item5ChoiceType5 
        {
    
            /// <remarks/>
            automatedAlternateRoutingCSSId,
    
            /// <remarks/>
            automatedAlternateRoutingCSSName,
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
            public enum Item6ChoiceType4 
        {
    
            /// <remarks/>
            aarNeighborhoodName,
    
            /// <remarks/>
            aarNeighborhoodId,
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
            public class UpdateSIPTrunkReqSigDigits 
        {
    
            /// <remarks/>
            [System.Xml.Serialization.XmlAttributeAttribute()]
            public bool enable;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlTextAttribute(DataType="nonNegativeInteger")]
            public string Value;
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
            [System.Xml.Serialization.XmlRootAttribute("addPilotPoint", Namespace="http://www.cisco.com/AXL/API/1.0", IsNullable=false)]
            public class AddPilotPointReq 
        {
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public XPilotPoint pilotPoint;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlAttributeAttribute()]
            public System.UInt64 sequence;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool sequenceSpecified;
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
            public class XPilotPoint 
        {
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="Name")]
            public string name;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute("devicePoolName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlElementAttribute("devicePool", typeof(XDevicePool), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public object Item;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute("routePartition", typeof(XRoutePartition), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlElementAttribute("routePartitionName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public object Item1;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute("callingSearchSpace", typeof(XCallingSearchSpace), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlElementAttribute("callingSearchSpaceName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="Name")]
            public object Item2;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public string pilotNumber;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public bool useFirstAvailable;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute("location", typeof(XLocation), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlElementAttribute("locationName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public object Item3;
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
            [System.Xml.Serialization.XmlRootAttribute("updatePilotPoint", Namespace="http://www.cisco.com/AXL/API/1.0", IsNullable=false)]
            public class UpdatePilotPointReq 
        {
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute("name", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlElementAttribute("uuid", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")]
            public string Item;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public ItemChoiceType36 ItemElementName;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public string newName;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute("devicePoolName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlElementAttribute("devicePool", typeof(XDevicePool), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public object Item1;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute("routePartitionName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlElementAttribute("routePartition", typeof(XRoutePartition), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public object Item2;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute("callingSearchSpaceName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="Name")]
            [System.Xml.Serialization.XmlElementAttribute("callingSearchSpace", typeof(XCallingSearchSpace), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public object Item3;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public string pilotNumber;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public bool useFirstAvailable;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool useFirstAvailableSpecified;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute("locationName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlElementAttribute("location", typeof(XLocation), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public object Item4;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlAttributeAttribute()]
            public System.UInt64 sequence;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool sequenceSpecified;
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
            public enum ItemChoiceType36 
        {
    
            /// <remarks/>
            name,
    
            /// <remarks/>
            uuid,
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
            [System.Xml.Serialization.XmlRootAttribute("getPilotPointResponse", Namespace="http://www.cisco.com/AXL/API/1.0", IsNullable=false)]
            public class GetPilotPointRes 
        {
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public GetPilotPointResReturn @return;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlAttributeAttribute()]
            public System.UInt64 sequence;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool sequenceSpecified;
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
            public class GetPilotPointResReturn 
        {
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public XPilotPoint pilotPoint;
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
            [System.Xml.Serialization.XmlRootAttribute("executeSQLQuery", Namespace="http://www.cisco.com/AXL/API/1.0", IsNullable=false)]
            public class ExecuteSQLQueryReq 
        {
    
            /// <remarks/>
            [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            public string sql;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlAttributeAttribute()]
            public System.UInt64 sequence;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool sequenceSpecified;
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
            [System.Xml.Serialization.XmlRootAttribute("executeSQLQueryResponse", Namespace="http://www.cisco.com/AXL/API/1.0", IsNullable=false)]
            public class ExecuteSQLQueryRes 
        {
    
            /// <remarks/>
            [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
            [System.Xml.Serialization.XmlArrayItemAttribute("row", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
            public object[] @return;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlAttributeAttribute()]
            public System.UInt64 sequence;
    
            /// <remarks/>
            [System.Xml.Serialization.XmlIgnoreAttribute()]
            public bool sequenceSpecified;
        }
    }
}