<?xml version="1.0"?>
<!-- edited with XML Spy v4.2 U (http://www.xmlspy.com) by Gokul Krishnan (Cisco Systems, Inc.) -->
<!-- edited with XMLSPY v5 rel. 4 U (http://www.xmlspy.com) by Jerry Vander Voord (Cisco Systems) -->
<xsd:schema targetNamespace="http://www.cisco.com/AXL/1.0" xmlns:axl="http://www.cisco.com/AXL/1.0" xmlns:xsd="http://www.w3.org/2001/XMLSchema" elementFormDefault="unqualified" attributeFormDefault="unqualified">
	<xsd:annotation>
		<xsd:documentation>

Version 1.00

Copyright (c) 2001 Cisco Systems, Inc.
	
**********************
* CISCO CONFIDENTIAL *
**********************
	
</xsd:documentation>
	</xsd:annotation>
	<!-- *********************************************************** -->
	<!-- Device Family                                               -->
	<!-- *********************************************************** -->
	<xsd:complexType name="XDevice">
		<xsd:annotation>
			<xsd:documentation>Abstraction of all devices in the Call Manager system.</xsd:documentation>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="name" type="axl:UniqueName128">
				<xsd:annotation>
					<xsd:documentation>The device name, using only URL-friendly characters.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="description" type="axl:String128" minOccurs="0">
				<xsd:annotation>
					<xsd:documentation>Optional description of the device.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:sequence>
				<xsd:annotation>
					<xsd:documentation>Product/Model/Class block</xsd:documentation>
				</xsd:annotation>
				<xsd:choice>
					<xsd:annotation>
						<xsd:documentation>Product information is read-only except when creating a device.</xsd:documentation>
					</xsd:annotation>
					<xsd:element name="product" type="axl:XProduct">
						<xsd:annotation>
							<xsd:documentation>Product ID string.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="productInfo" type="axl:XProductInfo">
						<xsd:annotation>
							<xsd:documentation>Complete product information block.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
				</xsd:choice>
				<xsd:choice>
					<xsd:annotation>
						<xsd:documentation>Model information is read-only.</xsd:documentation>
					</xsd:annotation>
					<xsd:element name="model" type="axl:XModel">
						<xsd:annotation>
							<xsd:documentation>Model ID string.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="modelInfo" type="axl:XModelInfo">
						<xsd:annotation>
							<xsd:documentation>Complete model information block.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
				</xsd:choice>
				<xsd:element name="class" type="axl:XClass">
					<xsd:annotation>
						<xsd:documentation>Class ID string. Class information is read-only except when creating a device.</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
			</xsd:sequence>
			<xsd:sequence>
				<xsd:annotation>
					<xsd:documentation>Protocol block</xsd:documentation>
				</xsd:annotation>
				<xsd:element name="protocol" type="axl:XDeviceProtocol">
					<xsd:annotation>
						<xsd:documentation>Protocol information is read-only except when creating a device.</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
				<xsd:element name="protocolSide" type="axl:XProtocolSide">
					<xsd:annotation>
						<xsd:documentation>Side information is read-only except when creating a device.</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
			</xsd:sequence>
			<xsd:choice minOccurs="0">
				<xsd:annotation>
					<xsd:documentation>Any device that makes calls has a calling search space.</xsd:documentation>
				</xsd:annotation>
				<xsd:element name="callingSearchSpace" type="axl:XCallingSearchSpace">
					<xsd:annotation>
						<xsd:documentation>Only the uuid attribute is read by the AXL API.</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
				<xsd:element name="callingSearchSpaceName" type="axl:UniqueName50"/>
			</xsd:choice>
			<xsd:choice>
				<xsd:annotation>
					<xsd:documentation>Device Pools are required for  most devices, including phones and gateways.</xsd:documentation>
				</xsd:annotation>
				<xsd:element name="devicePool" type="axl:XDevicePool">
					<xsd:annotation>
						<xsd:documentation>Only the uuid attribute is read by the AXL API.</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
				<xsd:element name="devicePoolName" type="axl:UniqueString50"/>
			</xsd:choice>
			<xsd:element name="networkLocation" type="axl:XNetworkLocation" nillable="false" minOccurs="0">
				<xsd:annotation>
					<xsd:documentation>The new Device Destination flag for Trunk to Trunk Transfer and Drop Conference Feature is required for most gateways, except FXS gateways and phones. Not Nullable.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:choice minOccurs="0">
				<xsd:annotation>
					<xsd:documentation>All devices that receive calls implicitly have a location for bandwidth negotiation. If the location is not defined, it is assumed to be LOCAL.</xsd:documentation>
				</xsd:annotation>
				<xsd:element name="location" type="axl:XLocation">
					<xsd:annotation>
						<xsd:documentation>Only the uuid attribute is read by the AXL API.</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
				<xsd:element name="locationName" type="axl:String50"/>
			</xsd:choice>
			<xsd:choice minOccurs="0">
				<xsd:annotation>
					<xsd:documentation>Media Resource (MOH) information.</xsd:documentation>
				</xsd:annotation>
				<xsd:element name="mediaResourceList" type="axl:XMediaResourceList">
					<xsd:annotation>
						<xsd:documentation>Only the uuid attribute is read by the AXL API.</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
				<xsd:element name="mediaResourceListName" type="axl:String50"/>
			</xsd:choice>
			<xsd:element name="networkHoldMOHAudioSourceId" type="axl:XMOHAudioSourceId" nillable="false" minOccurs="0"/>
			<xsd:element name="userHoldMOHAudioSourceId" type="axl:XMOHAudioSourceId" nillable="false" minOccurs="0"/>
			<xsd:choice minOccurs="0">
				<xsd:element name="automatedAlternateRoutingCSS" type="axl:XCallingSearchSpace">
					<xsd:annotation>
						<xsd:documentation>The calling search space used by Automated Alternate Routing. Nullable. Only the uuid attribute is read by the AXL API.</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
				<xsd:element name="automatedAlternateRoutingCSSName" type="axl:String50">
					<xsd:annotation>
						<xsd:documentation>The name of the calling search space used by Automated Alternate Routing.  Nullable.</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
			</xsd:choice>
			<xsd:choice minOccurs="0">
				<xsd:element name="aarNeighborhood" type="axl:XAARNeighborhood">
					<xsd:annotation>
						<xsd:documentation>For IP Phones and Gateways. Nullable. Only the uuid attribute is read by the AXL API.</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
				<xsd:element name="aarNeighborhoodName" type="axl:String50"/>
			</xsd:choice>
			<xsd:element name="loadInformation" type="axl:XLoadInformation" minOccurs="0">
				<xsd:annotation>
					<xsd:documentation>For devices with load information, if any special load information is specified, the special attribute is set to TRUE. Otherwise, the load information is the default for the product.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="vendorConfig" type="axl:XVendorConfig" minOccurs="0"/>
			<xsd:element name="versionStamp" type="axl:XUUID" minOccurs="0">
				<xsd:annotation>
					<xsd:documentation>UUID changed each time the device is updated.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="traceFlag" type="xsd:boolean" minOccurs="0"/>
			<xsd:element name="mlppDomainId" type="xsd:int" nillable="false" minOccurs="0">
				<xsd:annotation>
					<xsd:documentation>This setting only affects devices that support MLPP.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="mlppIndicationStatus" type="axl:XStatus" nillable="false" minOccurs="0">
				<xsd:annotation>
					<xsd:documentation>This setting only affects devices that support MLPP.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="preemption" type="axl:XPreemption" nillable="false" minOccurs="0">
				<xsd:annotation>
					<xsd:documentation>This setting only affects devices that support MLPP.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="retryVideoCallAsAudio" type="xsd:boolean" default="true" nillable="false" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="ctiid" type="xsd:positiveInteger">
			<xsd:annotation>
				<xsd:documentation>Computer Telephony Interface ID, Unique, Cannot be null.</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
		<xsd:attribute name="uuid" type="axl:XUUID"/>
	</xsd:complexType>
	<xsd:complexType name="XVoiceMailPort">
		<xsd:complexContent>
			<xsd:extension base="axl:XDevice">
				<xsd:sequence minOccurs="0">
					<xsd:element name="line" type="axl:XLine">
						<xsd:annotation>
							<xsd:documentation>This is the entry to the DeviceNumPlanMap table.  The directory number is referred to by the "dirn" or "dirnId" sub-element.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="XCTIRoutePoint">
		<xsd:complexContent>
			<xsd:extension base="axl:XDevice">
				<xsd:sequence minOccurs="0">
					<xsd:element name="lines">
						<xsd:complexType>
							<xsd:choice>
								<xsd:element name="line" type="axl:XLine" maxOccurs="unbounded">
									<xsd:annotation>
										<xsd:documentation>An XLine is an entry in the DeviceNumPlanMap table.  The actual directory number is referenced inside the XLine object by the "dirn" or "dirnId" element.</xsd:documentation>
									</xsd:annotation>
								</xsd:element>
								<xsd:element name="lineId" type="axl:XLineId" maxOccurs="unbounded"/>
								<xsd:element name="lineIdentifier" type="axl:XNumplanIdentifier" maxOccurs="unbounded">
									<xsd:annotation>
										<xsd:documentation>The lineIdentifier is a shorthand method that refers to a particular direcotyr number.</xsd:documentation>
									</xsd:annotation>
								</xsd:element>
							</xsd:choice>
						</xsd:complexType>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="XConferenceBridge">
		<xsd:sequence>
			<xsd:element name="name" type="axl:UniqueName128" nillable="false"/>
			<xsd:element name="description" type="axl:String128" nillable="true" minOccurs="0"/>
			<xsd:element name="product" type="axl:XProduct" nillable="false"/>
			<xsd:choice>
				<xsd:element name="devicePool" type="axl:XDevicePool" nillable="false">
					<xsd:annotation>
						<xsd:documentation>Only the uuid attribute is read by the AXL API.</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
				<xsd:element name="devicePoolName" type="axl:UniqueString50" nillable="false"/>
			</xsd:choice>
			<xsd:choice minOccurs="0">
				<xsd:element name="location" type="axl:XLocation" nillable="false">
					<xsd:annotation>
						<xsd:documentation>Only the uuid attribute is read by the AXL API.</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
				<xsd:element name="locationName" type="axl:String50" default="Hub_None" nillable="false"/>
			</xsd:choice>
			<xsd:element name="subUnit" type="xsd:nonNegativeInteger" nillable="false" minOccurs="0">
				<xsd:annotation>
					<xsd:documentation>Applicable for               Cisco Conference Bridge (WS-SVC-CMM)             and Cisco Media Server(WS-SVC-CMM-MS).  Valid values range from 1 to 4.The value should be given as per the formula.       Cisco Media Server :            subunit = ((Extract two digits after 'A' from the name)-2)/3 + 1.                                   Cisco Conference Bridge:      subunit = ((Extract two digits after 'C' from the name)-1)/3 + 1   </xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="loadInformation" type="axl:XLoadInformation" nillable="true" minOccurs="0">
				<xsd:annotation>
					<xsd:documentation>This tag is used only by Cisco Conference Bridge Hardware.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="vendorConfig" type="axl:XVendorConfig" nillable="true" minOccurs="0">
				<xsd:annotation>
					<xsd:documentation>This tag is used only by     Cisco Video Conference Bridge(IPVC-35xx),Cisco Conference Bridge (WS-SVC-CMM) and    Cisco Media Server(WS-SVC-CMM-MS).</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="maximumCapacity" type="xsd:nonNegativeInteger" default="32" nillable="false" minOccurs="0">
				<xsd:annotation>
					<xsd:documentation>This tag is used only by Cisco Conference Bridge(WS-SVC-CMM) and   Cisco Media Server(WS-SVC-CMM-MS). Valid values for this tag are 32,64,96,128.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
		</xsd:sequence>
		<xsd:attribute name="uuid" type="axl:XUUID"/>
	</xsd:complexType>
	<xsd:complexType name="XPilotHuntGroup">
		<xsd:sequence>
			<xsd:choice>
				<xsd:element name="pilotPoint">
					<xsd:annotation>
						<xsd:documentation>Only the uuid attribute is read by the AXL API.</xsd:documentation>
					</xsd:annotation>
					<xsd:complexType>
						<xsd:complexContent>
							<xsd:extension base="axl:XPilotPoint">
								<xsd:attribute name="uuid" type="axl:XUUID"/>
							</xsd:extension>
						</xsd:complexContent>
					</xsd:complexType>
				</xsd:element>
				<xsd:element name="pilotPointName" type="axl:String50" nillable="false"/>
			</xsd:choice>
			<xsd:element name="members">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="member" type="axl:XPilotHuntGroupMember" maxOccurs="unbounded"/>
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
		</xsd:sequence>
		<xsd:attribute name="uuid" type="axl:XUUID"/>
	</xsd:complexType>
	<xsd:complexType name="XPilotHuntGroupMember">
		<xsd:sequence>
			<xsd:element name="sortOrder" type="xsd:nonNegativeInteger"/>
			<xsd:choice>
				<xsd:element name="deviceMemberInfo">
					<xsd:complexType>
						<xsd:sequence>
							<xsd:element name="alwaysRoute" type="xsd:boolean" minOccurs="0"/>
							<xsd:element name="dirn" type="axl:XNPDirectoryNumber">
								<xsd:annotation>
									<xsd:documentation>Only the uuid attribute is read by the AXL API.</xsd:documentation>
								</xsd:annotation>
							</xsd:element>
						</xsd:sequence>
					</xsd:complexType>
				</xsd:element>
				<xsd:element name="userMemberInfo">
					<xsd:complexType>
						<xsd:sequence>
							<xsd:element name="lineIndex" type="xsd:nonNegativeInteger"/>
							<xsd:element name="pilotUserId"/>
						</xsd:sequence>
					</xsd:complexType>
				</xsd:element>
			</xsd:choice>
		</xsd:sequence>
	</xsd:complexType>
	<xsd:complexType name="XPilotUser">
		<xsd:sequence minOccurs="0">
			<xsd:element name="userId" type="axl:String255" nillable="false"/>
			<xsd:element name="password" type="xsd:string" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uuid" type="axl:XUUID"/>
	</xsd:complexType>
	<xsd:complexType name="XGateway">
		<xsd:annotation>
			<xsd:documentation>This is an abstract base type for all Gateways to extend.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axl:XDevice">
				<xsd:sequence>
					<xsd:annotation>
						<xsd:documentation>Supported only by a few MGCP gateways like 26XX, 366X, 37XX, 269X, 38XX, VG224.</xsd:documentation>
					</xsd:annotation>
					<xsd:element name="packetCaptureMode" type="axl:XPacketCaptureMode" default="None" minOccurs="0"/>
					<xsd:element name="packetCaptureDuration" type="xsd:positiveInteger" default="60" minOccurs="0"/>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="XAnalogGateway">
		<xsd:annotation>
			<xsd:documentation>Analog Gateways extend Device and are concrete types.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axl:XGateway">
				<xsd:sequence>
					<xsd:element name="country" type="axl:XCountry" nillable="true" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>The gateway's country code. Nullable.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="maxPorts" type="xsd:positiveInteger">
						<xsd:annotation>
							<xsd:documentation>The maximum number of ports this gateway supports.  Read-only.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="ports" type="axl:XAnalogPortList">
						<xsd:annotation>
							<xsd:documentation>The list of ports on the gateway.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="trunkSelectionOrder" type="axl:XTrunkSelectionOrder">
						<xsd:annotation>
							<xsd:documentation>Describes the trunk-selection order for this gateway (ie, bottom-up, top-down).</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="helpURL" type="xsd:anyURI" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>Read-only.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="XDigitalGateway" abstract="true">
		<xsd:complexContent>
			<xsd:extension base="axl:XGateway">
				<xsd:sequence minOccurs="0">
					<xsd:element name="country" type="axl:XCountry" nillable="true" minOccurs="0"/>
					<xsd:element name="trunkSelectionOrder" type="axl:XTrunkSelectionOrder" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>Does not apply to PRI gateways.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="XPresenceGroup">
		<xsd:sequence minOccurs="0">
			<xsd:element name="name" type="axl:String128"/>
			<xsd:element name="description" type="axl:String128" minOccurs="0"/>
			<xsd:element name="matrix" type="axl:XMatrix" minOccurs="0"/>
			<xsd:element name="isStandard" type="xsd:boolean" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<xsd:complexType name="XIPPhone">
		<xsd:complexContent>
			<xsd:extension base="axl:XPhone">
				<xsd:sequence minOccurs="0">
					<xsd:element name="addOnModules" nillable="true" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>Additional modules attached to the phone. There can be 0, 1, or 2.</xsd:documentation>
						</xsd:annotation>
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="addOnModule" type="axl:XAddOnModule" minOccurs="0" maxOccurs="2"/>
							</xsd:sequence>
						</xsd:complexType>
					</xsd:element>
					<xsd:element name="userLocale" type="axl:XUserLocale" nillable="true" minOccurs="0"/>
					<xsd:element name="networkLocale" type="axl:XCountry" nillable="true" minOccurs="0"/>
					<xsd:choice minOccurs="0">
						<xsd:element name="securityProfile">
							<xsd:annotation>
								<xsd:documentation>Only the uuid attribute is read by the AXL API.</xsd:documentation>
							</xsd:annotation>
							<xsd:complexType>
								<xsd:attribute name="uuid" type="axl:XUUID"/>
							</xsd:complexType>
						</xsd:element>
						<xsd:element name="securityProfileName" type="axl:UniqueString50"/>
					</xsd:choice>
					<xsd:element name="idleTimeout" type="xsd:nonNegativeInteger" nillable="true" minOccurs="0"/>
					<xsd:element name="authenticationURL" type="xsd:anyURI" nillable="true" minOccurs="0"/>
					<xsd:element name="directoryURL" type="xsd:anyURI" nillable="true" minOccurs="0"/>
					<xsd:element name="idleURL" type="xsd:anyURI" nillable="true" minOccurs="0"/>
					<xsd:element name="informationURL" type="xsd:anyURI" nillable="true" minOccurs="0"/>
					<xsd:element name="messagesURL" type="xsd:anyURI" nillable="true" minOccurs="0"/>
					<xsd:element name="proxyServerURL" type="xsd:anyURI" nillable="true" minOccurs="0"/>
					<xsd:element name="servicesURL" type="xsd:anyURI" nillable="true" minOccurs="0"/>
					<xsd:element name="services" minOccurs="0">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="service" type="axl:XSubscribedService" minOccurs="0" maxOccurs="unbounded"/>
							</xsd:sequence>
						</xsd:complexType>
					</xsd:element>
					<xsd:choice minOccurs="0">
						<xsd:element name="softkeyTemplate" type="axl:XSoftkeyTemplate">
							<xsd:annotation>
								<xsd:documentation>Only the uuid attribute is read by the AXL API.</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
						<xsd:element name="softkeyTemplateName" type="xsd:string"/>
					</xsd:choice>
					<xsd:element name="loginUserId" type="axl:String255" nillable="false" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>Read-only for IP Phones.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:sequence minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>The Extension Mobility block.  By default, extension mobility is disabled.  To enable, include a default profile and set enableExtensionMobility to true.  Only applicable to 7960 and 7940 phones.  If enableExtensionMobility is false then these elements will not appear.</xsd:documentation>
						</xsd:annotation>
						<xsd:choice>
							<xsd:annotation>
								<xsd:documentation>The absence of this tag would mean the device would use the current device Settings</xsd:documentation>
							</xsd:annotation>
							<xsd:element name="defaultProfile" type="axl:XProfile" nillable="false" minOccurs="0">
								<xsd:annotation>
									<xsd:documentation>Only the "uuid" attribute is applicable to the AXL API.  Not nullable.</xsd:documentation>
								</xsd:annotation>
							</xsd:element>
							<xsd:element name="defaultProfileName" type="axl:String50" nillable="false" minOccurs="0">
								<xsd:annotation>
									<xsd:documentation>The name of the default profile for this device.  Not nullable.</xsd:documentation>
								</xsd:annotation>
							</xsd:element>
						</xsd:choice>
						<xsd:element name="enableExtensionMobility" type="xsd:boolean">
							<xsd:annotation>
								<xsd:documentation> Not nullable.</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
						<xsd:choice minOccurs="0">
							<xsd:annotation>
								<xsd:documentation>The current user profile in use by this device.  Read-only.</xsd:documentation>
							</xsd:annotation>
							<xsd:element name="currentProfile" type="axl:XProfile" nillable="false">
								<xsd:annotation>
									<xsd:documentation>Read-only.</xsd:documentation>
								</xsd:annotation>
							</xsd:element>
							<xsd:element name="currentProfileName" type="axl:String50" nillable="false">
								<xsd:annotation>
									<xsd:documentation>Read-only.</xsd:documentation>
								</xsd:annotation>
							</xsd:element>
						</xsd:choice>
						<xsd:element name="loginTime" type="xsd:nonNegativeInteger" nillable="false" minOccurs="0">
							<xsd:annotation>
								<xsd:documentation>Read-only.</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
						<xsd:element name="loginDuration" type="xsd:nonNegativeInteger" nillable="false" minOccurs="0">
							<xsd:annotation>
								<xsd:documentation>Read-only.</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
					</xsd:sequence>
					<xsd:element name="builtInBridgeStatus" type="axl:XStatus" nillable="false" minOccurs="0"/>
					<xsd:element name="callInfoPrivacyStatus" type="axl:XStatus" nillable="false" minOccurs="0"/>
					<xsd:element name="ownerUserId" type="axl:String255" nillable="true" minOccurs="0"/>
					<xsd:element name="ignorePresentationIndicators" type="xsd:boolean" default="false" nillable="false" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>The new Ignore Presentation Indicators flag for Hospitality Feature is required for most phones and device profiles.Not Nullable.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="packetCaptureMode" type="axl:XPacketCaptureMode" minOccurs="0"/>
					<xsd:element name="packetCaptureDuration" type="xsd:positiveInteger" minOccurs="0"/>
					<xsd:choice minOccurs="0">
						<xsd:element name="subscribeCallingSearchSpace" type="axl:XCallingSearchSpace" nillable="true">
							<xsd:annotation>
								<xsd:documentation>Only the uuid attribute is read by the AXL API.</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
						<xsd:element name="subscribeCallingSearchSpaceName" type="axl:String50" nillable="true"/>
					</xsd:choice>
					<xsd:element name="allowCtiControlFlag" type="xsd:boolean" default="true" nillable="true" minOccurs="0"/>
					<xsd:choice>
						<xsd:element name="presenceGroup" type="axl:XPresenceGroup" nillable="false">
							<xsd:annotation>
								<xsd:documentation>Only the uuid attribute is read by the AXL API.</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
						<xsd:element name="presenceGroupName" type="axl:String50" nillable="false"/>
					</xsd:choice>
					<xsd:element name="certificateOperation" type="axl:XCertificateOperation" minOccurs="0"/>
					<xsd:element name="authenticationString" type="axl:Name128" minOccurs="0"/>
					<xsd:element name="certificateStatus" type="axl:XCertificateStatus" minOccurs="0"/>
					<xsd:element name="upgradeFinishTime" type="xsd:time" minOccurs="0"/>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="XBusyLampField">
		<xsd:sequence>
			<xsd:choice>
				<xsd:element name="blfDirn" type="axl:XDirectoryNumber"/>
				<xsd:element name="blfDest" type="xsd:nonNegativeInteger"/>
			</xsd:choice>
			<xsd:element name="label" type="xsd:string" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="index" type="xsd:positiveInteger"/>
	</xsd:complexType>
	<xsd:complexType name="XPhone">
		<xsd:annotation>
			<xsd:documentation>Abstract representation of a phone device.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axl:XDevice">
				<xsd:sequence minOccurs="0">
					<xsd:element name="associatedPC" type="axl:String50" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>This field has been deprecated in Seadragon</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="lines" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>When adding or updating a phone with the AXL API, only use the 'line' element.</xsd:documentation>
						</xsd:annotation>
						<xsd:complexType>
							<xsd:choice>
								<xsd:element name="line" type="axl:XLine" maxOccurs="unbounded"/>
								<xsd:element name="lineId" type="axl:XLineId" maxOccurs="unbounded">
									<xsd:annotation>
										<xsd:documentation>Do not use when adding or updating a phone.</xsd:documentation>
									</xsd:annotation>
								</xsd:element>
								<xsd:element name="lineLabel" type="xsd:string" maxOccurs="unbounded">
									<xsd:annotation>
										<xsd:documentation>Do not use when adding or updating a phone.</xsd:documentation>
									</xsd:annotation>
								</xsd:element>
								<xsd:element name="lineIdentifier" type="axl:XNumplanIdentifier" maxOccurs="unbounded">
									<xsd:annotation>
										<xsd:documentation>Do not use when adding or updating a phone.</xsd:documentation>
									</xsd:annotation>
								</xsd:element>
							</xsd:choice>
						</xsd:complexType>
					</xsd:element>
					<xsd:element name="numberOfButtons" type="xsd:positiveInteger" minOccurs="0"/>
					<xsd:choice minOccurs="0">
						<xsd:element name="phoneTemplate" type="axl:XPhoneTemplate">
							<xsd:annotation>
								<xsd:documentation>Only the uuid attribute is read by the AXL API.</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
						<xsd:element name="phoneTemplateName" type="axl:String50" nillable="false"/>
					</xsd:choice>
					<xsd:element name="speeddials" minOccurs="0">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="speeddial" type="axl:XSpeeddial" minOccurs="0" maxOccurs="unbounded"/>
							</xsd:sequence>
						</xsd:complexType>
					</xsd:element>
					<xsd:element name="busyLampFields" minOccurs="0">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="busyLampField" type="axl:XBusyLampField" minOccurs="0" maxOccurs="unbounded"/>
							</xsd:sequence>
						</xsd:complexType>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="XProfile">
		<xsd:complexContent>
			<xsd:extension base="axl:XDevice">
				<xsd:sequence>
					<xsd:element name="deviceProfile" type="axl:XDeviceProfile"/>
					<xsd:element name="loginUserid" type="xsd:string"/>
					<xsd:element name="loginTime" type="xsd:time"/>
					<xsd:element name="loginDuration" type="xsd:nonNegativeInteger"/>
					<xsd:element name="allowHoteling" type="xsd:boolean"/>
					<xsd:element name="defaultProfileId" type="axl:XUUID" minOccurs="0"/>
					<xsd:element name="ignorePresentationIndicators" type="xsd:boolean" default="false" nillable="false" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>The new Ignore Presentation Indicators flag for Hospitality Feature is required for most phones and device profiles.Not Nullable.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="XBRIGateway">
		<xsd:complexContent>
			<xsd:extension base="axl:XDigitalGateway">
				<xsd:sequence>
					<xsd:element name="acceptInboundRDNIS" type="xsd:boolean"/>
					<xsd:element name="briProtocol" type="axl:XBriProtocol"/>
					<xsd:element name="calledPlan" type="axl:XNumberingPlan" minOccurs="0"/>
					<xsd:element name="calledPri" type="axl:XPriOfNumber"/>
					<xsd:element name="callerIDDN" type="axl:XDirectoryNumber" minOccurs="0"/>
					<xsd:element name="callingPartySelection" type="axl:XCallingPartySelection"/>
					<xsd:element name="callingPlan" type="axl:XNumberingPlan" minOccurs="0"/>
					<xsd:element name="callingPri" type="axl:XPriOfNumber"/>
					<xsd:element name="chanIE" type="xsd:nonNegativeInteger">
						<xsd:annotation>
							<xsd:documentation>This field has been deprecated in Seadragon</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="clockReference" type="axl:XClockReference"/>
					<xsd:element name="csuParam" type="axl:XCSUParam"/>
					<xsd:element name="dChannelEnable" type="xsd:boolean"/>
					<xsd:element name="direction" type="xsd:boolean"/>
					<xsd:element name="displayIE" type="xsd:boolean"/>
					<xsd:element name="encode" type="axl:XEncode"/>
					<xsd:element name="fdlChannel" type="axl:XFDLChannel"/>
					<xsd:element name="firstDelay" type="xsd:nonNegativeInteger"/>
					<xsd:element name="framing" type="axl:XFraming"/>
					<xsd:element name="intraDelay" type="xsd:nonNegativeInteger"/>
					<xsd:element name="numberIE" type="xsd:boolean"/>
					<xsd:element name="numDigits" type="xsd:nonNegativeInteger"/>
					<xsd:element name="prefix" type="xsd:string" minOccurs="0"/>
					<xsd:element name="presentationBit" type="axl:XPresentationBit"/>
					<xsd:element name="sendRestart" type="xsd:boolean"/>
					<xsd:element name="setupNonISDNPI" type="xsd:boolean"/>
					<xsd:element name="sigDigits" type="xsd:boolean"/>
					<xsd:element name="stableIn4" type="xsd:boolean"/>
					<xsd:element name="statusPoll" type="xsd:boolean"/>
					<xsd:element name="stripCountOut" type="xsd:nonNegativeInteger"/>
					<xsd:element name="trunkPadRx" type="axl:XTrunkPad"/>
					<xsd:element name="trunkPadTx" type="axl:XTrunkPad"/>
					<xsd:element name="trunkLevel" type="axl:XTrunkLevel"/>
					<xsd:element name="yellowAlarm" type="axl:XYellowAlarm"/>
					<xsd:element name="zeroSuppression" type="axl:XZeroSuppression"/>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="XPRIGateway">
		<xsd:complexContent>
			<xsd:extension base="axl:XDigitalGateway">
				<xsd:sequence>
					<xsd:element name="acceptInboundRDNIS" type="xsd:boolean"/>
					<xsd:element name="calledPlan" type="axl:XNumberingPlan"/>
					<xsd:element name="calledPri" type="axl:XPriOfNumber"/>
					<xsd:element name="callerIDDN" type="axl:XDirectoryNumber" minOccurs="0"/>
					<xsd:element name="callingPartySelection" type="axl:XCallingPartySelection"/>
					<xsd:element name="callingPlan" type="axl:XNumberingPlan"/>
					<xsd:element name="callingPri" type="axl:XPriOfNumber"/>
					<xsd:element name="chanIE" type="xsd:nonNegativeInteger"/>
					<xsd:element name="clockReference" type="axl:XClockReference"/>
					<xsd:element name="csuParam" type="axl:XCSUParam"/>
					<xsd:element name="dChannelEnable" type="xsd:boolean"/>
					<xsd:element name="direction" type="xsd:boolean"/>
					<xsd:element name="displayIE" type="xsd:boolean"/>
					<xsd:element name="encode" type="axl:XEncode"/>
					<xsd:element name="fdlChannel" type="axl:XFDLChannel"/>
					<xsd:element name="firstDelay" type="xsd:nonNegativeInteger"/>
					<xsd:element name="interfaceId">
						<xsd:complexType>
							<xsd:simpleContent>
								<xsd:extension base="xsd:nonNegativeInteger">
									<xsd:attribute name="present" type="xsd:boolean"/>
								</xsd:extension>
							</xsd:simpleContent>
						</xsd:complexType>
					</xsd:element>
					<xsd:element name="intraDelay" type="xsd:nonNegativeInteger"/>
					<xsd:element name="mcdnEnable" type="xsd:boolean"/>
					<xsd:element name="numberIE" type="xsd:boolean"/>
					<xsd:element name="numDigits" type="xsd:nonNegativeInteger"/>
					<xsd:element name="passingPrecedenceLevelThroughUUIE" type="xsd:boolean" minOccurs="0"/>
					<xsd:element name="prefix" type="xsd:string" minOccurs="0"/>
					<xsd:element name="callingLinePresentationBit" type="axl:XPresentationBit" nillable="false"/>
					<xsd:element name="connectedLinePresentationBit" type="axl:XPresentationBit" nillable="false"/>
					<xsd:element name="connectedPBX" type="axl:XConnectedPBX" nillable="false"/>
					<xsd:element name="priProtocol" type="axl:XPriProtocol"/>
					<xsd:element name="securityAccessLevel" type="xsd:nonNegativeInteger" minOccurs="0"/>
					<xsd:element name="sendCallingNameInFacilityIE" type="xsd:boolean"/>
					<xsd:element name="sendEXLeadingCharInDispIE" type="xsd:boolean"/>
					<xsd:element name="sendRestart" type="xsd:boolean"/>
					<xsd:element name="setupNonISDNPI" type="xsd:boolean"/>
					<xsd:element name="sigDigits" type="xsd:boolean"/>
					<xsd:element name="span" type="xsd:nonNegativeInteger"/>
					<xsd:element name="statusPoll" type="xsd:boolean"/>
					<xsd:element name="stripCountOut" type="xsd:nonNegativeInteger"/>
					<xsd:element name="trunkPadRx" type="axl:XTrunkPad"/>
					<xsd:element name="trunkPadTx" type="axl:XTrunkPad"/>
					<xsd:element name="trunkLevel" type="axl:XTrunkLevel"/>
					<xsd:element name="yellowAlarm" type="axl:XYellowAlarm"/>
					<xsd:element name="zeroSuppression" type="axl:XZeroSuppression"/>
					<xsd:element name="sMDIBasePort" type="xsd:positiveInteger"/>
					<xsd:element name="protocolProfile91NameOnly" type="xsd:boolean"/>
					<xsd:element name="helpURL" type="xsd:anyURI" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>Read-only.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="XServerDevice">
		<xsd:annotation>
			<xsd:documentation>Server devices are server processes that receive and/or make calls; because they are server-based, they have a process node.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axl:XDevice">
				<xsd:sequence minOccurs="0">
					<xsd:choice>
						<xsd:element name="processNode" type="axl:XProcessNode"/>
						<xsd:element name="processNodeId" type="axl:XUUID"/>
						<xsd:element name="processNodeName" type="xsd:Name"/>
					</xsd:choice>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="XT1Gateway">
		<xsd:complexContent>
			<xsd:extension base="axl:XDigitalGateway">
				<xsd:sequence>
					<xsd:element name="clockReference" type="axl:XClockReference"/>
					<xsd:element name="csuParam" type="axl:XCSUParam"/>
					<xsd:element name="digitSending" type="axl:XDigitSending"/>
					<xsd:element name="encode" type="axl:XEncode"/>
					<xsd:element name="fdlChannel" type="axl:XFDLChannel"/>
					<xsd:element name="maxPorts" type="xsd:positiveInteger">
						<xsd:annotation>
							<xsd:documentation>Read-only.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="ports" type="axl:XT1PortList"/>
					<xsd:element name="yellowAlarm" type="axl:XYellowAlarm"/>
					<xsd:element name="zeroSuppression" type="axl:XZeroSuppression"/>
					<xsd:element name="sMDIBasePort" type="xsd:positiveInteger"/>
					<xsd:element name="helpURL" type="xsd:anyURI" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>Read-only.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="XH323Device">
		<xsd:complexContent>
			<xsd:extension base="axl:XDevice">
				<xsd:sequence minOccurs="0">
					<xsd:element name="waitForFarEndH245TerminalSet" type="xsd:boolean" nillable="false" minOccurs="0"/>
					<xsd:element name="mtpRequired" type="xsd:boolean" nillable="false" minOccurs="0"/>
					<xsd:element name="callerIdDN" type="axl:String50" minOccurs="0"/>
					<xsd:element name="callingPartySelection" type="axl:XCallingPartySelection" nillable="false" minOccurs="0"/>
					<xsd:element name="callingLineIdPresentation" type="axl:XPresentationBit" nillable="false" minOccurs="0"/>
					<xsd:element name="displayIEDelivery" type="xsd:boolean" nillable="false" minOccurs="0"/>
					<xsd:element name="redirectOutboundNumberIE" type="xsd:boolean" nillable="false" minOccurs="0"/>
					<xsd:element name="redirectInboundNumberIE" type="xsd:boolean" nillable="false" minOccurs="0"/>
					<xsd:element name="enableInboundFaststart" type="xsd:boolean" nillable="false" minOccurs="0"/>
					<xsd:element name="enableOutboundFaststart" type="xsd:boolean" nillable="false" minOccurs="0"/>
					<xsd:element name="packetCaptureMode" type="axl:XPacketCaptureMode" nillable="false" minOccurs="0"/>
					<xsd:element name="packetCaptureDuration" type="xsd:positiveInteger" default="60" nillable="true" minOccurs="0"/>
					<xsd:element name="srtpAllowed" type="axl:XBoolean" default="No" nillable="true" minOccurs="0"/>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="XH323Phone">
		<xsd:complexContent>
			<xsd:extension base="axl:XH323Device">
				<xsd:sequence minOccurs="0">
					<xsd:element name="ownerUserId" type="axl:String255" nillable="true" minOccurs="0"/>
					<xsd:element name="signalingPort" type="xsd:nonNegativeInteger" nillable="false" minOccurs="0"/>
					<xsd:element name="gatekeeperInfo" minOccurs="0">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:choice>
									<xsd:element name="gatekeeperName" type="axl:String50" nillable="false"/>
									<xsd:element name="gatekeeper" type="axl:XGatekeeper" nillable="false">
										<xsd:annotation>
											<xsd:documentation>Only the uuid attribute is read by the AXL API.</xsd:documentation>
										</xsd:annotation>
									</xsd:element>
								</xsd:choice>
								<xsd:element name="e164" type="axl:String50" nillable="false"/>
								<xsd:element name="technologyPrefix" type="axl:String50" nillable="false"/>
								<xsd:element name="zone" type="axl:String50" nillable="false"/>
							</xsd:sequence>
						</xsd:complexType>
					</xsd:element>
					<xsd:element name="lines" minOccurs="0">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="line" type="axl:XLine" minOccurs="0" maxOccurs="unbounded"/>
							</xsd:sequence>
						</xsd:complexType>
					</xsd:element>
					<xsd:element name="ignorePresentationIndicators" type="xsd:boolean" default="false" nillable="false" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>The new Ignore Presentation Indicators flag for Hospitality Feature is required for most phones and device profiles.Not Nullable.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="XH323Gateway">
		<xsd:complexContent>
			<xsd:extension base="axl:XH323Device">
				<xsd:sequence minOccurs="0">
					<xsd:element name="significantDigits" nillable="false" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>The 'enable' attribute enables significant digits.  The value of the 'significanDigits' element is used if enable is false.</xsd:documentation>
						</xsd:annotation>
						<xsd:complexType>
							<xsd:simpleContent>
								<xsd:extension base="xsd:nonNegativeInteger">
									<xsd:attribute name="enable" type="xsd:boolean" use="required"/>
								</xsd:extension>
							</xsd:simpleContent>
						</xsd:complexType>
					</xsd:element>
					<xsd:element name="prefixDN" type="axl:String50" minOccurs="0"/>
					<xsd:element name="calledPartyIENumberType" type="axl:XPriOfNumber" nillable="false" minOccurs="0"/>
					<xsd:element name="callingPartyIENumberType" type="axl:XPriOfNumber" nillable="false" minOccurs="0"/>
					<xsd:element name="calledNumberingPlan" type="axl:XNumberingPlan" nillable="false" minOccurs="0"/>
					<xsd:element name="callingNumberingPlan" type="axl:XNumberingPlan" nillable="false" minOccurs="0"/>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="XH323Trunk">
		<xsd:complexContent>
			<xsd:extension base="axl:XH323Gateway">
				<xsd:sequence>
					<xsd:element name="tunneledProtocol" type="axl:XTunneledProtocol"/>
					<xsd:element name="pathReplacementSupport" type="xsd:boolean" default="false" minOccurs="0"/>
					<xsd:choice>
						<xsd:element name="gatekeeperInfo">
							<xsd:complexType>
								<xsd:sequence>
									<xsd:choice>
										<xsd:element name="gatekeeperName" type="axl:String50" nillable="false"/>
										<xsd:element name="gatekeeper" type="axl:XGatekeeper" nillable="false">
											<xsd:annotation>
												<xsd:documentation>Only the uuid attribute is read by the AXL API.</xsd:documentation>
											</xsd:annotation>
										</xsd:element>
									</xsd:choice>
									<xsd:element name="terminal" type="axl:XTerminal" nillable="false"/>
									<xsd:element name="technologyPrefix" type="axl:String50" minOccurs="0"/>
									<xsd:element name="zone" type="axl:String50" minOccurs="0"/>
								</xsd:sequence>
							</xsd:complexType>
						</xsd:element>
						<xsd:element name="remoteServerInfo">
							<xsd:complexType>
								<xsd:sequence>
									<xsd:element name="server1" type="axl:String255" nillable="false"/>
									<xsd:element name="server2" type="axl:String255" minOccurs="0"/>
									<xsd:element name="server3" type="axl:String255" minOccurs="0"/>
								</xsd:sequence>
							</xsd:complexType>
						</xsd:element>
					</xsd:choice>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="XSIPTrunk">
		<xsd:complexContent>
			<xsd:extension base="axl:XDevice">
				<xsd:sequence>
					<xsd:element name="mtpRequired" type="xsd:boolean" nillable="false" minOccurs="0"/>
					<xsd:element name="destinationaddress" type="axl:String50">
						<xsd:annotation>
							<xsd:documentation>Valid characters for Destination Address are letters, numbers, dashes and dots(periods). IP address should have four 8-bit numbers seperated by periods. Host name should start with letter and end with letter or number.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="destAddrIsSRV" type="xsd:boolean" default="false" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>This tag is ignored and destAddrIsSRV is set to false if destinationaddress is an IP address and destinationport is mentioned correctly.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="destinationport" type="xsd:integer" default="0" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>This tag depends on destAddrIsSRV. It is mandatory when destAddrIsSRV is false or when destination address is an IP address. Valid values between 1024 to 65535 (inclusive)</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:choice minOccurs="0">
						<xsd:element name="securityProfile">
							<xsd:annotation>
								<xsd:documentation>Only the uuid attribute is read by the AXL API.</xsd:documentation>
							</xsd:annotation>
							<xsd:complexType>
								<xsd:attribute name="uuid" type="axl:XUUID"/>
							</xsd:complexType>
						</xsd:element>
						<xsd:element name="securityProfileName" type="axl:UniqueString50"/>
					</xsd:choice>
					<xsd:element name="tkSipCodec" type="axl:XSIPCodec" nillable="false" minOccurs="0"/>
					<xsd:element name="OutgoingTransportType" type="axl:XTransport" nillable="false" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>This field has been deprecated in Seadragon</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="sigDigits" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>The 'enable' attribute enables significant digits.  The value of the 'significanDigits' element is used if enable is true.</xsd:documentation>
						</xsd:annotation>
						<xsd:complexType>
							<xsd:simpleContent>
								<xsd:extension base="xsd:nonNegativeInteger">
									<xsd:attribute name="enable" type="xsd:boolean" use="required"/>
								</xsd:extension>
							</xsd:simpleContent>
						</xsd:complexType>
					</xsd:element>
					<xsd:element name="connectedNamePresentation" type="axl:XPresentationBit" nillable="false" minOccurs="0"/>
					<xsd:element name="connectedPartyIdPresentation" type="axl:XPresentationBit" nillable="false" minOccurs="0"/>
					<xsd:element name="callingPartySelection" type="axl:XCallingPartySelection" nillable="false" minOccurs="0"/>
					<xsd:element name="callingname" type="axl:XPresentationBit" nillable="false" minOccurs="0"/>
					<xsd:element name="callingLineIdPresentation" type="axl:XPresentationBit" nillable="false" minOccurs="0"/>
					<xsd:element name="prefixDN" type="axl:String50" minOccurs="0"/>
					<xsd:element name="callerName" type="axl:String50" nillable="false" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>Characters which are not valid for caller name are ampersand, braces, less than or greater than, percentage sign, double quotes, square brackets and pipe.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="callerIdDN" type="axl:String50" minOccurs="0"/>
					<xsd:element name="acceptInboundRDNIS" type="xsd:boolean" minOccurs="0"/>
					<xsd:element name="acceptOutboundRDNIS" type="xsd:boolean" nillable="false" minOccurs="0"/>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="XGatekeeper">
		<xsd:annotation>
			<xsd:documentation>Gatekeeper is a type of device.</xsd:documentation>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:element name="name" type="axl:String128" nillable="false">
				<xsd:annotation>
					<xsd:documentation>From device table.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="description" type="axl:String128" minOccurs="0">
				<xsd:annotation>
					<xsd:documentation>From device table.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="rrqTimeToLive" type="xsd:nonNegativeInteger" nillable="false" minOccurs="0">
				<xsd:annotation>
					<xsd:documentation>Registration Request Time to Live.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="retryTimeout" type="xsd:nonNegativeInteger" nillable="false" minOccurs="0">
				<xsd:annotation>
					<xsd:documentation>Registration Retry Timeout</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="enableDevice" type="xsd:boolean" nillable="false" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uuid" type="axl:XUUID" use="optional"/>
	</xsd:complexType>
	<!-- *********************************************************** -->
	<!-- Complex Types                                    -->
	<!-- *********************************************************** -->
	<xsd:complexType name="XAARNeighborhood">
		<xsd:annotation>
			<xsd:documentation>An Automated Alternate Routing Neighborhood.</xsd:documentation>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:element name="name" type="axl:String50"/>
		</xsd:sequence>
		<xsd:attribute name="uuid" type="axl:XUUID"/>
	</xsd:complexType>
	<xsd:complexType name="XAddOnModule">
		<xsd:annotation>
			<xsd:documentation>Sidecar modules for used by Cisco IP Phones.</xsd:documentation>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:element name="loadInformation" type="axl:XLoadInformation">
				<xsd:annotation>
					<xsd:documentation>Load Information is either the module's specific load information or the default load information.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="model" type="axl:XModel">
				<xsd:annotation>
					<xsd:documentation>Model ID string.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
		</xsd:sequence>
		<xsd:attribute name="uuid" type="axl:XUUID"/>
		<xsd:attribute name="index" type="xsd:nonNegativeInteger"/>
	</xsd:complexType>
	<xsd:complexType name="XAnalogPortList">
		<xsd:annotation>
			<xsd:documentation>List of analog ports on an analog gateway.</xsd:documentation>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:element name="port" type="axl:XAnalogPort" maxOccurs="unbounded"/>
		</xsd:sequence>
	</xsd:complexType>
	<xsd:complexType name="XAnalogPort">
		<xsd:annotation>
			<xsd:documentation>An analog port on an analog gateway. The portNumber attribute  identifies the ordinal value of the port in the gateway.</xsd:documentation>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:element name="attendantDN" type="axl:XDirectoryNumber" minOccurs="0"/>
			<xsd:element name="callerIdDN" type="axl:XDirectoryNumber" minOccurs="0"/>
			<xsd:element name="callerIdEnable" type="xsd:boolean"/>
			<xsd:element name="callingPartySelection" type="axl:XCallingPartySelection"/>
			<xsd:element name="digitSending" type="axl:XDigitSending"/>
			<xsd:element name="expectedDigits" type="xsd:nonNegativeInteger"/>
			<xsd:element name="finalDigits">
				<xsd:complexType>
					<xsd:simpleContent>
						<xsd:extension base="xsd:nonNegativeInteger">
							<xsd:attribute name="significant" type="xsd:boolean" use="required"/>
						</xsd:extension>
					</xsd:simpleContent>
				</xsd:complexType>
			</xsd:element>
			<xsd:choice minOccurs="0">
				<xsd:annotation>
					<xsd:documentation>When adding or updating with the AXL API, do not use the lineId element.</xsd:documentation>
				</xsd:annotation>
				<xsd:element name="line" type="axl:XLine"/>
				<xsd:element name="lineId" type="axl:XLineId"/>
			</xsd:choice>
			<xsd:element name="prefixDN" type="axl:XDirectoryNumber" minOccurs="0"/>
			<xsd:element name="presentationBit" type="axl:XPresentationBit"/>
			<xsd:element name="silenceSuppressionThreshold" type="axl:XSilenceSuppressionThreshold"/>
			<xsd:element name="smdiPortNumber" type="xsd:nonNegativeInteger">
				<xsd:annotation>
					<xsd:documentation>Not used by T1 Ports.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="startDialProtocol" type="axl:XStartDialProtocol"/>
			<xsd:element name="timers">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="timer" type="xsd:nonNegativeInteger" maxOccurs="6"/>
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name="trunk" type="axl:XTrunk"/>
			<xsd:element name="trunkDirection" type="axl:XTrunkDirection"/>
			<xsd:element name="trunkLevel" type="axl:XTrunkLevel"/>
			<xsd:element name="trunkPadRx" type="axl:XTrunkPad"/>
			<xsd:element name="trunkPadTx" type="axl:XTrunkPad"/>
			<xsd:element name="vendorConfig" type="axl:XVendorConfig" minOccurs="0">
				<xsd:annotation>
					<xsd:documentation>Arbitrary XML defined by 3rd party vendors.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
		</xsd:sequence>
		<xsd:attribute name="uuid" type="axl:XUUID"/>
		<xsd:attribute name="portNumber" type="xsd:positiveInteger" use="required"/>
	</xsd:complexType>
	<xsd:complexType name="XButton">
		<xsd:annotation>
			<xsd:documentation>A button on a phone template.</xsd:documentation>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:element name="feature" type="axl:XFeature">
				<xsd:annotation>
					<xsd:documentation>The feature invoked by this button.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="label" type="axl:String50">
				<xsd:annotation>
					<xsd:documentation>The label to display for this button.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="paramN1" type="xsd:integer" minOccurs="0"/>
			<xsd:element name="paramN2" type="xsd:integer" minOccurs="0"/>
			<xsd:element name="paramT1" type="axl:String50" minOccurs="0"/>
			<xsd:element name="paramT2" type="axl:String50" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uuid" type="axl:XUUID"/>
		<xsd:attribute name="index" type="xsd:positiveInteger"/>
	</xsd:complexType>
	<xsd:complexType name="XCallForwardInfo">
		<xsd:sequence>
			<xsd:element name="forwardToVoiceMail" type="xsd:boolean" default="false" minOccurs="0">
				<xsd:annotation>
					<xsd:documentation>DB: Derived from CF*VoiceMailEnabled fields.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:choice minOccurs="0">
				<xsd:element name="callingSearchSpace" type="axl:XCallingSearchSpace">
					<xsd:annotation>
						<xsd:documentation>Only the uuid attribute is read by the AXL API.</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
				<xsd:element name="callingSearchSpaceName" type="axl:String50"/>
			</xsd:choice>
			<xsd:element name="destination" type="axl:String50" minOccurs="0"/>
			<xsd:element name="duration" type="xsd:nonNegativeInteger" nillable="false" minOccurs="0">
				<xsd:annotation>
					<xsd:documentation>Applicable only for callForwardNoAnswer and callForwardAlternateParty,Value "-1" in the response indicates that the CM will use the default setting</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
		</xsd:sequence>
	</xsd:complexType>
	<xsd:complexType name="XHuntForwardInfo">
		<xsd:sequence>
			<xsd:element name="usePersonalPreferences" type="xsd:boolean" default="false" minOccurs="0">
				<xsd:annotation>
					<xsd:documentation>Use original Called DN forward no-coverage settings</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:choice minOccurs="0">
				<xsd:element name="callingSearchSpace" type="axl:XCallingSearchSpace">
					<xsd:annotation>
						<xsd:documentation>Only the uuid attribute is read by the AXL API.</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
				<xsd:element name="callingSearchSpaceName" type="axl:String50"/>
			</xsd:choice>
			<xsd:element name="destination" type="axl:String50" minOccurs="0"/>
			<xsd:element name="maxHuntduration" type="xsd:nonNegativeInteger" nillable="false" minOccurs="0">
				<xsd:annotation>
					<xsd:documentation>Value "-1" in the response means no value has been assigned and internally the CM will use default setting i.e., 1800s.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
		</xsd:sequence>
	</xsd:complexType>
	<xsd:complexType name="XCallingSearchSpace">
		<xsd:sequence minOccurs="0">
			<xsd:element name="name" type="axl:UniqueName50"/>
			<xsd:element name="description" type="axl:String50" minOccurs="0"/>
			<xsd:element name="clause" type="axl:String1024" minOccurs="0">
				<xsd:annotation>
					<xsd:documentation>Read-only.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="dialPlanWizardGenId" type="xsd:nonNegativeInteger" minOccurs="0">
				<xsd:annotation>
					<xsd:documentation>Read-only.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="members">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="member" type="axl:XCallingSearchSpaceMember" minOccurs="0" maxOccurs="unbounded"/>
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
		</xsd:sequence>
		<xsd:attribute name="uuid" type="axl:XUUID"/>
	</xsd:complexType>
	<xsd:complexType name="XCallingSearchSpaceMember">
		<xsd:sequence>
			<xsd:choice>
				<xsd:element name="routePartition" type="axl:XRoutePartition">
					<xsd:annotation>
						<xsd:documentation>Only the uuid attribute is read by the AXL API.</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
				<xsd:element name="routePartitionId" type="axl:XUUID">
					<xsd:annotation>
						<xsd:documentation>DEPRECATED: use routePartition/uuid</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
				<xsd:element name="routePartitionName" type="axl:String50"/>
			</xsd:choice>
		</xsd:sequence>
		<xsd:attribute name="index" type="xsd:positiveInteger"/>
	</xsd:complexType>
	<xsd:complexType name="XCallManager">
		<xsd:sequence minOccurs="0">
			<xsd:element name="name" type="axl:String50">
				<xsd:annotation>
					<xsd:documentation>Read-only. name is now autogenerated.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="description" type="axl:String50" minOccurs="0"/>
			<xsd:element name="autoRegistration" minOccurs="0">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="startDN" type="axl:XDirectoryNumber" minOccurs="0"/>
						<xsd:element name="endDN" type="axl:XDirectoryNumber" minOccurs="0"/>
						<xsd:element name="nextDN" type="axl:XDirectoryNumber" minOccurs="0"/>
						<xsd:choice minOccurs="0">
							<xsd:element name="routePartition" type="axl:XRoutePartition">
								<xsd:annotation>
									<xsd:documentation>Only the uuid attribute is read by the AXL API.</xsd:documentation>
								</xsd:annotation>
							</xsd:element>
							<xsd:element name="routePartitionName" type="axl:String50"/>
						</xsd:choice>
						<xsd:element name="e164Mask" type="axl:String50" minOccurs="0"/>
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name="ports">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="analogAccessPort" type="xsd:nonNegativeInteger">
							<xsd:annotation>
								<xsd:documentation>This field has been deprecated in Seadragon</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
						<xsd:element name="digitalAccessPort" type="xsd:nonNegativeInteger">
							<xsd:annotation>
								<xsd:documentation>This field has been deprecated in Seadragon</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
						<xsd:element name="ethernetPhonePort" type="xsd:nonNegativeInteger"/>
						<xsd:element name="mgcpPorts">
							<xsd:complexType>
								<xsd:sequence>
									<xsd:element name="listen" type="xsd:nonNegativeInteger">
										<xsd:annotation>
											<xsd:documentation>UDP port for MGCP communication.</xsd:documentation>
										</xsd:annotation>
									</xsd:element>
									<xsd:element name="keepAlive" type="xsd:nonNegativeInteger">
										<xsd:annotation>
											<xsd:documentation>TCP port for backhaul for Q.931 messages.</xsd:documentation>
										</xsd:annotation>
									</xsd:element>
								</xsd:sequence>
							</xsd:complexType>
						</xsd:element>
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
			<xsd:choice>
				<xsd:element name="processNode" type="axl:XProcessNode">
					<xsd:annotation>
						<xsd:documentation>Only the uuid attribute is read by the AXL API.</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
				<xsd:element name="processNodeName" type="axl:String255"/>
			</xsd:choice>
		</xsd:sequence>
		<xsd:attribute name="uuid" type="axl:XUUID"/>
		<xsd:attribute name="ctiid" type="xsd:nonNegativeInteger"/>
	</xsd:complexType>
	<xsd:complexType name="XCallManagerGroup">
		<xsd:sequence minOccurs="0">
			<xsd:element name="name" type="axl:String50"/>
			<xsd:element name="tftpDefault" type="xsd:boolean" minOccurs="0">
				<xsd:annotation>
					<xsd:documentation>Only use when setting TFTP Default to true.  Setting to true will result in setting all other CallManager groups to false. </xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="members">
				<xsd:complexType>
					<xsd:sequence minOccurs="0">
						<xsd:element name="member" type="axl:XCallManagerMember" maxOccurs="unbounded">
							<xsd:annotation>
								<xsd:documentation>Only the uuid attribute of callManager is read by the AXL API.</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
		</xsd:sequence>
		<xsd:attribute name="uuid" type="axl:XUUID"/>
	</xsd:complexType>
	<xsd:complexType name="XCallManagerMember">
		<xsd:choice>
			<xsd:element name="callManager" type="axl:XCallManager">
				<xsd:annotation>
					<xsd:documentation>Only the uuid attribute is read by the AXL API.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="callManagerName" type="axl:String50"/>
		</xsd:choice>
		<xsd:attribute name="priority" type="xsd:nonNegativeInteger"/>
	</xsd:complexType>
	<xsd:complexType name="XCMCInfo">
		<xsd:sequence minOccurs="0">
			<xsd:element name="code" type="axl:String16"/>
			<xsd:element name="description" type="axl:String50" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uuid" type="axl:XUUID"/>
	</xsd:complexType>
	<xsd:complexType name="XCallManagerMemberId">
		<xsd:simpleContent>
			<xsd:extension base="axl:XUUID">
				<xsd:attribute name="priority" type="xsd:nonNegativeInteger"/>
			</xsd:extension>
		</xsd:simpleContent>
	</xsd:complexType>
	<xsd:complexType name="XDateTimeSetting">
		<xsd:sequence minOccurs="0">
			<xsd:element name="name" type="axl:String50"/>
			<xsd:element name="dateTemplate" type="axl:String50"/>
			<xsd:element name="timeZone" type="axl:XTimeZone"/>
		</xsd:sequence>
		<xsd:attribute name="uuid" type="axl:XUUID"/>
	</xsd:complexType>
	<xsd:complexType name="XDevicePool">
		<xsd:sequence minOccurs="0">
			<xsd:element name="name" type="axl:UniqueString50">
				<xsd:annotation>
					<xsd:documentation>Not nullable.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:choice minOccurs="0">
				<xsd:element name="autoSearchSpace" type="axl:XCallingSearchSpace">
					<xsd:annotation>
						<xsd:documentation>Only the uuid attribute is read by the AXL API. Nullable.</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
				<xsd:element name="autoSearchSpaceName" type="axl:String50"/>
			</xsd:choice>
			<xsd:choice>
				<xsd:element name="dateTimeSetting" type="axl:XDateTimeSetting">
					<xsd:annotation>
						<xsd:documentation>Only the uuid attribute is read by the AXL API. Not Nullable.</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
				<xsd:element name="dateTimeSettingName" type="axl:String50"/>
			</xsd:choice>
			<xsd:choice>
				<xsd:element name="callManagerGroup" type="axl:XCallManagerGroup">
					<xsd:annotation>
						<xsd:documentation>Only the uuid attribute is read by the AXL API. Not nullable.</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
				<xsd:element name="callManagerGroupName" type="axl:String50"/>
			</xsd:choice>
			<xsd:choice minOccurs="0">
				<xsd:element name="mediaResourceList" type="axl:XMediaResourceList">
					<xsd:annotation>
						<xsd:documentation>Only the uuid attribute is read by the AXL API. Nullable.</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
				<xsd:element name="mediaResourceListName" type="axl:String50"/>
			</xsd:choice>
			<xsd:choice>
				<xsd:element name="region" type="axl:XRegion">
					<xsd:annotation>
						<xsd:documentation>Only the uuid attribute is read by the AXL API. Nullable.</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
				<xsd:element name="regionName" type="axl:String50"/>
			</xsd:choice>
			<xsd:choice>
				<xsd:element name="softkeyTemplate" type="axl:XSoftkeyTemplate">
					<xsd:annotation>
						<xsd:documentation>Only the uuid attribute is read by the AXL API. Nullable.</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
				<xsd:element name="softkeyTemplateName" type="xsd:string"/>
			</xsd:choice>
			<xsd:element name="networkLocale" type="axl:XCountry" minOccurs="0">
				<xsd:annotation>
					<xsd:documentation>Nullable</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="userLocale" type="axl:XUserLocale" minOccurs="0">
				<xsd:annotation>
					<xsd:documentation>Nullable</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="networkHoldMOHAudioSourceId" type="axl:XMOHAudioSourceId" minOccurs="0">
				<xsd:annotation>
					<xsd:documentation>Not nullable</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="userHoldMOHAudioSourceId" type="axl:XMOHAudioSourceId" minOccurs="0">
				<xsd:annotation>
					<xsd:documentation>Not nullable.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:choice>
				<xsd:element name="srstInfo" type="axl:XSRSTInfo"/>
				<xsd:element name="srstName" type="axl:String50"/>
			</xsd:choice>
			<xsd:element name="mlppDomainId" type="xsd:int" nillable="false" minOccurs="0">
				<xsd:annotation>
					<xsd:documentation>This setting only affects devices that support MLPP.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="mlppIndicationStatus" type="axl:XStatus" nillable="false" minOccurs="0">
				<xsd:annotation>
					<xsd:documentation>This setting only affects devices that support MLPP.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="preemption" type="axl:XPreemption" nillable="false" minOccurs="0">
				<xsd:annotation>
					<xsd:documentation>This setting only affects devices that support MLPP.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="connectionMonitorDuration" type="xsd:int" nillable="false" minOccurs="0">
				<xsd:annotation>
					<xsd:documentation>-1 means using system default</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
		</xsd:sequence>
		<xsd:attribute name="uuid" type="axl:XUUID"/>
	</xsd:complexType>
	<xsd:complexType name="XDialPlan">
		<xsd:sequence minOccurs="0">
			<xsd:element name="name" type="axl:String50"/>
			<xsd:element name="description" type="axl:String50" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uuid" type="axl:XUUID"/>
	</xsd:complexType>
	<xsd:complexType name="XDialPlanTag">
		<xsd:sequence minOccurs="0">
			<xsd:element name="name" type="axl:String50">
				<xsd:annotation>
					<xsd:documentation>Actually called "tag" in database.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:choice>
				<xsd:element name="dialPlan" type="axl:XDialPlan"/>
				<xsd:element name="dialPlanName" type="xsd:string"/>
			</xsd:choice>
			<xsd:element name="operator" type="axl:XOperator"/>
			<xsd:element name="suppressFromRouteFilter" type="xsd:boolean" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uuid" type="axl:XUUID"/>
	</xsd:complexType>
	<xsd:complexType name="XDigitDiscardInstruction">
		<xsd:sequence minOccurs="0">
			<xsd:element name="name" type="axl:String50"/>
			<xsd:element name="clause" type="axl:String1024" minOccurs="0"/>
			<xsd:choice>
				<xsd:element name="dialPlan" type="axl:XDialPlan">
					<xsd:annotation>
						<xsd:documentation>Only the uuid attribute is read by the AXL API.</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
				<xsd:element name="dialPlanName" type="axl:String50"/>
			</xsd:choice>
			<xsd:element name="digitAnalysisId" type="xsd:nonNegativeInteger" minOccurs="0">
				<xsd:annotation>
					<xsd:documentation>Read-only.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="members" minOccurs="0">
				<xsd:complexType>
					<xsd:sequence minOccurs="0">
						<xsd:element name="member" type="axl:XDigitDiscardInstructionMember" maxOccurs="unbounded"/>
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
		</xsd:sequence>
		<xsd:attribute name="uuid" type="axl:XUUID"/>
	</xsd:complexType>
	<xsd:complexType name="XDigitDiscardInstructionMember">
		<xsd:choice>
			<xsd:element name="dialPlanTagName" type="axl:String50" nillable="false"/>
			<xsd:element name="dialPlanTag" type="axl:XDialPlanTag">
				<xsd:annotation>
					<xsd:documentation>Only the uuid attribute is read by the AXL API.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
		</xsd:choice>
		<xsd:attribute name="uuid" type="axl:XUUID"/>
	</xsd:complexType>
	<xsd:complexType name="XDisplayInstance">
		<xsd:sequence>
			<xsd:element name="name">
				<xsd:annotation>
					<xsd:documentation>The URI of this instance. For example: xmldi://cisco.com/Cisco VG200/mgcp</xsd:documentation>
				</xsd:annotation>
				<xsd:simpleType>
					<xsd:restriction base="xsd:string">
						<xsd:pattern value="xmldi://\S+"/>
					</xsd:restriction>
				</xsd:simpleType>
			</xsd:element>
			<xsd:element name="version" type="xsd:string"/>
			<xsd:element name="author" type="xsd:string" minOccurs="0"/>
			<xsd:element name="description" type="xsd:string" minOccurs="0"/>
			<xsd:choice>
				<xsd:annotation>
					<xsd:documentation>At this point, you will either see a uses element optional followed by a parameters block, or simply a parameters block.</xsd:documentation>
				</xsd:annotation>
				<xsd:sequence>
					<xsd:element name="uses" type="xsd:anyURI">
						<xsd:annotation>
							<xsd:documentation>Name of the display instance this display instance extends or includes.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="parameters" type="axl:XDisplayInstanceParameters" minOccurs="0"/>
				</xsd:sequence>
				<xsd:element name="parameters" type="axl:XDisplayInstanceParameters"/>
			</xsd:choice>
		</xsd:sequence>
	</xsd:complexType>
	<xsd:complexType name="XDisplayInstanceParameter">
		<xsd:sequence>
			<xsd:element name="name">
				<xsd:annotation>
					<xsd:documentation>The tag that appears in the actual vendor configuration block stored in the database. The pattern enforces that the name is only made up of letters, digits, dashes, periods, or underscores.</xsd:documentation>
				</xsd:annotation>
				<xsd:simpleType>
					<xsd:restriction base="xsd:string">
						<xsd:pattern value="[a-zA-Z0-9][a-zA-Z0-9\.\-_]*"/>
					</xsd:restriction>
				</xsd:simpleType>
			</xsd:element>
			<xsd:element name="description" type="xsd:string"/>
			<xsd:element name="moduleComponentName" type="xsd:string" minOccurs="0"/>
			<xsd:element name="nonClusterWideJustification" type="xsd:string" minOccurs="0"/>
			<xsd:element name="displayName" type="xsd:normalizedString" minOccurs="0">
				<xsd:annotation>
					<xsd:documentation>If displayName is set, the UI should show it instead of the NAME to the user.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="onChangeShowMessage" type="xsd:string" minOccurs="0"/>
			<xsd:element name="unit" type="xsd:string" minOccurs="0"/>
			<xsd:element name="hidden" type="xsd:boolean" fixed="true" nillable="true" minOccurs="0">
				<xsd:annotation>
					<xsd:documentation>UI directive. This parameter should not be shown in the UI.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="index" type="xsd:nonNegativeInteger" default="0" minOccurs="0">
				<xsd:annotation>
					<xsd:documentation>Index is translated into an index attribute in the parameter expressed in a vendor config. Really only useful for parameters contained within paramGroups.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="readOnly" type="xsd:boolean" fixed="true" nillable="true" minOccurs="0">
				<xsd:annotation>
					<xsd:documentation>UI directive. The parameter is entirely read-only. Whatever value is current assigned to the parameter is never changed in the UI.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:choice>
				<xsd:element name="label" type="xsd:string">
					<xsd:annotation>
						<xsd:documentation>UI directive. Text to always display in the UI.</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
				<xsd:element name="paramGroup">
					<xsd:annotation>
						<xsd:documentation>UI directive. The parameter is really just a heading for a paramGroup.</xsd:documentation>
					</xsd:annotation>
					<xsd:complexType>
						<xsd:sequence>
							<xsd:element name="param" type="axl:XDisplayInstanceParameter" maxOccurs="unbounded"/>
						</xsd:sequence>
					</xsd:complexType>
				</xsd:element>
				<xsd:element name="rules">
					<xsd:annotation>
						<xsd:documentation>The rules to validate this parameter against.</xsd:documentation>
					</xsd:annotation>
					<xsd:complexType>
						<xsd:sequence>
							<xsd:element name="rule" type="xsd:anyURI" maxOccurs="unbounded">
								<xsd:annotation>
									<xsd:documentation>The URI of the rule to validate this parameter against; for example: xmlrule://cisco.com/public/isAnInteger</xsd:documentation>
								</xsd:annotation>
							</xsd:element>
						</xsd:sequence>
					</xsd:complexType>
				</xsd:element>
			</xsd:choice>
		</xsd:sequence>
	</xsd:complexType>
	<xsd:complexType name="XDisplayInstanceParameters">
		<xsd:sequence>
			<xsd:element name="param" type="axl:XDisplayInstanceParameter" maxOccurs="unbounded"/>
		</xsd:sequence>
	</xsd:complexType>
	<xsd:complexType name="XFACInfo">
		<xsd:sequence minOccurs="0">
			<xsd:element name="code" type="axl:String16"/>
			<xsd:element name="description" type="axl:String50"/>
			<xsd:element name="authorizationLevel" type="xsd:nonNegativeInteger"/>
		</xsd:sequence>
		<xsd:attribute name="uuid" type="axl:XUUID"/>
	</xsd:complexType>
	<xsd:complexType name="XLine">
		<xsd:annotation>
			<xsd:documentation>Table: A Line Appearnce (defined from DeviceNumPlanMap).</xsd:documentation>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:element name="label" type="axl:String50" nillable="true"/>
			<xsd:element name="display" type="axl:String50" nillable="true"/>
			<xsd:choice>
				<xsd:element name="dirn" type="axl:XNPDirectoryNumber">
					<xsd:annotation>
						<xsd:documentation>Only the uuid attribute is read by the AXL API.</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
			</xsd:choice>
			<xsd:element name="ringSetting" type="axl:XRingSetting" default="Ring" nillable="false"/>
			<xsd:element name="consecutiveRingSetting" type="axl:XRingSetting" default="Use System Default" nillable="false" minOccurs="0">
				<xsd:annotation>
					<xsd:documentation>Consecutive Rings Setting. Replaces the consective ring setting on IPPhone.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="e164Mask" type="axl:String255" nillable="true" minOccurs="0"/>
			<xsd:element name="dialPlanWizardId" type="xsd:nonNegativeInteger" minOccurs="0"/>
			<xsd:element name="mwlPolicy" type="axl:XMWLPolicy" minOccurs="0"/>
			<xsd:element name="maxNumCalls" type="xsd:nonNegativeInteger" nillable="false" minOccurs="0"/>
			<xsd:element name="busyTrigger" type="xsd:nonNegativeInteger" nillable="false" minOccurs="0"/>
			<xsd:element name="callInfoDisplay">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="callerName" type="xsd:boolean"/>
						<xsd:element name="callerNumber" type="xsd:boolean"/>
						<xsd:element name="redirectedNumber" type="xsd:boolean"/>
						<xsd:element name="dialedNumber" type="xsd:boolean"/>
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
		</xsd:sequence>
		<xsd:attribute name="uuid" type="axl:XUUID"/>
		<xsd:attribute name="index" type="xsd:positiveInteger">
			<xsd:annotation>
				<xsd:documentation>Indicates the cardinality of the line. Refer to DeviceNumPlanMap.NumPlanIndex.</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
		<xsd:attribute name="ctiid" type="xsd:nonNegativeInteger">
			<xsd:annotation>
				<xsd:documentation>Unique, cannot be null.</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
	</xsd:complexType>
	<xsd:complexType name="XLineId">
		<xsd:annotation>
			<xsd:documentation>XLineId is used by XDevice as a shorthand notation (uuid + index and ctiid attributes).</xsd:documentation>
		</xsd:annotation>
		<xsd:simpleContent>
			<xsd:extension base="axl:XUUID">
				<xsd:attribute name="index" type="xsd:nonNegativeInteger"/>
				<xsd:attribute name="ctiid" type="xsd:nonNegativeInteger"/>
			</xsd:extension>
		</xsd:simpleContent>
	</xsd:complexType>
	<xsd:complexType name="XLoadInformation">
		<xsd:simpleContent>
			<xsd:extension base="axl:String255">
				<xsd:attribute name="special" type="xsd:boolean"/>
			</xsd:extension>
		</xsd:simpleContent>
	</xsd:complexType>
	<xsd:complexType name="XLocation">
		<xsd:sequence minOccurs="0">
			<xsd:element name="name" type="axl:String50"/>
			<xsd:element name="id" type="xsd:nonNegativeInteger">
				<xsd:annotation>
					<xsd:documentation>Read-only.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="kbits" type="xsd:nonNegativeInteger"/>
			<xsd:element name="videoKbits" type="xsd:nonNegativeInteger" nillable="false"/>
		</xsd:sequence>
		<xsd:attribute name="uuid" type="axl:XUUID"/>
	</xsd:complexType>
	<xsd:complexType name="XMediaResourceGroupMember">
		<xsd:choice>
			<xsd:element name="device" type="axl:XDevice">
				<xsd:annotation>
					<xsd:documentation>Only the uuid attribute is read by the AXL API.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="deviceName" type="axl:String50" nillable="false"/>
		</xsd:choice>
		<xsd:attribute name="uuid" type="axl:XUUID" use="optional"/>
	</xsd:complexType>
	<xsd:complexType name="XMediaResourceGroup">
		<xsd:sequence minOccurs="0">
			<xsd:element name="name" type="axl:String50"/>
			<xsd:element name="description" type="axl:String50" minOccurs="0"/>
			<xsd:element name="multicast" type="xsd:boolean"/>
			<xsd:element name="members">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="member" type="axl:XMediaResourceGroupMember" maxOccurs="unbounded"/>
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
		</xsd:sequence>
		<xsd:attribute name="uuid" type="axl:XUUID"/>
	</xsd:complexType>
	<xsd:complexType name="XMediaResourceList">
		<xsd:sequence minOccurs="0">
			<xsd:element name="name" type="axl:String50"/>
			<xsd:element name="clause" type="axl:String1024" minOccurs="0">
				<xsd:annotation>
					<xsd:documentation>Read only.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="members">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="member" type="axl:XMediaResourceListMember" maxOccurs="unbounded"/>
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
		</xsd:sequence>
		<xsd:attribute name="uuid" type="axl:XUUID"/>
	</xsd:complexType>
	<xsd:complexType name="XMediaResourceListMember">
		<xsd:choice>
			<xsd:element name="mediaResourceGroup" type="axl:XMediaResourceGroup">
				<xsd:annotation>
					<xsd:documentation>Only the uuid attribute is read by the AXL API.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="mediaResourceGroupName" type="axl:String50"/>
		</xsd:choice>
		<xsd:attribute name="uuid" type="axl:XUUID"/>
		<xsd:attribute name="order" type="xsd:nonNegativeInteger"/>
	</xsd:complexType>
	<xsd:complexType name="XMGCP">
		<xsd:annotation>
			<xsd:documentation>The generic MGCP follows the IOS Model, but uses more generic terminology to describe the MGCP's structure.

All MGCPs have 1..n UNITs, each which contains 1..n SUBUNITs, each which contains 1..n ENDPOINTs.  ENDPOINTs are (really, contain) a DEVICE.

In the IOS model, the terminology would be SLOTs, VICs, and PORTs.  </xsd:documentation>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:element name="domainName" type="axl:String64"/>
			<xsd:element name="description" type="axl:String100" minOccurs="0"/>
			<xsd:element name="product" type="axl:XProduct"/>
			<xsd:element name="model" type="axl:XModel">
				<xsd:annotation>
					<xsd:documentation>Read-only.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:choice>
				<xsd:element name="callManagerGroup" type="axl:XCallManagerGroup">
					<xsd:annotation>
						<xsd:documentation>Only the uuid attribute is read by the AXL API.</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
				<xsd:element name="callManagerGroupName" type="axl:String50"/>
			</xsd:choice>
			<xsd:element name="units" type="axl:XMGCPUnits" minOccurs="0">
				<xsd:annotation>
					<xsd:documentation>The units element is optional when a new MGCP is being added  and can be added using addMGCPUnit.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="scratch" type="axl:String50" minOccurs="0"/>
			<xsd:element name="vendorConfig" type="axl:XVendorConfig" minOccurs="0"/>
			<xsd:element name="versionStamp" type="axl:XUUID">
				<xsd:annotation>
					<xsd:documentation>UUID that is changed each time the MGCP is updated.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="loadInformation" type="axl:XLoadInformation"/>
		</xsd:sequence>
		<xsd:attribute name="uuid" type="axl:XUUID"/>
	</xsd:complexType>
	<xsd:complexType name="XMGCPEndpoints">
		<xsd:annotation>
			<xsd:documentation>The max attribute identifies the maximum number of endpoints this endpoint list is allowed.       </xsd:documentation>
		</xsd:annotation>
		<xsd:choice>
			<xsd:element name="endpoint" maxOccurs="unbounded">
				<xsd:complexType>
					<xsd:complexContent>
						<xsd:extension base="axl:XGateway">
							<xsd:attribute name="index" type="xsd:nonNegativeInteger" use="required"/>
						</xsd:extension>
					</xsd:complexContent>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name="deviceName" type="axl:String50" maxOccurs="unbounded">
				<xsd:annotation>
					<xsd:documentation>When adding endpoint, only endpoint is allowed</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
		</xsd:choice>
		<xsd:attribute name="max" type="xsd:positiveInteger"/>
	</xsd:complexType>
	<xsd:complexType name="XMGCPEndpoint">
		<xsd:annotation>
			<xsd:documentation>In the IOS model, ENDPOINT corresponds to a PORT inside a VIC.           </xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axl:XDevice">
				<xsd:sequence>
					<xsd:annotation>
						<xsd:documentation>Supported only by a few MGCP gateways like 26XX, 366X, 37XX, 269X, 38XX, VG224.</xsd:documentation>
					</xsd:annotation>
					<xsd:element name="packetCaptureMode" type="axl:XPacketCaptureMode" default="None" minOccurs="0"/>
					<xsd:element name="packetCaptureDuration" type="xsd:positiveInteger" default="60" minOccurs="0"/>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="XMGCPSubunits">
		<xsd:annotation>
			<xsd:documentation>The max attribute identifies the maximum number of subunits this subunit list is allowed.</xsd:documentation>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="subunit" type="axl:XMGCPSubunit" maxOccurs="unbounded"/>
		</xsd:sequence>
		<xsd:attribute name="index" type="xsd:nonNegativeInteger" use="optional"/>
	</xsd:complexType>
	<xsd:complexType name="XMGCPSubunit">
		<xsd:annotation>
			<xsd:documentation>In the IOS model, SUBUNIT corresponds to a VIC, and a VIC contains 1 or more PORTs.</xsd:documentation>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="product" type="axl:XMGCPVic"/>
			<xsd:element name="endpoints" type="axl:XMGCPEndpoints" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="index" type="xsd:nonNegativeInteger"/>
	</xsd:complexType>
	<xsd:complexType name="XMGCPUnits">
		<xsd:annotation>
			<xsd:documentation>The max attribute identifies the maximum number of units this unit list is allowed.</xsd:documentation>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="unit" type="axl:XMGCPUnit" maxOccurs="unbounded"/>
		</xsd:sequence>
		<xsd:attribute name="max" type="xsd:positiveInteger"/>
	</xsd:complexType>
	<xsd:complexType name="XMGCPUnit">
		<xsd:annotation>
			<xsd:documentation>In the IOS model, UNIT corresponds to a SLOT (Slot Module), and a SLOT contains 1 or more VICs.</xsd:documentation>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="product" type="axl:XMGCPSlotModule"/>
			<xsd:element name="subunits" type="axl:XMGCPSubunits" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="index" type="xsd:nonNegativeInteger"/>
	</xsd:complexType>
	<xsd:complexType name="XModelInfo">
		<xsd:sequence>
			<xsd:element name="class" type="axl:XClass"/>
			<xsd:element name="defaultDTMFCapability" type="xsd:nonNegativeInteger" minOccurs="0"/>
			<xsd:element name="features" minOccurs="0">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="feature" type="axl:XFeature" minOccurs="0" maxOccurs="unbounded"/>
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name="hasFirmwardLoad" type="xsd:boolean" minOccurs="0"/>
			<xsd:element name="hasPhoneTemplate" type="xsd:boolean" minOccurs="0"/>
			<xsd:element name="numberOfButtons" type="xsd:nonNegativeInteger" minOccurs="0"/>
			<xsd:element name="phoneTemplateIsUserModifiable" type="xsd:boolean" minOccurs="0"/>
			<xsd:element name="showInDeviceDefaults" type="xsd:boolean" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="name" type="axl:XModel"/>
	</xsd:complexType>
	<xsd:complexType name="XMOHAudioSource">
		<xsd:sequence minOccurs="0">
			<xsd:element name="sourceId" type="axl:XMOHAudioSourceId" nillable="false"/>
			<xsd:element name="name" type="axl:String50" minOccurs="0"/>
			<xsd:element name="sourceFile" type="axl:String255" minOccurs="0"/>
			<xsd:element name="multicast" type="xsd:boolean" nillable="false"/>
			<xsd:element name="repeat" type="xsd:boolean" nillable="false"/>
		</xsd:sequence>
		<xsd:attribute name="uuid" type="axl:XUUID" use="optional"/>
	</xsd:complexType>
	<xsd:complexType name="XName">
		<xsd:simpleContent>
			<xsd:extension base="xsd:string">
				<xsd:attribute name="uuid" type="axl:XUUID"/>
			</xsd:extension>
		</xsd:simpleContent>
	</xsd:complexType>
	<xsd:complexType name="XNumPlan" abstract="true">
		<xsd:annotation>
			<xsd:documentation>Abstract</xsd:documentation>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:annotation>
				<xsd:documentation>When adding a NumPlan with the AXL API, this sequence is required.</xsd:documentation>
			</xsd:annotation>
			<xsd:element name="pattern" type="xsd:string"/>
			<xsd:element name="description" type="xsd:string" minOccurs="0"/>
			<xsd:element name="usage" type="axl:XPatternUsage">
				<xsd:annotation>
					<xsd:documentation>Read-only, set by actual "type" of numplan.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:choice minOccurs="0">
				<xsd:annotation>
					<xsd:documentation>Default Partition would be Null in case not specified.</xsd:documentation>
				</xsd:annotation>
				<xsd:element name="routePartition" type="axl:XRoutePartition">
					<xsd:annotation>
						<xsd:documentation>Only the uuid attribute is read by the AXL API.</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
				<xsd:element name="routePartitionName" type="xsd:string"/>
			</xsd:choice>
		</xsd:sequence>
		<xsd:attribute name="uuid" type="axl:XUUID"/>
	</xsd:complexType>
	<xsd:complexType name="XNumplanIdentifier">
		<xsd:annotation>
			<xsd:documentation>Shorthand object to uniquely identify a Numplan entry by directory number (dn) and paritiion name.</xsd:documentation>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="directoryNumber" type="axl:XDirectoryNumber"/>
			<xsd:element name="routePartitionName" type="xsd:string"/>
		</xsd:sequence>
	</xsd:complexType>
	<xsd:complexType name="XNPPattern" abstract="true">
		<xsd:annotation>
			<xsd:documentation>Abstract</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axl:XNumPlan">
				<xsd:sequence>
					<xsd:element name="blockEnable" type="xsd:boolean"/>
					<xsd:element name="calledPartyTransformationMask" type="xsd:string"/>
					<xsd:element name="callingPartyTransformationMask" type="xsd:string"/>
					<xsd:element name="useCallingPartyPhoneMask" type="axl:XStatus" nillable="false"/>
					<xsd:element name="callingPartyPrefixDigits" type="axl:String50" minOccurs="0"/>
					<xsd:choice>
						<xsd:element name="dialPlan" type="axl:XDialPlan">
							<xsd:annotation>
								<xsd:documentation>Only the uuid attribute is read by the AXL API.</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
						<xsd:element name="dialPlanName" type="axl:String50"/>
					</xsd:choice>
					<xsd:element name="dialPlanWizardGenId" type="xsd:nonNegativeInteger"/>
					<xsd:choice>
						<xsd:element name="digitDiscardInstruction" type="axl:XDigitDiscardInstruction">
							<xsd:annotation>
								<xsd:documentation>Only the uuid attribute is read by the AXL API.</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
						<xsd:element name="digitDiscardInstructionName" type="xsd:string"/>
					</xsd:choice>
					<xsd:element name="messageWaiting" type="axl:XLampBlinkRate"/>
					<xsd:element name="networkLocation" type="axl:XNetworkLocation"/>
					<xsd:element name="patternUrgency" type="xsd:boolean"/>
					<xsd:element name="prefixDigitsOut" type="xsd:string"/>
					<xsd:choice>
						<xsd:element name="routeFilter" type="axl:XRouteFilter">
							<xsd:annotation>
								<xsd:documentation>Only the uuid attribute is read by the AXL API.</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
						<xsd:element name="routeFilterName" type="xsd:string"/>
					</xsd:choice>
					<xsd:element name="callingLinePresentationBit" type="axl:XPresentationBit" nillable="false" minOccurs="0"/>
					<xsd:element name="callingNamePresentationBit" type="axl:XPresentationBit" nillable="false" minOccurs="0"/>
					<xsd:element name="connectedLinePresentationBit" type="axl:XPresentationBit" nillable="false" minOccurs="0"/>
					<xsd:element name="connectedNamePresentationBit" type="axl:XPresentationBit" nillable="false" minOccurs="0"/>
					<xsd:element name="supportOverlapSending" type="xsd:boolean" nillable="false" minOccurs="0"/>
					<xsd:element name="patternPrecedence" type="axl:XPatternPrecedence" nillable="false" minOccurs="0"/>
					<xsd:element name="releaseCause" type="axl:XReleaseCauseValue" nillable="false" minOccurs="0"/>
					<xsd:element name="allowDeviceOverride" minOccurs="0"/>
					<xsd:element name="provideOutsideDialtone" minOccurs="0"/>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="XNPCallPark">
		<xsd:complexContent>
			<xsd:extension base="axl:XNumPlan">
				<xsd:sequence>
					<xsd:annotation>
						<xsd:documentation>The CallManager for this Call Park is required.  When adding a Call Park with the AXL API, the CallManager is required.</xsd:documentation>
					</xsd:annotation>
					<xsd:choice>
						<xsd:element name="callManagerId" type="axl:XUUID">
							<xsd:annotation>
								<xsd:documentation>Since CallPark is included in the XCallManager type, we do not want to cause a loop in the XML here, so we only allow callManagerId.</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
						<xsd:element name="callManagerName" type="axl:String50">
							<xsd:annotation>
								<xsd:documentation>Not nullable.</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
					</xsd:choice>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="XNPCallPickupGroup">
		<xsd:complexContent>
			<xsd:extension base="axl:XNumPlan">
				<xsd:sequence>
					<xsd:element name="name" type="xsd:Name"/>
					<xsd:element name="members" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>On Addition always the first member added is itself. Do not specify the first member as itself in an Add request . Also make sure that the priority always starts with 1. It will internally be taken care of during Addition and Updation.</xsd:documentation>
						</xsd:annotation>
						<xsd:complexType>
							<xsd:sequence minOccurs="0">
								<xsd:element name="member" type="axl:XPickupGroupMember" minOccurs="0" maxOccurs="unbounded"/>
							</xsd:sequence>
						</xsd:complexType>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="XNPConference">
		<xsd:complexContent>
			<xsd:extension base="axl:XNumPlan">
				<xsd:sequence minOccurs="0">
					<xsd:element name="mixer" type="axl:XMixer"/>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="XNPCTIDirectoryNumber">
		<xsd:complexContent>
			<xsd:extension base="axl:XNPDirectoryNumber">
				<xsd:sequence minOccurs="0">
					<xsd:element name="callForwardCTIFailure" type="axl:XCallForwardInfo"/>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="XNPMessageWaiting">
		<xsd:complexContent>
			<xsd:extension base="axl:XNPDirectoryNumber">
				<xsd:sequence minOccurs="0">
					<xsd:element name="isMessageWaitingOn" type="xsd:boolean"/>
					<xsd:element name="mwiCSS" type="axl:XCallingSearchSpace"/>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="XNPDirectoryNumber">
		<xsd:complexContent>
			<xsd:extension base="axl:XNumPlan">
				<xsd:sequence minOccurs="0">
					<xsd:choice minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>Nullable.</xsd:documentation>
						</xsd:annotation>
						<xsd:element name="aarNeighborhood" type="axl:XAARNeighborhood">
							<xsd:annotation>
								<xsd:documentation>Only the uuid attribute is read by the AXL API.</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
						<xsd:element name="aarNeighborhoodName" type="axl:String50"/>
					</xsd:choice>
					<xsd:element name="callForwardAll" type="axl:XCallForwardInfo" minOccurs="0"/>
					<xsd:element name="callForwardBusy" type="axl:XCallForwardInfo" minOccurs="0"/>
					<xsd:element name="callForwardBusyInt" type="axl:XCallForwardInfo" minOccurs="0"/>
					<xsd:element name="callForwardNoAnswer" type="axl:XCallForwardInfo" minOccurs="0"/>
					<xsd:element name="callForwardNoAnswerInt" type="axl:XCallForwardInfo" minOccurs="0"/>
					<xsd:element name="callForwardNoCoverage" type="axl:XCallForwardInfo" minOccurs="0"/>
					<xsd:element name="callForwardNoCoverageInt" type="axl:XCallForwardInfo" minOccurs="0"/>
					<xsd:element name="callForwardOnFailure" type="axl:XCallForwardInfo" minOccurs="0"/>
					<xsd:element name="callForwardAlternateParty" type="axl:XCallForwardInfo" minOccurs="0"/>
					<xsd:choice minOccurs="0">
						<xsd:element name="callPickupGroup" type="axl:XNPCallPickupGroup">
							<xsd:annotation>
								<xsd:documentation>Only the uuid attribute is read by the AXL API.</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
						<xsd:element name="callPickupGroupName" type="axl:String50"/>
					</xsd:choice>
					<xsd:element name="autoAnswer" type="axl:XAutoAnswer" nillable="false" minOccurs="0"/>
					<xsd:element name="networkHoldMOHAudioSourceId" type="axl:XMOHAudioSourceId" nillable="true" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>A value of 0 means 'none selected'.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="userHoldMOHAudioSourceId" type="axl:XMOHAudioSourceId" nillable="true" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>A value of 0 means 'none selected'.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="cfaCSSClause" type="xsd:string" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>Read-only.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="alertingName" type="axl:String50" nillable="true"/>
					<xsd:choice minOccurs="0">
						<xsd:element name="shareLineAppearanceCSS">
							<xsd:annotation>
								<xsd:documentation>Only the uuid attribute is read by the AXL API.</xsd:documentation>
							</xsd:annotation>
							<xsd:complexType>
								<xsd:complexContent>
									<xsd:extension base="axl:XCallingSearchSpace"/>
								</xsd:complexContent>
							</xsd:complexType>
						</xsd:element>
						<xsd:element name="shareLineAppearanceCSSName" type="axl:String50"/>
					</xsd:choice>
					<xsd:choice minOccurs="0">
						<xsd:element name="voiceMailProfile" type="axl:XVoiceMailProfile"/>
						<xsd:element name="voiceMailProfileName" type="axl:String50"/>
					</xsd:choice>
					<xsd:element name="patternPrecedence" type="axl:XPatternPrecedence" nillable="false" minOccurs="0"/>
					<xsd:element name="releaseCause" type="axl:XReleaseCauseValue" nillable="false" minOccurs="0"/>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="XNPRoutePattern">
		<xsd:complexContent>
			<xsd:extension base="axl:XNPPattern">
				<xsd:sequence>
					<xsd:element name="destination">
						<xsd:complexType>
							<xsd:choice>
								<xsd:sequence>
									<xsd:choice>
										<xsd:element name="gateway" type="axl:XDevice">
											<xsd:annotation>
												<xsd:documentation>Only the uuid attribute is read by the AXL API.</xsd:documentation>
											</xsd:annotation>
										</xsd:element>
										<xsd:element name="gatewayName" type="xsd:string"/>
									</xsd:choice>
								</xsd:sequence>
								<xsd:sequence>
									<xsd:choice>
										<xsd:element name="routeList" type="axl:XRouteList">
											<xsd:annotation>
												<xsd:documentation>Only the uuid attribute is read by the AXL API.</xsd:documentation>
											</xsd:annotation>
										</xsd:element>
										<xsd:element name="routeListName" type="xsd:string"/>
									</xsd:choice>
								</xsd:sequence>
							</xsd:choice>
						</xsd:complexType>
					</xsd:element>
					<xsd:element name="authorizationCodeRequired" type="xsd:boolean" minOccurs="0"/>
					<xsd:element name="authorizationLevelRequired" type="xsd:nonNegativeInteger" minOccurs="0"/>
					<xsd:element name="clientCodeRequired" type="xsd:boolean" minOccurs="0"/>
					<xsd:element name="withTag" type="axl:String50" minOccurs="0"/>
					<xsd:element name="withValueClause" type="axl:String255" minOccurs="0"/>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="XNPHuntPilot">
		<xsd:complexContent>
			<xsd:extension base="axl:XNPPattern">
				<xsd:sequence minOccurs="0">
					<xsd:element name="destination">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:choice>
									<xsd:element name="huntList" type="axl:XHuntList">
										<xsd:annotation>
											<xsd:documentation>Only the uuid attribute is read by the AXL API.</xsd:documentation>
										</xsd:annotation>
									</xsd:element>
									<xsd:element name="huntListName" type="xsd:string"/>
								</xsd:choice>
							</xsd:sequence>
						</xsd:complexType>
					</xsd:element>
					<xsd:element name="ForwardHuntBusy" type="axl:XHuntForwardInfo" minOccurs="0"/>
					<xsd:element name="ForwardHuntNoAnswer" type="axl:XHuntForwardInfo" minOccurs="0"/>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="XNPTranslationPattern">
		<xsd:complexContent>
			<xsd:extension base="axl:XNPPattern">
				<xsd:sequence minOccurs="0">
					<xsd:choice>
						<xsd:element name="callingSearchSpace" type="axl:XCallingSearchSpace"/>
						<xsd:element name="callingSearchSpaceName" type="xsd:string"/>
					</xsd:choice>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="XPhoneProfile">
		<xsd:complexContent>
			<xsd:extension base="axl:XIPPhone"/>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="XPickupGroupMember">
		<xsd:sequence>
			<xsd:element name="priority" type="xsd:nonNegativeInteger"/>
			<xsd:choice>
				<xsd:element name="pickupGroup">
					<xsd:annotation>
						<xsd:documentation>uuid of Pickup Group</xsd:documentation>
					</xsd:annotation>
					<xsd:complexType>
						<xsd:simpleContent>
							<xsd:extension base="axl:XUUID">
								<xsd:attribute name="uuid" type="axl:XUUID"/>
							</xsd:extension>
						</xsd:simpleContent>
					</xsd:complexType>
				</xsd:element>
				<xsd:element name="pickupGroupName" type="axl:String255"/>
				<xsd:element name="pickupDNAndPartition">
					<xsd:complexType>
						<xsd:sequence>
							<xsd:element name="dnPattern" type="axl:XDirectoryNumber"/>
							<xsd:sequence>
								<xsd:choice>
									<xsd:element name="routePartition" type="axl:XRoutePartition">
										<xsd:annotation>
											<xsd:documentation>Only the uuid attribute is read by the AXL API.</xsd:documentation>
										</xsd:annotation>
									</xsd:element>
									<xsd:element name="routePartitionId" type="axl:XUUID">
										<xsd:annotation>
											<xsd:documentation>DEPRECATED: use routePartition/uuid</xsd:documentation>
										</xsd:annotation>
									</xsd:element>
									<xsd:element name="routePartitionName" type="axl:String50"/>
								</xsd:choice>
							</xsd:sequence>
						</xsd:sequence>
					</xsd:complexType>
				</xsd:element>
			</xsd:choice>
		</xsd:sequence>
		<xsd:attribute name="uuid" type="axl:XUUID"/>
	</xsd:complexType>
	<xsd:complexType name="XPhoneTemplate">
		<xsd:annotation>
			<xsd:documentation>Phone templates describe what features are assigned to what buttons on a particular phone or set of phones. These templates are downloaded to phones and add-on-modules.</xsd:documentation>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:element name="name">
				<xsd:annotation>
					<xsd:documentation>The template's name.</xsd:documentation>
				</xsd:annotation>
				<xsd:simpleType>
					<xsd:restriction base="xsd:string">
						<xsd:maxLength value="50"/>
					</xsd:restriction>
				</xsd:simpleType>
			</xsd:element>
			<xsd:element name="buttons">
				<xsd:annotation>
					<xsd:documentation>The list of buttons on this model of phone.</xsd:documentation>
				</xsd:annotation>
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="button" type="axl:XButton" maxOccurs="unbounded"/>
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name="usage" type="axl:XPhoneTemplateUsage">
				<xsd:annotation>
					<xsd:documentation>Usage can be either traditional (a phone) or add-on-module.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
		</xsd:sequence>
		<xsd:attribute name="uuid" type="axl:XUUID"/>
		<xsd:attribute name="userModifiable" type="xsd:boolean"/>
		<xsd:attribute name="removeAtMigration" type="xsd:boolean"/>
	</xsd:complexType>
	<xsd:complexType name="XProcessConfig">
		<xsd:annotation>
			<xsd:documentation>Describes the ProcessConfig table (used for service parameters)</xsd:documentation>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:choice>
				<xsd:element name="processNode" type="axl:XProcessNode"/>
				<xsd:element name="processNodeName" type="axl:String50" nillable="false"/>
			</xsd:choice>
			<xsd:element name="name" type="axl:String50" nillable="false"/>
			<xsd:element name="service" type="axl:XService" nillable="false"/>
			<xsd:element name="value" type="axl:String1024" nillable="true" minOccurs="0"/>
			<xsd:element name="valueType" type="axl:XParam" nillable="false"/>
			<xsd:element name="primaryData" type="xsd:boolean" default="false" nillable="false"/>
		</xsd:sequence>
		<xsd:attribute name="uuid" type="axl:XUUID" use="optional"/>
	</xsd:complexType>
	<xsd:complexType name="XProcessNode">
		<xsd:annotation>
			<xsd:documentation>Describes a server running in the CCM cluster.</xsd:documentation>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:element name="name" type="axl:String255">
				<xsd:annotation>
					<xsd:documentation>The primary hostname of the process node.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="description" type="axl:String50" minOccurs="0"/>
			<xsd:element name="mac" type="axl:XMacAddress" minOccurs="0">
				<xsd:annotation>
					<xsd:documentation>The mac address of the host.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
		</xsd:sequence>
		<xsd:attribute name="uuid" type="axl:XUUID"/>
	</xsd:complexType>
	<xsd:complexType name="XProcessNodeService">
		<xsd:sequence minOccurs="0">
			<xsd:choice>
				<xsd:element name="processNode" type="axl:XProcessNode" nillable="false"/>
				<xsd:element name="processNodeName" type="axl:String255" nillable="false"/>
			</xsd:choice>
			<xsd:element name="service" type="axl:XService" nillable="false"/>
			<xsd:element name="fileName" type="axl:String255" minOccurs="0">
				<xsd:annotation>
					<xsd:documentation>This field has been deprecated in Seadragon</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="traceLevel" type="xsd:nonNegativeInteger" default="0" nillable="false"/>
			<xsd:element name="userCategories" type="xsd:nonNegativeInteger" default="0" nillable="false"/>
			<xsd:element name="enable" type="xsd:boolean" default="false" nillable="false"/>
			<xsd:element name="numFiles" type="xsd:nonNegativeInteger" default="250" nillable="false"/>
			<xsd:element name="numLines" type="xsd:nonNegativeInteger" default="10000" nillable="false"/>
			<xsd:element name="numMinutes" type="xsd:nonNegativeInteger" default="1440" nillable="false"/>
			<xsd:element name="includeNonDeviceTraces" type="xsd:boolean" default="false" nillable="false"/>
			<xsd:element name="useXML" type="xsd:boolean" fixed="false" nillable="false"/>
			<xsd:element name="serverName" type="axl:String255" minOccurs="0"/>
			<xsd:element name="deviceNameMonitorFlag" type="xsd:boolean" default="false" nillable="false"/>
			<xsd:element name="deviceTypeMonitorFlag" type="xsd:boolean" fixed="false" nillable="false"/>
			<xsd:element name="fileTraceFlag" type="xsd:boolean" default="false" nillable="false"/>
			<xsd:element name="outputDebugStringFlag" type="xsd:boolean" default="false" nillable="false"/>
		</xsd:sequence>
		<xsd:attribute name="uuid" type="axl:XUUID" use="optional"/>
	</xsd:complexType>
	<xsd:complexType name="XProductInfo">
		<xsd:sequence>
			<xsd:element name="model" type="axl:XModel"/>
			<xsd:element name="maxPorts" type="xsd:nonNegativeInteger" minOccurs="0"/>
			<xsd:element name="showInDropDown" type="xsd:boolean" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="name" type="axl:XProduct"/>
	</xsd:complexType>
	<xsd:complexType name="XRegion">
		<xsd:sequence minOccurs="0">
			<xsd:element name="name" type="axl:String50" nillable="false"/>
			<xsd:element name="relatedRegions" minOccurs="0">
				<xsd:annotation>
					<xsd:documentation>Read-only.  AXL API automatically adds the required entries in the RegionMatrix table.</xsd:documentation>
				</xsd:annotation>
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="relatedRegion" type="axl:XRegionRelationship" maxOccurs="unbounded"/>
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
		</xsd:sequence>
		<xsd:attribute name="uuid" type="axl:XUUID" use="optional"/>
	</xsd:complexType>
	<xsd:complexType name="XRegionRelationship">
		<xsd:sequence minOccurs="0">
			<xsd:choice>
				<xsd:element name="region" type="axl:XRegion" nillable="false"/>
				<xsd:element name="name" type="axl:String50" nillable="false"/>
			</xsd:choice>
			<xsd:element name="bandwidth" type="axl:XBandwidth" default="G.711" nillable="false"/>
			<xsd:element name="videoBandwidth" type="xsd:nonNegativeInteger" nillable="false"/>
		</xsd:sequence>
		<xsd:attribute name="uuid" type="axl:XUUID" use="optional"/>
	</xsd:complexType>
	<xsd:complexType name="XRouteFilter">
		<xsd:sequence minOccurs="0">
			<xsd:element name="name" type="xsd:string">
				<xsd:annotation>
					<xsd:documentation>Not nullable.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="clause" type="xsd:string" minOccurs="0">
				<xsd:annotation>
					<xsd:documentation>Read only.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:choice>
				<xsd:annotation>
					<xsd:documentation>Not nullable.</xsd:documentation>
				</xsd:annotation>
				<xsd:element name="dialPlan" type="axl:XDialPlan">
					<xsd:annotation>
						<xsd:documentation>Only the uuid attribute is read by the AXL API.</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
				<xsd:element name="dialPlanName" type="axl:String50" nillable="false"/>
			</xsd:choice>
			<xsd:element name="dialPlanWizardGenId" type="xsd:nonNegativeInteger" minOccurs="0">
				<xsd:annotation>
					<xsd:documentation>Read only. Not nullable.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="members">
				<xsd:annotation>
					<xsd:documentation>Nullable.</xsd:documentation>
				</xsd:annotation>
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="member" type="axl:XRouteFilterMember" minOccurs="0" maxOccurs="unbounded"/>
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
		</xsd:sequence>
		<xsd:attribute name="uuid" type="axl:XUUID"/>
	</xsd:complexType>
	<xsd:complexType name="XRouteFilterMember">
		<xsd:sequence minOccurs="0">
			<xsd:choice>
				<xsd:element name="dialPlanTag" type="axl:XDialPlanTag">
					<xsd:annotation>
						<xsd:documentation>Only the uuid attribute is used by the AXL API for inserts and updates.</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
				<xsd:element name="dialPlanTagName" type="axl:String50">
					<xsd:annotation>
						<xsd:documentation>Actually refers to DialPlanTag.Tag in database.</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
			</xsd:choice>
			<xsd:element name="digits" type="xsd:nonNegativeInteger" minOccurs="0"/>
			<xsd:element name="operator" type="axl:XOperator"/>
		</xsd:sequence>
		<xsd:attribute name="uuid" type="axl:XUUID"/>
		<xsd:attribute name="priority" type="xsd:nonNegativeInteger"/>
	</xsd:complexType>
	<xsd:complexType name="XRouteFilterMemberId">
		<xsd:simpleContent>
			<xsd:extension base="axl:XUUID">
				<xsd:attribute name="priority" type="xsd:nonNegativeInteger"/>
			</xsd:extension>
		</xsd:simpleContent>
	</xsd:complexType>
	<xsd:complexType name="XRouteGroup">
		<xsd:sequence minOccurs="0">
			<xsd:element name="name" type="xsd:Name"/>
			<xsd:element name="dialPlanWizardGenId" type="xsd:nonNegativeInteger">
				<xsd:annotation>
					<xsd:documentation>Read-only.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="members">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="member" type="axl:XRouteGroupMember" maxOccurs="unbounded"/>
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
		</xsd:sequence>
		<xsd:attribute name="uuid" type="axl:XUUID"/>
	</xsd:complexType>
	<xsd:complexType name="XRouteGroupMember">
		<xsd:sequence minOccurs="0">
			<xsd:element name="deviceSelectionOrder" type="xsd:nonNegativeInteger"/>
			<xsd:element name="dialPlanWizardGenId" type="xsd:nonNegativeInteger"/>
			<xsd:choice>
				<xsd:element name="device" type="axl:XDevice">
					<xsd:annotation>
						<xsd:documentation>Only the uuid attribute is read by the AXL API.</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
				<xsd:element name="deviceName" type="xsd:string"/>
				<xsd:element name="deviceId" type="axl:XUUID">
					<xsd:annotation>
						<xsd:documentation>DEPRECATED: use device/uuid</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
			</xsd:choice>
		</xsd:sequence>
		<xsd:attribute name="uuid" type="axl:XUUID"/>
		<xsd:attribute name="port" type="xsd:nonNegativeInteger"/>
	</xsd:complexType>
	<xsd:complexType name="XLineGroup">
		<xsd:sequence minOccurs="0">
			<xsd:element name="name" type="xsd:Name"/>
			<xsd:element name="distributionAlgorithm" type="axl:XDistributeAlgorithm" nillable="false"/>
			<xsd:element name="rnaReversionTimeOut" type="xsd:nonNegativeInteger" default="10" nillable="false"/>
			<xsd:element name="huntAlgorithmNoAnswer" type="axl:XHuntAlgorithm" nillable="false"/>
			<xsd:element name="huntAlgorithmBusy" type="axl:XHuntAlgorithm" nillable="false"/>
			<xsd:element name="huntAlgorithmNotAvailable" type="axl:XHuntAlgorithm" nillable="false"/>
			<xsd:element name="members">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="member" type="axl:XLineGroupMember" minOccurs="0" maxOccurs="unbounded"/>
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
		</xsd:sequence>
		<xsd:attribute name="uuid" type="axl:XUUID"/>
	</xsd:complexType>
	<xsd:complexType name="XLineGroupMember">
		<xsd:sequence minOccurs="0">
			<xsd:element name="lineSelectionOrder" type="xsd:nonNegativeInteger"/>
			<xsd:choice>
				<xsd:element name="directoryNumber" type="axl:XNPDirectoryNumber">
					<xsd:annotation>
						<xsd:documentation>Only the uuid attribute is read by the AXL API.</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
				<xsd:element name="directoryNumberId" type="axl:XUUID">
					<xsd:annotation>
						<xsd:documentation>DEPRECATED: use directorynumber/uuid</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
				<xsd:element name="dnPatternAndPartition">
					<xsd:complexType>
						<xsd:sequence>
							<xsd:element name="dnPattern" type="axl:XDirectoryNumber"/>
							<xsd:sequence>
								<xsd:choice>
									<xsd:element name="routePartition" type="axl:XRoutePartition">
										<xsd:annotation>
											<xsd:documentation>Only the uuid attribute is read by the AXL API.</xsd:documentation>
										</xsd:annotation>
									</xsd:element>
									<xsd:element name="routePartitionId" type="axl:XUUID">
										<xsd:annotation>
											<xsd:documentation>DEPRECATED: use routePartition/uuid</xsd:documentation>
										</xsd:annotation>
									</xsd:element>
									<xsd:element name="routePartitionName" type="axl:String50"/>
								</xsd:choice>
							</xsd:sequence>
						</xsd:sequence>
					</xsd:complexType>
				</xsd:element>
			</xsd:choice>
		</xsd:sequence>
		<xsd:attribute name="uuid" type="axl:XUUID"/>
	</xsd:complexType>
	<xsd:complexType name="XRouteListMember">
		<xsd:annotation>
			<xsd:documentation>Represents a mapping between route groups and route lists.</xsd:documentation>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:choice>
				<xsd:element name="routeGroup" type="axl:XRouteGroup">
					<xsd:annotation>
						<xsd:documentation>Only the uuid attribute is read by the AXL API.</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
				<xsd:element name="routeGroupName" type="axl:String50" nillable="false"/>
			</xsd:choice>
			<xsd:element name="selectionOrder" type="xsd:nonNegativeInteger"/>
			<xsd:element name="calledPartyTransformationMask" type="axl:String50" minOccurs="0"/>
			<xsd:element name="callingPartyTransformationMask" type="axl:String50" minOccurs="0"/>
			<xsd:choice minOccurs="0">
				<xsd:element name="callingSearchSpace" type="axl:XCallingSearchSpace">
					<xsd:annotation>
						<xsd:documentation>Only the uuid attribute is read by the AXL API.</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
				<xsd:element name="callingSearchSpaceName" type="xsd:Name"/>
			</xsd:choice>
			<xsd:element name="dialPlanWizardGenId" type="xsd:nonNegativeInteger" minOccurs="0">
				<xsd:annotation>
					<xsd:documentation>Read-only.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:choice minOccurs="0">
				<xsd:element name="digitDiscardInstruction" type="axl:XDigitDiscardInstruction">
					<xsd:annotation>
						<xsd:documentation>Only the uuid attribute is read by the AXL API.</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
				<xsd:element name="digitDiscardInstructionName" type="axl:Name50"/>
			</xsd:choice>
			<xsd:element name="prefixDigitsOut" type="axl:String50" minOccurs="0"/>
			<xsd:element name="callingPartyPrefixDigits" type="axl:String50" minOccurs="0"/>
			<xsd:element name="useFullyQualifiedCallingPartyNumber" type="axl:XStatus"/>
		</xsd:sequence>
		<xsd:attribute name="uuid" type="axl:XUUID"/>
	</xsd:complexType>
	<xsd:complexType name="XHuntListMember">
		<xsd:annotation>
			<xsd:documentation>Represents a mapping between line groups and hunt lists.</xsd:documentation>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:choice>
				<xsd:element name="lineGroup" type="axl:XLineGroup">
					<xsd:annotation>
						<xsd:documentation>Only the uuid attribute is read by the AXL API.</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
				<xsd:element name="lineGroupName" type="axl:String50" nillable="false"/>
			</xsd:choice>
			<xsd:element name="selectionOrder" type="xsd:nonNegativeInteger"/>
			<xsd:element name="calledPartyTransformationMask" type="axl:String50" minOccurs="0">
				<xsd:annotation>
					<xsd:documentation>Read-only</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="callingPartyTransformationMask" type="axl:String50" minOccurs="0">
				<xsd:annotation>
					<xsd:documentation>Read-only</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:choice minOccurs="0">
				<xsd:element name="callingSearchSpace" type="axl:XCallingSearchSpace">
					<xsd:annotation>
						<xsd:documentation>Read-only</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
				<xsd:element name="callingSearchSpaceName" type="xsd:Name">
					<xsd:annotation>
						<xsd:documentation>Read-only</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
			</xsd:choice>
			<xsd:element name="dialPlanWizardGenId" type="xsd:nonNegativeInteger" minOccurs="0">
				<xsd:annotation>
					<xsd:documentation>Read-only.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:choice minOccurs="0">
				<xsd:element name="digitDiscardInstruction" type="axl:XDigitDiscardInstruction">
					<xsd:annotation>
						<xsd:documentation>Read-only</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
				<xsd:element name="digitDiscardInstructionName" type="axl:Name50">
					<xsd:annotation>
						<xsd:documentation>Read-only</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
			</xsd:choice>
			<xsd:element name="prefixDigitsOut" type="axl:String50" minOccurs="0">
				<xsd:annotation>
					<xsd:documentation>Read-only</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="callingPartyPrefixDigits" type="axl:String50" minOccurs="0">
				<xsd:annotation>
					<xsd:documentation>Read-only</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="useFullyQualifiedCallingPartyNumber" type="axl:XStatus"/>
		</xsd:sequence>
		<xsd:attribute name="uuid" type="axl:XUUID"/>
	</xsd:complexType>
	<xsd:complexType name="XRouteList">
		<xsd:annotation>
			<xsd:documentation>Although stored in the Device table, the routeList is not really a device.</xsd:documentation>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:element name="name" type="xsd:Name">
				<xsd:annotation>
					<xsd:documentation>From Device table.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="description" type="xsd:string" minOccurs="0">
				<xsd:annotation>
					<xsd:documentation>From Device table.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:choice>
				<xsd:annotation>
					<xsd:documentation>From Device table.</xsd:documentation>
				</xsd:annotation>
				<xsd:element name="callManagerGroupName" type="axl:String50" nillable="false"/>
				<xsd:element name="callManagerGroup" type="axl:XCallManagerGroup">
					<xsd:annotation>
						<xsd:documentation>Only the uuid attribute is read by the AXL API.</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
			</xsd:choice>
			<xsd:element name="routeListEnabled" type="xsd:boolean" nillable="false" minOccurs="0">
				<xsd:annotation>
					<xsd:documentation>From Device table.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="members">
				<xsd:annotation>
					<xsd:documentation>Each member is a representaion of an entry in the RouteList table.</xsd:documentation>
				</xsd:annotation>
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="member" type="axl:XRouteListMember" maxOccurs="unbounded"/>
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
		</xsd:sequence>
		<xsd:attribute name="uuid" type="axl:XUUID"/>
	</xsd:complexType>
	<xsd:complexType name="XHuntList">
		<xsd:annotation>
			<xsd:documentation>Although stored in the Device table, the huntList is not really a device. Hunt list are also stored in Route list table.</xsd:documentation>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:element name="name" type="xsd:Name">
				<xsd:annotation>
					<xsd:documentation>From Device table.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="description" type="xsd:string" minOccurs="0">
				<xsd:annotation>
					<xsd:documentation>From Device table.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:choice>
				<xsd:annotation>
					<xsd:documentation>From Device table.</xsd:documentation>
				</xsd:annotation>
				<xsd:element name="callManagerGroupName" type="axl:String50" nillable="false"/>
				<xsd:element name="callManagerGroup" type="axl:XCallManagerGroup">
					<xsd:annotation>
						<xsd:documentation>Only the uuid attribute is read by the AXL API.</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
			</xsd:choice>
			<xsd:element name="routeListEnabled" type="xsd:boolean" nillable="false" minOccurs="0">
				<xsd:annotation>
					<xsd:documentation>From Device table.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="members">
				<xsd:annotation>
					<xsd:documentation>Each member is a representaion of an entry in the RouteList table.</xsd:documentation>
				</xsd:annotation>
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="member" type="axl:XHuntListMember" maxOccurs="unbounded"/>
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
		</xsd:sequence>
		<xsd:attribute name="uuid" type="axl:XUUID"/>
	</xsd:complexType>
	<xsd:complexType name="XTimePeriod">
		<xsd:sequence minOccurs="0">
			<xsd:element name="name" type="axl:String50"/>
			<xsd:element name="startTime" type="axl:XTimeOfDay" nillable="false" minOccurs="0"/>
			<xsd:element name="endTime" type="axl:XTimeOfDay" nillable="false" minOccurs="0"/>
			<xsd:element name="startDay" type="axl:XDayOfWeek" nillable="false" minOccurs="0"/>
			<xsd:element name="endDay" type="axl:XDayOfWeek" nillable="false" minOccurs="0"/>
			<xsd:element name="monthOfYear" type="axl:XMonthOfYear" nillable="false" minOccurs="0"/>
			<xsd:element name="dayOfMonth" type="xsd:positiveInteger" nillable="false" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<xsd:complexType name="XTimeScheduleTimePeriod">
		<xsd:choice>
			<xsd:element name="timePeriod" type="axl:XTimePeriod">
				<xsd:annotation>
					<xsd:documentation>Only the uuid attribute is read by the AXL API.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="timePeriodName" type="axl:String50" nillable="false"/>
		</xsd:choice>
		<xsd:attribute name="uuid" type="axl:XUUID" use="optional"/>
	</xsd:complexType>
	<xsd:complexType name="XTimeSchedule">
		<xsd:sequence minOccurs="0">
			<xsd:element name="name" type="axl:String50"/>
			<xsd:element name="members">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="member" type="axl:XTimeScheduleTimePeriod" maxOccurs="unbounded"/>
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
		</xsd:sequence>
		<xsd:attribute name="uuid" type="axl:XUUID"/>
	</xsd:complexType>
	<xsd:complexType name="XRoutePartition">
		<xsd:sequence minOccurs="0">
			<xsd:element name="name" type="xsd:string"/>
			<xsd:element name="description" type="xsd:string" minOccurs="0"/>
			<xsd:element name="dialPlanWizardGenId" type="xsd:nonNegativeInteger" minOccurs="0">
				<xsd:annotation>
					<xsd:documentation>Read-only.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:choice minOccurs="0">
				<xsd:element name="timeScheduleId" type="axl:XUUID">
					<xsd:annotation>
						<xsd:documentation>Since CallPark is included in the XCallManager type, we do not want to cause a loop in the XML here, so we only allow callManagerId.</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
				<xsd:element name="timeScheduleName" type="axl:String50">
					<xsd:annotation>
						<xsd:documentation>Not nullable.</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
			</xsd:choice>
			<xsd:element name="useOriginatingDeviceTimeZone" type="xsd:boolean" minOccurs="0"/>
			<xsd:element name="timeZone" type="axl:XTimeZone" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uuid" type="axl:XUUID"/>
	</xsd:complexType>
	<xsd:complexType name="XSoftkeyTemplate">
		<xsd:sequence minOccurs="0">
			<xsd:element name="name" type="axl:String50"/>
			<xsd:element name="description" type="axl:String100" minOccurs="0"/>
			<xsd:element name="isStandard" type="xsd:boolean" default="true" nillable="false"/>
			<xsd:element name="softkeyClause" type="xsd:string" nillable="true"/>
			<xsd:element name="softkeySetClause" type="xsd:string" nillable="true"/>
		</xsd:sequence>
		<xsd:attribute name="uuid" type="axl:XUUID"/>
	</xsd:complexType>
	<xsd:complexType name="XSpeeddial">
		<xsd:sequence>
			<xsd:element name="dirn" type="axl:XDirectoryNumber"/>
			<xsd:element name="label" type="xsd:string"/>
		</xsd:sequence>
		<xsd:attribute name="index" type="xsd:positiveInteger"/>
	</xsd:complexType>
	<xsd:complexType name="XSRSTInfo">
		<xsd:sequence>
			<xsd:element name="name" type="axl:UniqueName50"/>
			<xsd:element name="srstOption" type="axl:XSRSTOption" default="User Specific"/>
			<xsd:element name="userModifiable" type="xsd:boolean" default="true"/>
			<xsd:element name="ipAddr1" minOccurs="0">
				<xsd:simpleType>
					<xsd:restriction base="xsd:string">
						<xsd:length value="16"/>
					</xsd:restriction>
				</xsd:simpleType>
			</xsd:element>
			<xsd:element name="port1" type="xsd:nonNegativeInteger" default="2000"/>
			<xsd:element name="ipAddr2" minOccurs="0">
				<xsd:simpleType>
					<xsd:restriction base="xsd:string">
						<xsd:length value="16"/>
					</xsd:restriction>
				</xsd:simpleType>
			</xsd:element>
			<xsd:element name="port2" type="xsd:nonNegativeInteger" default="2000" minOccurs="0"/>
			<xsd:element name="ipAddr3" minOccurs="0">
				<xsd:simpleType>
					<xsd:restriction base="xsd:string">
						<xsd:length value="16"/>
					</xsd:restriction>
				</xsd:simpleType>
			</xsd:element>
			<xsd:element name="port3" type="xsd:nonNegativeInteger" default="2000" minOccurs="0"/>
			<xsd:element name="certificate" type="axl:String4096"/>
			<xsd:element name="isSecure" type="xsd:boolean" default="false"/>
		</xsd:sequence>
		<xsd:attribute name="uuid" type="axl:XUUID"/>
	</xsd:complexType>
	<xsd:complexType name="XSubscribedService">
		<xsd:annotation>
			<xsd:documentation>An entry in the TelecasterSubscribedService table.</xsd:documentation>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:choice>
				<xsd:element name="telecasterService" type="axl:XTelecasterService">
					<xsd:annotation>
						<xsd:documentation>Only the uuid attribute is read by the AXL API on adds and updates.</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
				<xsd:element name="telecasterServiceName" type="axl:String100"/>
			</xsd:choice>
			<xsd:element name="name" type="axl:String100"/>
			<xsd:element name="url">
				<xsd:simpleType>
					<xsd:restriction base="xsd:anyURI">
						<xsd:maxLength value="512"/>
					</xsd:restriction>
				</xsd:simpleType>
			</xsd:element>
			<xsd:element name="urlButtonIndex" type="xsd:nonNegativeInteger" nillable="false" minOccurs="0"/>
			<xsd:element name="urlLabel" type="axl:String50" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uuid" type="axl:XUUID" use="optional"/>
	</xsd:complexType>
	<xsd:complexType name="XTelecasterService">
		<xsd:sequence minOccurs="0">
			<xsd:element name="name" type="axl:String100" nillable="false"/>
			<xsd:element name="description" type="axl:String1024" minOccurs="0"/>
			<xsd:element name="templateURL" nillable="false">
				<xsd:simpleType>
					<xsd:restriction base="xsd:anyURI">
						<xsd:maxLength value="512"/>
					</xsd:restriction>
				</xsd:simpleType>
			</xsd:element>
		</xsd:sequence>
		<xsd:attribute name="uuid" type="axl:XUUID" use="optional"/>
	</xsd:complexType>
	<xsd:complexType name="XT1PortList">
		<xsd:sequence>
			<xsd:element name="port" type="axl:XT1Port" minOccurs="0" maxOccurs="unbounded"/>
		</xsd:sequence>
	</xsd:complexType>
	<xsd:complexType name="XT1Port">
		<xsd:annotation>
			<xsd:documentation>A T1Port is a T1 Time Slot.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axl:XAnalogPort">
				<xsd:sequence minOccurs="0">
					<xsd:element name="callerId" type="axl:XCallerID"/>
					<xsd:element name="endpointId" type="axl:String128" minOccurs="0"/>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="XTrunkInfo">
		<xsd:annotation>
			<xsd:documentation>Collection of trunk information.</xsd:documentation>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="kind" type="axl:XTrunk">
				<xsd:annotation>
					<xsd:documentation>What kind of trunk this is (Ground Start, Loop Start, POTS, etc.).</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="level" type="axl:XTrunkDirection">
				<xsd:annotation>
					<xsd:documentation>The trunk level (e.g., DAL).</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="direction" type="axl:XTrunkDirection">
				<xsd:annotation>
					<xsd:documentation>Inbound, Outbound, or Bothways.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="pad">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="rx" type="axl:XTrunkPad">
							<xsd:annotation>
								<xsd:documentation>Receive pad.</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
						<xsd:element name="tx" type="axl:XTrunkPad">
							<xsd:annotation>
								<xsd:documentation>Transmit pad.</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
		</xsd:sequence>
	</xsd:complexType>
	<xsd:complexType name="XUserGroupMember">
		<xsd:annotation>
			<xsd:documentation>User Group Member</xsd:documentation>
		</xsd:annotation>
		<xsd:choice>
			<xsd:element name="user" type="axl:XUser" nillable="false">
				<xsd:annotation>
					<xsd:documentation>Only the uuid attribute is read by the AXL API.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="userId" type="xsd:string" nillable="false"/>
		</xsd:choice>
		<xsd:attribute name="uuid" type="axl:XUUID"/>
	</xsd:complexType>
	<xsd:complexType name="XUserGroup">
		<xsd:annotation>
			<xsd:documentation>User Group</xsd:documentation>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:element name="name" type="axl:UniqueName128" nillable="false"/>
			<xsd:element name="members" nillable="true" minOccurs="0">
				<xsd:complexType>
					<xsd:sequence minOccurs="0">
						<xsd:element name="member" type="axl:XUserGroupMember" nillable="false" minOccurs="0" maxOccurs="unbounded"/>
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
		</xsd:sequence>
		<xsd:attribute name="uuid" type="axl:XUUID"/>
	</xsd:complexType>
	<xsd:complexType name="XUser">
		<xsd:sequence>
			<xsd:element name="firstname" type="xsd:string" minOccurs="0"/>
			<xsd:element name="lastname" type="xsd:string"/>
			<xsd:element name="userid" type="xsd:string"/>
			<xsd:element name="password" type="xsd:string"/>
			<xsd:element name="pin">
				<xsd:simpleType>
					<xsd:restriction base="xsd:string">
						<xsd:pattern value="\d\d\d\d+"/>
					</xsd:restriction>
				</xsd:simpleType>
			</xsd:element>
			<xsd:element name="telephoneNumber" type="axl:XDirectoryNumber" minOccurs="0"/>
			<xsd:element name="extension" type="axl:XDirectoryNumber" minOccurs="0">
				<xsd:annotation>
					<xsd:documentation>This field has been deprecated in Seadragon</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="department" type="xsd:string" minOccurs="0"/>
			<xsd:element name="manager" type="xsd:string" minOccurs="0"/>
			<xsd:element name="userLocale" type="axl:XUserLocale" minOccurs="0"/>
			<xsd:element name="associatedDevices" minOccurs="0">
				<xsd:annotation>
					<xsd:documentation>Also known as controlled devices.</xsd:documentation>
				</xsd:annotation>
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="device" type="axl:String50" minOccurs="0" maxOccurs="unbounded">
							<xsd:annotation>
								<xsd:documentation>Name of device.</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name="associatedPC" type="xsd:string" minOccurs="0"/>
			<xsd:element name="associatedGroups" minOccurs="0">
				<xsd:annotation>
					<xsd:documentation>Read-Only.These groups automatically get added once the user is associated with a directory group.</xsd:documentation>
				</xsd:annotation>
				<xsd:complexType>
					<xsd:sequence minOccurs="0">
						<xsd:element name="userGroup" minOccurs="0" maxOccurs="unbounded">
							<xsd:complexType>
								<xsd:sequence>
									<xsd:element name="name" type="axl:String100" nillable="false">
										<xsd:annotation>
											<xsd:documentation>Name of User Group</xsd:documentation>
										</xsd:annotation>
									</xsd:element>
									<xsd:element name="userRoles" nillable="true" minOccurs="0" maxOccurs="unbounded">
										<xsd:complexType>
											<xsd:sequence minOccurs="0">
												<xsd:element name="userRole" nillable="true" minOccurs="0" maxOccurs="unbounded">
													<xsd:annotation>
														<xsd:documentation>Name of the User Role associated with the user group.</xsd:documentation>
													</xsd:annotation>
													<xsd:complexType>
														<xsd:attribute name="uuid" type="axl:XUUID"/>
													</xsd:complexType>
												</xsd:element>
											</xsd:sequence>
										</xsd:complexType>
									</xsd:element>
								</xsd:sequence>
								<xsd:attribute name="uuid" type="axl:XUUID"/>
							</xsd:complexType>
						</xsd:element>
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name="enableCTI" type="xsd:boolean" default="true" minOccurs="0"/>
			<xsd:element name="digestCredentials" type="xsd:string" nillable="true" minOccurs="0"/>
			<xsd:element name="iaqExtension" type="xsd:string" minOccurs="0">
				<xsd:annotation>
					<xsd:documentation>This field has been deprecated in Seadragon</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="phoneProfiles" minOccurs="0">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:choice>
							<xsd:element name="profile" type="axl:XPhoneProfile" nillable="false" maxOccurs="unbounded">
								<xsd:annotation>
									<xsd:documentation>The complete profile object.  Only the "uuid" attribute is used by the AXL API.</xsd:documentation>
								</xsd:annotation>
							</xsd:element>
							<xsd:element name="profileName" type="xsd:string" nillable="false" maxOccurs="unbounded">
								<xsd:annotation>
									<xsd:documentation>The profile name.</xsd:documentation>
								</xsd:annotation>
							</xsd:element>
						</xsd:choice>
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
		</xsd:sequence>
		<xsd:attribute name="uuid" type="axl:XUUID"/>
	</xsd:complexType>
	<xsd:complexType name="XVendorConfig">
		<xsd:sequence>
			<xsd:any namespace="##local" processContents="skip"/>
		</xsd:sequence>
	</xsd:complexType>
	<xsd:complexType name="XVoiceMailPilot">
		<xsd:sequence minOccurs="0">
			<xsd:element name="dirn" type="axl:XDirectoryNumber" nillable="true"/>
			<xsd:element name="description" type="axl:String50" nillable="true" minOccurs="0"/>
			<xsd:choice minOccurs="0">
				<xsd:element name="CSS" type="axl:XCallingSearchSpace" nillable="true">
					<xsd:annotation>
						<xsd:documentation>Only the UUID attribute is read by the AXL API.</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
				<xsd:element name="CSSName" type="axl:String50" nillable="true">
					<xsd:annotation>
						<xsd:documentation>The name of this Voice Mail Pilot's calling search space.</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
			</xsd:choice>
			<xsd:element name="isDefault" type="xsd:boolean" default="false" nillable="false"/>
		</xsd:sequence>
		<xsd:attribute name="uuid" type="axl:XUUID"/>
	</xsd:complexType>
	<xsd:complexType name="XVoiceMailProfile">
		<xsd:sequence minOccurs="0">
			<xsd:element name="name" type="axl:String50" nillable="false"/>
			<xsd:element name="description" type="axl:String50" nillable="true" minOccurs="0"/>
			<xsd:element name="isDefault" type="xsd:boolean" default="false" nillable="false"/>
			<xsd:element name="voiceMailboxMask" type="xsd:string" nillable="true" minOccurs="0"/>
			<xsd:element name="voiceMailPilot" type="axl:XVoiceMailPilot" nillable="false">
				<xsd:annotation>
					<xsd:documentation>Only the UUID attribute is read by the AXL API.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
		</xsd:sequence>
		<xsd:attribute name="uuid" type="axl:XUUID"/>
	</xsd:complexType>
	<xsd:complexType name="XPilotPoint">
		<xsd:annotation>
			<xsd:documentation>Pilot Point</xsd:documentation>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="name" type="axl:UniqueName128">
				<xsd:annotation>
					<xsd:documentation>The Pilot Point name.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:choice>
				<xsd:element name="devicePool" type="axl:XDevicePool">
					<xsd:annotation>
						<xsd:documentation>Only the uuid attribute is read by the AXL API.</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
				<xsd:element name="devicePoolName" type="axl:UniqueString50"/>
			</xsd:choice>
			<xsd:choice minOccurs="0">
				<xsd:element name="routePartition" type="axl:XRoutePartition">
					<xsd:annotation>
						<xsd:documentation>Only the uuid attribute is read by the AXL API.</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
				<xsd:element name="routePartitionName" type="axl:String50"/>
			</xsd:choice>
			<xsd:choice minOccurs="0">
				<xsd:element name="callingSearchSpace" type="axl:XCallingSearchSpace">
					<xsd:annotation>
						<xsd:documentation>Only the uuid attribute is read by the AXL API.</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
				<xsd:element name="callingSearchSpaceName" type="axl:UniqueName50"/>
			</xsd:choice>
			<xsd:element name="pilotNumber" type="xsd:string"/>
			<xsd:element name="useFirstAvailable" type="xsd:boolean">
				<xsd:annotation>
					<xsd:documentation>This field has been deprecated in Seadragon</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:choice minOccurs="0">
				<xsd:element name="location" type="axl:XLocation">
					<xsd:annotation>
						<xsd:documentation>Only the uuid attribute is read by the AXL API.</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
				<xsd:element name="locationName" type="axl:String50"/>
			</xsd:choice>
		</xsd:sequence>
	</xsd:complexType>
	<!-- *********************************************************** -->
	<!-- Simple Types                                                -->
	<!-- *********************************************************** -->
	<xsd:simpleType name="XDirectoryNumber">
		<xsd:restriction base="xsd:string">
			<xsd:maxLength value="32"/>
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:simpleType name="XIPAddress">
		<xsd:restriction base="xsd:string">
			<xsd:pattern value="\d?\d?\d\.\d?\d?\d\.\d?\d?\d\.\d?\d?\d"/>
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:simpleType name="XKeyString">
		<xsd:annotation>
			<xsd:documentation>A string with some restrictions</xsd:documentation>
		</xsd:annotation>
		<xsd:restriction base="xsd:string">
			<xsd:whiteSpace value="collapse"/>
			<xsd:pattern value="[\s\i\d\.\-]+"/>
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:simpleType name="XMacAddress">
		<xsd:restriction base="xsd:string">
			<xsd:pattern value="[0\-9a\-fA\-F]{12}"/>
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:simpleType name="XUUID">
		<xsd:restriction base="xsd:string">
			<xsd:pattern value="\{........-....-....-....-............\}"/>
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:simpleType name="XMOHAudioSourceId">
		<xsd:restriction base="xsd:nonNegativeInteger">
			<xsd:minInclusive value="0"/>
			<xsd:maxInclusive value="51"/>
		</xsd:restriction>
	</xsd:simpleType>
	<!-- *********************************************************** -->
	<!-- Rule Blocks                                                 -->
	<!-- *********************************************************** -->
	<xsd:complexType name="XRuleInstance">
		<xsd:sequence>
			<xsd:element name="name" type="axl:XKeyString"/>
			<xsd:element name="description" type="xsd:string" minOccurs="0"/>
			<xsd:element name="author" type="xsd:Name" minOccurs="0"/>
			<xsd:element name="rules">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="rule" type="axl:XRule" maxOccurs="unbounded"/>
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
		</xsd:sequence>
	</xsd:complexType>
	<xsd:complexType name="XRule">
		<xsd:annotation>
			<xsd:documentation>The root of all rules.</xsd:documentation>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="name" nillable="false">
				<xsd:annotation>
					<xsd:documentation>The URI name of the  rule. For example: xmlrule://cisco.com/public/isAnInteger</xsd:documentation>
				</xsd:annotation>
				<xsd:simpleType>
					<xsd:restriction base="xsd:string">
						<xsd:pattern value="xmlrule://\S+"/>
					</xsd:restriction>
				</xsd:simpleType>
			</xsd:element>
			<xsd:element name="description" type="xsd:string" minOccurs="0"/>
			<xsd:element name="author" type="xsd:string" minOccurs="0"/>
			<xsd:choice>
				<xsd:annotation>
					<xsd:documentation>The "type" choice.</xsd:documentation>
				</xsd:annotation>
				<xsd:element name="boolean" type="axl:XBooleanRule">
					<xsd:annotation>
						<xsd:documentation>The input must be a boolean.</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
				<xsd:element name="date" type="axl:XDateRule">
					<xsd:annotation>
						<xsd:documentation>The input must conform to a valid date format.</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
				<xsd:element name="float" type="axl:XFloatRule">
					<xsd:annotation>
						<xsd:documentation>The input must be a floating-point number.</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
				<xsd:element name="integer" type="axl:XIntegerRule">
					<xsd:annotation>
						<xsd:documentation>The input must be an integer.</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
				<xsd:element name="list" type="axl:XListRule">
					<xsd:annotation>
						<xsd:documentation>The input is a single key compared to a list.</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
				<xsd:element name="script" type="axl:XScriptRule">
					<xsd:annotation>
						<xsd:documentation>Execute a Javascript fragment.</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
				<xsd:element name="string" type="axl:XStringRule">
					<xsd:annotation>
						<xsd:documentation>The input must be a string (least restrictive).</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
				<xsd:element name="uri" type="axl:XURIRule">
					<xsd:annotation>
						<xsd:documentation>The input must conform to a valid URI format.</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
				<xsd:element name="dynamicList" type="axl:XDynamicListRule"/>
			</xsd:choice>
			<xsd:element name="nullable" type="xsd:boolean" nillable="false" minOccurs="0">
				<xsd:annotation>
					<xsd:documentation>Is a null value acceptable for this rule?</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="subrule" type="axl:XRule" minOccurs="0">
				<xsd:annotation>
					<xsd:documentation>It is possible that a rule might require additional steps of validation. To guard against loops, these subrules must be defined within this rule rather than allowing the rule to reference other rules (however, see XDisplayInstanceParameter).</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="enterpriseDefaultName" type="axl:XKeyString" minOccurs="0">
				<xsd:annotation>
					<xsd:documentation>The name of the enterprise parameter to lookup in the database and use its value as this rule's default value. Overrides the hard-coded default if defined.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
		</xsd:sequence>
	</xsd:complexType>
	<xsd:complexType name="XIntegerRule">
		<xsd:annotation>
			<xsd:documentation>The integer rule determines if the input is a valid integer.</xsd:documentation>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="default" minOccurs="0">
				<xsd:annotation>
					<xsd:documentation>What is the default value if none is supplied? Can either be a decimal or hexadecimal value.</xsd:documentation>
				</xsd:annotation>
				<xsd:simpleType>
					<xsd:restriction base="xsd:string">
						<xsd:pattern value="((0x[0\-9a\-fA\-F]+)|([\-\d]\d*))*"/>
					</xsd:restriction>
				</xsd:simpleType>
			</xsd:element>
			<xsd:element name="min" minOccurs="0">
				<xsd:annotation>
					<xsd:documentation>What is the minimum acceptable value?</xsd:documentation>
				</xsd:annotation>
				<xsd:simpleType>
					<xsd:restriction base="xsd:string">
						<xsd:pattern value="((0x[0\-9a\-fA\-F]+)|([\-\d]\d*))*"/>
					</xsd:restriction>
				</xsd:simpleType>
			</xsd:element>
			<xsd:element name="max" minOccurs="0">
				<xsd:annotation>
					<xsd:documentation>What is the maximum acceptable value?</xsd:documentation>
				</xsd:annotation>
				<xsd:simpleType>
					<xsd:restriction base="xsd:string">
						<xsd:pattern value="((0x[0\-9a\-fA\-F]+)|([\-\d]\d*))*"/>
					</xsd:restriction>
				</xsd:simpleType>
			</xsd:element>
		</xsd:sequence>
	</xsd:complexType>
	<xsd:complexType name="XStringRule">
		<xsd:annotation>
			<xsd:documentation>The string rule determines if the value is a valid string.</xsd:documentation>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="default" type="xsd:string" minOccurs="0">
				<xsd:annotation>
					<xsd:documentation>The default value to return if none is supplied.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="regexp" type="xsd:string" minOccurs="0">
				<xsd:annotation>
					<xsd:documentation>A regular expression to compare the string against.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="length" type="xsd:integer" minOccurs="0">
				<xsd:annotation>
					<xsd:documentation>The maximum length allowed.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="trimWhiteSpace" type="xsd:boolean" minOccurs="0">
				<xsd:annotation>
					<xsd:documentation>A flag which states the rule processors should trim/ignore white space from the input before all other processing.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="onValidationErrorShowMessage" type="xsd:string" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<xsd:complexType name="XFloatRule">
		<xsd:annotation>
			<xsd:documentation>The float rule determines if a value is a valid floating point number.</xsd:documentation>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="default" type="xsd:float" minOccurs="0">
				<xsd:annotation>
					<xsd:documentation>The default value if none is supplied.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="min" type="xsd:float" minOccurs="0">
				<xsd:annotation>
					<xsd:documentation>The minimum acceptable value.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="max" type="xsd:float" minOccurs="0">
				<xsd:annotation>
					<xsd:documentation>The maximum acceptable value.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
		</xsd:sequence>
	</xsd:complexType>
	<xsd:complexType name="XListRule">
		<xsd:annotation>
			<xsd:documentation>The List Rule expresses the correct values of a list (key/value pairs), what the default key value is, and if selecting multiple keys is valid for the list.</xsd:documentation>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="defaultKey" type="xsd:string" minOccurs="0">
				<xsd:annotation>
					<xsd:documentation>What is the default key?</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="multiKey" type="xsd:boolean" default="false">
				<xsd:annotation>
					<xsd:documentation>Can multiple keys be selected?</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="options">
				<xsd:annotation>
					<xsd:documentation>Each option is expressed as a key/value pair. Rule processors should only compare against the key attributes. The value of each option is simply for display.</xsd:documentation>
				</xsd:annotation>
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="option" type="axl:XListRuleOption" maxOccurs="unbounded"/>
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
		</xsd:sequence>
	</xsd:complexType>
	<xsd:complexType name="XListRuleOption" mixed="false">
		<xsd:attribute name="key" type="axl:XKeyString" use="required"/>
		<xsd:attribute name="text" type="xsd:string" use="optional"/>
	</xsd:complexType>
	<xsd:complexType name="XDynamicListRule">
		<xsd:annotation>
			<xsd:documentation>The Dynamic list rule determines the table and columns to build the list from</xsd:documentation>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="defaultKey" type="xsd:string" minOccurs="0"/>
			<xsd:element name="tableName" type="axl:Name50" nillable="false"/>
			<xsd:element name="keyFieldName">
				<xsd:complexType>
					<xsd:choice>
						<xsd:element name="integerFieldName" type="axl:Name50"/>
						<xsd:element name="stringFieldName" type="axl:Name50"/>
					</xsd:choice>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name="descFieldName" type="axl:Name50"/>
			<xsd:element name="Multikey" type="xsd:boolean"/>
			<xsd:element name="filter" type="xsd:string" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<xsd:complexType name="XDateRule">
		<xsd:annotation>
			<xsd:documentation>Directs the rule processor to validate the input as a date. Valid date formats are Any, Long (March 15, 2001), Short-US (the default, 03/15/01), and Short-EU (15/03/01).</xsd:documentation>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="dateFormat" default="Short-US" minOccurs="0">
				<xsd:simpleType>
					<xsd:restriction base="xsd:string">
						<xsd:enumeration value="Any"/>
						<xsd:enumeration value="Long"/>
						<xsd:enumeration value="Short-US"/>
						<xsd:enumeration value="Short-EU"/>
					</xsd:restriction>
				</xsd:simpleType>
			</xsd:element>
			<xsd:choice minOccurs="0">
				<xsd:annotation>
					<xsd:documentation>The default is either a specific date (default), or automatically defaulted to today (defaultNow).</xsd:documentation>
				</xsd:annotation>
				<xsd:element name="default" type="xsd:date"/>
				<xsd:element name="defaultNow" type="xsd:boolean"/>
			</xsd:choice>
			<xsd:element name="min" type="xsd:date" minOccurs="0"/>
			<xsd:element name="max" type="xsd:date" minOccurs="0"/>
			<xsd:element name="restrictTo" minOccurs="0">
				<xsd:annotation>
					<xsd:documentation>Should the rule make sure that the date is not in the future?</xsd:documentation>
				</xsd:annotation>
				<xsd:simpleType>
					<xsd:restriction base="xsd:string">
						<xsd:enumeration value="Past"/>
						<xsd:enumeration value="Future"/>
					</xsd:restriction>
				</xsd:simpleType>
			</xsd:element>
		</xsd:sequence>
	</xsd:complexType>
	<xsd:complexType name="XBooleanRule">
		<xsd:sequence>
			<xsd:element name="default" type="xsd:boolean"/>
		</xsd:sequence>
	</xsd:complexType>
	<xsd:complexType name="XScriptRule">
		<xsd:annotation>
			<xsd:documentation>The input is evaluated by a fragment of JavaScript.</xsd:documentation>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="comment" type="xsd:string"/>
			<xsd:element name="script">
				<xsd:annotation>
					<xsd:documentation>The JavaScript fragment used to evaluate the input. The fragment should be cordoned off by CDATA tags. The fragment must contain a entry-point function with the following prototype:

Array AXLScriptRuleEntryPoint(String inputString)

The output is an Array of two values. Array[0] is a boolean value and indicates success (true) or failure (false). Array[1] contains the result of the script. If successful, it should contain a copy of the inputString or other valid return value. If not successful, it should contain an error message.
</xsd:documentation>
				</xsd:annotation>
				<xsd:simpleType>
					<xsd:restriction base="xsd:string">
						<xsd:whiteSpace value="preserve"/>
					</xsd:restriction>
				</xsd:simpleType>
			</xsd:element>
		</xsd:sequence>
	</xsd:complexType>
	<xsd:complexType name="XURIRule">
		<xsd:annotation>
			<xsd:documentation>The URI rule determines if a value is a valid URI.</xsd:documentation>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="default" type="xsd:anyURI" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<xsd:complexType name="XRuleError">
		<xsd:annotation>
			<xsd:documentation>The XML format for a rule error that might be thrown by a rule processor.</xsd:documentation>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="invalidValue" type="xsd:string">
				<xsd:annotation>
					<xsd:documentation>Contains the value of the original input.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="ruleBroken" type="xsd:Name">
				<xsd:annotation>
					<xsd:documentation>The name of the rule broken.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="errorCode" type="xsd:integer" default="0">
				<xsd:annotation>
					<xsd:documentation>An integer error code.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="errorText" type="xsd:string">
				<xsd:annotation>
					<xsd:documentation>Error message generated by rule.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
		</xsd:sequence>
	</xsd:complexType>
	<!-- *********************************************************** -->
	<!-- Service Dependency objects                                 -->
	<!-- *********************************************************** -->
	<xsd:complexType name="XServiceDependency">
		<xsd:annotation>
			<xsd:documentation>This lists what services that the specified service is dependent on.</xsd:documentation>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="name" type="xsd:anyURI">
				<xsd:annotation>
					<xsd:documentation>The URI of this service dependency. For example: xmldi://cisco.com/serviceDependency/0.  The last part of the URI is the enum value of this service.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="dependencies">
				<xsd:annotation>
					<xsd:documentation>A list of zero or more services that this service depends on.</xsd:documentation>
				</xsd:annotation>
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="dependency" type="xsd:nonNegativeInteger" minOccurs="0" maxOccurs="unbounded">
							<xsd:annotation>
								<xsd:documentation>This is the value of the 'enum' column from the TypeService table.</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name="help" type="axl:String1024" minOccurs="0">
				<xsd:annotation>
					<xsd:documentation>Help text. Optional.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="warning" type="axl:String1024" minOccurs="0">
				<xsd:annotation>
					<xsd:documentation>The warning message. Optional</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
		</xsd:sequence>
		<xsd:attribute name="service" type="xsd:nonNegativeInteger" use="required">
			<xsd:annotation>
				<xsd:documentation>This is the service we are listing dependencies for.</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
	</xsd:complexType>
	<!-- *********************************************************** -->
	<!-- Simple String/Name Restrictions                             -->
	<!-- *********************************************************** -->
	<xsd:simpleType name="Name50">
		<xsd:restriction base="xsd:Name">
			<xsd:maxLength value="50"/>
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:simpleType name="Name128">
		<xsd:restriction base="xsd:Name">
			<xsd:maxLength value="128"/>
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:simpleType name="Name255">
		<xsd:restriction base="xsd:Name">
			<xsd:maxLength value="255"/>
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:simpleType name="String16">
		<xsd:restriction base="xsd:string">
			<xsd:maxLength value="16"/>
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:simpleType name="String32">
		<xsd:restriction base="xsd:string">
			<xsd:maxLength value="32"/>
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:simpleType name="String50">
		<xsd:restriction base="xsd:string">
			<xsd:maxLength value="50"/>
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:simpleType name="String64">
		<xsd:restriction base="xsd:string">
			<xsd:maxLength value="64"/>
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:simpleType name="String100">
		<xsd:restriction base="xsd:string">
			<xsd:maxLength value="100"/>
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:simpleType name="String128">
		<xsd:restriction base="xsd:string">
			<xsd:maxLength value="128"/>
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:simpleType name="String255">
		<xsd:restriction base="xsd:string">
			<xsd:maxLength value="255"/>
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:simpleType name="String1024">
		<xsd:restriction base="xsd:string">
			<xsd:maxLength value="1024"/>
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:simpleType name="String4096">
		<xsd:restriction base="xsd:string">
			<xsd:maxLength value="4096"/>
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:simpleType name="UniqueName50">
		<xsd:annotation>
			<xsd:documentation>The UNIQUE restrictions are simply flags to the user that in the database this value is unique.</xsd:documentation>
		</xsd:annotation>
		<xsd:restriction base="xsd:Name">
			<xsd:maxLength value="50"/>
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:simpleType name="UniqueName128">
		<xsd:restriction base="xsd:Name">
			<xsd:maxLength value="128"/>
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:simpleType name="UniqueName255">
		<xsd:restriction base="xsd:Name">
			<xsd:maxLength value="255"/>
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:simpleType name="UniqueString32">
		<xsd:restriction base="xsd:string">
			<xsd:maxLength value="32"/>
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:simpleType name="UniqueString50">
		<xsd:restriction base="xsd:string">
			<xsd:maxLength value="50"/>
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:simpleType name="UniqueString100">
		<xsd:restriction base="xsd:string">
			<xsd:maxLength value="100"/>
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:simpleType name="UniqueString128">
		<xsd:restriction base="xsd:string">
			<xsd:maxLength value="128"/>
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:simpleType name="UniqueString255">
		<xsd:restriction base="xsd:string">
			<xsd:maxLength value="255"/>
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:simpleType name="UniqueString1024">
		<xsd:restriction base="xsd:string">
			<xsd:maxLength value="1024"/>
		</xsd:restriction>
	</xsd:simpleType>
	
	
	<!-- axlenums.xsd -->
	<xsd:simpleType name="XAdminBoolean">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="FALSE"/>
         <xsd:enumeration value="TRUE"/>
         <xsd:enumeration value="DEFAULT"/>
      </xsd:restriction>
   </xsd:simpleType>

   <xsd:simpleType name="XAdminError">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="Success"/>
         <xsd:enumeration value="Failure"/>
         <xsd:enumeration value="Invalid range for directory numbers"/>
         <xsd:enumeration value="Not yet implemented. See log for more detail"/>
         <xsd:enumeration value="Model and class are not compatible.  See log for more detail"/>
         <xsd:enumeration value="Missing/invalid parameters. See log for more detail"/>
         <xsd:enumeration value="Device does not suppport MLPP"/>
         <xsd:enumeration value="Device does not support preemption"/>
         <xsd:enumeration value="User is not a valid end user or application user"/>
         <xsd:enumeration value="Missing default phone template"/>
         <xsd:enumeration value="Encountered unexpected database datatype.  See log for more detail"/>
         <xsd:enumeration value="Updated failed. A required item was not found in the database"/>
         <xsd:enumeration value="The Cisco CallManager Group cannot be deleted because it is used by related records. Click Dependency Records to view related records and remove this Cisco CallManager Group from any item that is using it then try again."/>
         <xsd:enumeration value="One or more Cisco CallManager Groups could not be deleted because it is used by related records. Select a Cisco CallManager Group and click the Dependancy Records link on the Cisco CallManager Configuration page to see what is using it."/>
         <xsd:enumeration value="Cannot create DNs or duplicate DNs for the ports. Please check if a DN range is available."/>
         <xsd:enumeration value="Partition name cannot be empty string."/>
         <xsd:enumeration value="Change failed - Current Password is incorrect."/>
         <xsd:enumeration value="Change failed - New Password does not match Confirm Password."/>
         <xsd:enumeration value="Change failed - Current PIN is incorrect."/>
         <xsd:enumeration value="Change failed - New PIN does not match Confirm PIN."/>
         <xsd:enumeration value="Fastdials index already in use. Please choose another index."/>
         <xsd:enumeration value="Fastdials phone number already in use. Please choose another phone number."/>
         <xsd:enumeration value="Cisco Unity Connection Server returned a SQL Exception.  Please check the log file."/>
         <xsd:enumeration value="Unable to delete user account from Cisco Unity Connection Server.  Please check the log file."/>
         <xsd:enumeration value="File uploaded does not have extension .lic.  Please upload a license file with extension .lic."/>
         <xsd:enumeration value="A file with this name already exists in the license file directory.  Please upload a file with a different name."/>
         <xsd:enumeration value="Unable to obtain certificate for this IP address/Port.  SRST reference has been changed to non-secured. Please disable the security services on the gateway if you do not use the security feature."/>
         <xsd:enumeration value="DN/Route Pattern must be the last search parameter when using the Search Within Results option."/>
         <xsd:enumeration value="Route Group Name must be the last search parameter when using the Search Within Results option."/>
         <xsd:enumeration value="A Cisco Unified Presence Server must be added in Application Server prior to enabling CUPS or CUPC"/>
      </xsd:restriction>
   </xsd:simpleType>

   <xsd:simpleType name="XAlarmSeverity">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="Emergency"/>
         <xsd:enumeration value="Alert"/>
         <xsd:enumeration value="Critical"/>
         <xsd:enumeration value="Error"/>
         <xsd:enumeration value="Warning"/>
         <xsd:enumeration value="Notice"/>
         <xsd:enumeration value="Informational"/>
         <xsd:enumeration value="Debug"/>
      </xsd:restriction>
   </xsd:simpleType>

   <xsd:simpleType name="XAppOrDeviceReroute">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="Redirect to App"/>
         <xsd:enumeration value="Redirect to Device"/>
      </xsd:restriction>
   </xsd:simpleType>

   <xsd:simpleType name="XAppServer">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="Cisco Unity Voice Mail 4.x"/>
         <xsd:enumeration value="Cisco Unity Connection 1.x"/>
         <xsd:enumeration value="Cisco Unified Presence Server"/>
      </xsd:restriction>
   </xsd:simpleType>

   <xsd:simpleType name="XAppServerContent">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="UNITY KUBRIK"/>
         <xsd:enumeration value="UNITY PRE KUBRIK"/>
      </xsd:restriction>
   </xsd:simpleType>

   <xsd:simpleType name="XApplication">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="Cisco Call Manager Administration"/>
         <xsd:enumeration value="Cisco Call Manager Serviceability"/>
         <xsd:enumeration value="Cisco Computer Telephone Interface (CTI)"/>
         <xsd:enumeration value="Cisco Call Manager AXL Database"/>
         <xsd:enumeration value="Cisco Extension Mobility"/>
         <xsd:enumeration value="Cisco Call Manager End User"/>
      </xsd:restriction>
   </xsd:simpleType>

   <xsd:simpleType name="XApplicationDialRule">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="Original Dial Rule"/>
         <xsd:enumeration value="Directory Dial Rule"/>
      </xsd:restriction>
   </xsd:simpleType>

   <xsd:simpleType name="XAuthenticationMode">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="By Authentication String"/>
         <xsd:enumeration value="By Null String"/>
         <xsd:enumeration value="By Existing Certificate (precedence to LSC)"/>
         <xsd:enumeration value="By Existing Certificate (precedence to MIC)"/>
      </xsd:restriction>
   </xsd:simpleType>

   <xsd:simpleType name="XAutoAnswer">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="Auto Answer Off"/>
         <xsd:enumeration value="Auto Answer with Headset"/>
         <xsd:enumeration value="Auto Answer with Speakerphone"/>
      </xsd:restriction>
   </xsd:simpleType>

   <xsd:simpleType name="XBATFile">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="None"/>
         <xsd:enumeration value="Insert Files"/>
         <xsd:enumeration value="Export Files"/>
         <xsd:enumeration value="Report Files"/>
         <xsd:enumeration value="Custom Files"/>
         <xsd:enumeration value="Log Files"/>
         <xsd:enumeration value="BAT Excel Template"/>
      </xsd:restriction>
   </xsd:simpleType>

   <xsd:simpleType name="XBATFileSubClause">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="None"/>
         <xsd:enumeration value="Specific"/>
         <xsd:enumeration value="All"/>
      </xsd:restriction>
   </xsd:simpleType>

   <xsd:simpleType name="XBATFrequency">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="Once"/>
         <xsd:enumeration value="Monthly"/>
         <xsd:enumeration value="Weekly"/>
         <xsd:enumeration value="Daily"/>
         <xsd:enumeration value="Hourly"/>
      </xsd:restriction>
   </xsd:simpleType>

   <xsd:simpleType name="XBATFunction">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="Insert Phones - All Details"/>
         <xsd:enumeration value="Insert Phones - Specific Details"/>
         <xsd:enumeration value="Insert Users"/>
         <xsd:enumeration value="Insert UDP - All Details"/>
         <xsd:enumeration value="Insert UDP - Specific Details"/>
         <xsd:enumeration value="Insert VG200 Gateways"/>
         <xsd:enumeration value="Insert CAT6k FXS Ports"/>
         <xsd:enumeration value="Insert Pickup Groups"/>
         <xsd:enumeration value="Insert Forced Authorization Codes"/>
         <xsd:enumeration value="Insert Client Matter Codes"/>
         <xsd:enumeration value="Insert Phones/users"/>
         <xsd:enumeration value="Insert Managers"/>
         <xsd:enumeration value="Insert Assistants"/>
         <xsd:enumeration value="Insert Manager/Assistants"/>
         <xsd:enumeration value="Delete Phones - Query"/>
         <xsd:enumeration value="Delete UDP - Query"/>
         <xsd:enumeration value="Delete Users - Query"/>
         <xsd:enumeration value="Delete Managers - Query"/>
         <xsd:enumeration value="Delete Assistants - Query"/>
         <xsd:enumeration value="Delete Lines - Query"/>
         <xsd:enumeration value="Delete Pickup Groups - Query"/>
         <xsd:enumeration value="Delete Client Matter Codes"/>
         <xsd:enumeration value="Delete Forced Authorization Codes"/>
         <xsd:enumeration value="Delete Gateways - Query"/>
         <xsd:enumeration value="Delete Phones - Custom File"/>
         <xsd:enumeration value="Delete Users - Custom File"/>
         <xsd:enumeration value="Delete Managers - Custom File"/>
         <xsd:enumeration value="Delete CAT6k FXS Ports"/>
         <xsd:enumeration value="Delete Managers/Assistants"/>
         <xsd:enumeration value="Update Phones - Query"/>
         <xsd:enumeration value="Update Users - Query"/>
         <xsd:enumeration value="Update Phones - Custom File"/>
         <xsd:enumeration value="Update Users - Custom File"/>
         <xsd:enumeration value="Update CAT6k FXS Ports - Custom File"/>
         <xsd:enumeration value="Phone Add Lines"/>
         <xsd:enumeration value="Reset/Restart Phones Query"/>
         <xsd:enumeration value="Reset/Restart Phones Custom File"/>
         <xsd:enumeration value="Generate Phone Reports"/>
         <xsd:enumeration value="Generate User Reports"/>
         <xsd:enumeration value="Generate Manager Reports"/>
         <xsd:enumeration value="Generate Assistant Reports"/>
         <xsd:enumeration value="Generate User Device Profile Reports"/>
         <xsd:enumeration value="Generate Gateway Reports"/>
         <xsd:enumeration value="Export Phones - All Details"/>
         <xsd:enumeration value="Export Phones - Specific Details"/>
         <xsd:enumeration value="Export UDP - All Details"/>
         <xsd:enumeration value="Export UDP - Specific Details"/>
         <xsd:enumeration value="Export Users"/>
         <xsd:enumeration value="Reset users Pwd/Pin Query"/>
         <xsd:enumeration value="Reset users Pwd/Pin Custom"/>
         <xsd:enumeration value="Phone CAPF Configuration"/>
         <xsd:enumeration value="Generate UDP"/>
         <xsd:enumeration value="Delete Assistants - Custom File"/>
         <xsd:enumeration value="Add Phone File Format"/>
         <xsd:enumeration value="Add UDP File Format"/>
         <xsd:enumeration value="Add User File Format"/>
         <xsd:enumeration value="Phone File Format"/>
         <xsd:enumeration value="UDP File Format"/>
         <xsd:enumeration value="User File Format"/>
         <xsd:enumeration value="Delete UDP - Custom File"/>
         <xsd:enumeration value="Delete VG200 Gateways - Custom File"/>
         <xsd:enumeration value="Validate Phones - All Details"/>
         <xsd:enumeration value="Validate Phones - Specific Details"/>
         <xsd:enumeration value="Validate UDP - All Details"/>
         <xsd:enumeration value="Validate UDP - Specific Details"/>
         <xsd:enumeration value="Validate Users"/>
         <xsd:enumeration value="UDP Add Lines"/>
         <xsd:enumeration value="Update Phones - CSV File"/>
         <xsd:enumeration value="Update User Device Profiles - CSV File"/>
         <xsd:enumeration value="Update Lines - Query"/>
         <xsd:enumeration value="Validate Phones/Users"/>
         <xsd:enumeration value="BAT Excel CSV Tool"/>
         <xsd:enumeration value="Manager File Format"/>
         <xsd:enumeration value="Assistant File Format"/>
         <xsd:enumeration value="Add Phones Users File Format"/>
         <xsd:enumeration value="Migrate Phones - SCCP TO SIP"/>
         <xsd:enumeration value="Update CUPS Users - Custom File"/>
         <xsd:enumeration value="Export CUPS Users"/>
      </xsd:restriction>
   </xsd:simpleType>

   <xsd:simpleType name="XBATJobStatus">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="Pending"/>
         <xsd:enumeration value="Stop Requested"/>
         <xsd:enumeration value="Processing"/>
         <xsd:enumeration value="Completed"/>
         <xsd:enumeration value="InComplete"/>
         <xsd:enumeration value="Hold"/>
      </xsd:restriction>
   </xsd:simpleType>

   <xsd:simpleType name="XBATResultStatus">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="Success"/>
         <xsd:enumeration value="Error"/>
      </xsd:restriction>
   </xsd:simpleType>

   <xsd:simpleType name="XBATTarget">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="None"/>
         <xsd:enumeration value="Phones"/>
         <xsd:enumeration value="Users"/>
         <xsd:enumeration value="UDP"/>
         <xsd:enumeration value="VG200 Gateways"/>
         <xsd:enumeration value="CAT6k FXS Ports"/>
         <xsd:enumeration value="Lines"/>
         <xsd:enumeration value="Pickup Groups"/>
         <xsd:enumeration value="Forced Authorization Codes"/>
         <xsd:enumeration value="Client Matter Codes"/>
         <xsd:enumeration value="CAPF"/>
         <xsd:enumeration value="Phones/users"/>
         <xsd:enumeration value="Managers"/>
         <xsd:enumeration value="Assistants"/>
         <xsd:enumeration value="Managers Assistants"/>
         <xsd:enumeration value="CUPS Users"/>
      </xsd:restriction>
   </xsd:simpleType>

   <xsd:simpleType name="XBATUsage">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="Select"/>
         <xsd:enumeration value="Set Values"/>
         <xsd:enumeration value="File Format"/>
         <xsd:enumeration value="UI Values"/>
         <xsd:enumeration value="System File Format"/>
         <xsd:enumeration value="Display Query"/>
      </xsd:restriction>
   </xsd:simpleType>

   <xsd:simpleType name="XBandwidth">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="Keep Current Setting"/>
         <xsd:enumeration value="Use System Default"/>
         <xsd:enumeration value="G.723"/>
         <xsd:enumeration value="G.729"/>
         <xsd:enumeration value="G.722"/>
         <xsd:enumeration value="GSM"/>
         <xsd:enumeration value="G.728"/>
         <xsd:enumeration value="G.711"/>
         <xsd:enumeration value="Wideband"/>
      </xsd:restriction>
   </xsd:simpleType>

   <xsd:simpleType name="XBillingserverprotocol">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="SFTP"/>
         <xsd:enumeration value="FTP"/>
      </xsd:restriction>
   </xsd:simpleType>

   <xsd:simpleType name="XBitPos">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="bit 1"/>
         <xsd:enumeration value="bit 2"/>
         <xsd:enumeration value="bit 3"/>
         <xsd:enumeration value="bit 4"/>
         <xsd:enumeration value="bit 5"/>
         <xsd:enumeration value="bit 6"/>
         <xsd:enumeration value="bit 7"/>
         <xsd:enumeration value="bit 8"/>
         <xsd:enumeration value="bit 9"/>
         <xsd:enumeration value="bit 10"/>
         <xsd:enumeration value="bit 11"/>
         <xsd:enumeration value="bit 12"/>
         <xsd:enumeration value="bit 13"/>
         <xsd:enumeration value="bit 14"/>
         <xsd:enumeration value="bit 15"/>
         <xsd:enumeration value="bit 16"/>
         <xsd:enumeration value="bit 17"/>
         <xsd:enumeration value="bit 18"/>
         <xsd:enumeration value="bit 19"/>
         <xsd:enumeration value="bit 20"/>
         <xsd:enumeration value="bit 21"/>
         <xsd:enumeration value="bit 22"/>
         <xsd:enumeration value="bit 23"/>
         <xsd:enumeration value="bit 24"/>
         <xsd:enumeration value="bit 25"/>
         <xsd:enumeration value="bit 26"/>
         <xsd:enumeration value="bit 27"/>
         <xsd:enumeration value="bit 28"/>
         <xsd:enumeration value="bit 29"/>
         <xsd:enumeration value="bit 30"/>
         <xsd:enumeration value="bit 31"/>
         <xsd:enumeration value="bit 32"/>
      </xsd:restriction>
   </xsd:simpleType>

   <xsd:simpleType name="XBoolean">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="No"/>
         <xsd:enumeration value="Yes"/>
      </xsd:restriction>
   </xsd:simpleType>

   <xsd:simpleType name="XBriProtocol">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="BRI NET3"/>
      </xsd:restriction>
   </xsd:simpleType>

   <xsd:simpleType name="XCSUParam">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="0dB"/>
         <xsd:enumeration value="-7.5dB"/>
         <xsd:enumeration value="-15dB"/>
         <xsd:enumeration value="-22.5dB"/>
      </xsd:restriction>
   </xsd:simpleType>

   <xsd:simpleType name="XCallInfoDisplay">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="Original Dialed Number"/>
         <xsd:enumeration value="Redirected Dialed Number"/>
         <xsd:enumeration value="Caller Number"/>
         <xsd:enumeration value="Caller Name"/>
      </xsd:restriction>
   </xsd:simpleType>

   <xsd:simpleType name="XCallState">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="On Hook"/>
         <xsd:enumeration value="Connected"/>
         <xsd:enumeration value="On Hold"/>
         <xsd:enumeration value="Ring In"/>
         <xsd:enumeration value="Off Hook"/>
         <xsd:enumeration value="Connected Transfer"/>
         <xsd:enumeration value="Digits After First"/>
         <xsd:enumeration value="Connected Conference"/>
         <xsd:enumeration value="Ring Out"/>
         <xsd:enumeration value="Off Hook With Feature"/>
         <xsd:enumeration value="Remote In Use"/>
      </xsd:restriction>
   </xsd:simpleType>

   <xsd:simpleType name="XCallerID">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="ANI"/>
         <xsd:enumeration value="DNIS"/>
      </xsd:restriction>
   </xsd:simpleType>

   <xsd:simpleType name="XCallingPartySelection">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="Originator"/>
         <xsd:enumeration value="First Redirect Number"/>
         <xsd:enumeration value="Last Redirect Number"/>
         <xsd:enumeration value="First Redirect Number (External)"/>
         <xsd:enumeration value="Last Redirect Number (External)"/>
      </xsd:restriction>
   </xsd:simpleType>

   <xsd:simpleType name="XCertificate">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="Unknown"/>
         <xsd:enumeration value="No Certificate Exists"/>
         <xsd:enumeration value="Locally Significant Certificate"/>
         <xsd:enumeration value="Manufacture Installed Certificate Exists"/>
         <xsd:enumeration value="Locally Significant Certificate and Manufacture Installed Certificate Exists"/>
      </xsd:restriction>
   </xsd:simpleType>

   <xsd:simpleType name="XCertificateOperation">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="No Pending Operation"/>
         <xsd:enumeration value="Install/Upgrade"/>
         <xsd:enumeration value="Delete"/>
         <xsd:enumeration value="Troubleshoot"/>
      </xsd:restriction>
   </xsd:simpleType>

   <xsd:simpleType name="XCertificateStatus">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="None"/>
         <xsd:enumeration value="Operation Pending"/>
         <xsd:enumeration value="Upgrade Success"/>
         <xsd:enumeration value="Delete Success"/>
         <xsd:enumeration value="Troubleshoot Success"/>
         <xsd:enumeration value="Upgrade Failed"/>
         <xsd:enumeration value="Delete Failed"/>
         <xsd:enumeration value="Troubleshoot Failed"/>
         <xsd:enumeration value="Upgrade Failed: Invalid LSC"/>
         <xsd:enumeration value="Upgrade Failed: Invalid Authentication String"/>
         <xsd:enumeration value="Upgrade Failed: Invalid MIC"/>
         <xsd:enumeration value="Upgrade Failed: Invalid Credentials"/>
         <xsd:enumeration value="Upgrade Failed: Phone Communication Failure"/>
         <xsd:enumeration value="Upgrade Failed: Key Generation Failed/Timeout"/>
         <xsd:enumeration value="Upgrade Failed: CA Communication Failure"/>
         <xsd:enumeration value="Upgrade Failed: CA Rejected Connection"/>
         <xsd:enumeration value="Upgrade Failed: User Initiated Request Late/Timedout"/>
         <xsd:enumeration value="Delete Failed: Invalid LSC"/>
         <xsd:enumeration value="Delete Failed: Invalid Authentication String"/>
         <xsd:enumeration value="Delete Failed: Invalid MIC"/>
         <xsd:enumeration value="Delete Failed: Invalid Credentials"/>
         <xsd:enumeration value="Delete Failed: Phone Communication Failure"/>
         <xsd:enumeration value="Delete Failed: Key Generation Failed/Timeout"/>
         <xsd:enumeration value="Delete Failed: CA Communication Failure"/>
         <xsd:enumeration value="Delete Failed: CA Rejected Connection"/>
         <xsd:enumeration value="Delete Failed: User Initiated Request Late/Timedout"/>
         <xsd:enumeration value="Troubleshoot Failed: Invalid LSC"/>
         <xsd:enumeration value="Troubleshoot Failed: Invalid Authentication String"/>
         <xsd:enumeration value="Troubleshoot Failed: Invalid MIC"/>
         <xsd:enumeration value="Troubleshoot Failed: Invalid Credentials"/>
         <xsd:enumeration value="Troubleshoot Failed: Phone Communication Failure"/>
         <xsd:enumeration value="Troubleshoot Failed: Key Generation Failed/Timeout"/>
         <xsd:enumeration value="Troubleshoot Failed: User Initiated Request Late/Timedout"/>
      </xsd:restriction>
   </xsd:simpleType>

   <xsd:simpleType name="XClass">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="Phone"/>
         <xsd:enumeration value="Gateway"/>
         <xsd:enumeration value="Conference Bridge"/>
         <xsd:enumeration value="Media Termination Point"/>
         <xsd:enumeration value="Route List"/>
         <xsd:enumeration value="Voice Mail"/>
         <xsd:enumeration value="CTI Route Point"/>
         <xsd:enumeration value="Music On Hold"/>
         <xsd:enumeration value="Simulation"/>
         <xsd:enumeration value="Pilot"/>
         <xsd:enumeration value="GateKeeper"/>
         <xsd:enumeration value="Add-on modules"/>
         <xsd:enumeration value="Hidden Phone"/>
         <xsd:enumeration value="Trunk"/>
         <xsd:enumeration value="Tone Announcement Player"/>
         <xsd:enumeration value="Gateway Template"/>
         <xsd:enumeration value="UDP Template"/>
         <xsd:enumeration value="Phone Template"/>
         <xsd:enumeration value="Device Profile"/>
         <xsd:enumeration value="Invalid"/>
      </xsd:restriction>
   </xsd:simpleType>

   <xsd:simpleType name="XClockReference">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="Network"/>
         <xsd:enumeration value="Internal"/>
         <xsd:enumeration value="Span 1"/>
         <xsd:enumeration value="Span 2"/>
         <xsd:enumeration value="Span 3"/>
         <xsd:enumeration value="Span 4"/>
         <xsd:enumeration value="Span 5"/>
         <xsd:enumeration value="Span 6"/>
         <xsd:enumeration value="Span 7"/>
         <xsd:enumeration value="Span 8"/>
      </xsd:restriction>
   </xsd:simpleType>

   <xsd:simpleType name="XConnectedPBX">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="None"/>
         <xsd:enumeration value="Siemens Hicom"/>
         <xsd:enumeration value="Ericsson MD-110"/>
         <xsd:enumeration value="Alcatel PBX"/>
         <xsd:enumeration value="Meridian Option 11C"/>
         <xsd:enumeration value="Lucent Definity G3"/>
         <xsd:enumeration value="IPC MX"/>
         <xsd:enumeration value="Cisco CCM"/>
      </xsd:restriction>
   </xsd:simpleType>

   <xsd:simpleType name="XCountry">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="Argentina"/>
         <xsd:enumeration value="Australia"/>
         <xsd:enumeration value="Austria"/>
         <xsd:enumeration value="Belgium"/>
         <xsd:enumeration value="Brazil"/>
         <xsd:enumeration value="Canada"/>
         <xsd:enumeration value="China"/>
         <xsd:enumeration value="Colombia"/>
         <xsd:enumeration value="Cyprus"/>
         <xsd:enumeration value="Czech Republic"/>
         <xsd:enumeration value="Denmark"/>
         <xsd:enumeration value="Egypt"/>
         <xsd:enumeration value="Finland"/>
         <xsd:enumeration value="France"/>
         <xsd:enumeration value="Germany"/>
         <xsd:enumeration value="Ghana"/>
         <xsd:enumeration value="Greece"/>
         <xsd:enumeration value="Hong Kong"/>
         <xsd:enumeration value="Hungary"/>
         <xsd:enumeration value="Iceland"/>
         <xsd:enumeration value="India"/>
         <xsd:enumeration value="Indonesia"/>
         <xsd:enumeration value="Ireland"/>
         <xsd:enumeration value="Israel"/>
         <xsd:enumeration value="Italy"/>
         <xsd:enumeration value="Japan"/>
         <xsd:enumeration value="Jordan"/>
         <xsd:enumeration value="Kenya"/>
         <xsd:enumeration value="Korea Republic"/>
         <xsd:enumeration value="Lebanon"/>
         <xsd:enumeration value="Luxembourg"/>
         <xsd:enumeration value="Malaysia"/>
         <xsd:enumeration value="Mexico"/>
         <xsd:enumeration value="Nepal"/>
         <xsd:enumeration value="Netherlands"/>
         <xsd:enumeration value="New Zealand"/>
         <xsd:enumeration value="Nigeria"/>
         <xsd:enumeration value="Norway"/>
         <xsd:enumeration value="Pakistan"/>
         <xsd:enumeration value="Panama"/>
         <xsd:enumeration value="Peru"/>
         <xsd:enumeration value="Philippines"/>
         <xsd:enumeration value="Poland"/>
         <xsd:enumeration value="Portugal"/>
         <xsd:enumeration value="Russian Federation"/>
         <xsd:enumeration value="Saudi Arabia"/>
         <xsd:enumeration value="Singapore"/>
         <xsd:enumeration value="Slovakia"/>
         <xsd:enumeration value="Slovenia"/>
         <xsd:enumeration value="South Africa"/>
         <xsd:enumeration value="Spain"/>
         <xsd:enumeration value="Sweden"/>
         <xsd:enumeration value="Switzerland"/>
         <xsd:enumeration value="Taiwan"/>
         <xsd:enumeration value="Thailand"/>
         <xsd:enumeration value="Turkey"/>
         <xsd:enumeration value="United Kingdom"/>
         <xsd:enumeration value="United States"/>
         <xsd:enumeration value="Venezuela"/>
         <xsd:enumeration value="Zimbabwe"/>
         <xsd:enumeration value="Itu"/>
         <xsd:enumeration value="Chile"/>
         <xsd:enumeration value="Bulgaria"/>
         <xsd:enumeration value="Croatia"/>
         <xsd:enumeration value="Romania"/>
         <xsd:enumeration value="Serbia and Montenegro"/>
      </xsd:restriction>
   </xsd:simpleType>

   <xsd:simpleType name="XDNUsage">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="Undefined"/>
         <xsd:enumeration value="Primary"/>
         <xsd:enumeration value="ICD"/>
      </xsd:restriction>
   </xsd:simpleType>

   <xsd:simpleType name="XDTMFSignaling">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="No Preference"/>
         <xsd:enumeration value="Out of Band"/>
         <xsd:enumeration value="RFC 2833"/>
         <xsd:enumeration value="OOB and RFC 2833"/>
      </xsd:restriction>
   </xsd:simpleType>

   <xsd:simpleType name="XDayOfWeek">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="Sun"/>
         <xsd:enumeration value="Mon"/>
         <xsd:enumeration value="Tue"/>
         <xsd:enumeration value="Wed"/>
         <xsd:enumeration value="Thu"/>
         <xsd:enumeration value="Fri"/>
         <xsd:enumeration value="Sat"/>
         <xsd:enumeration value="None"/>
      </xsd:restriction>
   </xsd:simpleType>

   <xsd:simpleType name="XDbErrors">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="Failure"/>
         <xsd:enumeration value="Success"/>
         <xsd:enumeration value="A multi-field uniqueness has been violated on this table.  A combination of 2 or more columns on a table that need to be unique together are not."/>
         <xsd:enumeration value="Checkout or checkin successful"/>
         <xsd:enumeration value="Checkout or checkin successful using OVERDRAFT"/>
         <xsd:enumeration value="Phone cannot have the same line more than once"/>
         <xsd:enumeration value="Sum of device's line appearance values for maxNumCalls exceed device limitation"/>
         <xsd:enumeration value="A line's busy trigger cannot exceed its maxNumCalls setting"/>
         <xsd:enumeration value="Post-insert validation of pkid and isCallable in NumPlan failed"/>
         <xsd:enumeration value="Update of NumPlan to isCallable = TRUE failed"/>
         <xsd:enumeration value="Automatic update of CTIID during insert into DeviceNumPlanMap failed due to overflow"/>
         <xsd:enumeration value="Busy Trigger cannot be greater than 1 because the specified device type does not support Call Waiting"/>
         <xsd:enumeration value="A DN cannot be associated with this type of Device"/>
         <xsd:enumeration value="A DN cannot be associated with the whole GW only a particular port"/>
         <xsd:enumeration value="An RP cannot be associated with this type of Device"/>
         <xsd:enumeration value="An RP can be associated with the whole GW only and not a particular port"/>
         <xsd:enumeration value="An RP can be associated with only a single device of this type"/>
         <xsd:enumeration value="The Device is already a member of a Route Group"/>
         <xsd:enumeration value="Devices can only be associated with DNs, Route Patterns and Hunt Pilots"/>
         <xsd:enumeration value="CTI Ports and CTI Route Points may not be associated with DNs that are in Line Groups"/>
         <xsd:enumeration value="Shared Line feature is not supported"/>
         <xsd:enumeration value="Shared Line is only for DNs"/>
         <xsd:enumeration value="Ring Setting only valid when phone is off hook"/>
         <xsd:enumeration value="Auto Answer feature is not supported for this device"/>
         <xsd:enumeration value="The Dial Plan of the RouteList should match that of the associated Route Pattern"/>
         <xsd:enumeration value="The Gateway already has port(s) assigned to a DN"/>
         <xsd:enumeration value="The entire Gateway i.e all ports already assigned to a Route Pattern"/>
         <xsd:enumeration value="Maximum calls must be less than or equal to 2 if Multiple Call Display not supported"/>
         <xsd:enumeration value="Failure attempting to update isCallable in numbering plan"/>
         <xsd:enumeration value="An HP cannot be associated with this type of Device"/>
         <xsd:enumeration value="An HP can be associated with only a single device of type Hunt List"/>
         <xsd:enumeration value="A device_template patternusage can only be associated with device of typeclass template"/>
         <xsd:enumeration value="Message Waiting Lamp Policy not supported for this device"/>
         <xsd:enumeration value="Ring Settings for this line are not supported for this device"/>
         <xsd:enumeration value="DN assigned CAT6K FXS port not shareable"/>
         <xsd:enumeration value="DN assigned to MWI cannot be shared"/>
         <xsd:enumeration value="Uniqueness check of pilotNumber + CSSID failed"/>
         <xsd:enumeration value="Uniqueness check of Pilot IsDefault = 1 failed"/>
         <xsd:enumeration value="Attempt to delete required VM Pilot record; the value of IsDefault = 1"/>
         <xsd:enumeration value="Attempt to delete system installed VM Pilot record"/>
         <xsd:enumeration value="Uniqueness check of Profile IsDefault = 1 failed"/>
         <xsd:enumeration value="Attempt to delete required VM Profile record; the value of IsDefault = 1 "/>
         <xsd:enumeration value="Attempt to delete system installed VM Profile record"/>
         <xsd:enumeration value="There is another End User already associated with this device as the Digest User (Digest In)"/>
         <xsd:enumeration value="Device ID not found"/>
         <xsd:enumeration value="Profile ID not found"/>
         <xsd:enumeration value="Login Device does not support extension mobility"/>
         <xsd:enumeration value="Device EM not enabled"/>
         <xsd:enumeration value="No LOGOUT device profile"/>
         <xsd:enumeration value="ADP is out-of-syn"/>
         <xsd:enumeration value="No default model profile"/>
         <xsd:enumeration value="Attempt to update tkClass failed"/>
         <xsd:enumeration value="Attempt to insert record into MGCP failed"/>
         <xsd:enumeration value="Attempt to insert into MGCPDeviceMember failed"/>
         <xsd:enumeration value="Attempt to update MGCP VersionStamp failed"/>
         <xsd:enumeration value="Attempt to update Device VersionStamp failed"/>
         <xsd:enumeration value="Automatic update of CTIID during insert into Device table failed due to overflow"/>
         <xsd:enumeration value="The Class type for this model device was not found"/>
         <xsd:enumeration value="The Model type for the specified Product type was not found"/>
         <xsd:enumeration value="No DigitalAccessPri entry found for this device"/>
         <xsd:enumeration value="An invalid QSIG configuration was detected for this device"/>
         <xsd:enumeration value="Attempt to update the MGCP Slot configuration for new MGCP device failed"/>
         <xsd:enumeration value="Cannot make changes to OR delete a device while a user is logged in"/>
         <xsd:enumeration value="Route List Enabled can be true only for Route List devices"/>
         <xsd:enumeration value="Network Hold Audio Source can only be used for devices that support the Music On Hold feature"/>
         <xsd:enumeration value="User Hold Audio Source can only be used for devices that support the Music On Hold feature"/>
         <xsd:enumeration value="Only devices that support Video feature may set the Retry Video Call As Audio setting to false"/>
         <xsd:enumeration value="The specified Device Protocol is not valid for this device"/>
         <xsd:enumeration value="The specified Protocol Side is not valid for this device"/>
         <xsd:enumeration value="MLPP Preemption must be disabled on devices that do not support the MLPP Preemption feature."/>
         <xsd:enumeration value="MLPP Indication must be off on devices that do not support the MLPP Indication feature."/>
         <xsd:enumeration value="Only devices that support Localization feature use the User Locale setting"/>
         <xsd:enumeration value="Extension Mobilty can only be turned on for devices that support Extension Mobility feature."/>
         <xsd:enumeration value="AAR Group OR AAR Calling Search Space can only be used for devices that support the AAR feature."/>
         <xsd:enumeration value="Device Profile can only be created for devices that support Extension Mobility feature."/>
         <xsd:enumeration value="Softkey Template is not valid for this type of device."/>
         <xsd:enumeration value="Login Duration is valid only for devices that support Extension Mobility feature."/>
         <xsd:enumeration value="Login Time is valid only for devices that support Extension Mobility feature."/>
         <xsd:enumeration value="Automatic delete of auto-generated Device record failed"/>
         <xsd:enumeration value="Device name format is not correct for this mgcp device"/>
         <xsd:enumeration value="Security Authentication feature is not supported for this device"/>
         <xsd:enumeration value="Security Encryption feature is not supported for this device"/>
         <xsd:enumeration value="SRTP and Outbound Fast Start cannot be enabled at the same time."/>
         <xsd:enumeration value="Device does not support security encryption"/>
         <xsd:enumeration value="Device does not support security authentication"/>
         <xsd:enumeration value="SIP Dial Rules are not compatible with non-SIP devices."/>
         <xsd:enumeration value="The SIP Dial Rule type is not compatible with this device type."/>
         <xsd:enumeration value="Duplicate E.164 address for gatekeeper-controlled H.323 device."/>
         <xsd:enumeration value="Cannot set DTMF Signaling Method to OOB "/>
         <xsd:enumeration value="User Defined Device Profile cannot be deleted if it is in use. "/>
         <xsd:enumeration value="Only one device default profile is allowed per model."/>
         <xsd:enumeration value="There is at least one device that has extension mobility enabled for this model, device default profile cannot be deleted."/>
         <xsd:enumeration value="The model and protocol of the Extension Mobility Logout Profile do not match the model and protocol of the device."/>
         <xsd:enumeration value="Attempted to insert an invalid product into the device table. Make sure the product is an endpoint device and try again."/>
         <xsd:enumeration value="The specified name has invalid characters or is not formatted correctly for this device type."/>
         <xsd:enumeration value="The autogenerated profile name has invalid characters or is not formatted correctly for this device type."/>
         <xsd:enumeration value="The specified name has invalid characters or is not formatted correctly for this type of device, profile or template."/>
         <xsd:enumeration value="Gatekeeper table may only reference devices that are Gatekeepers (model = 122)"/>
         <xsd:enumeration value="Failure attempting to insert into Region table"/>
         <xsd:enumeration value="URI as a BLF Speed-dial Destination is not allowed for this device with this protocol."/>
         <xsd:enumeration value="BLF Destination does not appear to be a valid URI for dialing."/>
         <xsd:enumeration value="BLF Destination does not appear to be dialable."/>
         <xsd:enumeration value="Failure attempting to insert into RegionMatrix table"/>
         <xsd:enumeration value="User must override the default Bandwidth and Video Bandwidth settings"/>
         <xsd:enumeration value="No appropriate base product type value found in Mgcp table"/>
         <xsd:enumeration value="Propgation of MgcpDeviceMember values to Device table failed"/>
         <xsd:enumeration value="Automatic update of Device name failed after MGCP port value update"/>
         <xsd:enumeration value="Cannot change from Qsig to non_Qsig if this gateway is in a route group"/>
         <xsd:enumeration value="DigitalAccessPri table may only reference devices with matching Device Protocol (DigitalAccessPri)"/>
         <xsd:enumeration value="Attempt to change device Qsig value failed"/>
         <xsd:enumeration value="Failure attempting to insert into AARDialPrefixMatrix table"/>
         <xsd:enumeration value="Failure attempting to update CSS Clause after update in CSSMember table"/>
         <xsd:enumeration value="Automatic update of CTIID during insert into CallManager table failed due to overflow"/>
         <xsd:enumeration value="CallManager SIP Port cannot match any existing CallManager(s) SIP Secured Port"/>
         <xsd:enumeration value="CallManager SIP Secured Port cannot match any existing CallManager(s) SIP Port"/>
         <xsd:enumeration value="Failure to insert phone button records for new phone template"/>
         <xsd:enumeration value="Failure attempting to add user-definable buttons to PhoneButton table"/>
         <xsd:enumeration value="Phone Template may only be assigned to devices that support the phone template feature"/>
         <xsd:enumeration value="Extension Mobility login failed - phone button template protocol (SCCP/SIP) mismatch"/>
         <xsd:enumeration value="Failure attempting to reconstruct the SoftKeyTemplate table SoftKeySetClause"/>
         <xsd:enumeration value="Failure attempting to reconstruct the SoftKeyTemplate table SoftKeyClause"/>
         <xsd:enumeration value="Attempt to change an existing template. Templates are not modifiable"/>
         <xsd:enumeration value="Attempt to add more than the limit of 16 softkeys per call state."/>
         <xsd:enumeration value="Attempt to update a restricted column denied"/>
         <xsd:enumeration value="Attempt to update a standard template is denied; can only update a derived template"/>
         <xsd:enumeration value="Attempt to delete CallManagerGroup record defined as the default tftp record"/>
         <xsd:enumeration value="Invalid attempt to change status of CallManagerGroup default tftp record to non-default"/>
         <xsd:enumeration value="Failure in triggered insert into SoftkeyTemplateServiceMap during insert of a new SoftkeyTemplate"/>
         <xsd:enumeration value="Encountered malformed base template record when attempting to insert a new Softkey Template"/>
         <xsd:enumeration value="Attempt to update a Standard template denied. Only user-defined templates may be updated"/>
         <xsd:enumeration value="Attempt to delete a Standard template denied. Only user-defined templates may be delete"/>
         <xsd:enumeration value="Attempt to insert a Standard template denied. Only user-defined templates may be inserted"/>
         <xsd:enumeration value="Invalid internal key encountered attempting to insert user template"/>
         <xsd:enumeration value="Cannot map this Service to a Softkey Template because the Service has no Softkeys defined."/>
         <xsd:enumeration value="Cannot remove the Cisco CallManager softkeys from a Softkey Template."/>
         <xsd:enumeration value="Failure in triggered insert of new record(s) into SoftkeySet during insert of new SoftkeyTemplateServiceMap record"/>
         <xsd:enumeration value="Attempt to delete a Standard template denied. Only user-defined templates may be deleted"/>
         <xsd:enumeration value="Attempt to directly delete last service for this user template from SoftkeyTemplateServiceMap table denied"/>
         <xsd:enumeration value="Attempt to delete CallManager service denied. CallManager is an essential service"/>
         <xsd:enumeration value="Failure attempting to update the Qsig value in RouteGroup"/>
         <xsd:enumeration value="Cannot mix H323 or Mixed Non-QSIG with PRI QSIG"/>
         <xsd:enumeration value="Invalid Qsig configuration: at least one QSIG variety must be declared"/>
         <xsd:enumeration value="The selected device or pattern is already associated with a Route Pattern"/>
         <xsd:enumeration value="Only individual ports or the whole GW can be assigned to a Route Group. Not both."/>
         <xsd:enumeration value="Failure attempting to update a device QSIG type value"/>
         <xsd:enumeration value="No such route group defined for this route list"/>
         <xsd:enumeration value="No such device defined for this route list"/>
         <xsd:enumeration value="An invalid QSIG configuration was detected for this Route List"/>
         <xsd:enumeration value="User attempted delete of a mapped RouteList entry not allowed. Must delete the Device from the Device table"/>
         <xsd:enumeration value="RouteList table may only reference Route List devices"/>
         <xsd:enumeration value="HuntList table may only reference Hunt List devices"/>
         <xsd:enumeration value="Digit discard instruction in a Route List, needs that its Dial Plan match that of the corresponding Device"/>
         <xsd:enumeration value="Failure attempting automatic insert of Process Node Service records occuring on insert of Process Node record"/>
         <xsd:enumeration value="An IP address from input or from a resolved host name is already in use"/>
         <xsd:enumeration value="Encountered an invalid hostname: Call Manager Server name cannot have more than 64 characters"/>
         <xsd:enumeration value="Encountered an invalid IP address"/>
         <xsd:enumeration value="Invalid IPv4 address format: requires 4 octets separated by periods"/>
         <xsd:enumeration value="The publisher sever entry cannot be deleted"/>
         <xsd:enumeration value="Failure attempting automatic insert Alarm Configuration records occuring on insert of Process Node Service record"/>
         <xsd:enumeration value="Failure attempting automatic insert of Media Streaming devices, No DevicePool record exists to assign to these devices."/>
         <xsd:enumeration value="Failure attempting automatic insert of Media Streaming devices, No Server record exists to assign to these devices."/>
         <xsd:enumeration value="Failure attempting automatic insert of Media Streaming devices, Insert of software MTP device failed."/>
         <xsd:enumeration value="Failure attempting automatic insert of Media Streaming devices, Insert of media mixer record failed."/>
         <xsd:enumeration value="Failure attempting automatic insert of Media Streaming devices, Insert of software CFB device failed."/>
         <xsd:enumeration value="Failure attempting automatic insert of Media Streaming devices, Insert of tone annunciator device failed."/>
         <xsd:enumeration value="Failure attempting automatic insert of Media Streaming devices, Insert of MOH device failed."/>
         <xsd:enumeration value="Failure attempting automatic insert of Media Streaming devices, Insert of MOHServer record failed."/>
         <xsd:enumeration value="Failure attempting CallManager service activation.  You need to add a CallManager first."/>
         <xsd:enumeration value="Failure attempting to remove a record that has a relation in the service parameters"/>
         <xsd:enumeration value="A requested multicast IP address is beyond the range 224.0.1.0 - 239.255.255.255"/>
         <xsd:enumeration value="Attempt to use a multicast IP address reserved for another server"/>
         <xsd:enumeration value="A requested multicast IP port is either an odd number or beyond the allowed range (16384-32766)"/>
         <xsd:enumeration value="Attempt to add a new Audio Source record into an auxiliary table failed"/>
         <xsd:enumeration value="Attempt to delete an Audio Source record from an auxiliary table failed"/>
         <xsd:enumeration value="Invalid IP Address"/>
         <xsd:enumeration value="All Multicast IP Addresses must be in the range 224.0.1.0 to 239.255.255.255"/>
         <xsd:enumeration value="Multicast Base Port number must be an even number in the range 16384 to 32766"/>
         <xsd:enumeration value="MOHServer table may only reference MOH Server devices"/>
         <xsd:enumeration value="Two MOH Servers cannot use the same Multicast Base IP Address and Port Number"/>
         <xsd:enumeration value="Cannot insert additional Add-on Modules for this device"/>
         <xsd:enumeration value="The specified model for the Add-on Module is not an Add-on Module device type"/>
         <xsd:enumeration value="Failure attempting to automatically re-number devices in the database"/>
         <xsd:enumeration value="Failure attempting to automatically update Device name after MGCP Domain name change"/>
         <xsd:enumeration value="The specified distribution algorithm is not valid for Route and Line Groups"/>
         <xsd:enumeration value="AnalogAccess table may only reference devices with matching Device Protocol (AnalogAccess)"/>
         <xsd:enumeration value="AnalogAccessPort table may only reference devices with matching Device Protocol (AnalogAccess)"/>
         <xsd:enumeration value="A device that uses Phone Templates must have a specific Phone Template assigned"/>
         <xsd:enumeration value="The Phone Template model and protocol do not match the device model and protocol"/>
         <xsd:enumeration value="The Device Defaults record for a device that uses a firmware load must specify the default firmware load name"/>
         <xsd:enumeration value="DigitalAccessBri table may only reference devices with matching Device Protocol (DigitalAccessBri)"/>
         <xsd:enumeration value="Only Media Resource devices can be members of Media Resource Groups"/>
         <xsd:enumeration value="MediaMixer table may only reference Media Resource devices"/>
         <xsd:enumeration value="The sum of the streams configured for all media resources (CFB, MTP, XCODE, ANN) associated with this gateway cannot exceed 128"/>
         <xsd:enumeration value="NSFInformationElements must be associated with a Route Pattern"/>
         <xsd:enumeration value="The specified NSF Service is not valid for the selected protocol"/>
         <xsd:enumeration value="The specified NSF Carrier Identification Code has invalid format"/>
         <xsd:enumeration value="The specified NSF Parameter Value has invalid format"/>
         <xsd:enumeration value="DigitalAccessT1 table may only reference devices with matching Device Protocol (DigitalAccessT1)"/>
         <xsd:enumeration value="DigitalAccessT1Port table may only reference devices with matching Device Protocol (DigitalAccessT1)"/>
         <xsd:enumeration value="User-defined SRST records must use the corresponding SRST Option"/>
         <xsd:enumeration value="Cannot delete the system installed SRST records"/>
         <xsd:enumeration value="Telecaster table may only reference devices that support IP Phone Services"/>
         <xsd:enumeration value="The specified feature is not available for this model and protocol"/>
         <xsd:enumeration value="Pilot table may only reference CTI Route Point devices"/>
         <xsd:enumeration value="Cannot associate Speed Dials with a device that does not support phone templates or abbreviated dial features"/>
         <xsd:enumeration value="The specified Address Book entry is not avaiable in the user''s Personal Address Book"/>
         <xsd:enumeration value="The Fast Dial Index for this Phone Book entry is not unique"/>
         <xsd:enumeration value="Cannot have more than one number of each type (Home"/>
         <xsd:enumeration value="Only one record with same fastdialindex and fkenduser can exist"/>
         <xsd:enumeration value="Encountered more characters than allowed in the submitted DnOrPattern string"/>
         <xsd:enumeration value="The submitted DN or Pattern evaluates to more than 24 characters"/>
         <xsd:enumeration value="Pattern has to be unique in a Route Partition unless associated with a Dial Plan"/>
         <xsd:enumeration value="Digit Discard Instruction must be associated with the current DN's Dial Plan"/>
         <xsd:enumeration value="Route Filter must be associated with the current DN's Dial Plan"/>
         <xsd:enumeration value="Attempt to delete a Call Pickup record still in use"/>
         <xsd:enumeration value="Improper values for IP CIDR address"/>
         <xsd:enumeration value="The IP address you have entered is not valid. Please enter a valid IP address"/>
         <xsd:enumeration value="Name contains invalid characters or the length was exceeded"/>
         <xsd:enumeration value="The domain name you have entered is not in an acceptable format. Please enter a domain name in the following format: alpha/numeric characters.alphabetic characters. For example, abc123.com, abc.net, 123abc.org, and so on"/>
         <xsd:enumeration value="Name contains nested brackets"/>
         <xsd:enumeration value="Name contains misplaced or embedded circumflex characters"/>
         <xsd:enumeration value="Name is a mal-formed regular expression"/>
         <xsd:enumeration value="Only one dot is permitted per expression"/>
         <xsd:enumeration value="Only one @ permitted per expression"/>
         <xsd:enumeration value="A plus sign cannot appear within brackets"/>
         <xsd:enumeration value="A question mark cannot appear within brackets"/>
         <xsd:enumeration value="A dot precede an @ sign"/>
         <xsd:enumeration value="Cannot follow a plus sign with a question mark"/>
         <xsd:enumeration value="Cannot follow a plus sign with a plus sign"/>
         <xsd:enumeration value="The first character cannot be a plus sign"/>
         <xsd:enumeration value="The first character cannot be a question mark"/>
         <xsd:enumeration value="The character X is not permitted within brackets"/>
         <xsd:enumeration value="The character @ is not permitted within brackets"/>
         <xsd:enumeration value="A double circumflex is not permitted"/>
         <xsd:enumeration value="The circumflex must appear within brackets"/>
         <xsd:enumeration value="The dash must appear within brackets and follow a digit"/>
         <xsd:enumeration value="A range violation has occurred: numbers must be in increasing order"/>
         <xsd:enumeration value="CallPark values cannot have more than 2 Xs and/or bracketed (e.g., [0-9]) expressions"/>
         <xsd:enumeration value="Nested brackets not permitted"/>
         <xsd:enumeration value="Brackets either mismatched, or do not contain characters"/>
         <xsd:enumeration value="Consecutive asterisks are not allowed"/>
         <xsd:enumeration value="A plus sign cannot follow a bang"/>
         <xsd:enumeration value="A Cisco CallManager Group may not contain more than 3 Cisco CallManagers"/>
         <xsd:enumeration value="Slot value is not supported for this gateway"/>
         <xsd:enumeration value="This Slot Module is not allowed at the current slot position for this gateway"/>
         <xsd:enumeration value="This VIC card is not allowed for this gateway, under specified slot position and SlotModule"/>
         <xsd:enumeration value="The specified slot and subunit are already defined for this MGCP gateway."/>
         <xsd:enumeration value="AppUser Name already exists as an EndUser Userid. AppUser Name cannot be the same as an EndUser's userid"/>
         <xsd:enumeration value="EndUser userid already exists as an AppUser Name. EndUser userid cannot be the same as an AppUsers name."/>
         <xsd:enumeration value="EndUser cannot be inserted because Corporate LDAP directory is the sync master. Add users in the corporate directory."/>
         <xsd:enumeration value="EndUser cannot be deleted because Corporate LDAP directory is the sync master. Remove users from the corporate directory."/>
         <xsd:enumeration value="Cannot have more than 100 IP Phone Service subscriptions on a device"/>
         <xsd:enumeration value="Duplicate Number Plan entries for this Pilot record"/>
         <xsd:enumeration value="If NumPlan is null, then PilotUser and DeviceLine must contain values"/>
         <xsd:enumeration value="If NumPlan is not null, then PilotUser and DeviceLine must not contain entries"/>
         <xsd:enumeration value="PilotUser, device line index, and pilot must be unique"/>
         <xsd:enumeration value="Only one record with alwaysroute true is allowed for a particular fkpilot"/>
         <xsd:enumeration value="Only Phones and VoiceMail Port usage are allowed"/>
         <xsd:enumeration value="Attempt to delete default MLPP Domain record not allowed"/>
         <xsd:enumeration value="Cannot have more than one default MLPP Domain record."/>
         <xsd:enumeration value="Attempt to update a record that is not user-modifiable"/>
         <xsd:enumeration value="Attempt to update MediaResourceList clause failed"/>
         <xsd:enumeration value="Attempt to insert value into LicenseDistributionUsed triggered by insert into LicenseInfo table failed"/>
         <xsd:enumeration value="Attempt to delete from LicenseDistributionUsed failed because used count, distributed count or both were non-zero"/>
         <xsd:enumeration value="Request unsuccessful to license manager(Please check the Licensing logs for further details) "/>
         <xsd:enumeration value="Cannot connect to License Manager"/>
         <xsd:enumeration value="Datastore exception in licensing"/>
         <xsd:enumeration value="Internal licensing error (check the log file for details)"/>
         <xsd:enumeration value="All licenses in use for this feature"/>
         <xsd:enumeration value="No licensing support for the requested feature"/>
         <xsd:enumeration value="Can't connect to datastore for licensing"/>
         <xsd:enumeration value="License file not loaded"/>
         <xsd:enumeration value="Licenses not available for the required version"/>
         <xsd:enumeration value="All the allocated licenses to this node are consumed"/>
         <xsd:enumeration value="Licensing checkin failed (checkin count is greater than checked out count)"/>
         <xsd:enumeration value="License Server not serving licenses on this node"/>
         <xsd:enumeration value="All license servers down"/>
         <xsd:enumeration value="Unexpected message from license server"/>
         <xsd:enumeration value="Request Failed and some License Servers down"/>
         <xsd:enumeration value="License File Version Mismatch"/>
         <xsd:enumeration value="License File MAC Address Mismatch"/>
         <xsd:enumeration value="Invalid or tampered License File"/>
         <xsd:enumeration value="License loader parameters file error"/>
         <xsd:enumeration value="License File Exception"/>
         <xsd:enumeration value="License File Already Loaded"/>
         <xsd:enumeration value="License File Format Error"/>
         <xsd:enumeration value="Only characters A-Z, a-z, 0-9 are allowed in prompt name"/>
         <xsd:enumeration value="Invalid IP address"/>
         <xsd:enumeration value="IP address out of range; addresses must be less than 255.255.255.255"/>
         <xsd:enumeration value="7905/12 Dial Rule Pattern contains invalid characters."/>
         <xsd:enumeration value="7960/40/Other Dial Rule Pattern contains invalid characters."/>
         <xsd:enumeration value="Not a valid parameter for 7905/12 Dial Rule (only patterns allowed)"/>
         <xsd:enumeration value="The specified SIP Realm already exists."/>
         <xsd:enumeration value="This instance is configured as a service parameter and cannot be deleted"/>
         <xsd:enumeration value="This Instance ID already exists in Application or End User CAPF mapping"/>
         <xsd:enumeration value="Cannot delete the last Application User from the Standard CCM Super Users group. This group must contain at least one Application User."/>
         <xsd:enumeration value="Cannot remove the last Application User from the Standard CCM Super Users group. This group must contain at least one Application User."/>
         <xsd:enumeration value="Roles for a standard user group cannot be added, modified or deleted."/>
         <xsd:enumeration value="The Resources for a standard role cannot be added, modified or deleted."/>
         <xsd:enumeration value="Model/device protocol does not support security encryption"/>
         <xsd:enumeration value="Model/device protocol does not support authentication"/>
         <xsd:enumeration value="TLS and UDP/TCP ports cannot be shared"/>
         <xsd:enumeration value="Phone Security Profiles cannot be nonsecure and use TLS"/>
         <xsd:enumeration value="Phone Security Profiles that are Authenticated or Encrypted must use TLS"/>
         <xsd:enumeration value="Trunk Security Profiles Incoming Transport Type must use TLS or TCP+UDP"/>
         <xsd:enumeration value="Trunk Security Profiles Outgoing Transport Type must use TCP or UDP or TLS"/>
         <xsd:enumeration value="Incoming Port in Trunk Security Profile cannot be the same as CallManager SIP Port if Incoming Transport Type is TLS"/>
         <xsd:enumeration value="Incoming Port in Trunk Security Profile cannot be the same as CallManager SIP Secured Port if Incoming Transport Type is TCP+UDP"/>
         <xsd:enumeration value="Non-secured SCCP phones must use TCP Transport Type"/>
         <xsd:enumeration value="Secured phones must use TLS Transport Type"/>
         <xsd:enumeration value="Model/device protocol supports TCP therefore Transport Type cannot be TLS"/>
         <xsd:enumeration value="Model/device protocol does not support TCP therefore Transport Type must be UDP"/>
         <xsd:enumeration value="The value for Exclude Digest Credentials must be set to false"/>
         <xsd:enumeration value="The value for Enable Digest Authentication must be set to false"/>
         <xsd:enumeration value="The value for TFTP Encrypted must be set to false"/>
         <xsd:enumeration value="The URL needs to begin with either http or https"/>
         <xsd:enumeration value="The URL hostname should be a valid hostname or IP address, with an optional port value"/>
         <xsd:enumeration value="Before CUPC can be enabled for a user, CUPS must be enabled"/>
         <xsd:enumeration value="Before CUPS can be disabled for a user, CUPC must be disabled"/>
         <xsd:enumeration value="A Cisco Unified Presence Server must be added in Application Server prior to enabling CUPS or CUPC"/>
         <xsd:enumeration value="DO NOT USE ERROR NUMBERS BEYOND THIS LIMIT"/>
         <xsd:enumeration value="CallManager is required for Call Park"/>
         <xsd:enumeration value="CallManager not used for non-Call Park."/>
         <xsd:enumeration value="Must use default for non-route/translation patterns"/>
         <xsd:enumeration value="Attendant DN Invalid. Only settable for route/translation/hunt patterns. It should contain atleast one and no more than 24 numbers, * and #. Regular expression used for validation is [0-9*#]{1,24}"/>
         <xsd:enumeration value="CallManager required for Route list or WSM trunk."/>
         <xsd:enumeration value="CallManager cannot be assigned."/>
         <xsd:enumeration value="Make sure RouteListEnabled is enabled for RouteLists only"/>
         <xsd:enumeration value="Multicast base IP Address and Port must be set in tandem"/>
         <xsd:enumeration value="Multicast base IP Address and Port must be set in tandem"/>
         <xsd:enumeration value="Block enable is allowed only for Route and Translation"/>
         <xsd:enumeration value="CalledPartyTransformationMask is set only for Route and Translation Patterns"/>
         <xsd:enumeration value="CallForwardExpansionMask is set only for Route and Translation Patterns"/>
         <xsd:enumeration value="CallingPartyPrefixDigits is set only for Route and Translation Patterns"/>
         <xsd:enumeration value="CallingPartyTransformationMask is set only for Route and Translation Patterns"/>
         <xsd:enumeration value="CFADestination is set only for Directory Numbers"/>
         <xsd:enumeration value="CFAPTDestination is set only for Directory Numbers"/>
         <xsd:enumeration value="CFAPTDuration is set only for Directory Numbers"/>
         <xsd:enumeration value="CFAPTVoiceMailEnabled is TRUE only for Directory Numbers"/>
         <xsd:enumeration value="CFAVoiceMailEnabled is TRUE only for Directory Numbers"/>
         <xsd:enumeration value="CFBDestination is set only for Directory Numbers"/>
         <xsd:enumeration value="CFBVoiceMailEnabled is TRUE only for Directory Numbers"/>
         <xsd:enumeration value="CFDFVoiceMailEnabled is TRUE only for Directory Numbers."/>
         <xsd:enumeration value="CFNADestination is set only for Directory Numbers"/>
         <xsd:enumeration value="CFNADuration is set only for Directory Numbers"/>
         <xsd:enumeration value="CFNAVoiceMailEnabled is TRUE only for Directory Numbers"/>
         <xsd:enumeration value="DeviceFailureDN is set only for Directory Numbers"/>
         <xsd:enumeration value="CallingSearchSpace_CFA is required only for Directory Numbers"/>
         <xsd:enumeration value="CallingSearchSpace_CFAPT is required only for Directory Numbers"/>
         <xsd:enumeration value="CallingSearchSpace_CFB is required only for Directory Numbers"/>
         <xsd:enumeration value="CallingSearchSpace_CFNA is required only for Directory Numbers"/>
         <xsd:enumeration value="CallingSearchSpace_DeviceFailure is required only for Directory Numbers"/>
         <xsd:enumeration value="CallingSearchSpace_MWI is required only for Message Waiting Indicators"/>
         <xsd:enumeration value="CallingSearchSpace_SharedLineAppear is required only for Directory Numbers"/>
         <xsd:enumeration value="CallingSearchSpace_Translation is required only for Translation Patterns"/>
         <xsd:enumeration value="CallManager is required only for Call Park"/>
         <xsd:enumeration value="DialPlan is required only for Route and Translation Patterns"/>
         <xsd:enumeration value="DigitDiscardInstruction is required only for Route and Translation Patterns"/>
         <xsd:enumeration value="NetworkHoldMOHAudioSourceID is set only for Directory Numbers"/>
         <xsd:enumeration value="PatternUrgency is always TRUE for Translation Pattern"/>
         <xsd:enumeration value="PatternUrgency is always FALSE if not Route or Translation Pattern"/>
         <xsd:enumeration value="PrefixDigitsOut is set only for Route and Translation Patterns"/>
         <xsd:enumeration value="SupportOverlapSending is set only for Route Patterns"/>
         <xsd:enumeration value="AutoAnswer is OFF only for Directory Numbers"/>
         <xsd:enumeration value="Mixer is set only for Conference Numbers"/>
         <xsd:enumeration value="Only Route or Translation Pattern can be off-net"/>
         <xsd:enumeration value="MLPP Pattern Precedence can be other than Default only for Route Patterns, Translation Patterns, and Hunt Pilots"/>
         <xsd:enumeration value="PresentationBit_CallingLine is Default only for Route and Translation Patterns"/>
         <xsd:enumeration value="PresentationBit_CallingName is Default only for Route and Translation Patterns"/>
         <xsd:enumeration value="PresentationBit_ConnectedLine is Default only for Route and Translation Patterns"/>
         <xsd:enumeration value="PresentationBit_ConnectedName is Default only for Route and Translation Patterns"/>
         <xsd:enumeration value="ReleaseCauseValue is No Error only for Route and Translation Patterns"/>
         <xsd:enumeration value="UserHoldMOHAudioSourceID is required only for Directory Numbers"/>
         <xsd:enumeration value="withTag should be non-empty only for Route and Translation Patterns"/>
         <xsd:enumeration value="withValueClause should be non-empty only for Route and Translation Patterns"/>
         <xsd:enumeration value="Call Park Number is invalid. Accepts numbers, X, and the following:*#[]^- Regular expression used to validate:^[]0-9*#X[^-]{1,50}$"/>
         <xsd:enumeration value="Meet Me Conference Number Range Invalid. Accepts numbers, X, and the following: []*#^- Regular expression used to validate:^[]0-9*#X[^-]{1,50}$"/>
         <xsd:enumeration value="Device Directory Number Invalid. Accepts numbers, X, and the following: *#[]^+?!- Regular expression used to validate:^[]0-9*#X[^+?!-]{1,50}$"/>
         <xsd:enumeration value="Translation Pattern Invalid: Accepts numbers, X, and the following: *#[]^+?.@!- Regular expression used to validate:^[]0-9A-D*#X[^+?.@!-]{0,50}$"/>
         <xsd:enumeration value="Call Pickup Number Invalid. Accepts up to 24 numbers. Regular expression used to validate:^[0-9]{1,24}$"/>
         <xsd:enumeration value="Route Pattern Invalid. Accepts numbers, X, letters A,B,C,D and the following: *#[]^+?.@!- Regular expression used to validate:"/>
         <xsd:enumeration value="Message Waiting Indicator Number Invalid. Accepts numbers, X, and the following: *#[]^+?!- Regular expression used to validate:^[]0-9A-D*#X[^+?.@!-]{1,50}$"/>
         <xsd:enumeration value="Hunt Pilot Invalid. Accepts numbers, X, letters A,B,C,D and the following: *#[]^+?.@!- Regular expression used to validate:^[]0-9A-D*#X[^+?.@!-]{1,50}$"/>
         <xsd:enumeration value="Voice Mail Port Directory Number Invalid. Accepts up to 24 numbers. Regular expression used to validate:^[0-9]{1,24}$"/>
         <xsd:enumeration value="VoiceMessagingProfile is required only for Directory Numbers"/>
         <xsd:enumeration value="No Voicemail required for VM Port DN"/>
         <xsd:enumeration value="Phone Number must be associated with Address Book"/>
         <xsd:enumeration value="Raw Number cannot be associated with Address Book"/>
         <xsd:enumeration value="Cannot change fixed feature button"/>
         <xsd:enumeration value="Cannot change fixed feature button"/>
         <xsd:enumeration value="Cannot change fixed feature button"/>
         <xsd:enumeration value="Cannot change fixed feature button"/>
         <xsd:enumeration value="Cannot change fixed feature button"/>
         <xsd:enumeration value="Cannot change standard phone template"/>
         <xsd:enumeration value="Must specify line index on User's device if user is specified"/>
         <xsd:enumeration value="CalledPartyTransformationMask is set only for Route Group"/>
         <xsd:enumeration value="CallingPartyPrefixDigits is set only for Route Group"/>
         <xsd:enumeration value="CallingPartyTransformationMask is set only for Route Group"/>
         <xsd:enumeration value="CallingSearchSpace is required only for Route Group"/>
         <xsd:enumeration value="DigitDiscardInstruction is required only for Route Group"/>
         <xsd:enumeration value="PrefixDigitsOut is set only for Route Group"/>
         <xsd:enumeration value="Status_useFullyQualCallingPartyNum is Default 2 only for Route Group"/>
         <xsd:enumeration value="Cannot change system SRST records; update new and legacy records only"/>
         <xsd:enumeration value="Cannot change system SRST records; update new and legacy records only"/>
         <xsd:enumeration value="Cannot change system SRST records; update new and legacy records only"/>
         <xsd:enumeration value="Cannot change system SRST records; update new and legacy records only"/>
         <xsd:enumeration value="Cannot change system SRST records; update new and legacy records only"/>
         <xsd:enumeration value="Cannot change system SRST records; update new and legacy records only"/>
         <xsd:enumeration value="Cannot change system SRST records; update new and legacy records only"/>
         <xsd:enumeration value="Cannot change system SRST records; update new and legacy records only"/>
         <xsd:enumeration value="Cannot change system VM Pilot record except default setting"/>
         <xsd:enumeration value="Cannot change system VM Pilot record except default setting"/>
         <xsd:enumeration value="Cannot change system VM Pilot record except default setting"/>
         <xsd:enumeration value="Cannot change system VM Profile record except default setting"/>
         <xsd:enumeration value="Cannot change system VM Profile record except default setting"/>
         <xsd:enumeration value="Cannot change system VM Profile record except default setting"/>
         <xsd:enumeration value="Cannot change system VM Profile record except default setting"/>
         <xsd:enumeration value="The starting DN must be less than or equal to the ending DN"/>
         <xsd:enumeration value="Busy Trigger must be less than or equal to Max Calls setting for a line appearance."/>
         <xsd:enumeration value="CallingSearchSpace is not valid for this type of device"/>
         <xsd:enumeration value="A Device Pool is required for this device."/>
         <xsd:enumeration value="Media Resource List is not valid for this type of device."/>
         <xsd:enumeration value="A Server (Process Node) is required for this device OR this device cannot be assigned to a Server (ProcessNode)."/>
         <xsd:enumeration value="Devices cannot be assigned to the reserved Enterprise Node (system Process Node)."/>
         <xsd:enumeration value="MLPP Domain ID is not valid for this type of device."/>
         <xsd:enumeration value="Route List Enabled can be true only for Route List devices."/>
         <xsd:enumeration value="End Users can only own or log into Phones and CTI Route Points."/>
         <xsd:enumeration value="RouteList must have but only either a RouteGroup or a LineGroup."/>
         <xsd:enumeration value="PilotHuntGroup must have but only either a DN or a PilotUser."/>
         <xsd:enumeration value="Ports on an IP based system node must be unique."/>
         <xsd:enumeration value="Attendant DN required for Ground Start or Loop Start"/>
         <xsd:enumeration value="User side does not support Digital Access T1 protocol"/>
         <xsd:enumeration value="Dial Plan is not allowed for Route and Translation Patterns that do not have @ or . in the pattern"/>
         <xsd:enumeration value="Valid IP Address is required for a user-modifiable SRST entry"/>
         <xsd:enumeration value="Dial Plan is required for non-SIP Route and Translation Patterns that have @ in the pattern"/>
         <xsd:enumeration value="CTI Ports and CTI Route Points must always be CTI Controlled"/>
         <xsd:enumeration value="Used licenses can never exceed distributed (allocated) licenses"/>
         <xsd:enumeration value="For patternusage device_template dnorpattern can have characters"/>
         <xsd:enumeration value="Device needs to have a default profile if EM is enabled"/>
         <xsd:enumeration value="End time must be later than start time if either time is specified"/>
         <xsd:enumeration value="Authorization Code (FAC) cannot be used when Overlap Sending is allowed"/>
         <xsd:enumeration value="Client Matter Code (CMC) cannot be used when Overlap Sending is allowed"/>
         <xsd:enumeration value="MOH Fixed Audio Source stream (51) uses empty source file for disabled, /dev/dsp for enabled. Other values are invalid."/>
         <xsd:enumeration value="Cannot have an empty Directory number when no Partition is specified"/>
         <xsd:enumeration value="Only these characters allowed in SIP Route Pattern"/>
         <xsd:enumeration value="Either Prefix pattern must be defined, or Digits to be removed must be > 0"/>
         <xsd:enumeration value="Device Description has invalid format. It should include letters, numbers and some special characters. Max length is 128. Regular expression used to validate:^[]a-zA-Z0-9 !#$'()*+,./:;=?@[^_`{|}~-]{0,128}$"/>
         <xsd:enumeration value="AnalogAccessPort AttendantDN has invalid format. It should include digits 0 to 9, * and #. Max length 50. Regular expression used to validate:^[0-9*#]{0,50}$"/>
         <xsd:enumeration value="AnalogAccessPort PrefixDN has invalid format. It should include digits 0 to 9, * and #. Max length is 50. Regular expression used to validate:^[0-9*#]{0,50}$"/>
         <xsd:enumeration value="CallerIdDN should contain digits 0 to 9, *, # and X. Max length is 32. Regular expression used to validate:^[0-9*#X]{0,32}$"/>
         <xsd:enumeration value="DigitalAccessPri Prefix has invalid format. It should contain digits 0 to 9, *, #. Max length is 50. Regular expression used to validate:^[0-9*#]{0,50}$"/>
         <xsd:enumeration value="DigitalAccessPri CallerIDDN has invalid format. It should contain digits 0 to 9, *, # and X. Max length is 32. Regular expression used to validate: ^[0-9*#X]{0,32}$"/>
         <xsd:enumeration value="AttendantDN should contain digits, *, #. Max length is 50. Regular expression used to validate:^[0-9*#]{0,50}$"/>
         <xsd:enumeration value="Prefix should contain digits, *, #. Max length is 50. Regular expression used to validate:^[0-9*#]{0,50}$"/>
         <xsd:enumeration value="CallerIdDN should contain digits 0 to 9, *, # and X. Max length is 32. Regular expression used to validate:^[0-9*#X]{0,32}$"/>
         <xsd:enumeration value="H323Device CallerIdDN should contain digits 0 to 9, *, # and X. Max length is 32. Regular expression used to validate:^[0-9*#X]{0,32}$"/>
         <xsd:enumeration value="SpeedDial SpeedDialNumber has invalid format. It should include digits 0 to 9, * and #. Max length is 50. Regular expression used to validate:^[0-9*#]{0,50}$"/>
         <xsd:enumeration value="PilotUser UserId has invalid format. It should contain letters, numbers, underscore and dash. Min length is 1 and max length is 50. Regular expression used to validate:^[a-zA-Z 0-9_-]{1,50}$"/>
         <xsd:enumeration value="PilotUser Password has invalid format. It should contain letters, numbers, underscore and dash. Max length is 50. Regular expression used to validate:^[a-zA-Z 0-9_-]{0,50}$"/>
         <xsd:enumeration value="CallingSearchSpace Name has invalid format. It should contain letters, numbers, dot, underscore and dash. Min length is 1 and max length is 50. Regular expression used to validate:^[a-zA-Z 0-9._-]{1,50}$"/>
         <xsd:enumeration value="CallingSearchSpace Description has invalid format. It should contain letters, numbers and some special characters. Max length is 50. Regular expression used to validate: ^[]a-zA-Z0-9 !#$'()*+,./:;=?@[^_`{|}~\\-]{0,50}$"/>
         <xsd:enumeration value="RoutePartition Name has invalid format. It should contain letters, numbers, underscore and dash. Min length is 1 and max length is 50. Regular expression used to validate:^[a-zA-Z 0-9_-]{1,50}$"/>
         <xsd:enumeration value="RoutePartition Description has invalid format. It should contain letters, numbers and some special characters. Max length is 50. Regular expression used to validate: ^[a-zA-Z0-9 !#$'()*+,./:;=?@\^_`{|}~-]{0,50}$"/>
         <xsd:enumeration value="DevicePool Name has invalid format. It should contain letters, numbers, dot, underscore and dash. Min length is 1 and max length is 50. Regular expression used to validate: ^[a-zA-Z 0-9._-]{1,50}$"/>
         <xsd:enumeration value="DateTimeSetting Name has invalid format. It should contain letters, numbers, dot, underscore and dash. Min length is 1 and max length is 50. Regular expression used to validate: ^[a-zA-Z 0-9._-]{1,50}$"/>
         <xsd:enumeration value="DateTimeSetting has invalid format. Regular expression used to validate:^(M-D-Y|M/D/Y|M.D.Y|D-M-Y|D/M/Y|D.M.Y|Y-M-D|Y/M/D|Y.M.D)A?$"/>
         <xsd:enumeration value="Region Name has invalid format. It should contain letters, numbers, dot, underscore and dash. Min length is 1 and max length is 30. Regular expression used to validate:^[a-zA-Z 0-9._-]{1,30}$"/>
         <xsd:enumeration value="CallManager Name has invalid description. It should contain letters, numbers and some special characters. Min length is 1 and max length is 50. Regular expression used to validate: ^[]a-zA-Z0-9 !#$'()*+,./:;=?@[^_`{|}~-]{1,50}$"/>
         <xsd:enumeration value="CallManager Description has invalid format. It should contain letters, numbers and some special characters. Max length is 50. Regular expression used to validate: ^[]a-zA-Z0-9 !#$'()*+,./:;=?@[^_`{|}~-]{0,50}$"/>
         <xsd:enumeration value="CallManagerGroup Name has invalid format. It should contain letters, numbers, dot, underscore and dash. Min length is 1 and max length is 50. Regular expression used to validate:^[a-zA-Z 0-9._-]{1,50}$"/>
         <xsd:enumeration value="NumPlan CFADestination has invalid format. It should contain digits 0 to 9, *, # and X. Max length is 50. Regular expression used to validate:^[0-9*#X]{0,50}$"/>
         <xsd:enumeration value="NumPlan CFBDestination has invalid format. It should contain digits 0 to 9, *, # and X. Max length is 50. Regular expression used to validate:^[0-9*#X]{0,50}$"/>
         <xsd:enumeration value="NumPlan CFNADestination has invalid format. It should contain digits 0 to 9, *, # and X. Max length is 50. Regular expression used to validate:^[0-9*#X]{0,50}$"/>
         <xsd:enumeration value="NumPlan PrefixDigitsOut has invalid format. It should contain digits 0 to 9, * and #. Max length is 50. Regular expression used to validate:^[0-9*#]{0,50}$"/>
         <xsd:enumeration value="NumPlan CalledPartyTransformationMask has invalid format. It should contain digits 0 to 9, *, # and X. Max length is 50. Regular expression used to validate:^[0-9*#X]{0,50}$"/>
         <xsd:enumeration value="RouteGroup Name has invalid format. It should contain letters, numbers, dot, underscore and dash. Min length is 1 and max length is 50. Regular expression used to validate:^[a-zA-Z 0-9._-]{1,50}$"/>
         <xsd:enumeration value="RouteFilterMember Digits has invalid format. Regular expression used to validate: ^[]0-9*#[^+?-]{0,50}$"/>
         <xsd:enumeration value="PhoneButton Label has invalid format. It should contain letters, numbers and some special characters. Max length is 50. Regular expression used to validate: ^[]a-zA-Z0-9 !#$'()*+,./:;=?@[^_`{|}~-]{0,50}$"/>
         <xsd:enumeration value="PhoneTemplate Name has invalid desciption. It should contain letters, numbers and some special characters. Min length is 1 and max length is 50. Regular expression used to validate: ^[]a-zA-Z0-9 !#$'()*+,./:;=?@[^_`{|}~-]{1,50}$"/>
         <xsd:enumeration value="CallbackDN should include digits 0 to 9, * and #. Max length is 50. Regular expression used to validate:^[0-9*#]{0,50}$"/>
         <xsd:enumeration value="SpeedDial Label has invalid format. Max length is 30. Regular expression used to validate:^[^&quot;&quot;]{0,30}$"/>
         <xsd:enumeration value="DeviceNumPlanMap Label has invalid format. Max length is 30. Regular expression used to validate: ^[^&quot;&quot;%$lt;&gt;]{0,30}$"/>
         <xsd:enumeration value="Telecaster DirectoryServicesURL1 has invalid format. It should contain letters, numbers and some special characters. Max length is 255. Regular expression used to validate: ^[]a-zA-Z0-9 !#$%'()*+,./:;&lt;=&gt;?@[^_{|}~\\-]{0,255}$"/>
         <xsd:enumeration value="Telecaster DirectoryServicesURL2 has invalid format. It should contain letters, numbers and some special characters. Max length is 255. Regular expression used to validate: ^[]a-zA-Z0-9 !#$%'()*+,./:;&lt;=&gt;?@[^_{|}~\\-]{0,255}$"/>
         <xsd:enumeration value="Telecaster VoiceMailURL1 has invalid format. It should contain letters, numbers and some special characters. Max length is 255. Regular expression used to validate: ^[]a-zA-Z0-9 !#$%'()*+,./:;&lt;=&gt;?@[^_{|}~\\-]{0,255}$"/>
         <xsd:enumeration value="Telecaster VoiceMailURL2 has invalid format. It should contain letters, numbers and some special characters. Max length is 255. Regular expression used to validate: ^[]a-zA-Z0-9 !#$%'()*+,./:;&lt;=&gt;?@[^_{|}~\\-]{0,255}$"/>
         <xsd:enumeration value="DeviceNumPlanMap Display has invalid format. Max length is 30. Regular expression used to validate: ^[^]&quot;&quot;%&lt;&gt;[|{}]{0,30}$"/>
         <xsd:enumeration value="PhoneButton ParamT1 has invalid format. It should contain letters, numbers and some special characters. Max length is 50. Regular expression used to validate: ^[]a-zA-Z0-9 !#$'()*+,./:;=?@[^_`{|}~-]{0,50}$"/>
         <xsd:enumeration value="PhoneButton ParamT2 has invalid format. It should contain letters, numbers and some special characters. Max length is 50. Regular expression used to validate: ^[]a-zA-Z0-9 !#$'()*+,./:;=?@[^_`{|}~-]{0,50}$"/>
         <xsd:enumeration value="ProcessNode MAC has invalid format. Regular expression used to validate: ^[a-fA-F0-9]{12}$"/>
         <xsd:enumeration value="RouteList CalledPartyTransformationMask has invalid format. It should include digits 0 to 9, *, # and X. Max length is 50. Regular expression used to validate: ^[0-9*#X]{0,50}$"/>
         <xsd:enumeration value="RouteList PrefixDigitsOut has invalid format. It should include digits 0 to 9, * and #. Max length is 50. Regular expression used to validate:^[0-9*#]{0,50}$"/>
         <xsd:enumeration value="RouteFilter Name has invalid format. It should contain letters, numbers, dot, underscore and dash. Min length is 1 and max length is 50. Regular expression used to validate:^[a-zA-Z 0-9._-]{1,50}$"/>
         <xsd:enumeration value="DialPlan Name has invalid format. It should contain letters, numbers and some special characters. Min length is 1 and max length is 50. Regular expression used to validate: ^[]a-zA-Z0-9 !#$'()*+,./:;=?@[^_`{|}~-]{1,50}$"/>
         <xsd:enumeration value="DialPlan Description has invalid format. It should contain letters, numbers and some special characters. Max length is 50. Regular expression used to validate: ^[]a-zA-Z0-9 !#$'()*+,./:;=?@[^_`{|}~-]{0,50}$"/>
         <xsd:enumeration value="NumPlan CallingPartyTransformationMask has invalid format. It should include digits 0 to 9, *, # and X. Max length is 50. Regular expression used to validate: ^[0-9*#X]{0,50}$"/>
         <xsd:enumeration value="RouteList CallingPartyTransformationMask has invalid format. It should include digits 0 to 9, *, # and X. Max length is 50. Regular expression used to validate: ^[0-9*#X]{0,50}$"/>
         <xsd:enumeration value="Location Name has invalid format. It should contain letters, numbers, dot, underscore and dash. Min length is 1 and max length is 50. Regular expression used to validate:^[a-zA-Z 0-9._-]{1,50}$"/>
         <xsd:enumeration value="DeviceNumPlanMap E164Mask has invalid format. It should include digits 0 to 9, *, # and X. Max length is 24. Regular expression used to validate: ^[0-9*#X]{0,24}$"/>
         <xsd:enumeration value="CallManager E164MaskAutoregistration has invalid format. It should include digits 0 to 9, *, # and X. Max length is 24. Regular expression used to validate: ^[0-9*#X]{0,24}$"/>
         <xsd:enumeration value="Plugin Name has invalid format. It should contain letters, numbers, underscore and dash. Min length is 1 and max length is 50. Regular expression used to validate:^[a-zA-Z 0-9_-]{1,50}$"/>
         <xsd:enumeration value="TelecasterSubscribedService ServiceName has invalid format. Regular expression used to validate: ^[^&quot;&quot;]{1,32}$"/>
         <xsd:enumeration value="TelecasterService Name has invalid format. Regular expression used to validate: ^[^&quot;&quot;]{1,32}$"/>
         <xsd:enumeration value="TelecasterService URLTemplate has invalid format. It should contain letters, numbers and some special characters. Max length is 512. Regular expression used to validate:^[]a-zA-Z0-9 !#$%'()*+,./:;&lt;=&gt;?@[^_{|}~\\-]{1,512}$"/>
         <xsd:enumeration value="TelecasterService Description has invalid format. It should contain letters, numbers and some special characters. Max length is 100. Regular expression used to validate: ^[]a-zA-Z0-9 !#$%'()*+,./:;&lt;=&gt;?@[^_{|}~\\-]{0,100}$"/>
         <xsd:enumeration value="TelecasterServiceParameter Name has invalid format. It should contain letters, numbers and some special characters. Max length is 50. Regular expression used to validate: ^[a-zA-Z0-9_./:;,-]{1,50}$"/>
         <xsd:enumeration value="TelecasterServiceParameter Description has invalid format. It should contain letters, numbers and some special characters. Max length is 500. Regular expression used to validate: ^[]a-zA-Z0-9 !#$'()*+,./:;=?@[^_`{|}~\\-]{0,500}$"/>
         <xsd:enumeration value="TelecasterSubscribedParameter Value has invalid format. It should contain letters, numbers and some special characters. Max length is 100. Regular expression used to validate: ^[]a-zA-Z0-9 !@#$%^*()_+=[{}|';:,.&lt;&gt;/?`~\\-]{0,100}$"/>
         <xsd:enumeration value="TelecasterServiceParameter DefaultValue has invalid format. It should contain letters, numbers and some special characters. Max length is 100. Regular expression used to validate: ^[a-zA-Z0-9_./:;,]{0,100}$"/>
         <xsd:enumeration value="TelecasterServiceParameter DisplayName has invalid format. It should contain letters, numbers and some special characters. Min length is 1 and max length is 50. Regular expression used to validate: ^[]a-zA-Z0-9 !#$'()*+,./:;=?@[^_`{|}~\\-]{1,50}$"/>
         <xsd:enumeration value=". It should include digits 0 to 9, * and #. Max length is 50. Regular expression used to validate:^[0-9*#]{0,50}$"/>
         <xsd:enumeration value="MOHServer FixedAudioSourceID has invalid format. It should contain letters, numbers and some special characters. Max length is 255. Regular expression used to validate: ^[]a-zA-Z0-9 !#$%'()*+,./:;&lt;=&gt;?@[^_`{|}~\\-]{0,255}$"/>
         <xsd:enumeration value="MOHAudioSource Name has invalid format. It should contain letters, numbers, dot, underscore and dash. Min length is 1 and max length is 50. Regular expression used to validate:^[a-zA-Z 0-9._-]{1,50}$"/>
         <xsd:enumeration value="MOHAudioSource SourceFile has invalid format. It should contain letters, numbers and some special characters. Max length is 255. Regular expression used to validate: ^[]a-zA-Z0-9 !#$'()*+,./:;=?@[^_`{|}~\\-]{1,255}$"/>
         <xsd:enumeration value="MediaResourceGroup Name has invalid format. It should contain letters, numbers, dot, underscore and dash. Min length is 1 and max length is 50. Regular expression used to validate:^[a-zA-Z 0-9._-]{1,50}$"/>
         <xsd:enumeration value="MediaResourceGroup Description has invalid format. It should contain letters, numbers and some special characters. Max length is 50. Regular expression used to validate: ^[]a-zA-Z0-9 !#$'()*+,./:;=?@[^_`{|}~\\-]{0,50}$"/>
         <xsd:enumeration value="MediaResourceList Name has invalid format. It should contain letters, numbers, dot, underscore and dash. Min length is 1 and max length is 50. Regular expression used to validate:^[a-zA-Z 0-9._-]{1,50}$"/>
         <xsd:enumeration value="CallForwardExpansionMask may include digits 0 to 9, *, # and X. Max length is 50. Regular expression used to validate: ^[0-9*#X]{0,50}$"/>
         <xsd:enumeration value="NumPlan DeviceFailureDN has invalid format. It should include digits 0 to 9, *, # and X. Max length is 50. Regular expression used to validate: ^[0-9*#X]{0,50}$"/>
         <xsd:enumeration value="Telecaster IdleURL has invalid format. It should contain letters, numbers and some special characters. Max length is 255. Regular expression used to validate: ^[]a-zA-Z0-9 !#$%'()*+,./:;&lt;=&gt;?@[^_{|}~\\-]{0,255}$"/>
         <xsd:enumeration value="NumPlan CallingPartyPrefixDigits has invalid format. It should include digits 0 to 9, * and #. Max length is 50. Regular expression used to validate:^[0-9*#]{0,50}$"/>
         <xsd:enumeration value="RouteList CallingPartyPrefixDigits has invalid format. It should include digits 0 to 9, * and #. Max length is 50. Regular expression used to validate:^[0-9*#]{0,50}$"/>
         <xsd:enumeration value="DeviceAddOnModuleMap SpecialLoadInformation has invalid format. It should contain letters, numbers, underscore and dash. Max length is 32. Regular expression used to validate:^[a-zA-Z 0-9_-]{0,32}$"/>
         <xsd:enumeration value="Telecaster ProxyURL has invalid format. It should contain letters, numbers and some special characters. Max length is 255. Regular expression used to validate: ^[]a-zA-Z0-9 !#$%'()*+,./:;&lt;=&gt;?@[^_{|}~\\-]{0,255}$"/>
         <xsd:enumeration value="Telecaster AuthenticationURL has invalid format. It should contain letters, numbers and some special characters. Max length is 255. Regular expression used to validate: ^[]a-zA-Z0-9 !#$%'()*+,./:;&lt;=&gt;?@[^_{|}~\\-]{0,255}$"/>
         <xsd:enumeration value="VoiceMessagingPilot DirectoryNumber has invalid format. It should include digits 0 to 9, * and #. Min length is 1 and max length is 50. Regular expression used to validate:^[0-9*#]{1,50}$"/>
         <xsd:enumeration value="VoiceMessagingPilot Description has invalid format. It should contain letters, numbers and some special characters. Max length is 50. Regular expression used to validate: ^[]a-zA-Z0-9 !#$'()*+,./:;=?@[^_`{|}~\\-]{0,50}$"/>
         <xsd:enumeration value="VoiceMessagingProfile Name has invalid format. It should contain letters, numbers, underscore and dash. Min length is 1 and max length is 50. Regular expression used to validate:^[a-zA-Z 0-9_-]{1,50}$"/>
         <xsd:enumeration value="VoiceMessagingProfile Description has invalid format. It should contain letters, numbers and some special characters. Max length is 50. Regular expression used to validate: ^[]a-zA-Z 0-9._*!#[^+?-]{0,50}$"/>
         <xsd:enumeration value="VoiceMessagingProfile VoiceMailBoxMask has invalid format. It should include digits 0 to 9, *, # and X. Max length is 50. Regular expression used to validate: ^[0-9*#X]{0,50}$"/>
         <xsd:enumeration value="H323Device zone has invalid format. It should contain letters, numbers, dot, underscore and dash. Max length is 50. Regular expression used to validate:^[a-zA-Z 0-9._-]{0,50}$"/>
         <xsd:enumeration value="H323Device technologyPrefix has invalid format. It should include digits 0 to 9, * and #. Max length is 50. Regular expression used to validate:^[0-9*#]{0,50}$"/>
         <xsd:enumeration value="AARNeighborhood Name has invalid format. It should contain letters, numbers, dot, underscore and dash. Min length is 1 and max length is 20. Regular expression used to validate:^[a-zA-Z 0-9._-]{1,20}$"/>
         <xsd:enumeration value="AARDialPrefixMatrix DialPrefix has invalid format. Regular expression used to validate: ^[]0-9*#X[^+?.@!-]{0,24}$"/>
         <xsd:enumeration value="SoftkeyTemplate Name has invalid format. It should contain letters, numbers, dot, underscore and dash. Min length is 1 and max length is 50. Regular expression used to validate:^[a-zA-Z 0-9._-]{1,50}$"/>
         <xsd:enumeration value="SoftkeyTemplate Description has invalid format. It should contain letters, numbers and some special characters. Max length is 50. Regular expression used to validate: ^[]a-zA-Z0-9 !#$'()*+,./:;=?@[^_`{|}~-]{0,50}$"/>
         <xsd:enumeration value="NumPlan Description has invalid format. It should contain letters, numbers and some special characters. Max length is 50. Regular expression used to validate: ^[]a-zA-Z0-9 !#$'()*+,./:;=?@[^_`{|}~\\-]{0,50}$"/>
         <xsd:enumeration value="ProcessNode Description has invalid format. It should contain letters, numbers and some special characters. Max length is 50. Regular expression used to validate: ^[]a-zA-Z0-9 !#$'()*+,./:;=?@[^_`{|}~-]{0,50}$"/>
         <xsd:enumeration value="SRST Name has invalid format. It should contain letters, numbers, dot, underscore and dash. Min length is 1 and max length is 50. Regular expression used to validate:^[a-zA-Z 0-9._-]{1,50}$"/>
         <xsd:enumeration value="IP Address for the first device in the SRST config has invalid IP address"/>
         <xsd:enumeration value="IP Address for the second device in the SRST config has invalid IP address"/>
         <xsd:enumeration value="IP Address for the third device in the SRST config has invalid IP address"/>
         <xsd:enumeration value="SIPDevice PrefixDN has invalid format. It should include digits 0 to 9, * and #. Max length is 50. Regular expression used to validate:^[0-9*#]{0,50}$"/>
         <xsd:enumeration value="SIPDevice CallerName has invalid format. . It should contain letters, numbers and some special characters. Max length is 30. Regular expression used to validate: ^[a-zA-Z0-9 !#$'()*+,./:;=?@\\^_`~-]{0,30}$"/>
         <xsd:enumeration value="SIPDevice callerIdDN has invalid format. It should include digits 0 to 9, *, # and X. Max length is 32. Regular expression used to validate: ^[0-9*#X]{0,32}$"/>
         <xsd:enumeration value="NumPlan CFAPTDestination has invalid format. It should include digits 0 to 9, * and #. Max length is 50. Regular expression used to validate:^[0-9*#]{0,50}$"/>
         <xsd:enumeration value="Value of MaxNumCalls should be greater than 0 and less than or equal to the maximum supported by the device as configured."/>
         <xsd:enumeration value="LineGroup Name has invalid format. It should contain letters, numbers, dot, underscore and dash. Min length is 1 and max length is 50. Regular expression used to validate:^[a-zA-Z 0-9._-]{1,50}$"/>
         <xsd:enumeration value="TelecasterSubscribedService URLLabel has invalid format. Regular expression used to validate: ^[^&quot;&quot;%&lt;&gt;]{0,50}$"/>
         <xsd:enumeration value="DigitalAccessBri Prefix has invalid format. It should include digits 0 to 9, * and #. Max length is 50. Regular expression used to validate:^[0-9*#]{0,50}$"/>
         <xsd:enumeration value="DigitalAccessBri CallerIDDN has invalid format. It should include digits 0 to 9, *, # and X. Max length is 32. Regular expression used to validate: ^[0-9*#X]{0,32}$"/>
         <xsd:enumeration value="Name has invalid format. It should contain letters, numbers, dot, underscore and dash. Min length is 1 and max length is 128. Regular expression used to validate:^[a-zA-Z 0-9._-]{1,128}$"/>
         <xsd:enumeration value="email has invalid format. Regular expression used to validate: ^[0-9A-Za-z@_.-]{0,255}$"/>
         <xsd:enumeration value="PersonalPhoneBook phonenumber has invalid format. Regular expression used to validate: ^[0-9 ()#*.-]{0,50}$"/>
         <xsd:enumeration value=". It should contain letters, numbers and some special characters. Max length is 50. Regular expression used to validate: ^[]a-zA-Z0-9 !#$%'()*+,./:;&lt;=&gt;?@[^_`{|}~\\-]{0,1024}$"/>
         <xsd:enumeration value="Regular expression used to validate: ^(?!.{1025,})[0-9*X]+(~\^[0-9*X]+)*$"/>
         <xsd:enumeration value="Regular expression used to validate: ^(?!.{1025,})[0-9*X]+(~\^[0-9*X]+)*$"/>
         <xsd:enumeration value="ApplicationDialRule Name has invalid format. Regular expression used to validate: ^[]a-zA-Z0-9 !#$'()*+,./:;=?@[^_`{|}~-]{1,50}$"/>
         <xsd:enumeration value="ApplicationDialRule Description has invalid format. Regular expression used to validate: ^[]a-zA-Z0-9 !#$'()*+,./:;=?@[^_`{|}~-]{0,50}$"/>
         <xsd:enumeration value="ApplicationDialRule numbeginwith has invalid format. It should include digits 0 to 9, *, # and +. Max length is 50. Regular expression used to validate: ^[0-9*#+]{0,50}$"/>
         <xsd:enumeration value="ApplicationDialRule Prefix has invalid format. It should include digits 0 to 9, *, # and +. Max length is 50. Regular expression used to validate: ^[0-9*#+]{0,50}$"/>
         <xsd:enumeration value="DeviceNumPlanMap LabelASCII has invalid format. It should contain letters, numbers and some special characters. Max length is 30. Regular expression used to validate: ^[a-zA-Z0-9 !#$'()*+,./:;=?@\\^_`}~-]{0,30}$"/>
         <xsd:enumeration value="DeviceNumPlanMap DisplayASCII has invalid format. It should contain letters, numbers and some special characters. Max length is 30. Regular expression used to validate: ^[a-zA-Z0-9 !#$'()*+,./:;=?@\\^_`}~-]{0,30}$"/>
         <xsd:enumeration value="SpeedDial LabelASCII has invalid format. Regular expression used to validate: ^[]a-zA-Z0-9 !#$%'()*+,./:;&lt;=&gt;?@[^_`{|}~\\-]{0,50}$"/>
         <xsd:enumeration value="TelecasterSubscribedService URLLabelASCII has invalid format. Regular expression used to validate: ^[]a-zA-Z0-9 !#$'()*+,./:;=?@[^_`{|}~\\-]{0,50}$"/>
         <xsd:enumeration value="TelecasterService NameASCII has invalid format. Regular expression used to validate: ^[]a-zA-Z0-9 !#$%'()*+,./:;&lt;=&gt;?@[^_{|}~\\-]{0,32}$"/>
         <xsd:enumeration value="TelecasterSubscribedService ServiceNameASCII has invalid format. Regular expression used to validate: ^[]a-zA-Z0-9 !@#$%^*()_+=[{}|';:,.&lt;&gt;/?`~\\-]{0,32}$"/>
         <xsd:enumeration value="Authentication string must contain 4 to 10 numeric characters. Regular expression used to validate: ^[0-9]{4,10}$"/>
         <xsd:enumeration value="EndUserDeviceMap Description has invalid format. Regular expression used to validate: ^[^&quot;&quot;]{0,50}$"/>
         <xsd:enumeration value="MlppDomain Name has invalid format. It should contain letters, numbers, dot, underscore and dash. Min length is 1 and max length is 50. Regular expression used to validate:^[a-zA-Z 0-9._-]{1,50}$"/>
         <xsd:enumeration value="MlppDomain id has invalid format. Regular expression used to validate: ^[0-9a-fA-F]{6}$"/>
         <xsd:enumeration value="Preferences Name has invalid format. It should contain letters, numbers, dot, underscore and dash. Min length is 1 and max length is 64. Regular expression used to validate:^[a-zA-Z 0-9._-]{1,64}$"/>
         <xsd:enumeration value="Preferences Value has invalid format . It should contain letters, numbers. Max length is 50. Regular expression used to validate:^[a-zA-Z 0-9]{0,50}$"/>
         <xsd:enumeration value="DrfScript Name has invalid format. It should contain letters, numbers, dot, underscore and dash. Min length is 1 and max length is 255. Regular expression used to validate:^[a-zA-Z 0-9._-]{1,255}$"/>
         <xsd:enumeration value="DhcpServer DomainNameServer1 has invalid IP address. Regular expression used to validate: ^((25[0-5]|2[0-4][0-9]|1[0-9]{2}|[1-9][0-9]|[0-9])\.){3}(25[0-5]|2[0-4][0-9]|1[0-9]{2}|[1-9][0-9]|[0-9])$"/>
         <xsd:enumeration value="DhcpSubnet DomainNameServer2 has invalid IP address. Regular expression used to validate: ^((25[0-5]|2[0-4][0-9]|1[0-9]{2}|[1-9][0-9]|[0-9])\.){3}(25[0-5]|2[0-4][0-9]|1[0-9]{2}|[1-9][0-9]|[0-9])$"/>
         <xsd:enumeration value="DhcpServer  TFTPServer1 has invalid IP address. Regular expression used to validate: ^((25[0-5]|2[0-4][0-9]|1[0-9]{2}|[1-9][0-9]|[0-9])\.){3}(25[0-5]|2[0-4][0-9]|1[0-9]{2}|[1-9][0-9]|[0-9])$"/>
         <xsd:enumeration value="DhcpServer TFTPPServer2 has invalid IP address. Regular expression used to validate: ^((25[0-5]|2[0-4][0-9]|1[0-9]{2}|[1-9][0-9]|[0-9])\.){3}(25[0-5]|2[0-4][0-9]|1[0-9]{2}|[1-9][0-9]|[0-9])$"/>
         <xsd:enumeration value="DhcpServer NextServer has invalid IP address. Regular expression used to validate: ^((25[0-5]|2[0-4][0-9]|1[0-9]{2}|[1-9][0-9]|[0-9])\.){3}(25[0-5]|2[0-4][0-9]|1[0-9]{2}|[1-9][0-9]|[0-9])$"/>
         <xsd:enumeration value="DhcpServer DomainName has invalid format. It should contain letters, numbers, dot, underscore and dash. Min length is 1 and max length is 64. Regular expression used to validate:^[a-zA-Z 0-9._-]{1,64}$"/>
         <xsd:enumeration value="DhcpSubnet Subnet IP has invalid IP address. Regular expression used to validate: ^((25[0-5]|2[0-4][0-9]|1[0-9]{2}|[1-9][0-9]|[0-9])\.){3}(25[0-5]|2[0-4][0-9]|1[0-9]{2}|[1-9][0-9]|[0-9])$"/>
         <xsd:enumeration value="DhcpSubnet IPAddrFrom1 has invalid IP address. Regular expression used to validate: ^((25[0-5]|2[0-4][0-9]|1[0-9]{2}|[1-9][0-9]|[0-9])\.){3}(25[0-5]|2[0-4][0-9]|1[0-9]{2}|[1-9][0-9]|[0-9])$"/>
         <xsd:enumeration value="DhcpSubnet IPAddrFrom2 has invalid IP address. Regular expression used to validate: ^((25[0-5]|2[0-4][0-9]|1[0-9]{2}|[1-9][0-9]|[0-9])\.){3}(25[0-5]|2[0-4][0-9]|1[0-9]{2}|[1-9][0-9]|[0-9])$"/>
         <xsd:enumeration value="DhcpSubnet IPAddrTo1 has invalid IP address. Regular expression used to validate: ^((25[0-5]|2[0-4][0-9]|1[0-9]{2}|[1-9][0-9]|[0-9])\.){3}(25[0-5]|2[0-4][0-9]|1[0-9]{2}|[1-9][0-9]|[0-9])$"/>
         <xsd:enumeration value="DhcpSubnet IPAddrTo2 has invalid IP address. Regular expression used to validate: ^((25[0-5]|2[0-4][0-9]|1[0-9]{2}|[1-9][0-9]|[0-9])\.){3}(25[0-5]|2[0-4][0-9]|1[0-9]{2}|[1-9][0-9]|[0-9])$"/>
         <xsd:enumeration value="DhcpSubnet Router 1 IP has invalid address. Regular expression used to validate: ^((25[0-5]|2[0-4][0-9]|1[0-9]{2}|[1-9][0-9]|[0-9])\.){3}(25[0-5]|2[0-4][0-9]|1[0-9]{2}|[1-9][0-9]|[0-9])$"/>
         <xsd:enumeration value="DhcpSubnet Router 2 has invalid P address. Regular expression used to validate: ^((25[0-5]|2[0-4][0-9]|1[0-9]{2}|[1-9][0-9]|[0-9])\.){3}(25[0-5]|2[0-4][0-9]|1[0-9]{2}|[1-9][0-9]|[0-9])$"/>
         <xsd:enumeration value="DhcpSubnet SubnetMask has invalid IP address. Regular expression used to validate: ^((25[0-5]|2[0-4][0-9]|1[0-9]{2}|[1-9][0-9]|[0-9])\.){3}(25[0-5]|2[0-4][0-9]|1[0-9]{2}|[1-9][0-9]|[0-9])$"/>
         <xsd:enumeration value="DhcpSubnet DomainName has invalid format. It should contain letters, numbers, dot, underscore and dash. Min length is 1 and max length is 64. Regular expression used to validate:^[a-zA-Z 0-9._-]{1,64}$"/>
         <xsd:enumeration value="ApplicationUserDeviceMap Description has invalid format. Regular expression used to validate: ^[^&quot;&quot;]{0,50}$"/>
         <xsd:enumeration value="DhcpSubnet DomainNameServer1 has invalid IP address. Regular expression used to validate: ^((25[0-5]|2[0-4][0-9]|1[0-9]{2}|[1-9][0-9]|[0-9])\.){3}(25[0-5]|2[0-4][0-9]|1[0-9]{2}|[1-9][0-9]|[0-9])$"/>
         <xsd:enumeration value="DhcpSubnet DomainNameServer2 has invalid IP address. Regular expression used to validate: ^((25[0-5]|2[0-4][0-9]|1[0-9]{2}|[1-9][0-9]|[0-9])\.){3}(25[0-5]|2[0-4][0-9]|1[0-9]{2}|[1-9][0-9]|[0-9])$"/>
         <xsd:enumeration value="DhcpSubnet TFTPServer1 has invalid IP address. Regular expression used to validate: ^((25[0-5]|2[0-4][0-9]|1[0-9]{2}|[1-9][0-9]|[0-9])\.){3}(25[0-5]|2[0-4][0-9]|1[0-9]{2}|[1-9][0-9]|[0-9])$"/>
         <xsd:enumeration value="DhcpSubnet TFTPSever2 has invalid IP address. Regular expression used to validate: ^((25[0-5]|2[0-4][0-9]|1[0-9]{2}|[1-9][0-9]|[0-9])\.){3}(25[0-5]|2[0-4][0-9]|1[0-9]{2}|[1-9][0-9]|[0-9])$"/>
         <xsd:enumeration value="DhcpSubnet NextServer has invalid IP address. Regular expression used to validate: ^((25[0-5]|2[0-4][0-9]|1[0-9]{2}|[1-9][0-9]|[0-9])\.){3}(25[0-5]|2[0-4][0-9]|1[0-9]{2}|[1-9][0-9]|[0-9])$"/>
         <xsd:enumeration value="CMCInfo Description has invalid format. It should contain letters, numbers and some special characters. Max length is 50. Regular expression used to validate: ^[a-zA-Z0-9 !#$'()*+,./:;=?@^_`|~-]{0,50}$"/>
         <xsd:enumeration value="Code should be all digits of length 0 to 16."/>
         <xsd:enumeration value="Authorization Code (FAC) Name has invalid format. It should contain letters, numbers, dot, underscore and dash. Min length is 1 and max length is 50. Regular expression used to validate:^[a-zA-Z 0-9._-]{1,50}$"/>
         <xsd:enumeration value="Code should be all digits of length 0 to 16."/>
         <xsd:enumeration value="TimePeriod Name has invalid format. It should contain letters, numbers, dot, underscore and dash. Min length is 1 and max length is 50. Regular expression used to validate:^[a-zA-Z 0-9._-]{1,50}$"/>
         <xsd:enumeration value="TimeSchedule Name has invalid format. It should contain letters, numbers, dot, underscore and dash. Min length is 1 and max length is 50. Regular expression used to validate:^[a-zA-Z 0-9._-]{1,50}$"/>
         <xsd:enumeration value="E164 should contain digits, *, # and X of length 0 to 32. It should include digits 0 to 9, *, # and X. Max length is 32. Regular expression used to validate: ^[0-9*#X]{0,32}$"/>
         <xsd:enumeration value="CFBIntDestination has invalid format. It should include digits 0 to 9, *, # and X. Max length is 50. Regular expression used to validate: ^[0-9*#X]{0,50}$"/>
         <xsd:enumeration value="NumPlan CFNA Internal Destination has invalid format. It should include digits 0 to 9, *, # and X. Max length is 50. Regular expression used to validate: ^[0-9*#X]{0,50}$"/>
         <xsd:enumeration value="PFFDestinatoin has invalid format. It should include digits 0 to 9, *, # and X. Max length is 50. Regular expression used to validate: ^[0-9*#X]{0,50}$"/>
         <xsd:enumeration value="PFFIntDestination has invalid format. It should include digits 0 to 9, *, # and X. Max length is 50. Regular expression used to validate: ^[0-9*#X]{0,50}$"/>
         <xsd:enumeration value="Security Profile Name has invalid format. It should contain letters, numbers, dot, underscore and dash. Min length is 1 and max length is 65. Regular expression used to validate:^[a-zA-Z 0-9._-]{1,65}$"/>
         <xsd:enumeration value="SecurityProfile Description has invalid format. Regular expression used to validate: ^[]a-zA-Z0-9 !#$'()*+,./:;=?@[^_`{|}~-]{0,100}$"/>
         <xsd:enumeration value="SIPProfile Description has invalid format. Regular expression used to validate: ^[]a-zA-Z0-9 !#$'()*+,./:;=?@[^_`{|}~-]{0,100}$"/>
         <xsd:enumeration value="SIPIPAddr1 is invalid. Regular expression used to validate: ^((25[0-5]|2[0-4][0-9]|1[0-9]{2}|[1-9]?[0-9])\.){3}(25[0-5]|2[0-4][0-9]|1[0-9]{2}|[1-9]?[0-9])$"/>
         <xsd:enumeration value="SIPIPAddr2 is invalid. Regular expression used to validate: ^((25[0-5]|2[0-4][0-9]|1[0-9]{2}|[1-9]?[0-9])\.){3}(25[0-5]|2[0-4][0-9]|1[0-9]{2}|[1-9]?[0-9])$"/>
         <xsd:enumeration value="SIPIPAddr3 is invalid. Regular expression used to validate: ^((25[0-5]|2[0-4][0-9]|1[0-9]{2}|[1-9]?[0-9])\.){3}(25[0-5]|2[0-4][0-9]|1[0-9]{2}|[1-9]?[0-9])$"/>
         <xsd:enumeration value="Matrix Name has invalid formt. It should contain letters, numbers, dot, underscore and dash. Min length is 1 and max length is 50. Regular expression used to validate:^[a-zA-Z 0-9._-]{1,50}$"/>
         <xsd:enumeration value="Matrix Description has invalid format. It should contain letters, numbers and some special characters. Max length is 100. Regular expression used to validate: ^[]a-zA-Z0-9 !#$'()*+,./:;=?@[^_`{|}~-]{0,100}$"/>
         <xsd:enumeration value="null"/>
         <xsd:enumeration value="Realm has invalid value. It should contain letters, numbers, dot, underscore and dash. Min length is 1 and max length is 512. Regular expression used to validate:^[a-zA-Z 0-9._-]{1,512}$"/>
         <xsd:enumeration value="null"/>
         <xsd:enumeration value="Pickup Group Name has invalid format. It should contain letters, numbers, dot, underscore and dash. Min length is 1 and max length is 100. Regular expression used to validate:^[a-zA-Z 0-9._-]{1,100}$"/>
         <xsd:enumeration value="Bat Job Description has invalid format. It should contain letters, numbers and some special characters. Max length is 100. Regular expression used to validate: ^[]a-zA-Z0-9 !#$'()*+,./:;=?@[^_`{|}~-]{0,100}$"/>
         <xsd:enumeration value=". It should contain letters, numbers, dot, underscore and dash. Min length is 1 and max length is 100. Regular expression used to validate:^[a-zA-Z 0-9._-]{1,100}$"/>
         <xsd:enumeration value="Label has invalid format. Regular expression used to validate: ^[^&quot;&quot;%&lt;&gt;]{0,30}$"/>
         <xsd:enumeration value="LabelASCII has invalid format. Regular expression used to validate: ^[]a-zA-Z0-9 !#$'()*+,./:;=?@[^_`{|}~\\-]{0,50}$"/>
         <xsd:enumeration value="instanceId has invalid format. It should contain letters, numbers, dot, underscore and dash. Min length is 1 and max length is 128. Regular expression used to validate:^[a-zA-Z 0-9._-]{1,128}$"/>
         <xsd:enumeration value="instanceId has invalid format. It should contain letters"/>
         <xsd:enumeration value="sshpassword should contain any ASCII char other than a  of length 0 to 50"/>
         <xsd:enumeration value="sshuserID should contain any ASCII char other than a  of length 0 to 50. Regular expression used to validate: ^[]a-zA-Z0-9 !#$'()*+"/>
         <xsd:enumeration value="IP Address of the App server is invalid. Regular expression used to validate: ^((25[0-5]|2[0-4][0-9]|1[0-9]{2}|[1-9]?[0-9])\.){3}(25[0-5]|2[0-4][0-9]|1[0-9]{2}|[1-9]?[0-9])$"/>
         <xsd:enumeration value="zzcallPickupURI should contain any ASCII char other than a  of length 0 to 127. Regular expression used to validate: ^[]a-zA-Z0-9 !#$%'()*+"/>
         <xsd:enumeration value="zzcallPickupListURI should contain any ASCII char other than a  of length 0 to 127. Regular expression used to validate: ^[]a-zA-Z0-9 !#$%'()*+"/>
         <xsd:enumeration value="zzcallPickupGroupURI should contain any ASCII char other than a  of length 0 to 127. Regular expression used to validate: ^[]a-zA-Z0-9 !#$%'()*+"/>
         <xsd:enumeration value="zzmeetMeServiceURI should contain any ASCII char other than a  of length 0 to 127. Regular expression used to validate: ^[]a-zA-Z0-9 !#$%'()*+"/>
         <xsd:enumeration value="hostname should contain any ASCII char other than a  of length 0 to 255. Regular expression used to validate: ^[]a-zA-Z0-9 !#$%'()*+"/>
         <xsd:enumeration value="UserId has invalid format. It should contain letters, numbers, dot, underscore and dash. Min length is 1 and max length is 128. Regular expression used to validate:^[a-zA-Z 0-9._-]{1,128}$"/>
         <xsd:enumeration value="null"/>
         <xsd:enumeration value="Alerting Name ASCII has invalid format. Regular expression used to validate: ^[]a-zA-Z0-9 !#$'()*+,./:;=?@[^_`{|}~\\-]{0,50}$"/>
         <xsd:enumeration value="zzcallPickupURI should contain any ASCII char other than a  of length 0 to 127. Regular expression used to validate: ^[]a-zA-Z0-9 !#$%'()*+"/>
         <xsd:enumeration value="zzcallPickupURI should contain any ASCII char other than a  of length 0 to 127. Regular expression used to validate: ^[]a-zA-Z0-9 !#$%'()*+"/>
         <xsd:enumeration value="LicenseServer Description has invalid format. Regular expression used to validate: ^[]a-zA-Z0-9 !#$'()*+,./:;=?@[^_`{|}~-]{0,128}$"/>
         <xsd:enumeration value="CommonProfile Description has invalid format. Regular expression used to validate: ^[]a-zA-Z0-9 !#$'()*+,./:;=?@[^_`{|}~-]{0,128}$"/>
         <xsd:enumeration value="Common Profile Name has invalid format. It should contain letters, numbers, dot, underscore and dash. Min length is 1 and max length is 50. Regular expression used to validate:^[a-zA-Z 0-9._-]{1,50}$"/>
         <xsd:enumeration value="cNumber has invalid format. It should include digits 0 to 9, * and #. Max length is 50. Regular expression used to validate:^[0-9*#]{0,50}$"/>
      </xsd:restriction>
   </xsd:simpleType>

   <xsd:simpleType name="XDeviceFeature">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="Presence Status Report"/>
      </xsd:restriction>
   </xsd:simpleType>

   <xsd:simpleType name="XDeviceProfile">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="Real Device"/>
         <xsd:enumeration value="User Profile"/>
         <xsd:enumeration value="Autogenerated Profile"/>
         <xsd:enumeration value="Model Profile"/>
         <xsd:enumeration value="User Template Profile"/>
         <xsd:enumeration value="System Template Profile"/>
      </xsd:restriction>
   </xsd:simpleType>

   <xsd:simpleType name="XDeviceProtocol">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="SCCP"/>
         <xsd:enumeration value="Digital Access PRI"/>
         <xsd:enumeration value="H.225"/>
         <xsd:enumeration value="Analog Access"/>
         <xsd:enumeration value="Digital Access T1"/>
         <xsd:enumeration value="Route Point"/>
         <xsd:enumeration value="Unicast Bridge"/>
         <xsd:enumeration value="Multicast Point"/>
         <xsd:enumeration value="Inter-Cluster Trunk"/>
         <xsd:enumeration value="RAS"/>
         <xsd:enumeration value="Digital Access BRI"/>
         <xsd:enumeration value="SIP"/>
         <xsd:enumeration value="MGCP"/>
         <xsd:enumeration value="Static SIP Mobile Subscriber"/>
         <xsd:enumeration value="SIP Connector"/>
         <xsd:enumeration value="Protocol Not Specified"/>
      </xsd:restriction>
   </xsd:simpleType>

   <xsd:simpleType name="XDeviceSecurityMode">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="Non Secure"/>
         <xsd:enumeration value="Authenticated"/>
         <xsd:enumeration value="Encrypted"/>
      </xsd:restriction>
   </xsd:simpleType>

   <xsd:simpleType name="XDialParameter">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="Pattern"/>
         <xsd:enumeration value="OBSOLETE"/>
         <xsd:enumeration value="OBSOLETE"/>
         <xsd:enumeration value="OBSOLETE"/>
         <xsd:enumeration value="OBSOLETE"/>
         <xsd:enumeration value="OBSOLETE"/>
         <xsd:enumeration value="OBSOLETE"/>
         <xsd:enumeration value="OBSOLETE"/>
         <xsd:enumeration value="Button"/>
         <xsd:enumeration value="Timeout"/>
         <xsd:enumeration value="User"/>
         <xsd:enumeration value="OBSOLETE"/>
         <xsd:enumeration value="OBSOLETE"/>
      </xsd:restriction>
   </xsd:simpleType>

   <xsd:simpleType name="XDialPattern">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="7905_7912"/>
         <xsd:enumeration value="7940_7960_OTHER"/>
      </xsd:restriction>
   </xsd:simpleType>

   <xsd:simpleType name="XDigitSending">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="DTMF"/>
         <xsd:enumeration value="MF"/>
         <xsd:enumeration value="PULSE"/>
      </xsd:restriction>
   </xsd:simpleType>

   <xsd:simpleType name="XDistributeAlgorithm">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="Top Down"/>
         <xsd:enumeration value="Circular"/>
         <xsd:enumeration value="Longest Idle Time"/>
         <xsd:enumeration value="Broadcast"/>
      </xsd:restriction>
   </xsd:simpleType>

   <xsd:simpleType name="XDrfRegistered">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="NotRegistered"/>
         <xsd:enumeration value="Registered"/>
      </xsd:restriction>
   </xsd:simpleType>

   <xsd:simpleType name="XDrfScript">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="Backup"/>
         <xsd:enumeration value="Restore"/>
      </xsd:restriction>
   </xsd:simpleType>

   <xsd:simpleType name="XEncode">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="A-law"/>
         <xsd:enumeration value="u-law"/>
      </xsd:restriction>
   </xsd:simpleType>

   <xsd:simpleType name="XFDLChannel">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="ATT 54016"/>
         <xsd:enumeration value="ANSI T1.403 NI"/>
         <xsd:enumeration value="ANSI T1.403.CI"/>
         <xsd:enumeration value="None"/>
      </xsd:restriction>
   </xsd:simpleType>

   <xsd:simpleType name="XFeature">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="Redial"/>
         <xsd:enumeration value="Speed Dial"/>
         <xsd:enumeration value="Hold"/>
         <xsd:enumeration value="Transfer"/>
         <xsd:enumeration value="Forward All"/>
         <xsd:enumeration value="Display"/>
         <xsd:enumeration value="Line"/>
         <xsd:enumeration value="Chat"/>
         <xsd:enumeration value="Whiteboard"/>
         <xsd:enumeration value="Application Sharing"/>
         <xsd:enumeration value="File Transfer"/>
         <xsd:enumeration value="Video"/>
         <xsd:enumeration value="Message Waiting"/>
         <xsd:enumeration value="Answer/Release"/>
         <xsd:enumeration value="Auto Answer"/>
         <xsd:enumeration value="Settings"/>
         <xsd:enumeration value="Privacy"/>
         <xsd:enumeration value="Service URL"/>
         <xsd:enumeration value="Speed Dial BLF"/>
         <xsd:enumeration value="Malicious Call Identification"/>
         <xsd:enumeration value="Meet Me Conference"/>
         <xsd:enumeration value="Conference"/>
         <xsd:enumeration value="Call Park"/>
         <xsd:enumeration value="Call Pickup"/>
         <xsd:enumeration value="Group Call Pickup"/>
         <xsd:enumeration value="AEC"/>
         <xsd:enumeration value="None"/>
      </xsd:restriction>
   </xsd:simpleType>

   <xsd:simpleType name="XForward">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="All"/>
         <xsd:enumeration value="Busy"/>
         <xsd:enumeration value="No Answer"/>
      </xsd:restriction>
   </xsd:simpleType>

   <xsd:simpleType name="XFraming">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="D4"/>
         <xsd:enumeration value="ESF"/>
         <xsd:enumeration value="CRC4"/>
         <xsd:enumeration value="Non CRC4"/>
      </xsd:restriction>
   </xsd:simpleType>

   <xsd:simpleType name="XGkOption">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="None"/>
         <xsd:enumeration value="Remote"/>
      </xsd:restriction>
   </xsd:simpleType>

   <xsd:simpleType name="XGroupVersionStamp">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="Generic Group"/>
      </xsd:restriction>
   </xsd:simpleType>

   <xsd:simpleType name="XHuntAlgorithm">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="Try next member; then, try next group in Hunt List"/>
         <xsd:enumeration value="Try next member, but do not go to next group"/>
         <xsd:enumeration value="Skip remaining members, and go directly to next group"/>
         <xsd:enumeration value="Stop hunting"/>
      </xsd:restriction>
   </xsd:simpleType>

   <xsd:simpleType name="XHuntAlgorithmForAC">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="First Available"/>
         <xsd:enumeration value="Longest Idle"/>
         <xsd:enumeration value="Circular Hunting"/>
         <xsd:enumeration value="Broadcast Hunting"/>
      </xsd:restriction>
   </xsd:simpleType>

   <xsd:simpleType name="XIPMALineMode">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="Proxy"/>
         <xsd:enumeration value="Shared"/>
      </xsd:restriction>
   </xsd:simpleType>

   <xsd:simpleType name="XIPMATarget">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="Manager/Assistant"/>
         <xsd:enumeration value="Diverted"/>
      </xsd:restriction>
   </xsd:simpleType>

   <xsd:simpleType name="XKeyAuthority">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="none"/>
         <xsd:enumeration value="lsc"/>
         <xsd:enumeration value="mic"/>
         <xsd:enumeration value="symmetric key"/>
      </xsd:restriction>
   </xsd:simpleType>

   <xsd:simpleType name="XKeySize">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="512"/>
         <xsd:enumeration value="1024"/>
         <xsd:enumeration value="2048"/>
      </xsd:restriction>
   </xsd:simpleType>

   <xsd:simpleType name="XLDAPProtocol">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="ldap"/>
         <xsd:enumeration value="gc"/>
         <xsd:enumeration value="ldap"/>
      </xsd:restriction>
   </xsd:simpleType>

   <xsd:simpleType name="XLampBlinkRate">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="Lamp Off"/>
         <xsd:enumeration value="Lamp On"/>
         <xsd:enumeration value="Wink"/>
         <xsd:enumeration value="Flash"/>
         <xsd:enumeration value="Blink"/>
      </xsd:restriction>
   </xsd:simpleType>

   <xsd:simpleType name="XLanguage">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="Afar"/>
         <xsd:enumeration value="Abkhazian"/>
         <xsd:enumeration value="Afrikaans"/>
         <xsd:enumeration value="Amharic"/>
         <xsd:enumeration value="Arabic"/>
         <xsd:enumeration value="Assamese"/>
         <xsd:enumeration value="Aymara"/>
         <xsd:enumeration value="Azerbaijani"/>
         <xsd:enumeration value="Bashkir"/>
         <xsd:enumeration value="Byelorussian"/>
         <xsd:enumeration value="Bulgarian"/>
         <xsd:enumeration value="Bihari"/>
         <xsd:enumeration value="Bislama"/>
         <xsd:enumeration value="Bengali; Bangla"/>
         <xsd:enumeration value="Tibetan"/>
         <xsd:enumeration value="Breton"/>
         <xsd:enumeration value="Catalan"/>
         <xsd:enumeration value="Corsican"/>
         <xsd:enumeration value="Czech"/>
         <xsd:enumeration value="Welsh"/>
         <xsd:enumeration value="Danish"/>
         <xsd:enumeration value="German"/>
         <xsd:enumeration value="Bhutani"/>
         <xsd:enumeration value="Greek"/>
         <xsd:enumeration value="English"/>
         <xsd:enumeration value="Esperanto"/>
         <xsd:enumeration value="Spanish"/>
         <xsd:enumeration value="Estonian"/>
         <xsd:enumeration value="Basque"/>
         <xsd:enumeration value="Persian"/>
         <xsd:enumeration value="Finnish"/>
         <xsd:enumeration value="Fiji"/>
         <xsd:enumeration value="Faroese"/>
         <xsd:enumeration value="French"/>
         <xsd:enumeration value="Frisian"/>
         <xsd:enumeration value="Irish"/>
         <xsd:enumeration value="Scots Gaelic"/>
         <xsd:enumeration value="Galician"/>
         <xsd:enumeration value="Guarani"/>
         <xsd:enumeration value="Gujarati"/>
         <xsd:enumeration value="Hausa"/>
         <xsd:enumeration value="Hebrew"/>
         <xsd:enumeration value="Hindi"/>
         <xsd:enumeration value="Croatian"/>
         <xsd:enumeration value="Hungarian"/>
         <xsd:enumeration value="Armenian"/>
         <xsd:enumeration value="Interlingua"/>
         <xsd:enumeration value="Indonesian"/>
         <xsd:enumeration value="Interlingue"/>
         <xsd:enumeration value="Inupiak"/>
         <xsd:enumeration value="Icelandic"/>
         <xsd:enumeration value="Italian"/>
         <xsd:enumeration value="Inuktitut"/>
         <xsd:enumeration value="Japanese"/>
         <xsd:enumeration value="Javanese"/>
         <xsd:enumeration value="Georgian"/>
         <xsd:enumeration value="Kazakh"/>
         <xsd:enumeration value="Greenlandic"/>
         <xsd:enumeration value="Cambodian"/>
         <xsd:enumeration value="Kannada"/>
         <xsd:enumeration value="Korean"/>
         <xsd:enumeration value="Kashmiri"/>
         <xsd:enumeration value="Kurdish"/>
         <xsd:enumeration value="Kirghiz"/>
         <xsd:enumeration value="Latin"/>
         <xsd:enumeration value="Lingala"/>
         <xsd:enumeration value="Laothian"/>
         <xsd:enumeration value="Lithuanian"/>
         <xsd:enumeration value="Latvian, Lettish"/>
         <xsd:enumeration value="Malagasy"/>
         <xsd:enumeration value="Maori"/>
         <xsd:enumeration value="Macedonian"/>
         <xsd:enumeration value="Malayalam"/>
         <xsd:enumeration value="Mongolian"/>
         <xsd:enumeration value="Moldavian"/>
         <xsd:enumeration value="Marathi"/>
         <xsd:enumeration value="Malay"/>
         <xsd:enumeration value="Maltese"/>
         <xsd:enumeration value="Burmese"/>
         <xsd:enumeration value="Nauru"/>
         <xsd:enumeration value="Nepali"/>
         <xsd:enumeration value="Dutch"/>
         <xsd:enumeration value="Norwegian"/>
         <xsd:enumeration value="Occitan"/>
         <xsd:enumeration value="(Afan) Oromo"/>
         <xsd:enumeration value="Oriya"/>
         <xsd:enumeration value="Punjabi"/>
         <xsd:enumeration value="Polish"/>
         <xsd:enumeration value="Pashto, Pushto"/>
         <xsd:enumeration value="Portuguese"/>
         <xsd:enumeration value="Quechua"/>
         <xsd:enumeration value="Rhaeto-Romance"/>
         <xsd:enumeration value="Kirundi"/>
         <xsd:enumeration value="Romanian"/>
         <xsd:enumeration value="Russian"/>
         <xsd:enumeration value="Kinyarwanda"/>
         <xsd:enumeration value="Sanskrit"/>
         <xsd:enumeration value="Sindhi"/>
         <xsd:enumeration value="Sangho"/>
         <xsd:enumeration value="Serbo-Croatian"/>
         <xsd:enumeration value="Sinhalese"/>
         <xsd:enumeration value="Slovak"/>
         <xsd:enumeration value="Slovenian"/>
         <xsd:enumeration value="Samoan"/>
         <xsd:enumeration value="Shona"/>
         <xsd:enumeration value="Somali"/>
         <xsd:enumeration value="Albanian"/>
         <xsd:enumeration value="Serbian"/>
         <xsd:enumeration value="Siswati"/>
         <xsd:enumeration value="Sesotho"/>
         <xsd:enumeration value="Sundanese"/>
         <xsd:enumeration value="Swedish"/>
         <xsd:enumeration value="Swahili"/>
         <xsd:enumeration value="Tamil"/>
         <xsd:enumeration value="Telugu"/>
         <xsd:enumeration value="Tajik"/>
         <xsd:enumeration value="Thai"/>
         <xsd:enumeration value="Tigrinya"/>
         <xsd:enumeration value="Turkmen"/>
         <xsd:enumeration value="Tagalog"/>
         <xsd:enumeration value="Setswana"/>
         <xsd:enumeration value="Tonga"/>
         <xsd:enumeration value="Turkish"/>
         <xsd:enumeration value="Tsonga"/>
         <xsd:enumeration value="Tatar"/>
         <xsd:enumeration value="Twi"/>
         <xsd:enumeration value="Uighur"/>
         <xsd:enumeration value="Ukrainian"/>
         <xsd:enumeration value="Urdu"/>
         <xsd:enumeration value="Uzbek"/>
         <xsd:enumeration value="Vietnamese"/>
         <xsd:enumeration value="Volapuk"/>
         <xsd:enumeration value="Wolof"/>
         <xsd:enumeration value="Xhosa"/>
         <xsd:enumeration value="Yiddish "/>
         <xsd:enumeration value="Yoruba"/>
         <xsd:enumeration value="Zhuang"/>
         <xsd:enumeration value="Chinese"/>
         <xsd:enumeration value="Zulu"/>
         <xsd:enumeration value="Chinese (Simplified) Spoken Mandarin"/>
         <xsd:enumeration value="Chinese (Traditional) Spoken Mandarin"/>
         <xsd:enumeration value="Chinese (Traditional) Spoken Cantonese"/>
         <xsd:enumeration value="Portuguese (Brazilian)"/>
         <xsd:enumeration value="English (British)"/>
      </xsd:restriction>
   </xsd:simpleType>

   <xsd:simpleType name="XLanguageGroup">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="Western European"/>
         <xsd:enumeration value="Eastern European"/>
         <xsd:enumeration value="Baltic"/>
         <xsd:enumeration value="Cyrillic"/>
         <xsd:enumeration value="Arabic"/>
         <xsd:enumeration value="Greek"/>
         <xsd:enumeration value="Hebrew"/>
         <xsd:enumeration value="Turkish"/>
         <xsd:enumeration value="Japanese"/>
         <xsd:enumeration value="Simplified Chinese"/>
         <xsd:enumeration value="Traditional Chinese"/>
         <xsd:enumeration value="Korean"/>
         <xsd:enumeration value="Thai"/>
         <xsd:enumeration value="Vietnamese"/>
      </xsd:restriction>
   </xsd:simpleType>

   <xsd:simpleType name="XLdapServer">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="Microsoft Active Directory"/>
         <xsd:enumeration value="Netscape or Sun ONE LDAP Server"/>
      </xsd:restriction>
   </xsd:simpleType>

   <xsd:simpleType name="XLdapServerAttr">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="UniqueIdentifier"/>
         <xsd:enumeration value="UserId"/>
         <xsd:enumeration value="FirstName"/>
         <xsd:enumeration value="MiddleName"/>
         <xsd:enumeration value="LastName"/>
         <xsd:enumeration value="Manager"/>
         <xsd:enumeration value="Department"/>
         <xsd:enumeration value="TelephoneNumber"/>
         <xsd:enumeration value="Mailid"/>
         <xsd:enumeration value="Title"/>
         <xsd:enumeration value="HomePhone"/>
         <xsd:enumeration value="Mobile"/>
         <xsd:enumeration value="Pager"/>
      </xsd:restriction>
   </xsd:simpleType>

   <xsd:simpleType name="XLicenseFeature">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="CCM Node"/>
         <xsd:enumeration value="Phone Unit"/>
      </xsd:restriction>
   </xsd:simpleType>

   <xsd:simpleType name="XLicenseUnit">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="CCM Node"/>
         <xsd:enumeration value="Cisco 7902"/>
         <xsd:enumeration value="Cisco ATA 186"/>
         <xsd:enumeration value="Cisco 7905"/>
         <xsd:enumeration value="Cisco 7910"/>
         <xsd:enumeration value="Cisco 7912"/>
         <xsd:enumeration value="Cisco 7935"/>
         <xsd:enumeration value="Cisco 7936"/>
         <xsd:enumeration value="Cisco IP Communicator"/>
         <xsd:enumeration value="Cisco 7920"/>
         <xsd:enumeration value="Cisco 7940"/>
         <xsd:enumeration value="Cisco 7941"/>
         <xsd:enumeration value="Cisco 7960"/>
         <xsd:enumeration value="Cisco 7961"/>
         <xsd:enumeration value="Cisco 7970"/>
         <xsd:enumeration value="Cisco 7971"/>
         <xsd:enumeration value="Cisco 7941G-GE"/>
         <xsd:enumeration value="Cisco 7961G-GE"/>
         <xsd:enumeration value="Cisco 7985"/>
         <xsd:enumeration value="Cisco 7911"/>
         <xsd:enumeration value="Third-party SIP Device (Basic)"/>
         <xsd:enumeration value="H.323 Client"/>
         <xsd:enumeration value="CTI Port"/>
         <xsd:enumeration value="Other Phone"/>
         <xsd:enumeration value="Third-party SIP Device (Advanced)"/>
         <xsd:enumeration value="IP-STE"/>
         <xsd:enumeration value="Motorola CN622"/>
         <xsd:enumeration value="Cisco 12 S"/>
         <xsd:enumeration value="Cisco 12 SP"/>
         <xsd:enumeration value="Cisco 12 SP+"/>
         <xsd:enumeration value="Cisco 30 SP+"/>
         <xsd:enumeration value="Cisco 30 VIP"/>
         <xsd:enumeration value="Cisco VGC Phone"/>
         <xsd:enumeration value="Cisco VGC Virtual Phone"/>
         <xsd:enumeration value="Analog Phone"/>
         <xsd:enumeration value="Cisco Unified Personal Communicator"/>
         <xsd:enumeration value="Cisco 7906"/>
         <xsd:enumeration value="Cisco Unified Presence Server End User Feature License"/>
         <xsd:enumeration value="Cisco Unified Personal Client End User Feature License"/>
      </xsd:restriction>
   </xsd:simpleType>

   <xsd:simpleType name="XMGCPSlotModule">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="NM-1V"/>
         <xsd:enumeration value="NM-2V"/>
         <xsd:enumeration value="NM-HDV"/>
         <xsd:enumeration value="VIC-SLOT"/>
         <xsd:enumeration value="NONE"/>
         <xsd:enumeration value="VWIC-SLOT"/>
         <xsd:enumeration value="FLEX-SLOT"/>
         <xsd:enumeration value="ANALOG"/>
         <xsd:enumeration value="DIGITAL"/>
         <xsd:enumeration value="VGC_PORT"/>
         <xsd:enumeration value="WS-X6600"/>
         <xsd:enumeration value="AIM-VOICE-30 (2 subunits)"/>
         <xsd:enumeration value="NM-HDA"/>
         <xsd:enumeration value="PA-VXA"/>
         <xsd:enumeration value="PA-VXB"/>
         <xsd:enumeration value="PA-VXC"/>
         <xsd:enumeration value="PA-MCX"/>
         <xsd:enumeration value="NM-HD-1V"/>
         <xsd:enumeration value="NM-HD-2V"/>
         <xsd:enumeration value="NM-HD-2VE"/>
         <xsd:enumeration value="GENERIC-SLOT"/>
         <xsd:enumeration value="NM-4VWIC-MBRD"/>
         <xsd:enumeration value="EVM-HD"/>
         <xsd:enumeration value="NM-HDV2-0PORT"/>
         <xsd:enumeration value="NM-HDV2-1PORT-T1"/>
         <xsd:enumeration value="NM-HDV2-1PORT-E1"/>
         <xsd:enumeration value="NM-HDV2-2PORT-T1"/>
         <xsd:enumeration value="NM-HDV2-2PORT-E1"/>
         <xsd:enumeration value="AIM-VOICE-30-SLOT-0 (3 subunits- slot 0 only)"/>
      </xsd:restriction>
   </xsd:simpleType>

   <xsd:simpleType name="XMGCPVic">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="VIC-2FXS"/>
         <xsd:enumeration value="VIC-2FXO"/>
         <xsd:enumeration value="VWIC-1MFT-T1"/>
         <xsd:enumeration value="VWIC-2MFT-T1"/>
         <xsd:enumeration value="VIC_NONE"/>
         <xsd:enumeration value="VWIC-1MFT-E1"/>
         <xsd:enumeration value="VWIC-2MFT-E1"/>
         <xsd:enumeration value="WS-U4604-8FXS"/>
         <xsd:enumeration value="8FXS"/>
         <xsd:enumeration value="16FXS"/>
         <xsd:enumeration value="1T1"/>
         <xsd:enumeration value="16FXS8FXO"/>
         <xsd:enumeration value="48_PORTS"/>
         <xsd:enumeration value="VIC-4FXS"/>
         <xsd:enumeration value="VIC-4FXO"/>
         <xsd:enumeration value="VIC-8FXS"/>
         <xsd:enumeration value="VIC-16FXS"/>
         <xsd:enumeration value="WS-X6600-24FXS"/>
         <xsd:enumeration value="WS-X6600-6T1"/>
         <xsd:enumeration value="WS-X6600-6E1"/>
         <xsd:enumeration value="EM-4FXO-EM0"/>
         <xsd:enumeration value="EM-4FXO-EM1"/>
         <xsd:enumeration value="EM-8FXS-EM0"/>
         <xsd:enumeration value="EM-8FXS-EM1"/>
         <xsd:enumeration value="NM-HDA-4FXS"/>
         <xsd:enumeration value="PA-VXA-1TE1-24-T1"/>
         <xsd:enumeration value="PA-VXA-1TE1-30-E1"/>
         <xsd:enumeration value="PA-VXB-2TE1-T1"/>
         <xsd:enumeration value="PA-VXB-2TE1-E1"/>
         <xsd:enumeration value="PA-VXC-2TE1-T1"/>
         <xsd:enumeration value="PA-VXC-2TE1-E1"/>
         <xsd:enumeration value="PA-MCX-2TE1-T1"/>
         <xsd:enumeration value="PA-MCX-2TE1-E1"/>
         <xsd:enumeration value="PA-MCX-4TE1-T1"/>
         <xsd:enumeration value="PA-MCX-4TE1-E1"/>
         <xsd:enumeration value="PA-MCX-6TE1-T1"/>
         <xsd:enumeration value="PA-MCX-6TE1-E1"/>
         <xsd:enumeration value="PA-MCX-8TE1-T1"/>
         <xsd:enumeration value="PA-MCX-8TE1-E1"/>
         <xsd:enumeration value="VIC-8FXO"/>
         <xsd:enumeration value="WS-U4604-8FXO-2FXS"/>
         <xsd:enumeration value="WS-U4604-16FXS"/>
         <xsd:enumeration value="VIC-2BRI"/>
         <xsd:enumeration value="VIC-2FXS-SCCP"/>
         <xsd:enumeration value="VIC-4FXS-SCCP"/>
         <xsd:enumeration value="VIC2-2FXS-SCCP"/>
         <xsd:enumeration value="VIC2-2BRI-NT/TE-SCCP"/>
         <xsd:enumeration value="NM-HDA-4FXS-SCCP"/>
         <xsd:enumeration value="EM-8FXS-EM0-SCCP"/>
         <xsd:enumeration value="24FXS-SCCP"/>
         <xsd:enumeration value="EM-8FXS-EM1-SCCP"/>
         <xsd:enumeration value="EVM-HD-8FXS/DID-SCCP"/>
         <xsd:enumeration value="EM-4BRI-NT/TE-SCCP"/>
         <xsd:enumeration value="EM-HDA-8FXS-SCCP"/>
         <xsd:enumeration value="EM-HDA-3FXS/4FXO-SCCP"/>
         <xsd:enumeration value="WS-SVC-CMM-MS"/>
         <xsd:enumeration value="VIC2-2FXS"/>
         <xsd:enumeration value="VIC2-2FXO"/>
         <xsd:enumeration value="VIC2-2BRI"/>
         <xsd:enumeration value="VIC-4FXS/DID"/>
         <xsd:enumeration value="VIC2-4FXO"/>
         <xsd:enumeration value="NM-HDV2-ONBOARD-T1"/>
         <xsd:enumeration value="NM-HDV2-ONBOARD-E1"/>
         <xsd:enumeration value="VWIC2-1MFT-T1E1-T1"/>
         <xsd:enumeration value="VWIC2-1MFT-T1E1-E1"/>
         <xsd:enumeration value="VWIC2-2MFT-T1E1-T1"/>
         <xsd:enumeration value="VWIC2-2MFT-T1E1-E1"/>
         <xsd:enumeration value="VWIC2-1MFT-G703-T1"/>
         <xsd:enumeration value="VWIC2-1MFT-G703-E1"/>
         <xsd:enumeration value="VWIC2-2MFT-G703-T1"/>
         <xsd:enumeration value="VWIC2-2MFT-G703-E1"/>
         <xsd:enumeration value="EVM-HD-8FXS/DID"/>
         <xsd:enumeration value="EM-4BRI-NT/TE-EM0"/>
         <xsd:enumeration value="EM-4BRI-NT/TE-EM1"/>
         <xsd:enumeration value="24FXS"/>
         <xsd:enumeration value="NM-HDV2-ONBOARD-T1-2PORT"/>
         <xsd:enumeration value="NM-HDV2-ONBOARD-E1-2PORT"/>
         <xsd:enumeration value="EM-HDA-8FXS"/>
         <xsd:enumeration value="EM-HDA-6FXO"/>
         <xsd:enumeration value="EM-HDA-3FXS/4FXO"/>
         <xsd:enumeration value="EM-4BRI-NT/TE"/>
         <xsd:enumeration value="VIC2-1MFT-T1E1-T1"/>
         <xsd:enumeration value="VIC2-1MFT-T1E1-E1"/>
         <xsd:enumeration value="VIC2-2MFT-T1E1-T1"/>
         <xsd:enumeration value="VIC2-2MFT-T1E1-E1"/>
         <xsd:enumeration value="EM2-4FXO-EM0"/>
         <xsd:enumeration value="EM2-4FXO-EM1"/>
      </xsd:restriction>
   </xsd:simpleType>

   <xsd:simpleType name="XMOHCodec">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="711 ulaw"/>
         <xsd:enumeration value="711 alaw"/>
         <xsd:enumeration value="729"/>
         <xsd:enumeration value="wideband"/>
      </xsd:restriction>
   </xsd:simpleType>

   <xsd:simpleType name="XMWLPolicy">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="Use System Policy"/>
         <xsd:enumeration value="Light and Prompt"/>
         <xsd:enumeration value="Prompt Only"/>
         <xsd:enumeration value="Light Only"/>
         <xsd:enumeration value="None"/>
      </xsd:restriction>
   </xsd:simpleType>

   <xsd:simpleType name="XMatrix">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="Presence Group"/>
         <xsd:enumeration value="RSVP Policy"/>
      </xsd:restriction>
   </xsd:simpleType>

   <xsd:simpleType name="XMatrixValue">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="Use System Default"/>
         <xsd:enumeration value="No Reservation"/>
         <xsd:enumeration value="Optional(Video Desired)"/>
         <xsd:enumeration value="Mandatory"/>
         <xsd:enumeration value="Mandatory(Video Desired)"/>
         <xsd:enumeration value="Allow Subscription"/>
         <xsd:enumeration value="Disallow Subscription"/>
         <xsd:enumeration value="Use System Default"/>
      </xsd:restriction>
   </xsd:simpleType>

   <xsd:simpleType name="XMediaPayload">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="G711 a-law 64K"/>
         <xsd:enumeration value="G711 u-law 64K"/>
         <xsd:enumeration value="G723"/>
         <xsd:enumeration value="G729"/>
         <xsd:enumeration value="G729AnnexA"/>
         <xsd:enumeration value="G729AnnexB"/>
         <xsd:enumeration value="G729AnnexA-AnnexB"/>
      </xsd:restriction>
   </xsd:simpleType>

   <xsd:simpleType name="XMixer">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="Not Selected"/>
         <xsd:enumeration value="Multicast Point"/>
         <xsd:enumeration value="Unicast Bridge"/>
      </xsd:restriction>
   </xsd:simpleType>

   <xsd:simpleType name="XModel">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="Cisco 30 SP+"/>
         <xsd:enumeration value="Cisco 12 SP+"/>
         <xsd:enumeration value="Cisco 12 SP"/>
         <xsd:enumeration value="Cisco 12 S"/>
         <xsd:enumeration value="Cisco 30 VIP"/>
         <xsd:enumeration value="Cisco 7910"/>
         <xsd:enumeration value="Cisco 7960"/>
         <xsd:enumeration value="Cisco 7940"/>
         <xsd:enumeration value="Cisco 7935"/>
         <xsd:enumeration value="Cisco VGC Phone"/>
         <xsd:enumeration value="Cisco VGC Virtual Phone"/>
         <xsd:enumeration value="Cisco ATA 186"/>
         <xsd:enumeration value="SCCP Phone"/>
         <xsd:enumeration value="Analog Access"/>
         <xsd:enumeration value="Digital Access"/>
         <xsd:enumeration value="Digital Access+"/>
         <xsd:enumeration value="Digital Access WS-X6608"/>
         <xsd:enumeration value="Analog Access WS-X6624"/>
         <xsd:enumeration value="VGC Gateway"/>
         <xsd:enumeration value="Conference Bridge"/>
         <xsd:enumeration value="Conference Bridge WS-X6608"/>
         <xsd:enumeration value="Cisco IOS Conference Bridge (HDV2)"/>
         <xsd:enumeration value="Cisco Conference Bridge (WS-SVC-CMM)"/>
         <xsd:enumeration value="H.323 Phone"/>
         <xsd:enumeration value="H.323 Gateway"/>
         <xsd:enumeration value="Music On Hold"/>
         <xsd:enumeration value="Device Pilot"/>
         <xsd:enumeration value="CTI Port"/>
         <xsd:enumeration value="CTI Route Point"/>
         <xsd:enumeration value="Voice Mail Port"/>
         <xsd:enumeration value="Cisco IOS Software Media Termination Point (HDV2)"/>
         <xsd:enumeration value="Cisco Media Server (WS-SVC-CMM-MS)"/>
         <xsd:enumeration value="Cisco Video Conference Bridge (IPVC-35xx)"/>
         <xsd:enumeration value="Route List"/>
         <xsd:enumeration value="Load Simulator"/>
         <xsd:enumeration value="Media Termination Point"/>
         <xsd:enumeration value="Media Termination Point Hardware"/>
         <xsd:enumeration value="Cisco IOS Media Termination Point (HDV2)"/>
         <xsd:enumeration value="Cisco Media Termination Point (WS-SVC-CMM)"/>
         <xsd:enumeration value="Cisco 7941"/>
         <xsd:enumeration value="Cisco 7971"/>
         <xsd:enumeration value="MGCP Station"/>
         <xsd:enumeration value="MGCP Trunk"/>
         <xsd:enumeration value="GateKeeper"/>
         <xsd:enumeration value="7914 14-Button Line Expansion Module"/>
         <xsd:enumeration value="Trunk"/>
         <xsd:enumeration value="Tone Announcement Player"/>
         <xsd:enumeration value="SIP Trunk"/>
         <xsd:enumeration value="SIP Gateway"/>
         <xsd:enumeration value="WSM Trunk"/>
         <xsd:enumeration value="Unknown MGCP Gateway"/>
         <xsd:enumeration value="Unknown"/>
         <xsd:enumeration value="Cisco 7985"/>
         <xsd:enumeration value="Cisco 7911"/>
         <xsd:enumeration value="Cisco 7961G-GE"/>
         <xsd:enumeration value="Cisco 7941G-GE"/>
         <xsd:enumeration value="Motorola CN622"/>
         <xsd:enumeration value="Third-party SIP Device (Basic)"/>
         <xsd:enumeration value="Cisco Unified Personal Communicator"/>
         <xsd:enumeration value="Cisco 7906"/>
         <xsd:enumeration value="Third-party SIP Device (Advanced)"/>
         <xsd:enumeration value="Cisco 7905"/>
         <xsd:enumeration value="Cisco 7920"/>
         <xsd:enumeration value="Cisco 7970"/>
         <xsd:enumeration value="Cisco 7912"/>
         <xsd:enumeration value="Cisco 7902"/>
         <xsd:enumeration value="Cisco IP Communicator"/>
         <xsd:enumeration value="Cisco 7961"/>
         <xsd:enumeration value="Cisco 7936"/>
         <xsd:enumeration value="Analog Phone"/>
         <xsd:enumeration value="ISDN BRI Phone"/>
         <xsd:enumeration value="SCCP gateway virtual phone"/>
         <xsd:enumeration value="IP-STE"/>
      </xsd:restriction>
   </xsd:simpleType>

   <xsd:simpleType name="XMonitor">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="Event Log"/>
         <xsd:enumeration value="Sys Log"/>
         <xsd:enumeration value="AST"/>
         <xsd:enumeration value="SDI"/>
         <xsd:enumeration value="SDL"/>
         <xsd:enumeration value="Data Collector"/>
         <xsd:enumeration value="SNMP Traps"/>
      </xsd:restriction>
   </xsd:simpleType>

   <xsd:simpleType name="XMonthOfYear">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="None"/>
         <xsd:enumeration value="Jan"/>
         <xsd:enumeration value="Feb"/>
         <xsd:enumeration value="Mar"/>
         <xsd:enumeration value="Apr"/>
         <xsd:enumeration value="May"/>
         <xsd:enumeration value="Jun"/>
         <xsd:enumeration value="Jul"/>
         <xsd:enumeration value="Aug"/>
         <xsd:enumeration value="Sep"/>
         <xsd:enumeration value="Oct"/>
         <xsd:enumeration value="Nov"/>
         <xsd:enumeration value="Dec"/>
      </xsd:restriction>
   </xsd:simpleType>

   <xsd:simpleType name="XNSFService">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="ACCUNET Switched Digital Service"/>
         <xsd:enumeration value="Billing Number Only"/>
         <xsd:enumeration value="Billing Number Preferred"/>
         <xsd:enumeration value="Calling Party Number Only"/>
         <xsd:enumeration value="Calling Party Number Preferred"/>
         <xsd:enumeration value="Foreign Exchange"/>
         <xsd:enumeration value="Foreign Exchange Selection"/>
         <xsd:enumeration value="International Long Distance Service"/>
         <xsd:enumeration value="InterLATAOUTWATS"/>
         <xsd:enumeration value="IntraLATAOUTWATS"/>
         <xsd:enumeration value="Long Distance Service"/>
         <xsd:enumeration value="MEGACOM Telecom Service"/>
         <xsd:enumeration value="National ISDN Banded OUTWATS"/>
         <xsd:enumeration value="National ISDN Unbanded OUTWATS"/>
         <xsd:enumeration value="OUTWATS Selection"/>
         <xsd:enumeration value="Private"/>
         <xsd:enumeration value="Private Selection"/>
         <xsd:enumeration value="Software Defined Network"/>
         <xsd:enumeration value="Tie Trunk (Cut-through)"/>
         <xsd:enumeration value="Tie Trunk (Senderized)"/>
         <xsd:enumeration value="Tie Trunk Selection (Cut-through)"/>
         <xsd:enumeration value="Tie Trunk Selection (Senderized)"/>
         <xsd:enumeration value="WATS Band Selection"/>
         <xsd:enumeration value="WATS Band Selection"/>
         <xsd:enumeration value="WATS Maximal Subscribed Band"/>
      </xsd:restriction>
   </xsd:simpleType>

   <xsd:simpleType name="XNetworkLocation">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="OnNet"/>
         <xsd:enumeration value="OffNet"/>
         <xsd:enumeration value="Use System Default"/>
      </xsd:restriction>
   </xsd:simpleType>

   <xsd:simpleType name="XNumberingPlan">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="Cisco CallManager"/>
         <xsd:enumeration value="ISDN"/>
         <xsd:enumeration value="National Standard"/>
         <xsd:enumeration value="Private"/>
         <xsd:enumeration value="Unknown"/>
      </xsd:restriction>
   </xsd:simpleType>

   <xsd:simpleType name="XOperator">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="NOT-SELECTED"/>
         <xsd:enumeration value="EXISTS"/>
         <xsd:enumeration value="DOES-NOT-EXIST"/>
         <xsd:enumeration value="=="/>
      </xsd:restriction>
   </xsd:simpleType>

   <xsd:simpleType name="XPRIChanIE">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="Timeslot Number"/>
         <xsd:enumeration value="Slotmap"/>
         <xsd:enumeration value="Use Number when 1B"/>
         <xsd:enumeration value="Continuous Number"/>
      </xsd:restriction>
   </xsd:simpleType>

   <xsd:simpleType name="XPacketCaptureMode">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="None"/>
         <xsd:enumeration value="Batch Processing Mode"/>
      </xsd:restriction>
   </xsd:simpleType>

   <xsd:simpleType name="XParam">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="boolean"/>
         <xsd:enumeration value="double"/>
         <xsd:enumeration value="long"/>
         <xsd:enumeration value="string"/>
         <xsd:enumeration value="date/time"/>
         <xsd:enumeration value="any digit"/>
         <xsd:enumeration value="digits"/>
         <xsd:enumeration value="timeout"/>
         <xsd:enumeration value="terminating"/>
         <xsd:enumeration value="more digits"/>
      </xsd:restriction>
   </xsd:simpleType>

   <xsd:simpleType name="XPattern">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="Pattern"/>
         <xsd:enumeration value="Plar"/>
      </xsd:restriction>
   </xsd:simpleType>

   <xsd:simpleType name="XPatternPrecedence">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="Flash Override"/>
         <xsd:enumeration value="Flash"/>
         <xsd:enumeration value="Immediate"/>
         <xsd:enumeration value="Priority"/>
         <xsd:enumeration value="Routine"/>
         <xsd:enumeration value="Default"/>
         <xsd:enumeration value="Executive Override"/>
      </xsd:restriction>
   </xsd:simpleType>

   <xsd:simpleType name="XPatternUsage">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="CallPark"/>
         <xsd:enumeration value="Conference"/>
         <xsd:enumeration value="Device"/>
         <xsd:enumeration value="Translation"/>
         <xsd:enumeration value="Call Pick Up Group"/>
         <xsd:enumeration value="Route"/>
         <xsd:enumeration value="Message Waiting"/>
         <xsd:enumeration value="Hunt Pilot"/>
         <xsd:enumeration value="Voice Mail Port"/>
         <xsd:enumeration value="Domain Routing"/>
         <xsd:enumeration value="IPAddress Routing"/>
         <xsd:enumeration value="Device template"/>
      </xsd:restriction>
   </xsd:simpleType>

   <xsd:simpleType name="XPermission">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="NoAccess"/>
         <xsd:enumeration value="ReadOnly"/>
         <xsd:enumeration value="FullAccess"/>
      </xsd:restriction>
   </xsd:simpleType>

   <xsd:simpleType name="XPersonalPhoneNumber">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="Undefined"/>
         <xsd:enumeration value="Home"/>
         <xsd:enumeration value="Work"/>
         <xsd:enumeration value="Mobile"/>
         <xsd:enumeration value="Raw"/>
      </xsd:restriction>
   </xsd:simpleType>

   <xsd:simpleType name="XPhoneTemplateUsage">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="Traditional Phone Template"/>
         <xsd:enumeration value="Side Car 14-Buttons"/>
      </xsd:restriction>
   </xsd:simpleType>

   <xsd:simpleType name="XPilotStation">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="Attendant"/>
         <xsd:enumeration value="User"/>
      </xsd:restriction>
   </xsd:simpleType>

   <xsd:simpleType name="XPluginUsage">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="Application Menu"/>
         <xsd:enumeration value="Installation"/>
         <xsd:enumeration value="User Menu"/>
         <xsd:enumeration value="Telecaster Menu"/>
      </xsd:restriction>
   </xsd:simpleType>

   <xsd:simpleType name="XPreemption">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="Disabled"/>
         <xsd:enumeration value="Forceful"/>
         <xsd:enumeration value="Default"/>
      </xsd:restriction>
   </xsd:simpleType>

   <xsd:simpleType name="XPresentationBit">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="Default"/>
         <xsd:enumeration value="Allowed"/>
         <xsd:enumeration value="Restricted"/>
      </xsd:restriction>
   </xsd:simpleType>

   <xsd:simpleType name="XPriOfNumber">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="Cisco CallManager"/>
         <xsd:enumeration value="Unknown"/>
         <xsd:enumeration value="National"/>
         <xsd:enumeration value="International"/>
         <xsd:enumeration value="Subscriber"/>
      </xsd:restriction>
   </xsd:simpleType>

   <xsd:simpleType name="XPriProtocol">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="PRI 4ESS"/>
         <xsd:enumeration value="PRI 5E8"/>
         <xsd:enumeration value="PRI 5E8 TELEOS"/>
         <xsd:enumeration value="PRI 5E8 INTECOME"/>
         <xsd:enumeration value="PRI 5E9"/>
         <xsd:enumeration value="PRI DMS-100"/>
         <xsd:enumeration value="PRI DMS-250"/>
         <xsd:enumeration value="PRI EURO"/>
         <xsd:enumeration value="PRI NI2"/>
         <xsd:enumeration value="PRI AUSTRALIAN"/>
         <xsd:enumeration value="PRI 5E8 CUSTOM"/>
         <xsd:enumeration value="PRI ETSI SC"/>
         <xsd:enumeration value="PRI NTT"/>
         <xsd:enumeration value="PRI ISO QSIG T1"/>
         <xsd:enumeration value="PRI ISO QSIG E1"/>
      </xsd:restriction>
   </xsd:simpleType>

   <xsd:simpleType name="XProduct">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="Pilot"/>
         <xsd:enumeration value="Cisco Catalyst 6000 T1 VoIP Gateway"/>
         <xsd:enumeration value="Cisco Catalyst 6000 E1 VoIP Gateway"/>
         <xsd:enumeration value="Cisco Catalyst 6000 24 port FXS Gateway"/>
         <xsd:enumeration value="Cisco Catalyst 6000 12 port FXO Gateway"/>
         <xsd:enumeration value="Cisco DT-24+ Gateway"/>
         <xsd:enumeration value="Cisco DE-30+ Gateway"/>
         <xsd:enumeration value="H.323 Client"/>
         <xsd:enumeration value="H.323 Gateway"/>
         <xsd:enumeration value="Cisco MGCP FXO Port"/>
         <xsd:enumeration value="Cisco MGCP FXS Port"/>
         <xsd:enumeration value="Cisco 12 SP+"/>
         <xsd:enumeration value="Cisco 12 SP"/>
         <xsd:enumeration value="Cisco 12 S"/>
         <xsd:enumeration value="Cisco 30 SP+"/>
         <xsd:enumeration value="Cisco 30 VIP"/>
         <xsd:enumeration value="CTI Port"/>
         <xsd:enumeration value="Cisco CallManager Attendant Console Server"/>
         <xsd:enumeration value="Cisco Voice Mail Port"/>
         <xsd:enumeration value="Cisco Conference Bridge Software"/>
         <xsd:enumeration value="Cisco Conference Bridge Hardware"/>
         <xsd:enumeration value="Cisco Media Termination Point Software"/>
         <xsd:enumeration value="Cisco Media Termination Point Hardware"/>
         <xsd:enumeration value="Cisco 7935"/>
         <xsd:enumeration value="SCCP Device"/>
         <xsd:enumeration value="Cisco 7910"/>
         <xsd:enumeration value="Cisco 7960"/>
         <xsd:enumeration value="Cisco 7940"/>
         <xsd:enumeration value="Route List"/>
         <xsd:enumeration value="Unknown"/>
         <xsd:enumeration value="Load Simulator"/>
         <xsd:enumeration value="Gatekeeper"/>
         <xsd:enumeration value="NM-1V"/>
         <xsd:enumeration value="NM-2V"/>
         <xsd:enumeration value="Cisco VG200"/>
         <xsd:enumeration value="Cisco 26XX"/>
         <xsd:enumeration value="Cisco 362X"/>
         <xsd:enumeration value="Cisco 364X"/>
         <xsd:enumeration value="Cisco 366X"/>
         <xsd:enumeration value="CTI Route Point"/>
         <xsd:enumeration value="Music On Hold"/>
         <xsd:enumeration value="Cisco MGCP T1 Port"/>
         <xsd:enumeration value="NM-HDV"/>
         <xsd:enumeration value="VIC_SLOT"/>
         <xsd:enumeration value="Cisco MGCP E1 Port"/>
         <xsd:enumeration value="VWIC_SLOT"/>
         <xsd:enumeration value="FLEX_SLOT"/>
         <xsd:enumeration value="Cisco Catalyst 4224 Voice Gateway Switch"/>
         <xsd:enumeration value="Cisco Catalyst 4000 Access Gateway  Module"/>
         <xsd:enumeration value="Cisco IOS Conference Bridge"/>
         <xsd:enumeration value="Cisco IOS Media Termination Point"/>
         <xsd:enumeration value="Cisco  IAD2400"/>
         <xsd:enumeration value="IAD2400_ANALOG"/>
         <xsd:enumeration value="IAD2400_DIGITAL"/>
         <xsd:enumeration value="Cisco VGC Phone"/>
         <xsd:enumeration value="Cisco VG248 Gateway"/>
         <xsd:enumeration value="VGC Port"/>
         <xsd:enumeration value="Cisco VGC Virtual Phone"/>
         <xsd:enumeration value="Cisco ATA 186"/>
         <xsd:enumeration value="H.225 Trunk (Gatekeeper Controlled)"/>
         <xsd:enumeration value="Inter-Cluster Trunk (Gatekeeper Controlled)"/>
         <xsd:enumeration value="Inter-Cluster Trunk (Non-Gatekeeper Controlled)"/>
         <xsd:enumeration value="Communication Media Module"/>
         <xsd:enumeration value="WS-X6600"/>
         <xsd:enumeration value="AIM-VOICE-30"/>
         <xsd:enumeration value="NM-HDA"/>
         <xsd:enumeration value="PA-VXA"/>
         <xsd:enumeration value="PA-VXB"/>
         <xsd:enumeration value="PA-VXC"/>
         <xsd:enumeration value="PA-MCX"/>
         <xsd:enumeration value="Annunciator"/>
         <xsd:enumeration value="Cisco MGCP BRI Port"/>
         <xsd:enumeration value="NM-HD-1V"/>
         <xsd:enumeration value="NM-HD-2V"/>
         <xsd:enumeration value="NM-HD-2VE"/>
         <xsd:enumeration value="SIP Trunk"/>
         <xsd:enumeration value="Cisco Conference Bridge (WS-SVC-CMM)"/>
         <xsd:enumeration value="Cisco Media Server (WS-SVC-CMM-MS)"/>
         <xsd:enumeration value="Cisco Media Termination Point (WS-SVC-CMM)"/>
         <xsd:enumeration value="Cisco IOS Enhanced Software Media Termination Point"/>
         <xsd:enumeration value="7914 14-Button Line Expansion Module"/>
         <xsd:enumeration value="Cisco IOS Enhanced Conference Bridge"/>
         <xsd:enumeration value="Cisco IOS Enhanced Media Termination Point"/>
         <xsd:enumeration value="Cisco Video Conference Bridge(IPVC-35xx)"/>
         <xsd:enumeration value="Hunt List"/>
         <xsd:enumeration value="SIP WSM Connection"/>
         <xsd:enumeration value="Cisco 7941"/>
         <xsd:enumeration value="Cisco 7971"/>
         <xsd:enumeration value="Cisco 7985"/>
         <xsd:enumeration value="Cisco 7911"/>
         <xsd:enumeration value="Cisco 7961G-GE"/>
         <xsd:enumeration value="Cisco 7941G-GE"/>
         <xsd:enumeration value="Motorola CN622"/>
         <xsd:enumeration value="Third-party SIP Device (Basic)"/>
         <xsd:enumeration value="Cisco Unified Personal Communicator"/>
         <xsd:enumeration value="Cisco 7906"/>
         <xsd:enumeration value="Third-party SIP Device (Advanced)"/>
         <xsd:enumeration value="WS-SVC-CMM-MS"/>
         <xsd:enumeration value="NM-4VWIC-MBRD"/>
         <xsd:enumeration value="VNM-HDA"/>
         <xsd:enumeration value="NM-HDV2-0PORT"/>
         <xsd:enumeration value="NM-HDV2-1PORT"/>
         <xsd:enumeration value="NM-HDV2-2PORT"/>
         <xsd:enumeration value="Cisco 3745"/>
         <xsd:enumeration value="Cisco 3725"/>
         <xsd:enumeration value="Cisco 7905"/>
         <xsd:enumeration value="Cisco 7920"/>
         <xsd:enumeration value="Cisco 269X"/>
         <xsd:enumeration value="Cisco 7970"/>
         <xsd:enumeration value="Cisco 1760"/>
         <xsd:enumeration value="Cisco 1751"/>
         <xsd:enumeration value="Cisco 7912"/>
         <xsd:enumeration value="Cisco 7902"/>
         <xsd:enumeration value="VG224"/>
         <xsd:enumeration value="Cisco 2821"/>
         <xsd:enumeration value="Cisco IP Communicator"/>
         <xsd:enumeration value="Cisco 7961"/>
         <xsd:enumeration value="Cisco 7936"/>
         <xsd:enumeration value="Cisco 3825"/>
         <xsd:enumeration value="Cisco 3845"/>
         <xsd:enumeration value="Cisco 1880"/>
         <xsd:enumeration value="Cisco 2811"/>
         <xsd:enumeration value="Cisco 2851"/>
         <xsd:enumeration value="Analog Phone"/>
         <xsd:enumeration value="ISDN BRI Phone"/>
         <xsd:enumeration value="SCCP gateway virtual phone"/>
         <xsd:enumeration value="IP-STE"/>
         <xsd:enumeration value="Cisco 2801"/>
      </xsd:restriction>
   </xsd:simpleType>

   <xsd:simpleType name="XProductConfig">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="CallingPartySelection"/>
         <xsd:enumeration value="ClockReference"/>
         <xsd:enumeration value="CSUParam"/>
         <xsd:enumeration value="DeviceProtocol"/>
         <xsd:enumeration value="DigitSending"/>
         <xsd:enumeration value="PriProtocolT1"/>
         <xsd:enumeration value="ProtocolSide"/>
         <xsd:enumeration value="StartDialProtocol"/>
         <xsd:enumeration value="Trunk"/>
         <xsd:enumeration value="ZeroSuppressionPri"/>
         <xsd:enumeration value="ZeroSuppressionT1"/>
         <xsd:enumeration value="FramingPRI"/>
         <xsd:enumeration value="FramingT1"/>
         <xsd:enumeration value="ZeroSuppressionE1"/>
         <xsd:enumeration value="MGCPCompatibleModules"/>
         <xsd:enumeration value="MGCPSlotModuleMap"/>
         <xsd:enumeration value="MGCPModuleVicMap"/>
         <xsd:enumeration value="PriProtocolE1"/>
         <xsd:enumeration value="NetworkLocale"/>
         <xsd:enumeration value="Encode"/>
      </xsd:restriction>
   </xsd:simpleType>

   <xsd:simpleType name="XProtocolSide">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="Network"/>
         <xsd:enumeration value="User"/>
      </xsd:restriction>
   </xsd:simpleType>

   <xsd:simpleType name="XQSIG">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="Not Initialized"/>
         <xsd:enumeration value="All PRI QSIG"/>
         <xsd:enumeration value="Miscible Mix"/>
         <xsd:enumeration value="H.323 Gateways"/>
         <xsd:enumeration value="Mixed non-QSIG"/>
         <xsd:enumeration value="Invalid group configuration"/>
         <xsd:enumeration value="All SIP"/>
         <xsd:enumeration value="Mixed SIP"/>
      </xsd:restriction>
   </xsd:simpleType>

   <xsd:simpleType name="XReleaseCauseValue">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="No Error"/>
         <xsd:enumeration value="Unallocated Number"/>
         <xsd:enumeration value="Call Rejected"/>
         <xsd:enumeration value="Number Changed"/>
         <xsd:enumeration value="Invalid Number Format"/>
         <xsd:enumeration value="Precedence Level Exceeded"/>
      </xsd:restriction>
   </xsd:simpleType>

   <xsd:simpleType name="XReset">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="Reset"/>
         <xsd:enumeration value="Restart"/>
      </xsd:restriction>
   </xsd:simpleType>

   <xsd:simpleType name="XResetHandShake">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="new"/>
         <xsd:enumeration value="done"/>
      </xsd:restriction>
   </xsd:simpleType>

   <xsd:simpleType name="XResource">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="AAR Group web pages"/>
         <xsd:enumeration value="Annunciator web pages"/>
         <xsd:enumeration value="Application Dial Rules web pages"/>
         <xsd:enumeration value="CallManager web pages"/>
         <xsd:enumeration value="CallManager Group web pages"/>
         <xsd:enumeration value="Call Park web pages"/>
         <xsd:enumeration value="Call Pickup web pages"/>
         <xsd:enumeration value="CallManager Attendant Console Pilot Point web pages"/>
         <xsd:enumeration value="CallManager Attendant Console User web pages"/>
         <xsd:enumeration value="IPMA Wizard web pages"/>
         <xsd:enumeration value="Conference Bridge web pages"/>
         <xsd:enumeration value="Calling Search Space web pages"/>
         <xsd:enumeration value="CTI Route Point web pages"/>
         <xsd:enumeration value="Date/Time Group web pages"/>
         <xsd:enumeration value="Default Device Profile web pages"/>
         <xsd:enumeration value="Device Default web pages"/>
         <xsd:enumeration value="Device Pool web pages"/>
         <xsd:enumeration value="Device Profile web pages"/>
         <xsd:enumeration value="Directory Number web pages"/>
         <xsd:enumeration value="Firmware Load web pages"/>
         <xsd:enumeration value="Gate Keeper web pages"/>
         <xsd:enumeration value="Gateway web pages"/>
         <xsd:enumeration value="Line Group web pages"/>
         <xsd:enumeration value="Location web pages"/>
         <xsd:enumeration value="Meet Me web pages"/>
         <xsd:enumeration value="Message Waiting web pages"/>
         <xsd:enumeration value="MOH Audio Source web pages"/>
         <xsd:enumeration value="MOH Server web pages"/>
         <xsd:enumeration value="Media Resource Group web pages"/>
         <xsd:enumeration value="Media Resource Group List web pages"/>
         <xsd:enumeration value="Media Termination Point web pages"/>
         <xsd:enumeration value="Route Partition web page"/>
         <xsd:enumeration value="Phone web pages"/>
         <xsd:enumeration value="Phone Services web pages"/>
         <xsd:enumeration value="Phone Button Template web pages"/>
         <xsd:enumeration value="Plugin web pages"/>
         <xsd:enumeration value="Region  web pages"/>
         <xsd:enumeration value="Route Filter web pages"/>
         <xsd:enumeration value="Route Group web pages"/>
         <xsd:enumeration value="Route Hunt List web pages"/>
         <xsd:enumeration value="Route Pattern web  pages"/>
         <xsd:enumeration value="Route Plan Report web  pages"/>
         <xsd:enumeration value="Server web pages"/>
         <xsd:enumeration value="Service Parameter web pages"/>
         <xsd:enumeration value="Softkey Template web pages"/>
         <xsd:enumeration value="SRST web pages"/>
         <xsd:enumeration value="Transcoder web pages"/>
         <xsd:enumeration value="Translation Pattern web pages"/>
         <xsd:enumeration value="Trunk web pages"/>
         <xsd:enumeration value="User web pages"/>
         <xsd:enumeration value="Voice Mail Pilot web pages"/>
         <xsd:enumeration value="Voice Mail Port web pages"/>
         <xsd:enumeration value="Voice Mail Port Wizard web pages"/>
         <xsd:enumeration value="Voice Mail Profile web pages"/>
         <xsd:enumeration value="Voice Mail web pages"/>
         <xsd:enumeration value="Alarm Configuration web page"/>
         <xsd:enumeration value="Alarm Definition web page"/>
         <xsd:enumeration value="Trace Configuration web page"/>
         <xsd:enumeration value="Troubleshoot Trace Settings web page"/>
         <xsd:enumeration value="Service Activation web page"/>
         <xsd:enumeration value="Control Center - Feature Services web page"/>
         <xsd:enumeration value="Control Center - Network Services web page"/>
         <xsd:enumeration value="Serviceability Report Archive"/>
         <xsd:enumeration value="User Group web pages"/>
         <xsd:enumeration value="Role web pages"/>
         <xsd:enumeration value="Security Setting web pages"/>
         <xsd:enumeration value="Enterprise Parameters web pages"/>
         <xsd:enumeration value="LDAP System Configuration Page"/>
         <xsd:enumeration value="LDAP Synchronization Configuration Pages"/>
         <xsd:enumeration value="LDAP Authentication Configuration Page"/>
         <xsd:enumeration value="MLPP Domain web pages"/>
         <xsd:enumeration value="SNMP->V1/V2c->Configuration->Community String web page"/>
         <xsd:enumeration value="SNMP->V1/V2c->Configuration->Notification Destination web page"/>
         <xsd:enumeration value="SNMP->V3 Configuration->User web page"/>
         <xsd:enumeration value="SNMP->V3 Configuration->Notification Destination web page"/>
         <xsd:enumeration value="SNMP->system Group Configuration->MIB2 System Group Configuration web page"/>
         <xsd:enumeration value="Log Partition Monitoring->Configuration web page"/>
         <xsd:enumeration value="Line Appearance web pages"/>
         <xsd:enumeration value="CTI Application"/>
         <xsd:enumeration value="CTI Calling Number"/>
         <xsd:enumeration value="CTI Call Park"/>
         <xsd:enumeration value="CTI All Devices"/>
         <xsd:enumeration value="AXL Database API"/>
         <xsd:enumeration value="DHCP Server Web Pages"/>
         <xsd:enumeration value="DHCP Subnet Web Pages"/>
         <xsd:enumeration value="Application User Web Pages"/>
         <xsd:enumeration value="Speed Dial Page"/>
         <xsd:enumeration value="Service Url Page"/>
         <xsd:enumeration value="Phone Device Profile Page"/>
         <xsd:enumeration value="Phone Service Subscribe Page"/>
         <xsd:enumeration value="DRF Schedule Page"/>
         <xsd:enumeration value="DRF Show Status Page"/>
         <xsd:enumeration value="DRF Show Dependency Page"/>
         <xsd:enumeration value="DRF Restore Warning Page"/>
         <xsd:enumeration value="Real Time Monitoring Tool"/>
         <xsd:enumeration value="SOAP Realtime Informations and Control Center APIs"/>
         <xsd:enumeration value="SOAP Performance Informations APIs"/>
         <xsd:enumeration value="SOAP Log Collection APIs"/>
         <xsd:enumeration value="SOAP CDR on Demand APIs"/>
         <xsd:enumeration value="SOAP Backup and Restore APIs"/>
         <xsd:enumeration value="Fac Info"/>
         <xsd:enumeration value="NTP Server"/>
         <xsd:enumeration value="CMC Info"/>
         <xsd:enumeration value="Time Period"/>
         <xsd:enumeration value="Time Schedule"/>
         <xsd:enumeration value="Sip Profile"/>
         <xsd:enumeration value="Hunt List"/>
         <xsd:enumeration value="Route List"/>
         <xsd:enumeration value="SIP Phone Security Profile"/>
         <xsd:enumeration value="SIP Trunk Security Profile"/>
         <xsd:enumeration value="SCCP Security Profile"/>
         <xsd:enumeration value="Hunt Pilot"/>
         <xsd:enumeration value="Route Pattern2"/>
         <xsd:enumeration value="Bulk Job Scheduler pages"/>
         <xsd:enumeration value="User and Phone add"/>
         <xsd:enumeration value="Dial Rules Info"/>
         <xsd:enumeration value="SIP Route Pattern"/>
         <xsd:enumeration value="Presence Group"/>
         <xsd:enumeration value="Busy Lamp Field"/>
         <xsd:enumeration value="Dial Rule Pattern Info"/>
         <xsd:enumeration value="Pattern Parameter Info"/>
         <xsd:enumeration value="Bulk File Upload Pages"/>
         <xsd:enumeration value="CallManager Attendant Console User File Upload"/>
         <xsd:enumeration value="Directory Dial Rules pages"/>
         <xsd:enumeration value="Application User CAPF"/>
         <xsd:enumeration value="End User CAPF"/>
         <xsd:enumeration value="SIP Realm"/>
         <xsd:enumeration value="Gateway Security Profile"/>
         <xsd:enumeration value="H323 Security Profile"/>
         <xsd:enumeration value="Application Server"/>
         <xsd:enumeration value="SOAP Control Center APIs"/>
         <xsd:enumeration value="Trace Collection Tool"/>
         <xsd:enumeration value="Licensing Report"/>
         <xsd:enumeration value="Common Phone Profile"/>
         <xsd:enumeration value="EM Proxy Rights"/>
         <xsd:enumeration value="Licensing Calculator"/>
         <xsd:enumeration value="Licensing File Upload"/>
         <xsd:enumeration value="CCMUser: Device"/>
         <xsd:enumeration value="CCMUser: Line Settings"/>
         <xsd:enumeration value="CCMUser: Speed Dial User"/>
         <xsd:enumeration value="CCMUser: IP Phone Services"/>
         <xsd:enumeration value="CCMUser: Service URL"/>
         <xsd:enumeration value="CCMUser: User Settings"/>
         <xsd:enumeration value="CCMUser: Directory"/>
         <xsd:enumeration value="CCMUser: Personal Address Book"/>
         <xsd:enumeration value="CCMUser: Fast Dials"/>
         <xsd:enumeration value="Reorder Info"/>
         <xsd:enumeration value="Dial Plan"/>
         <xsd:enumeration value="Add Unity User"/>
         <xsd:enumeration value="Super Copy Info"/>
         <xsd:enumeration value="Fixed MOH Audio Source"/>
         <xsd:enumeration value="SRST Certificate"/>
         <xsd:enumeration value="RTMT->Profile Saving"/>
         <xsd:enumeration value="RTMT->Alert Config"/>
         <xsd:enumeration value="MOH Audio Source Management web pages"/>
         <xsd:enumeration value="Bulk Phone Template"/>
         <xsd:enumeration value="Bulk Phone File Format"/>
         <xsd:enumeration value="Bulk Validate Phones"/>
         <xsd:enumeration value="Bulk Insert Phones"/>
         <xsd:enumeration value="Bulk Update Phones"/>
         <xsd:enumeration value="Bulk Delete Phones"/>
         <xsd:enumeration value="Bulk Export Phones"/>
         <xsd:enumeration value="Bulk Add/Update Phones"/>
         <xsd:enumeration value="Bulk Reset/Restart Phones"/>
         <xsd:enumeration value="Bulk Generate Phone Reports"/>
         <xsd:enumeration value="Bulk Migrate Phones"/>
         <xsd:enumeration value="Bulk User Template"/>
         <xsd:enumeration value="Bulk Insert Users"/>
         <xsd:enumeration value="Bulk Update Users"/>
         <xsd:enumeration value="Bulk Delete Users"/>
         <xsd:enumeration value="Bulk Export Users"/>
         <xsd:enumeration value="Bulk Reset Password/PIN"/>
         <xsd:enumeration value="Bulk Generate User Reports"/>
         <xsd:enumeration value="Bulk Phone  Users File Format"/>
         <xsd:enumeration value="Bulk Validate Phones/Users"/>
         <xsd:enumeration value="Bulk Insert Phones with Users"/>
         <xsd:enumeration value="Bulk Insert IPMA Managers/Assistants"/>
         <xsd:enumeration value="Bulk Delete IPMA Managers/Assistants"/>
         <xsd:enumeration value="Bulk Delete IPMA Managers"/>
         <xsd:enumeration value="Bulk Delete IPMA Assistants"/>
         <xsd:enumeration value="Bulk Generate IPMA Manager Reports"/>
         <xsd:enumeration value="Bulk Generate IPMA Assistant Reports"/>
         <xsd:enumeration value="Bulk UDP Template"/>
         <xsd:enumeration value="Bulk UDP File Format"/>
         <xsd:enumeration value="Bulk Validate UDP"/>
         <xsd:enumeration value="Bulk Insert UDP"/>
         <xsd:enumeration value="Bulk Delete UDP"/>
         <xsd:enumeration value="Bulk Export UDP"/>
         <xsd:enumeration value="Bulk Add/Update Lines"/>
         <xsd:enumeration value="Bulk Generate UDP Reports"/>
         <xsd:enumeration value="Bulk Gateway Template"/>
         <xsd:enumeration value="Bulk Insert Gateways"/>
         <xsd:enumeration value="Bulk Delete Gateways"/>
         <xsd:enumeration value="Bulk Generate Gateway Reports"/>
         <xsd:enumeration value="Bulk Insert Forced Authorization Codes"/>
         <xsd:enumeration value="Bulk Delete Forced Authorization Codes"/>
         <xsd:enumeration value="Bulk Insert Client Matter Codes"/>
         <xsd:enumeration value="Bulk Delete Client Matter Codes"/>
         <xsd:enumeration value="Bulk Insert Call Pickup Group"/>
         <xsd:enumeration value="Bulk Delete Call Pickup Group"/>
         <xsd:enumeration value="Bulk Secure TAPS"/>
         <xsd:enumeration value="Bulk User Locales for TAPS"/>
         <xsd:enumeration value="Bulk View TAPS Log File"/>
         <xsd:enumeration value="Phone Security Profile"/>
         <xsd:enumeration value="Cisco UPS Capabilities Assignment"/>
         <xsd:enumeration value="Bulk CUPS User Page"/>
      </xsd:restriction>
   </xsd:simpleType>

   <xsd:simpleType name="XResourceAction">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="read"/>
         <xsd:enumeration value="update"/>
         <xsd:enumeration value="read"/>
         <xsd:enumeration value="update"/>
         <xsd:enumeration value="read"/>
         <xsd:enumeration value="update"/>
         <xsd:enumeration value="read"/>
         <xsd:enumeration value="update"/>
         <xsd:enumeration value="read"/>
         <xsd:enumeration value="update"/>
         <xsd:enumeration value="read"/>
         <xsd:enumeration value="update"/>
         <xsd:enumeration value="read"/>
         <xsd:enumeration value="update"/>
         <xsd:enumeration value="read"/>
         <xsd:enumeration value="update"/>
         <xsd:enumeration value="read"/>
         <xsd:enumeration value="update"/>
         <xsd:enumeration value="read"/>
         <xsd:enumeration value="update"/>
         <xsd:enumeration value="read"/>
         <xsd:enumeration value="update"/>
         <xsd:enumeration value="read"/>
         <xsd:enumeration value="update"/>
         <xsd:enumeration value="read"/>
         <xsd:enumeration value="update"/>
         <xsd:enumeration value="read"/>
         <xsd:enumeration value="update"/>
         <xsd:enumeration value="read"/>
         <xsd:enumeration value="update"/>
         <xsd:enumeration value="read"/>
         <xsd:enumeration value="update"/>
         <xsd:enumeration value="read"/>
         <xsd:enumeration value="update"/>
         <xsd:enumeration value="read"/>
         <xsd:enumeration value="update"/>
         <xsd:enumeration value="read"/>
         <xsd:enumeration value="update"/>
         <xsd:enumeration value="read"/>
         <xsd:enumeration value="update"/>
         <xsd:enumeration value="read"/>
         <xsd:enumeration value="update"/>
         <xsd:enumeration value="read"/>
         <xsd:enumeration value="update"/>
         <xsd:enumeration value="read"/>
         <xsd:enumeration value="update"/>
         <xsd:enumeration value="read"/>
         <xsd:enumeration value="update"/>
         <xsd:enumeration value="read"/>
         <xsd:enumeration value="update"/>
         <xsd:enumeration value="read"/>
         <xsd:enumeration value="update"/>
         <xsd:enumeration value="read"/>
         <xsd:enumeration value="update"/>
         <xsd:enumeration value="read"/>
         <xsd:enumeration value="update"/>
         <xsd:enumeration value="read"/>
         <xsd:enumeration value="update"/>
         <xsd:enumeration value="read"/>
         <xsd:enumeration value="update"/>
         <xsd:enumeration value="read"/>
         <xsd:enumeration value="update"/>
         <xsd:enumeration value="read"/>
         <xsd:enumeration value="update"/>
         <xsd:enumeration value="read"/>
         <xsd:enumeration value="update"/>
         <xsd:enumeration value="read"/>
         <xsd:enumeration value="update"/>
         <xsd:enumeration value="read"/>
         <xsd:enumeration value="update"/>
         <xsd:enumeration value="read"/>
         <xsd:enumeration value="update"/>
         <xsd:enumeration value="read"/>
         <xsd:enumeration value="update"/>
         <xsd:enumeration value="read"/>
         <xsd:enumeration value="update"/>
         <xsd:enumeration value="read"/>
         <xsd:enumeration value="update"/>
         <xsd:enumeration value="read"/>
         <xsd:enumeration value="update"/>
         <xsd:enumeration value="read"/>
         <xsd:enumeration value="update"/>
         <xsd:enumeration value="read"/>
         <xsd:enumeration value="update"/>
         <xsd:enumeration value="read"/>
         <xsd:enumeration value="update"/>
         <xsd:enumeration value="read"/>
         <xsd:enumeration value="update"/>
         <xsd:enumeration value="read"/>
         <xsd:enumeration value="update"/>
         <xsd:enumeration value="read"/>
         <xsd:enumeration value="update"/>
         <xsd:enumeration value="read"/>
         <xsd:enumeration value="update"/>
         <xsd:enumeration value="read"/>
         <xsd:enumeration value="update"/>
         <xsd:enumeration value="read"/>
         <xsd:enumeration value="update"/>
         <xsd:enumeration value="read"/>
         <xsd:enumeration value="update"/>
         <xsd:enumeration value="read"/>
         <xsd:enumeration value="update"/>
         <xsd:enumeration value="read"/>
         <xsd:enumeration value="update"/>
         <xsd:enumeration value="read"/>
         <xsd:enumeration value="update"/>
         <xsd:enumeration value="read"/>
         <xsd:enumeration value="update"/>
         <xsd:enumeration value="read"/>
         <xsd:enumeration value="update"/>
         <xsd:enumeration value="read"/>
         <xsd:enumeration value="update"/>
         <xsd:enumeration value="read"/>
         <xsd:enumeration value="update"/>
         <xsd:enumeration value="read"/>
         <xsd:enumeration value="update"/>
         <xsd:enumeration value="read"/>
         <xsd:enumeration value="update"/>
         <xsd:enumeration value="read"/>
         <xsd:enumeration value="update"/>
         <xsd:enumeration value="read"/>
         <xsd:enumeration value="update"/>
         <xsd:enumeration value="read"/>
         <xsd:enumeration value="update"/>
         <xsd:enumeration value="read"/>
         <xsd:enumeration value="update"/>
         <xsd:enumeration value="read"/>
         <xsd:enumeration value="update"/>
         <xsd:enumeration value="read"/>
         <xsd:enumeration value="update"/>
         <xsd:enumeration value="read"/>
         <xsd:enumeration value="update"/>
         <xsd:enumeration value="read"/>
         <xsd:enumeration value="update"/>
         <xsd:enumeration value="read"/>
         <xsd:enumeration value="update"/>
         <xsd:enumeration value="read"/>
         <xsd:enumeration value="update"/>
         <xsd:enumeration value="read"/>
         <xsd:enumeration value="update"/>
         <xsd:enumeration value="read"/>
         <xsd:enumeration value="update"/>
         <xsd:enumeration value="read"/>
         <xsd:enumeration value="update"/>
         <xsd:enumeration value="read"/>
         <xsd:enumeration value="update"/>
         <xsd:enumeration value="read"/>
         <xsd:enumeration value="update"/>
         <xsd:enumeration value="read"/>
         <xsd:enumeration value="update"/>
         <xsd:enumeration value="read"/>
         <xsd:enumeration value="update"/>
         <xsd:enumeration value="read"/>
         <xsd:enumeration value="update"/>
         <xsd:enumeration value="read"/>
         <xsd:enumeration value="update"/>
         <xsd:enumeration value="enabled"/>
         <xsd:enumeration value="allow modification"/>
         <xsd:enumeration value="allow retrieval"/>
         <xsd:enumeration value="allow control of all devices"/>
         <xsd:enumeration value="read"/>
         <xsd:enumeration value="update"/>
         <xsd:enumeration value="read"/>
         <xsd:enumeration value="update"/>
         <xsd:enumeration value="read"/>
         <xsd:enumeration value="update"/>
         <xsd:enumeration value="read"/>
         <xsd:enumeration value="update"/>
         <xsd:enumeration value="read"/>
         <xsd:enumeration value="update"/>
         <xsd:enumeration value="read"/>
         <xsd:enumeration value="update"/>
         <xsd:enumeration value="read"/>
         <xsd:enumeration value="update"/>
         <xsd:enumeration value="Allow to use API"/>
         <xsd:enumeration value="read"/>
         <xsd:enumeration value="update"/>
         <xsd:enumeration value="read"/>
         <xsd:enumeration value="update"/>
         <xsd:enumeration value="read"/>
         <xsd:enumeration value="update"/>
         <xsd:enumeration value="read"/>
         <xsd:enumeration value="update"/>
         <xsd:enumeration value="read"/>
         <xsd:enumeration value="update"/>
         <xsd:enumeration value="read"/>
         <xsd:enumeration value="update"/>
         <xsd:enumeration value="read"/>
         <xsd:enumeration value="update"/>
         <xsd:enumeration value="read"/>
         <xsd:enumeration value="update"/>
         <xsd:enumeration value="read"/>
         <xsd:enumeration value="update"/>
         <xsd:enumeration value="read"/>
         <xsd:enumeration value="update"/>
         <xsd:enumeration value="read"/>
         <xsd:enumeration value="update"/>
         <xsd:enumeration value="read"/>
         <xsd:enumeration value="update"/>
         <xsd:enumeration value="read"/>
         <xsd:enumeration value="update"/>
         <xsd:enumeration value="read"/>
         <xsd:enumeration value="update"/>
         <xsd:enumeration value="read"/>
         <xsd:enumeration value="update"/>
         <xsd:enumeration value="read"/>
         <xsd:enumeration value="update"/>
         <xsd:enumeration value="read"/>
         <xsd:enumeration value="update"/>
         <xsd:enumeration value="read"/>
         <xsd:enumeration value="update"/>
         <xsd:enumeration value="read"/>
         <xsd:enumeration value="update"/>
         <xsd:enumeration value="read"/>
         <xsd:enumeration value="update"/>
         <xsd:enumeration value="read"/>
         <xsd:enumeration value="update"/>
         <xsd:enumeration value="read"/>
         <xsd:enumeration value="update"/>
         <xsd:enumeration value="read"/>
         <xsd:enumeration value="update"/>
         <xsd:enumeration value="read"/>
         <xsd:enumeration value="update"/>
         <xsd:enumeration value="read"/>
         <xsd:enumeration value="update"/>
         <xsd:enumeration value="update"/>
         <xsd:enumeration value="read"/>
         <xsd:enumeration value="update"/>
         <xsd:enumeration value="read"/>
         <xsd:enumeration value="update"/>
         <xsd:enumeration value="read"/>
         <xsd:enumeration value="update"/>
         <xsd:enumeration value="read"/>
         <xsd:enumeration value="update"/>
         <xsd:enumeration value="read"/>
         <xsd:enumeration value="update"/>
         <xsd:enumeration value="read"/>
         <xsd:enumeration value="update"/>
         <xsd:enumeration value="read"/>
         <xsd:enumeration value="update"/>
         <xsd:enumeration value="read"/>
         <xsd:enumeration value="update"/>
         <xsd:enumeration value="read"/>
         <xsd:enumeration value="update"/>
         <xsd:enumeration value="read"/>
         <xsd:enumeration value="update"/>
         <xsd:enumeration value="read"/>
         <xsd:enumeration value="update"/>
         <xsd:enumeration value="read"/>
         <xsd:enumeration value="allow"/>
         <xsd:enumeration value="enable CTI security"/>
         <xsd:enumeration value="enable CTI SRTP key distribution"/>
         <xsd:enumeration value="read"/>
         <xsd:enumeration value="update"/>
         <xsd:enumeration value="read"/>
         <xsd:enumeration value="update"/>
         <xsd:enumeration value="read"/>
         <xsd:enumeration value="update"/>
         <xsd:enumeration value="read"/>
         <xsd:enumeration value="update"/>
         <xsd:enumeration value="read"/>
         <xsd:enumeration value="update"/>
         <xsd:enumeration value="read"/>
         <xsd:enumeration value="update"/>
         <xsd:enumeration value="read"/>
         <xsd:enumeration value="update"/>
         <xsd:enumeration value="read"/>
         <xsd:enumeration value="update"/>
         <xsd:enumeration value="read"/>
         <xsd:enumeration value="update"/>
         <xsd:enumeration value="read"/>
         <xsd:enumeration value="update"/>
         <xsd:enumeration value="read"/>
         <xsd:enumeration value="update"/>
         <xsd:enumeration value="read"/>
         <xsd:enumeration value="update"/>
         <xsd:enumeration value="read"/>
         <xsd:enumeration value="update"/>
         <xsd:enumeration value="read"/>
         <xsd:enumeration value="update"/>
         <xsd:enumeration value="read"/>
         <xsd:enumeration value="update"/>
         <xsd:enumeration value="read"/>
         <xsd:enumeration value="update"/>
         <xsd:enumeration value="read"/>
         <xsd:enumeration value="update"/>
         <xsd:enumeration value="read"/>
         <xsd:enumeration value="update"/>
         <xsd:enumeration value="read"/>
         <xsd:enumeration value="update"/>
         <xsd:enumeration value="read"/>
         <xsd:enumeration value="update"/>
         <xsd:enumeration value="read"/>
         <xsd:enumeration value="update"/>
         <xsd:enumeration value="read"/>
         <xsd:enumeration value="update"/>
         <xsd:enumeration value="read"/>
         <xsd:enumeration value="update"/>
         <xsd:enumeration value="read"/>
         <xsd:enumeration value="update"/>
         <xsd:enumeration value="read"/>
         <xsd:enumeration value="update"/>
         <xsd:enumeration value="read"/>
         <xsd:enumeration value="update"/>
         <xsd:enumeration value="read"/>
         <xsd:enumeration value="update"/>
         <xsd:enumeration value="read"/>
         <xsd:enumeration value="update"/>
         <xsd:enumeration value="read"/>
         <xsd:enumeration value="update"/>
         <xsd:enumeration value="read"/>
         <xsd:enumeration value="update"/>
         <xsd:enumeration value="read"/>
         <xsd:enumeration value="update"/>
         <xsd:enumeration value="read"/>
         <xsd:enumeration value="update"/>
         <xsd:enumeration value="read"/>
         <xsd:enumeration value="update"/>
         <xsd:enumeration value="read"/>
         <xsd:enumeration value="update"/>
         <xsd:enumeration value="read"/>
         <xsd:enumeration value="update"/>
         <xsd:enumeration value="read"/>
         <xsd:enumeration value="update"/>
         <xsd:enumeration value="read"/>
         <xsd:enumeration value="update"/>
         <xsd:enumeration value="read"/>
         <xsd:enumeration value="update"/>
         <xsd:enumeration value="read"/>
         <xsd:enumeration value="update"/>
         <xsd:enumeration value="read"/>
         <xsd:enumeration value="update"/>
         <xsd:enumeration value="read"/>
         <xsd:enumeration value="update"/>
         <xsd:enumeration value="read"/>
         <xsd:enumeration value="update"/>
         <xsd:enumeration value="read"/>
         <xsd:enumeration value="update"/>
         <xsd:enumeration value="read"/>
         <xsd:enumeration value="update"/>
         <xsd:enumeration value="read"/>
         <xsd:enumeration value="update"/>
         <xsd:enumeration value="read"/>
         <xsd:enumeration value="update"/>
         <xsd:enumeration value="read"/>
         <xsd:enumeration value="update"/>
         <xsd:enumeration value="read"/>
         <xsd:enumeration value="update"/>
         <xsd:enumeration value="read"/>
         <xsd:enumeration value="update"/>
         <xsd:enumeration value="read"/>
         <xsd:enumeration value="update"/>
         <xsd:enumeration value="read"/>
         <xsd:enumeration value="update"/>
         <xsd:enumeration value="read"/>
         <xsd:enumeration value="update"/>
         <xsd:enumeration value="read"/>
         <xsd:enumeration value="update"/>
         <xsd:enumeration value="read"/>
         <xsd:enumeration value="update"/>
         <xsd:enumeration value="read"/>
         <xsd:enumeration value="update"/>
         <xsd:enumeration value="read"/>
         <xsd:enumeration value="update"/>
         <xsd:enumeration value="read"/>
         <xsd:enumeration value="update"/>
         <xsd:enumeration value="read"/>
         <xsd:enumeration value="update"/>
         <xsd:enumeration value="read"/>
         <xsd:enumeration value="update"/>
         <xsd:enumeration value="read"/>
         <xsd:enumeration value="update"/>
         <xsd:enumeration value="read"/>
         <xsd:enumeration value="update"/>
         <xsd:enumeration value="read"/>
         <xsd:enumeration value="update"/>
         <xsd:enumeration value="read"/>
         <xsd:enumeration value="update"/>
         <xsd:enumeration value="read"/>
         <xsd:enumeration value="update"/>
         <xsd:enumeration value="read"/>
         <xsd:enumeration value="update"/>
         <xsd:enumeration value="read"/>
         <xsd:enumeration value="update"/>
         <xsd:enumeration value="read"/>
         <xsd:enumeration value="update"/>
         <xsd:enumeration value="read"/>
         <xsd:enumeration value="update"/>
         <xsd:enumeration value="read"/>
         <xsd:enumeration value="update"/>
         <xsd:enumeration value="read"/>
         <xsd:enumeration value="update"/>
         <xsd:enumeration value="read"/>
         <xsd:enumeration value="update"/>
         <xsd:enumeration value="read"/>
         <xsd:enumeration value="update"/>
         <xsd:enumeration value="read"/>
         <xsd:enumeration value="update"/>
         <xsd:enumeration value="read"/>
         <xsd:enumeration value="update"/>
         <xsd:enumeration value="read"/>
         <xsd:enumeration value="update"/>
         <xsd:enumeration value="read"/>
         <xsd:enumeration value="update"/>
         <xsd:enumeration value="read"/>
         <xsd:enumeration value="update"/>
         <xsd:enumeration value="read"/>
         <xsd:enumeration value="update"/>
      </xsd:restriction>
   </xsd:simpleType>

   <xsd:simpleType name="XRingSetting">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="Use System Default"/>
         <xsd:enumeration value="Disable"/>
         <xsd:enumeration value="Flash Only"/>
         <xsd:enumeration value="Ring Once"/>
         <xsd:enumeration value="Ring"/>
         <xsd:enumeration value="Beep Only"/>
      </xsd:restriction>
   </xsd:simpleType>

   <xsd:simpleType name="XRisClass">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="Not Applicable"/>
         <xsd:enumeration value="Phone"/>
         <xsd:enumeration value="Gateway"/>
         <xsd:enumeration value="H.323"/>
         <xsd:enumeration value="CTI"/>
         <xsd:enumeration value="Voice Mail"/>
         <xsd:enumeration value="MediaResources"/>
         <xsd:enumeration value="Hunt List"/>
         <xsd:enumeration value="SIP"/>
      </xsd:restriction>
   </xsd:simpleType>

   <xsd:simpleType name="XRisStatus">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="Unknown"/>
         <xsd:enumeration value="Registered"/>
         <xsd:enumeration value="Unregistered"/>
         <xsd:enumeration value="Rejected"/>
         <xsd:enumeration value="Partial Registered"/>
      </xsd:restriction>
   </xsd:simpleType>

   <xsd:simpleType name="XSIPCodec">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="711ulaw"/>
         <xsd:enumeration value="711alaw"/>
         <xsd:enumeration value="G729"/>
         <xsd:enumeration value="G729a"/>
         <xsd:enumeration value="G729b"/>
         <xsd:enumeration value="G729ab"/>
      </xsd:restriction>
   </xsd:simpleType>

   <xsd:simpleType name="XSRSTOption">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="Disable"/>
         <xsd:enumeration value="Use Default Gateway"/>
         <xsd:enumeration value="Legacy Configuration"/>
         <xsd:enumeration value="User Specific"/>
      </xsd:restriction>
   </xsd:simpleType>

   <xsd:simpleType name="XScheduleUnit">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="HOUR"/>
         <xsd:enumeration value="DAY"/>
         <xsd:enumeration value="WEEK"/>
         <xsd:enumeration value="MONTH"/>
      </xsd:restriction>
   </xsd:simpleType>

   <xsd:simpleType name="XSecurityPolicy">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="SIP Trunk"/>
         <xsd:enumeration value="SIP Phone"/>
         <xsd:enumeration value="SCCP Phone"/>
         <xsd:enumeration value="Phone"/>
         <xsd:enumeration value="VM Port"/>
      </xsd:restriction>
   </xsd:simpleType>

   <xsd:simpleType name="XService">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="Cisco CallManager"/>
         <xsd:enumeration value="Cisco Tftp"/>
         <xsd:enumeration value="Cisco Messaging Interface"/>
         <xsd:enumeration value="Cisco IP Voice Media Streaming App"/>
         <xsd:enumeration value="Cisco CTIManager"/>
         <xsd:enumeration value="Cisco CallManager Attendant Console Server"/>
         <xsd:enumeration value="Cisco RIS Data Collector"/>
         <xsd:enumeration value="Cisco Extension Mobility"/>
         <xsd:enumeration value="Cisco Database Layer Monitor"/>
         <xsd:enumeration value="Enterprise Wide"/>
         <xsd:enumeration value="Cisco IP Manager Assistant"/>
         <xsd:enumeration value="Cisco Extended Functions"/>
         <xsd:enumeration value="Cisco Serviceability Reporter"/>
         <xsd:enumeration value="Cisco CTL Provider"/>
         <xsd:enumeration value="Cisco WebDialer Web Service"/>
         <xsd:enumeration value="Cisco Dialed Number Analyzer"/>
         <xsd:enumeration value="Cisco CDR Repository Manager"/>
         <xsd:enumeration value="Cisco Certificate Authority Proxy Function"/>
         <xsd:enumeration value="Cisco CDR Agent"/>
         <xsd:enumeration value="Cisco SOAP - CDRonDemand Service"/>
         <xsd:enumeration value="Cisco CAR Scheduler"/>
         <xsd:enumeration value="Cisco CAR Web Service"/>
         <xsd:enumeration value="Cisco AMC Service"/>
         <xsd:enumeration value="Cisco Log Partition Monitoring Tool"/>
         <xsd:enumeration value="Cisco CallManager SNMP Service"/>
         <xsd:enumeration value="Cisco DirSync"/>
         <xsd:enumeration value="Cisco AXL Web Service"/>
         <xsd:enumeration value="Cisco DRF Master"/>
         <xsd:enumeration value="Cisco DRF Local"/>
         <xsd:enumeration value="Cisco CallManager Cisco IP Phone Services"/>
         <xsd:enumeration value="Cisco CCMAdmin Web Service"/>
         <xsd:enumeration value="Cisco CCMRealm Web Service"/>
         <xsd:enumeration value="Cisco CCMService Web Service"/>
         <xsd:enumeration value="Cisco SOAP Web Service"/>
         <xsd:enumeration value="Cisco RTMT Web Service"/>
         <xsd:enumeration value="Cisco CCM PD Web Service"/>
         <xsd:enumeration value="Cisco CCM DBL Web Library"/>
         <xsd:enumeration value="Cisco CCM NCS Web Library"/>
         <xsd:enumeration value="Cisco Bulk Provisioning Service"/>
         <xsd:enumeration value="Cisco Extension Mobility Application"/>
         <xsd:enumeration value="Cisco License Manager"/>
         <xsd:enumeration value="Cisco Role-based Security"/>
         <xsd:enumeration value="Cisco Trace Collection Service"/>
         <xsd:enumeration value="Cisco Security Agent"/>
         <xsd:enumeration value="Cisco DHCP Monitor Service"/>
         <xsd:enumeration value="Cisco TAPS Service"/>
         <xsd:enumeration value="Cisco Tomcat"/>
      </xsd:restriction>
   </xsd:simpleType>

   <xsd:simpleType name="XServiceCategory">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="Service"/>
         <xsd:enumeration value="Servlet"/>
      </xsd:restriction>
   </xsd:simpleType>

   <xsd:simpleType name="XServiceGrouping">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="CM Services"/>
         <xsd:enumeration value="CTI Services"/>
         <xsd:enumeration value="CDR Services"/>
         <xsd:enumeration value="Database and Admin Services"/>
         <xsd:enumeration value="Performance and Monitoring Services"/>
         <xsd:enumeration value="Security Services"/>
         <xsd:enumeration value="Directory Services"/>
         <xsd:enumeration value="Backup and Restore Services"/>
      </xsd:restriction>
   </xsd:simpleType>

   <xsd:simpleType name="XServiceRestriction">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="none"/>
         <xsd:enumeration value="ordered"/>
      </xsd:restriction>
   </xsd:simpleType>

   <xsd:simpleType name="XSilenceSuppressionThreshold">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="Disable"/>
         <xsd:enumeration value="-48dbm0"/>
         <xsd:enumeration value="-45dbm0"/>
         <xsd:enumeration value="-42dbm0"/>
         <xsd:enumeration value="-39dbm0"/>
         <xsd:enumeration value="-36dbm0"/>
         <xsd:enumeration value="-33dbm0"/>
         <xsd:enumeration value="-30dbm0"/>
      </xsd:restriction>
   </xsd:simpleType>

   <xsd:simpleType name="XSoftkey">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="Undefined"/>
         <xsd:enumeration value="Redial"/>
         <xsd:enumeration value="NewCall"/>
         <xsd:enumeration value="Hold"/>
         <xsd:enumeration value="Transfer"/>
         <xsd:enumeration value="Forward All"/>
         <xsd:enumeration value="Forward Busy"/>
         <xsd:enumeration value="Forward No Answer"/>
         <xsd:enumeration value="Backward"/>
         <xsd:enumeration value="End Call"/>
         <xsd:enumeration value="Resume"/>
         <xsd:enumeration value="Answer"/>
         <xsd:enumeration value="Info"/>
         <xsd:enumeration value="Conference"/>
         <xsd:enumeration value="Park"/>
         <xsd:enumeration value="Join"/>
         <xsd:enumeration value="Meet Me"/>
         <xsd:enumeration value="Pick Up"/>
         <xsd:enumeration value="Group Pick Up"/>
         <xsd:enumeration value="Remove Last Conference Party"/>
         <xsd:enumeration value="Call Back"/>
         <xsd:enumeration value="Barge"/>
         <xsd:enumeration value="Quality Report Tool"/>
         <xsd:enumeration value="Toggle Malicious Call Trace"/>
         <xsd:enumeration value="Direct Transfer"/>
         <xsd:enumeration value="Select"/>
         <xsd:enumeration value="Conference List"/>
         <xsd:enumeration value="Immediate Divert"/>
         <xsd:enumeration value="Conference Barge"/>
         <xsd:enumeration value="Video Mode Command"/>
         <xsd:enumeration value="Other Pickup"/>
         <xsd:enumeration value="Immediate Divert"/>
         <xsd:enumeration value="Intercept"/>
         <xsd:enumeration value="Toggle Watch On/Off"/>
         <xsd:enumeration value="Transfer to Voice Mail"/>
         <xsd:enumeration value="Toggle Do Not Disturb"/>
         <xsd:enumeration value="Toggle Send All Calls"/>
      </xsd:restriction>
   </xsd:simpleType>

   <xsd:simpleType name="XStartDialProtocol">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="Not Set"/>
         <xsd:enumeration value="Immediate"/>
         <xsd:enumeration value="Wink Start Feature Group B"/>
         <xsd:enumeration value="Delay Dial"/>
         <xsd:enumeration value="Wink Start Feature Group D"/>
      </xsd:restriction>
   </xsd:simpleType>

   <xsd:simpleType name="XStatus">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="Off"/>
         <xsd:enumeration value="On"/>
         <xsd:enumeration value="Default"/>
      </xsd:restriction>
   </xsd:simpleType>

   <xsd:simpleType name="XSubClass">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="Default"/>
         <xsd:enumeration value="CTI Port"/>
         <xsd:enumeration value="H323 Phone"/>
         <xsd:enumeration value="Default"/>
         <xsd:enumeration value="MGCP Stn"/>
         <xsd:enumeration value="MGCP Trunk"/>
         <xsd:enumeration value="H323 GW"/>
         <xsd:enumeration value="Conference Bridge"/>
         <xsd:enumeration value="Conference Bridge WS-X6608"/>
         <xsd:enumeration value="Cisco IOS Conference Bridge (HDV2)"/>
         <xsd:enumeration value="Cisco Conference Bridge (WS-SVC-CMM)"/>
         <xsd:enumeration value="Cisco Media Server (WS-SVC-CMM-MS)"/>
         <xsd:enumeration value="Cisco Video Conference Bridge (IPVC-35xx)"/>
         <xsd:enumeration value="Music On Hold"/>
         <xsd:enumeration value="Device Pilot"/>
         <xsd:enumeration value="CTI Route Point"/>
         <xsd:enumeration value="Voice Mail Port"/>
         <xsd:enumeration value="Route List"/>
         <xsd:enumeration value="Load Simulator"/>
         <xsd:enumeration value="Media Termination Point"/>
         <xsd:enumeration value="Media Termination Point Hardware"/>
         <xsd:enumeration value="Cisco IOS Software Media Termination Point (HDV2)"/>
         <xsd:enumeration value="Cisco IOS Media Termination Point (HDV2)"/>
         <xsd:enumeration value="Cisco Media Termination Point (WS-SVC-CMM)"/>
         <xsd:enumeration value="GateKeeper"/>
         <xsd:enumeration value="Trunk"/>
         <xsd:enumeration value="SIP Trunk"/>
         <xsd:enumeration value="Tone Announcement Player"/>
         <xsd:enumeration value="Invalid"/>
      </xsd:restriction>
   </xsd:simpleType>

   <xsd:simpleType name="XSupportsFeature">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="IP Phone Services"/>
         <xsd:enumeration value="Is legacy device"/>
         <xsd:enumeration value="HTTP Server Enabled"/>
         <xsd:enumeration value="Music On Hold"/>
         <xsd:enumeration value="Ring Setting on This Line"/>
         <xsd:enumeration value="Call Waiting"/>
         <xsd:enumeration value="Auto Answer"/>
         <xsd:enumeration value="Shared Line Appearance"/>
         <xsd:enumeration value="Extension Mobility"/>
         <xsd:enumeration value="Show Speeddial Labels"/>
         <xsd:enumeration value="Show Forward on Failure"/>
         <xsd:enumeration value="Has firmware load"/>
         <xsd:enumeration value="Has phone templates"/>
         <xsd:enumeration value="Media Resource Managed"/>
         <xsd:enumeration value="CTI controlled"/>
         <xsd:enumeration value="Phone template is User Modifiable"/>
         <xsd:enumeration value="Localization"/>
         <xsd:enumeration value="Has softkey template"/>
         <xsd:enumeration value="Supports different port types for FXO module"/>
         <xsd:enumeration value="Phone attached to a Gateway (Like Chalice)"/>
         <xsd:enumeration value="Automated Alternate Routing (AAR)"/>
         <xsd:enumeration value="Network Hold"/>
         <xsd:enumeration value="User Hold"/>
         <xsd:enumeration value="Monitor"/>
         <xsd:enumeration value="Record"/>
         <xsd:enumeration value="Auto Registration"/>
         <xsd:enumeration value="Use Generic Icon"/>
         <xsd:enumeration value="MWL Policy"/>
         <xsd:enumeration value="Line Text Label"/>
         <xsd:enumeration value="Multiple Call Display"/>
         <xsd:enumeration value="Abbreviated Dial"/>
         <xsd:enumeration value="Built In Bridge"/>
         <xsd:enumeration value="Malicious Call Identification"/>
         <xsd:enumeration value="Call Precedence (for MLPP)"/>
         <xsd:enumeration value="Call Pre-emption (for MLPP)"/>
         <xsd:enumeration value="Status Report (Busy Device Indicator)"/>
         <xsd:enumeration value="Video"/>
         <xsd:enumeration value="Security Authentication"/>
         <xsd:enumeration value="Security Encryption"/>
         <xsd:enumeration value="Online User Guide (HTML or PDF)"/>
         <xsd:enumeration value="Gateway supports summit MTP"/>
         <xsd:enumeration value="Expansion Module"/>
         <xsd:enumeration value="Privacy"/>
         <xsd:enumeration value="IPMA"/>
         <xsd:enumeration value="V150 Modem Relay Capable"/>
         <xsd:enumeration value="Hospitality"/>
         <xsd:enumeration value="Max Call Limit"/>
         <xsd:enumeration value="Manufacture Installed Certificate(MIC)"/>
         <xsd:enumeration value="Perfer alternate script"/>
         <xsd:enumeration value="Key Authority"/>
         <xsd:enumeration value="File encrypt"/>
         <xsd:enumeration value="Secure RTP"/>
         <xsd:enumeration value="BLF Speed dial"/>
         <xsd:enumeration value="URI Dialing"/>
         <xsd:enumeration value="Digest authentication support"/>
         <xsd:enumeration value="Support for server-side auth TLS (basic)"/>
         <xsd:enumeration value="Support for Mutual-auth TLS"/>
         <xsd:enumeration value="Support CAPF"/>
         <xsd:enumeration value="Require DTMF Reception"/>
         <xsd:enumeration value="RFC 2833 Disabled"/>
         <xsd:enumeration value="BLF Speed Dial with URI"/>
         <xsd:enumeration value="Secure Shell Support"/>
         <xsd:enumeration value="SIP Dial-Plan"/>
         <xsd:enumeration value="Specify Types of TFTP Config Files"/>
         <xsd:enumeration value="Presence Subscription"/>
         <xsd:enumeration value="SIP TCP Support"/>
      </xsd:restriction>
   </xsd:simpleType>

   <xsd:simpleType name="XSystemFeature">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="VoiceMail"/>
      </xsd:restriction>
   </xsd:simpleType>

   <xsd:simpleType name="XTelnetLevel">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="Disabled"/>
         <xsd:enumeration value="Limited"/>
         <xsd:enumeration value="Enabled"/>
      </xsd:restriction>
   </xsd:simpleType>

   <xsd:simpleType name="XTerminal">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="-- Not Selected --"/>
         <xsd:enumeration value="Terminal"/>
         <xsd:enumeration value="Gateway"/>
      </xsd:restriction>
   </xsd:simpleType>

   <xsd:simpleType name="XTimeOfDay">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="No Office Hours"/>
         <xsd:enumeration value="00:00"/>
         <xsd:enumeration value="00:15"/>
         <xsd:enumeration value="00:30"/>
         <xsd:enumeration value="00:45"/>
         <xsd:enumeration value="01:00"/>
         <xsd:enumeration value="01:15"/>
         <xsd:enumeration value="01:30"/>
         <xsd:enumeration value="01:45"/>
         <xsd:enumeration value="02:00"/>
         <xsd:enumeration value="02:15"/>
         <xsd:enumeration value="02:30"/>
         <xsd:enumeration value="02:45"/>
         <xsd:enumeration value="03:00"/>
         <xsd:enumeration value="03:15"/>
         <xsd:enumeration value="03:30"/>
         <xsd:enumeration value="03:45"/>
         <xsd:enumeration value="04:00"/>
         <xsd:enumeration value="04:15"/>
         <xsd:enumeration value="04:30"/>
         <xsd:enumeration value="04:45"/>
         <xsd:enumeration value="05:00"/>
         <xsd:enumeration value="05:15"/>
         <xsd:enumeration value="05:30"/>
         <xsd:enumeration value="05:45"/>
         <xsd:enumeration value="06:00"/>
         <xsd:enumeration value="06:15"/>
         <xsd:enumeration value="06:30"/>
         <xsd:enumeration value="06:45"/>
         <xsd:enumeration value="07:00"/>
         <xsd:enumeration value="07:15"/>
         <xsd:enumeration value="07:30"/>
         <xsd:enumeration value="07:45"/>
         <xsd:enumeration value="08:00"/>
         <xsd:enumeration value="08:15"/>
         <xsd:enumeration value="08:30"/>
         <xsd:enumeration value="08:45"/>
         <xsd:enumeration value="09:00"/>
         <xsd:enumeration value="09:15"/>
         <xsd:enumeration value="09:30"/>
         <xsd:enumeration value="09:45"/>
         <xsd:enumeration value="10:00"/>
         <xsd:enumeration value="10:15"/>
         <xsd:enumeration value="10:30"/>
         <xsd:enumeration value="10:45"/>
         <xsd:enumeration value="11:00"/>
         <xsd:enumeration value="11:15"/>
         <xsd:enumeration value="11:30"/>
         <xsd:enumeration value="11:45"/>
         <xsd:enumeration value="12:00"/>
         <xsd:enumeration value="12:15"/>
         <xsd:enumeration value="12:30"/>
         <xsd:enumeration value="12:45"/>
         <xsd:enumeration value="13:00"/>
         <xsd:enumeration value="13:15"/>
         <xsd:enumeration value="13:30"/>
         <xsd:enumeration value="13:45"/>
         <xsd:enumeration value="14:00"/>
         <xsd:enumeration value="14:15"/>
         <xsd:enumeration value="14:30"/>
         <xsd:enumeration value="14:45"/>
         <xsd:enumeration value="15:00"/>
         <xsd:enumeration value="15:15"/>
         <xsd:enumeration value="15:30"/>
         <xsd:enumeration value="15:45"/>
         <xsd:enumeration value="16:00"/>
         <xsd:enumeration value="16:15"/>
         <xsd:enumeration value="16:30"/>
         <xsd:enumeration value="16:45"/>
         <xsd:enumeration value="17:00"/>
         <xsd:enumeration value="17:15"/>
         <xsd:enumeration value="17:30"/>
         <xsd:enumeration value="17:45"/>
         <xsd:enumeration value="18:00"/>
         <xsd:enumeration value="18:15"/>
         <xsd:enumeration value="18:30"/>
         <xsd:enumeration value="18:45"/>
         <xsd:enumeration value="19:00"/>
         <xsd:enumeration value="19:15"/>
         <xsd:enumeration value="19:30"/>
         <xsd:enumeration value="19:45"/>
         <xsd:enumeration value="20:00"/>
         <xsd:enumeration value="20:15"/>
         <xsd:enumeration value="20:30"/>
         <xsd:enumeration value="20:45"/>
         <xsd:enumeration value="21:00"/>
         <xsd:enumeration value="21:15"/>
         <xsd:enumeration value="21:30"/>
         <xsd:enumeration value="21:45"/>
         <xsd:enumeration value="22:00"/>
         <xsd:enumeration value="22:15"/>
         <xsd:enumeration value="22:30"/>
         <xsd:enumeration value="22:45"/>
         <xsd:enumeration value="23:00"/>
         <xsd:enumeration value="23:15"/>
         <xsd:enumeration value="23:30"/>
         <xsd:enumeration value="23:45"/>
         <xsd:enumeration value="24:00"/>
      </xsd:restriction>
   </xsd:simpleType>

   <xsd:simpleType name="XTimeZone">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="Dateline Standard Time"/>
         <xsd:enumeration value="Samoa Standard Time"/>
         <xsd:enumeration value="Hawaiian Standard Time"/>
         <xsd:enumeration value="Alaskan Standard/Daylight Time"/>
         <xsd:enumeration value="Pacific Standard/Daylight Time"/>
         <xsd:enumeration value="US Mountain Standard Time"/>
         <xsd:enumeration value="Mountain Standard/Daylight Time"/>
         <xsd:enumeration value="Central Standard/Daylight Time"/>
         <xsd:enumeration value="Mexico Standard/Daylight Time"/>
         <xsd:enumeration value="Canada Central Standard Time"/>
         <xsd:enumeration value="SA Pacific Standard Time"/>
         <xsd:enumeration value="Eastern Standard/Daylight Time"/>
         <xsd:enumeration value="US Eastern Standard Time"/>
         <xsd:enumeration value="Atlantic Standard/Daylight Time"/>
         <xsd:enumeration value="SA Western Standard Time"/>
         <xsd:enumeration value="Newfoundland Standard/Daylight Time"/>
         <xsd:enumeration value="E. South America Standard/Daylight Time"/>
         <xsd:enumeration value="SA Eastern Standard Time"/>
         <xsd:enumeration value="Mid-Atlantic Standard/Daylight Time"/>
         <xsd:enumeration value="Azores Standard/Daylight Time"/>
         <xsd:enumeration value="GMT Standard/Daylight Time"/>
         <xsd:enumeration value="Greenwich Standard Time"/>
         <xsd:enumeration value="W. Europe Standard/Daylight Time"/>
         <xsd:enumeration value="GTB Standard/Daylight Time"/>
         <xsd:enumeration value="Egypt Standard/Daylight Time"/>
         <xsd:enumeration value="E. Europe Standard/Daylight Time"/>
         <xsd:enumeration value="Romance Standard/Daylight Time"/>
         <xsd:enumeration value="Central Europe Standard/Daylight Time"/>
         <xsd:enumeration value="South Africa Standard Time"/>
         <xsd:enumeration value="Jerusalem Standard/Daylight Time"/>
         <xsd:enumeration value="Saudi Arabia Standard Time"/>
         <xsd:enumeration value="Russian Standard/Daylight Time"/>
         <xsd:enumeration value="Iran Standard/Daylight Time"/>
         <xsd:enumeration value="Caucasus Standard/Daylight Time"/>
         <xsd:enumeration value="Afghanistan Standard Time"/>
         <xsd:enumeration value="West Asia Standard Time"/>
         <xsd:enumeration value="India Standard Time"/>
         <xsd:enumeration value="Central Asia Standard Time"/>
         <xsd:enumeration value="SE Asia Standard Time"/>
         <xsd:enumeration value="China Standard/Daylight Time"/>
         <xsd:enumeration value="Taipei Standard Time"/>
         <xsd:enumeration value="Tokyo Standard Time"/>
         <xsd:enumeration value="Cen. Australia Standard/Daylight Time"/>
         <xsd:enumeration value="AUS Central Standard Time"/>
         <xsd:enumeration value="E. Australia Standard Time"/>
         <xsd:enumeration value="AUS Eastern Standard/Daylight Time"/>
         <xsd:enumeration value="West Pacific Standard Time"/>
         <xsd:enumeration value="Tasmania Standard/Daylight Time"/>
         <xsd:enumeration value="Central Pacific Standard Time"/>
         <xsd:enumeration value="Fiji Standard Time"/>
         <xsd:enumeration value="New Zealand Standard/Daylight Time"/>
         <xsd:enumeration value="Arabian Standard Time"/>
         <xsd:enumeration value="Ekaterinburg Standard Time"/>
         <xsd:enumeration value="Jerusalem Standard Time"/>
         <xsd:enumeration value="Pacific SA Daylight Time"/>
         <xsd:enumeration value="Greenland Daylight Time"/>
         <xsd:enumeration value="W.Central Africa Standard Time"/>
         <xsd:enumeration value="E.Europe Daylight Time"/>
         <xsd:enumeration value="Nepal Standard Time"/>
         <xsd:enumeration value="Sri Lanka Standard Time"/>
         <xsd:enumeration value="Myanmar Standard Time"/>
         <xsd:enumeration value="North Asia Daylight Time"/>
         <xsd:enumeration value="North Asia East Daylight Time"/>
         <xsd:enumeration value="Tonga Standard Time"/>
         <xsd:enumeration value="Central America Standard Time"/>
         <xsd:enumeration value="Cape Verde Standard Time"/>
         <xsd:enumeration value="FLE Standard Time"/>
         <xsd:enumeration value="Arabic Daylight Time"/>
         <xsd:enumeration value="E. Africa Standard Time"/>
         <xsd:enumeration value="N. Central Asia Standard/Daylight Time"/>
         <xsd:enumeration value="Singapore Standard Time"/>
         <xsd:enumeration value="W. Australia Standard Time"/>
         <xsd:enumeration value="Yakutsk Standard Time"/>
         <xsd:enumeration value="Cen. Australia Commonwealth Games Time (2006)"/>
         <xsd:enumeration value="AUS Eastern Commonwealth Games Time (2006)"/>
         <xsd:enumeration value="Tasmania Commonwealth Games Time (2006)"/>
         <xsd:enumeration value="Vladivostok Standard/Daylight Time"/>
      </xsd:restriction>
   </xsd:simpleType>

   <xsd:simpleType name="XTraceLevelGrouping">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="Error"/>
         <xsd:enumeration value="Special"/>
         <xsd:enumeration value="State Transistion"/>
         <xsd:enumeration value="Significant"/>
         <xsd:enumeration value="Entry_exit"/>
         <xsd:enumeration value="Arbitrary"/>
         <xsd:enumeration value="Detailed"/>
         <xsd:enumeration value="Error"/>
         <xsd:enumeration value="Special"/>
         <xsd:enumeration value="State Transistion"/>
         <xsd:enumeration value="Significant"/>
         <xsd:enumeration value="Arbitrary"/>
         <xsd:enumeration value="Detailed"/>
         <xsd:enumeration value="Fatal"/>
         <xsd:enumeration value="Error"/>
         <xsd:enumeration value="Warning"/>
         <xsd:enumeration value="Informational"/>
         <xsd:enumeration value="Detailed"/>
      </xsd:restriction>
   </xsd:simpleType>

   <xsd:simpleType name="XTraceLevelGroups">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="TraceLevelGroup0"/>
         <xsd:enumeration value="TraceLevelGroup1"/>
         <xsd:enumeration value="TraceLevelGroup2"/>
      </xsd:restriction>
   </xsd:simpleType>

   <xsd:simpleType name="XTransport">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="TCP"/>
         <xsd:enumeration value="UDP"/>
         <xsd:enumeration value="TLS"/>
         <xsd:enumeration value="TCP+UDP"/>
      </xsd:restriction>
   </xsd:simpleType>

   <xsd:simpleType name="XTrunk">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="Ground Start"/>
         <xsd:enumeration value="Loop Start"/>
         <xsd:enumeration value="DID"/>
         <xsd:enumeration value="POTS"/>
         <xsd:enumeration value="EANDM"/>
      </xsd:restriction>
   </xsd:simpleType>

   <xsd:simpleType name="XTrunkDirection">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="Inbound"/>
         <xsd:enumeration value="Outbound"/>
         <xsd:enumeration value="Bothways"/>
      </xsd:restriction>
   </xsd:simpleType>

   <xsd:simpleType name="XTrunkLevel">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="AAL(A)"/>
         <xsd:enumeration value="AAL(D)"/>
         <xsd:enumeration value="A/TT"/>
         <xsd:enumeration value="DAL"/>
         <xsd:enumeration value="ICS"/>
         <xsd:enumeration value="ISD/TT"/>
         <xsd:enumeration value="IST"/>
         <xsd:enumeration value="ONS"/>
         <xsd:enumeration value="OPS"/>
         <xsd:enumeration value="S/ATT"/>
         <xsd:enumeration value="S/DTT"/>
         <xsd:enumeration value="A/TO"/>
      </xsd:restriction>
   </xsd:simpleType>

   <xsd:simpleType name="XTrunkPad">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="Minus32db"/>
         <xsd:enumeration value="Minus31db"/>
         <xsd:enumeration value="Minus30db"/>
         <xsd:enumeration value="Minus29db"/>
         <xsd:enumeration value="Minus28db"/>
         <xsd:enumeration value="Minus27db"/>
         <xsd:enumeration value="Minus26db"/>
         <xsd:enumeration value="Minus25db"/>
         <xsd:enumeration value="Minus24db"/>
         <xsd:enumeration value="Minus23db"/>
         <xsd:enumeration value="Minus22db"/>
         <xsd:enumeration value="Minus21db"/>
         <xsd:enumeration value="Minus20db"/>
         <xsd:enumeration value="Minus19db"/>
         <xsd:enumeration value="Minus18db"/>
         <xsd:enumeration value="Minus17db"/>
         <xsd:enumeration value="Minus16db"/>
         <xsd:enumeration value="Minus15db"/>
         <xsd:enumeration value="Minus14db"/>
         <xsd:enumeration value="Minus13db"/>
         <xsd:enumeration value="Minus12db"/>
         <xsd:enumeration value="Minus11db"/>
         <xsd:enumeration value="Minus10db"/>
         <xsd:enumeration value="Minus9db"/>
         <xsd:enumeration value="Minus8db"/>
         <xsd:enumeration value="Minus7db"/>
         <xsd:enumeration value="Minus6db"/>
         <xsd:enumeration value="Minus5db"/>
         <xsd:enumeration value="Minus4db"/>
         <xsd:enumeration value="Minus3db"/>
         <xsd:enumeration value="Minus2db"/>
         <xsd:enumeration value="Minus1db"/>
         <xsd:enumeration value="NoDbPadding"/>
         <xsd:enumeration value="Plus1db"/>
         <xsd:enumeration value="Plus2db"/>
         <xsd:enumeration value="Plus3db"/>
         <xsd:enumeration value="Plus4db"/>
         <xsd:enumeration value="Plus5db"/>
         <xsd:enumeration value="Plus6db"/>
         <xsd:enumeration value="Plus7db"/>
         <xsd:enumeration value="Plus8db"/>
         <xsd:enumeration value="Plus9db"/>
         <xsd:enumeration value="Plus10db"/>
         <xsd:enumeration value="Plus11db"/>
         <xsd:enumeration value="Plus12db"/>
         <xsd:enumeration value="Plus13db"/>
         <xsd:enumeration value="Plus14db"/>
         <xsd:enumeration value="Plus15db"/>
         <xsd:enumeration value="Plus16db"/>
         <xsd:enumeration value="Plus17db"/>
         <xsd:enumeration value="Plus18db"/>
         <xsd:enumeration value="Plus19db"/>
         <xsd:enumeration value="Plus20db"/>
         <xsd:enumeration value="Plus21db"/>
         <xsd:enumeration value="Plus22db"/>
         <xsd:enumeration value="Plus23db"/>
         <xsd:enumeration value="Plus24db"/>
         <xsd:enumeration value="Plus25db"/>
         <xsd:enumeration value="Plus26db"/>
         <xsd:enumeration value="Plus27db"/>
         <xsd:enumeration value="Plus28db"/>
         <xsd:enumeration value="Plus29db"/>
         <xsd:enumeration value="Plus30db"/>
         <xsd:enumeration value="Plus31db"/>
         <xsd:enumeration value="Plus32db"/>
      </xsd:restriction>
   </xsd:simpleType>

   <xsd:simpleType name="XTrunkSelectionOrder">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="Bottom Up"/>
         <xsd:enumeration value="Top Down"/>
      </xsd:restriction>
   </xsd:simpleType>

   <xsd:simpleType name="XTunneledProtocol">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="None"/>
         <xsd:enumeration value="QSIG"/>
      </xsd:restriction>
   </xsd:simpleType>

   <xsd:simpleType name="XUserAssociation">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="Cti Control In"/>
         <xsd:enumeration value="Cti Control Out"/>
         <xsd:enumeration value="Digest In"/>
         <xsd:enumeration value="Digest Out"/>
         <xsd:enumeration value="Profile Available"/>
      </xsd:restriction>
   </xsd:simpleType>

   <xsd:simpleType name="XUserLocale">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="English United States"/>
      </xsd:restriction>
   </xsd:simpleType>

   <xsd:simpleType name="XUserProfile">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="Real User"/>
         <xsd:enumeration value="Template User"/>
      </xsd:restriction>
   </xsd:simpleType>

   <xsd:simpleType name="XWinCharSet">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="iso-8859-1"/>
         <xsd:enumeration value="iso-8859-2"/>
         <xsd:enumeration value="UTF-8 Unicode"/>
         <xsd:enumeration value="UTF-7 Unicode"/>
         <xsd:enumeration value="windows-1251"/>
         <xsd:enumeration value="Shift_JIS"/>
         <xsd:enumeration value="windows-1253"/>
         <xsd:enumeration value="GB2312"/>
         <xsd:enumeration value="BIG5"/>
         <xsd:enumeration value="KSC5061"/>
         <xsd:enumeration value="UTF-8"/>
         <xsd:enumeration value="windows-1254"/>
      </xsd:restriction>
   </xsd:simpleType>

   <xsd:simpleType name="XYellowAlarm">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="Bit2"/>
         <xsd:enumeration value="F-Bit"/>
      </xsd:restriction>
   </xsd:simpleType>

   <xsd:simpleType name="XZeroSuppression">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="B8ZS"/>
         <xsd:enumeration value="AMI"/>
         <xsd:enumeration value="HDB3"/>
      </xsd:restriction>
   </xsd:simpleType>

   <xsd:simpleType name="XZzconfBridge">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="Local"/>
         <xsd:enumeration value="CallManger"/>
      </xsd:restriction>
   </xsd:simpleType>

   <xsd:simpleType name="XZzdndcontrol">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="User"/>
         <xsd:enumeration value="Admin"/>
      </xsd:restriction>
   </xsd:simpleType>

   <xsd:simpleType name="XZzdtmfDbLevel">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="6 dB below nominal"/>
         <xsd:enumeration value="3 dB below nominal"/>
         <xsd:enumeration value="Nominal"/>
         <xsd:enumeration value="3 dB above nominal"/>
         <xsd:enumeration value="6 dB above nominal"/>
      </xsd:restriction>
   </xsd:simpleType>

   <xsd:simpleType name="XZzkpml">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="None"/>
         <xsd:enumeration value="Signal only"/>
         <xsd:enumeration value="Dtmf only"/>
         <xsd:enumeration value="Both"/>
      </xsd:restriction>
   </xsd:simpleType>

   <xsd:simpleType name="XZznetworkMediaType">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="Auto"/>
         <xsd:enumeration value="Full 100"/>
         <xsd:enumeration value="Half 100"/>
         <xsd:enumeration value="Full 10"/>
         <xsd:enumeration value="Half 10"/>
      </xsd:restriction>
   </xsd:simpleType>

   <xsd:simpleType name="XZzntpmode">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="Unicast"/>
         <xsd:enumeration value="Multicast"/>
         <xsd:enumeration value="Anycast"/>
         <xsd:enumeration value="Directed Broadcast"/>
      </xsd:restriction>
   </xsd:simpleType>

   <xsd:simpleType name="XZzpreff">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="Off"/>
         <xsd:enumeration value="On"/>
      </xsd:restriction>
   </xsd:simpleType>

   <xsd:simpleType name="XZzuserInfo">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="None"/>
         <xsd:enumeration value="Phone"/>
         <xsd:enumeration value="IP"/>
      </xsd:restriction>
   </xsd:simpleType>
   
   <!-- axlsoap.xsd contents -->
   <xsd:complexType name="AddPhoneReq" abstract="false" final="#all">
		<xsd:annotation>
			<xsd:documentation>Adds one new phone to the database.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axl:APIRequest">
				<xsd:sequence>
					<xsd:element name="newPhone" type="axl:XIPPhone"/>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="addPhone" type="axl:AddPhoneReq"/>
	<xsd:element name="addPhoneResponse" type="axl:StandardResponse"/>
	<xsd:complexType name="RemovePhoneReq">
		<xsd:annotation>
			<xsd:documentation>Removes the specified phone from the database.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axl:APIRequest">
				<xsd:choice>
					<xsd:element name="phoneId" type="axl:XUUID" nillable="false">
						<xsd:annotation>
							<xsd:documentation>The GUID of the phone to be removed.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="phoneName" type="xsd:string" nillable="false">
						<xsd:annotation>
							<xsd:documentation>The name of the phone to be removed.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
				</xsd:choice>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="removePhone" type="axl:RemovePhoneReq"/>
	<xsd:element name="removePhoneResponse" type="axl:StandardResponse"/>
	<xsd:complexType name="UpdatePhoneReq">
		<xsd:annotation>
			<xsd:documentation>Updates an existing IP phone in the database.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axl:APIRequest">
				<xsd:sequence>
					<xsd:choice>
						<xsd:element name="name" type="xsd:string">
							<xsd:annotation>
								<xsd:documentation>The name of the phone that you want to update.</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
						<xsd:element name="uuid" type="axl:XUUID">
							<xsd:annotation>
								<xsd:documentation>The GUID of the phone that you want to update.</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
					</xsd:choice>
					<xsd:element name="newName" type="xsd:Name" nillable="false" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>The new name of the phone.  Cannot be null.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="description" type="xsd:string" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>The new description of the phone.  Nullable.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:choice minOccurs="0">
						<xsd:element name="callingSearchSpaceId" type="axl:XUUID">
							<xsd:annotation>
								<xsd:documentation>The GUID of the new Calling Search Space for this phone. Nullable.</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
						<xsd:element name="callingSearchSpaceName" type="xsd:Name">
							<xsd:annotation>
								<xsd:documentation>The name of the new Calling Search Space for this phone.  Nullable.</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
					</xsd:choice>
					<xsd:choice minOccurs="0">
						<xsd:element name="devicePoolId" type="axl:XUUID">
							<xsd:annotation>
								<xsd:documentation>The GUID of the new Device Pool for this phone.  Nullable.</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
						<xsd:element name="devicePoolName" type="xsd:string">
							<xsd:annotation>
								<xsd:documentation>The name of the new Device Pool for this phone. Nullable.</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
					</xsd:choice>
					<xsd:choice minOccurs="0">
						<xsd:element name="locationId" type="axl:XUUID">
							<xsd:annotation>
								<xsd:documentation>The GUID of the new Location for this phone.  Nullable.</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
						<xsd:element name="locationName" type="xsd:Name">
							<xsd:annotation>
								<xsd:documentation>The name of the new Location for this phone.  Nullable.</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
					</xsd:choice>
					<xsd:choice minOccurs="0">
						<xsd:element name="mediaResourceListId" type="axl:XUUID">
							<xsd:annotation>
								<xsd:documentation>The GUID of the new Media Resource List for this phone.  Nullable.</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
						<xsd:element name="mediaResourceListName" type="xsd:Name">
							<xsd:annotation>
								<xsd:documentation>The name of the new Media Resource List for this phone.  Nullable.</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
					</xsd:choice>
					<xsd:element name="networkHoldMOHAudioSourceId" type="axl:XMOHAudioSourceId" nillable="false" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>Not nullable.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="userHoldMOHAudioSourceId" type="axl:XMOHAudioSourceId" nillable="false" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>Not nullable.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:choice minOccurs="0">
						<xsd:element name="automatedAlternateRoutingCSSId" type="axl:XUUID"/>
						<xsd:element name="automatedAlternateRoutingCSSName" type="axl:String50"/>
					</xsd:choice>
					<xsd:choice minOccurs="0">
						<xsd:element name="aarNeighborhoodId" type="axl:XUUID"/>
						<xsd:element name="aarNeighborhoodName" type="axl:String50"/>
					</xsd:choice>
					<xsd:element name="loadInformation" type="axl:XLoadInformation" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>The new load information for this phone.  Nullable.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="vendorConfig" type="axl:XVendorConfig" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>The new vendor config for this phone.  Nullable.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="traceFlag" type="xsd:boolean" nillable="false" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>The new trace flag for this phone.  Not nullable.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="mlppDomainId" type="xsd:int" nillable="false" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>This setting only affects devices that support MLPP.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="mlppIndicationStatus" type="axl:XStatus" nillable="false" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>This setting only affects devices that support MLPP.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="preemption" type="axl:XPreemption" nillable="false" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>This setting only affects devices that support MLPP.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="retryVideoCallAsVoice" type="xsd:boolean" nillable="false" minOccurs="0"/>
					<xsd:element name="associatedPC" type="axl:String50" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>This field has been deprecated in Seadragon</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="lines" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>The new lines for this phone.  If this element is null, then all lines are removed from this phone.  Note:  If the lines element is present, then all existing lines are removed and replaced with the sub-elements described by the line and lineIdentifier elements.  All directory numbers specified must already exist in the database.</xsd:documentation>
						</xsd:annotation>
						<xsd:complexType>
							<xsd:choice>
								<xsd:element name="line" type="axl:XLine" maxOccurs="unbounded"/>
								<xsd:element name="lineIdentifier" type="axl:XNumplanIdentifier" maxOccurs="unbounded"/>
							</xsd:choice>
						</xsd:complexType>
					</xsd:element>
					<xsd:choice minOccurs="0">
						<xsd:element name="phoneTemplateId" type="axl:XUUID">
							<xsd:annotation>
								<xsd:documentation>The GUID of the new Phone Template for this phone.  Nullable.</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
						<xsd:element name="phoneTemplateName" type="axl:String50">
							<xsd:annotation>
								<xsd:documentation>The name of the new Phone Template for this phone.  Nullable.</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
					</xsd:choice>
					<xsd:element name="speeddials" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>The new speed-dials for this phone.  If this element is null, then all speed-dials are removed from this phone.  Note:  If the "speeddials" element is present, then all existing speed-dials are removed and replaced with the "speeddial" sub-elements.</xsd:documentation>
						</xsd:annotation>
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="speeddial" type="axl:XSpeeddial" maxOccurs="unbounded"/>
							</xsd:sequence>
						</xsd:complexType>
					</xsd:element>
					<xsd:element name="busyLampFields" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>The new Busy Lamp Fields for this profile.  If this element is null, then all  Busy Lamp Fields are removed from this profile.  Note:  If the " Busy Lamp Fields" element is present, then all existing  Busy Lamp Fields are removed and replaced with the " Busy Lamp Field" sub-elements.</xsd:documentation>
						</xsd:annotation>
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="busyLampFields" type="axl:XBusyLampField" minOccurs="0" maxOccurs="unbounded"/>
							</xsd:sequence>
						</xsd:complexType>
					</xsd:element>
					<xsd:element name="addOnModules" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>The new Add-on Modules associated with this phone.  If this element is null, then all Add-on Modules are removed from this phone.  Note:  If the "addOnModules" element is present, then all existing Add-on Modules are removed and replaced with the "addOnModule" sub-elements.  All Add-on Modules specified must already exist in the database.</xsd:documentation>
						</xsd:annotation>
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="addOnModule" type="axl:XAddOnModule" maxOccurs="unbounded"/>
							</xsd:sequence>
						</xsd:complexType>
					</xsd:element>
					<xsd:element name="userLocale" type="axl:XUserLocale" nillable="true" minOccurs="0"/>
					<xsd:element name="networkLocale" type="axl:XCountry" nillable="true" minOccurs="0"/>
					<xsd:choice minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>The new Security Profile for this phone.  Nullable.</xsd:documentation>
						</xsd:annotation>
						<xsd:element name="securityProfileId" type="axl:XUUID"/>
						<xsd:element name="securityProfileName" type="axl:UniqueString50"/>
					</xsd:choice>
					<xsd:element name="idleTimeout" type="xsd:nonNegativeInteger" nillable="false" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>The new Idle Timeout value for this phone.  Nullable.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="authenticationURL" type="xsd:anyURI" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>The new Authentication URL for this phone. Nullable.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="directoryURL" type="xsd:anyURI" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>The new Directory URL for this phone. Nullable.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="idleURL" type="xsd:anyURI" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>The new Idle URL for this phone.  Nullable.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="informationURL" type="xsd:anyURI" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>The new Information URL for this phone.  Nullable.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="messagesURL" type="xsd:anyURI" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>The new Messages (voice-mail) URL for this phone.  Nullable.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="proxyServerURL" type="xsd:anyURI" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>The new Proxy Server URL for this phone.  Nullable.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="servicesURL" type="xsd:anyURI" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>The new IP Services URL for this phone.  Nullable.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="services" minOccurs="0">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="service" type="axl:XSubscribedService" minOccurs="0" maxOccurs="unbounded"/>
							</xsd:sequence>
						</xsd:complexType>
					</xsd:element>
					<xsd:choice minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>The new Softkey Template for this phone.  Nullable.</xsd:documentation>
						</xsd:annotation>
						<xsd:element name="softkeyTemplateId" type="axl:XUUID"/>
						<xsd:element name="softkeyTemplateName" type="axl:String50"/>
					</xsd:choice>
					<xsd:sequence minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>The Extension Mobility block.  By default, extension mobility is disabled.  To enable, include a default profile and set enableExtensionMobility to true.  Only applicable to 7960 and 7940 phones. If enableExtensionMobility is false then these will not appear.</xsd:documentation>
						</xsd:annotation>
						<xsd:choice>
							<xsd:annotation>
								<xsd:documentation>The absence of this tag would mean the device would use the current device Settings</xsd:documentation>
							</xsd:annotation>
							<xsd:element name="defaultProfileId" type="axl:XUUID" nillable="false" minOccurs="0">
								<xsd:annotation>
									<xsd:documentation>The ID of the default profile for this device. Nullable.</xsd:documentation>
								</xsd:annotation>
							</xsd:element>
							<xsd:element name="defaultProfileName" type="axl:String50" nillable="false" minOccurs="0">
								<xsd:annotation>
									<xsd:documentation>The name of the default profile for this device.  Nullable.</xsd:documentation>
								</xsd:annotation>
							</xsd:element>
						</xsd:choice>
						<xsd:element name="enableExtensionMobility" type="xsd:boolean">
							<xsd:annotation>
								<xsd:documentation>Not nullable.</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
					</xsd:sequence>
					<xsd:element name="builtInBridgeStatus" type="axl:XStatus" nillable="false" minOccurs="0"/>
					<xsd:element name="callInfoPrivacyStatus" type="axl:XStatus" nillable="false" minOccurs="0"/>
					<xsd:element name="ownerUserId" type="axl:String255" nillable="true" minOccurs="0"/>
					<xsd:element name="ignorePresentationIndicators" type="xsd:boolean" default="false" nillable="false" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>The new Ignore Presentation Indicators flag for Hospitality Feature is required for most phones and device profiles.Not Nullable.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="packetCaptureMode" type="axl:XPacketCaptureMode" nillable="false" minOccurs="0"/>
					<xsd:element name="packetCaptureDuration" type="xsd:positiveInteger" nillable="true" minOccurs="0"/>
					<xsd:choice minOccurs="0">
						<xsd:element name="subscribeCallingSearchSpaceId" type="axl:XUUID" nillable="true"/>
						<xsd:element name="subscribeCallingSearchSpaceName" type="axl:String50" nillable="true"/>
					</xsd:choice>
					<xsd:element name="allowCtiControlFlag" type="xsd:boolean" nillable="true" minOccurs="0"/>
					<xsd:choice minOccurs="0">
						<xsd:element name="presenceGroupId" type="axl:XUUID" nillable="false"/>
						<xsd:element name="presenceGroupName" type="axl:String50" nillable="false"/>
					</xsd:choice>
					<xsd:element name="certificateOperation" type="axl:XCertificateOperation" nillable="false" minOccurs="0"/>
					<xsd:element name="authenticationString" type="axl:Name128" nillable="true" minOccurs="0"/>
					<xsd:element name="certificateStatus" type="axl:XCertificateStatus" nillable="false" minOccurs="0"/>
					<xsd:element name="upgradeFinishTime" type="xsd:time" nillable="true" minOccurs="0"/>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="updatePhone" type="axl:UpdatePhoneReq"/>
	<xsd:element name="updatePhoneResponse" type="axl:StandardResponse"/>
	<xsd:complexType name="GetPhoneReq" final="#all">
		<xsd:annotation>
			<xsd:documentation>Retrieves the specified phone from the database.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axl:APIRequest">
				<xsd:choice>
					<xsd:element name="phoneId" type="axl:XUUID" nillable="false">
						<xsd:annotation>
							<xsd:documentation>The GUID of the phone to be retrieved.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="phoneName" type="xsd:string" nillable="false">
						<xsd:annotation>
							<xsd:documentation>The name of the phone to be retrieved.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
				</xsd:choice>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="getPhone" type="axl:GetPhoneReq"/>
	<xsd:complexType name="GetPhoneRes">
		<xsd:annotation>
			<xsd:documentation>Returns the phone specified by the GetPhone request.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axl:APIResponse">
				<xsd:sequence>
					<xsd:element name="return">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="device" type="axl:XIPPhone"/>
							</xsd:sequence>
						</xsd:complexType>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="getPhoneResponse" type="axl:GetPhoneRes"/>
	<xsd:complexType name="AddConferenceBridgeReq">
		<xsd:annotation>
			<xsd:documentation>Adds  new Conference Bridge to the database.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axl:APIRequest">
				<xsd:sequence>
					<xsd:element name="newCFB" type="axl:XConferenceBridge"/>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="addConferenceBridge" type="axl:AddConferenceBridgeReq"/>
	<xsd:element name="addConferenceBridgeResponse" type="axl:StandardResponse"/>
	<xsd:complexType name="RemoveConferenceBridgeReq">
		<xsd:annotation>
			<xsd:documentation>Removes the specified Conference Bridge from the database.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axl:APIRequest">
				<xsd:choice>
					<xsd:element name="uuid" type="axl:XUUID" nillable="false">
						<xsd:annotation>
							<xsd:documentation>The GUID of the Conference Bridge to be removed.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="name" type="xsd:string" nillable="false">
						<xsd:annotation>
							<xsd:documentation>The name of the  Conference Bridge to be removed.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
				</xsd:choice>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="removeConferenceBridge" type="axl:RemoveConferenceBridgeReq"/>
	<xsd:element name="removeConferenceBridgeResponse" type="axl:StandardResponse"/>
	<xsd:complexType name="UpdateConferenceBridgeReq">
		<xsd:complexContent>
			<xsd:extension base="axl:APIRequest">
				<xsd:sequence>
					<xsd:choice>
						<xsd:element name="name" type="xsd:string" nillable="false"/>
						<xsd:element name="uuid" type="axl:XUUID" nillable="false"/>
					</xsd:choice>
					<xsd:element name="newName" type="xsd:Name" nillable="false" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>Should not be modified for Cisco Conference Bridge(WS-SVC-CMM)    and Cisco Media Server(WS-SVC-CMM-MS).</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="description" type="xsd:string" nillable="true" minOccurs="0"/>
					<xsd:choice minOccurs="0">
						<xsd:element name="devicePoolId" type="axl:XUUID" nillable="false"/>
						<xsd:element name="devicePoolName" type="xsd:string" nillable="false"/>
					</xsd:choice>
					<xsd:choice minOccurs="0">
						<xsd:element name="locationId" type="axl:XUUID" nillable="false"/>
						<xsd:element name="locationName" type="xsd:Name" nillable="false"/>
					</xsd:choice>
					<xsd:element name="vendorConfig" type="axl:XVendorConfig" nillable="true" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>Used only for               Cisco Video Conference Bridge(IPVC-35xx),          Cisco Conference Bridge (WS-SVC-CMM)             and Cisco Media Server(WS-SVC-CMM-MS).</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="loadInformation" type="axl:XLoadInformation" nillable="true" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>This tag is used only for Cisco Conference Bridge Hardware.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="maximumCapacity" type="xsd:nonNegativeInteger" default="32" nillable="false" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>This tag is  used only for Cisco Conference Bridge(WS-SVC-CMM)    and Cisco Media Server(WS-SVC-CMM-MS).  Valid values for this tag are 32,64,96,128.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="updateConferenceBridge" type="axl:UpdateConferenceBridgeReq"/>
	<xsd:element name="updateConferenceBridgeResponse" type="axl:StandardResponse"/>
	<xsd:complexType name="GetConferenceBridgeReq">
		<xsd:annotation>
			<xsd:documentation>Retrieves the specified conference bridge from the database.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axl:APIRequest">
				<xsd:choice>
					<xsd:element name="uuid" type="axl:XUUID" nillable="false">
						<xsd:annotation>
							<xsd:documentation>The GUID of the Conference Bridge to be retrieved.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="name" type="xsd:string" nillable="false">
						<xsd:annotation>
							<xsd:documentation>The name of the Conference Bridge to be retrieved.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
				</xsd:choice>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="getConferenceBridge" type="axl:GetConferenceBridgeReq"/>
	<xsd:complexType name="GetConferenceBridgeRes">
		<xsd:complexContent>
			<xsd:extension base="axl:APIResponse">
				<xsd:sequence>
					<xsd:element name="return">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="device" type="axl:XConferenceBridge"/>
							</xsd:sequence>
						</xsd:complexType>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="getConferenceBridgeResponse" type="axl:GetConferenceBridgeRes"/>
	<xsd:complexType name="AddAttendantConsoleUserReq">
		<xsd:annotation>
			<xsd:documentation>Adds a new Pilot User  to the database.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axl:APIRequest">
				<xsd:sequence>
					<xsd:element name="pilotUser" type="axl:XPilotUser"/>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="addAttendantConsoleUser" type="axl:AddAttendantConsoleUserReq"/>
	<xsd:element name="addAttendantConsoleUserResponse" type="axl:StandardResponse"/>
	<xsd:complexType name="RemoveAttendantConsoleUserReq">
		<xsd:annotation>
			<xsd:documentation>Removes the specified pilot user from the database. </xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axl:APIRequest">
				<xsd:choice>
					<xsd:element name="uuid" type="axl:XUUID">
						<xsd:annotation>
							<xsd:documentation>The GUID of the PilotUser to be removed.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="userId" type="xsd:string" nillable="false">
						<xsd:annotation>
							<xsd:documentation>The user Id of the PilotUser be removed.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
				</xsd:choice>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="removeAttendantConsoleUser" type="axl:RemoveAttendantConsoleUserReq"/>
	<xsd:element name="removeAttendantConsoleUserResponse" type="axl:StandardResponse"/>
	<xsd:complexType name="UpdateAttendantConsoleUserReq">
		<xsd:annotation>
			<xsd:documentation>Updates an existing Pilot User in the database.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axl:APIRequest">
				<xsd:sequence>
					<xsd:choice>
						<xsd:element name="userId" type="xsd:string" nillable="false">
							<xsd:annotation>
								<xsd:documentation>The userId of the pilot user to modify.</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
						<xsd:element name="uuid" type="axl:XUUID" nillable="false">
							<xsd:annotation>
								<xsd:documentation>The pkid of the pilot user to modify.</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
					</xsd:choice>
					<xsd:element name="newUserId" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>The new UserId of the pilotUser.Cannot be null.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="password" type="xsd:string" nillable="true" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>Nullable.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="updateAttendantConsoleUser" type="axl:UpdateAttendantConsoleUserReq"/>
	<xsd:element name="updateAttendantConsoleUserResponse" type="axl:StandardResponse"/>
	<xsd:complexType name="GetAttendantConsoleUserReq">
		<xsd:annotation>
			<xsd:documentation>Retrieves the specified Pilot User from the database.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axl:APIRequest">
				<xsd:choice>
					<xsd:element name="uuid" type="axl:XUUID" nillable="false">
						<xsd:annotation>
							<xsd:documentation>The GUID of the pilot user to be retrieved.Not nullable.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="userId" type="xsd:string" nillable="false">
						<xsd:annotation>
							<xsd:documentation>The name of the pilot user to be retrieved.Not nullable.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
				</xsd:choice>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="getAttendantConsoleUser" type="axl:GetAttendantConsoleUserReq"/>
	<xsd:complexType name="GetAttendantConsoleUserRes">
		<xsd:annotation>
			<xsd:documentation>Returns the pilot user specified by the GetPilotUser request.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axl:APIResponse">
				<xsd:sequence>
					<xsd:element name="return">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="pilotUser" type="axl:XPilotUser"/>
							</xsd:sequence>
						</xsd:complexType>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="getAttendantConsoleUserResponse" type="axl:GetAttendantConsoleUserRes"/>
	<xsd:complexType name="AddAttendantConsoleHuntGroupReq">
		<xsd:annotation>
			<xsd:documentation>Adds one new hunt group to the database.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axl:APIRequest">
				<xsd:sequence>
					<xsd:element name="newHuntGroup" type="axl:XPilotHuntGroup" nillable="false">
						<xsd:annotation>
							<xsd:documentation>The new hunt group to be added.Not nullable.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="addAttendantConsoleHuntGroup" type="axl:AddAttendantConsoleHuntGroupReq"/>
	<xsd:element name="addAttendantConsoleHuntGroupResponse" type="axl:StandardResponse"/>
	<xsd:complexType name="UpdateAttendantConsoleHuntGroupReq">
		<xsd:annotation>
			<xsd:documentation>Updates an existing hunt group in the database.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axl:APIRequest">
				<xsd:sequence>
					<xsd:choice>
						<xsd:element name="pilotPointId" type="axl:XUUID"/>
						<xsd:element name="pilotPointName"/>
					</xsd:choice>
					<xsd:element name="members" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>The new members of this Hunt Group.If this element is null, then all members are removed from this hunt group.Note:If the "members" element is present, then all existing members are removed and replaced with the "member" sub-elements.</xsd:documentation>
						</xsd:annotation>
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="member" type="axl:XPilotHuntGroupMember" maxOccurs="unbounded">
									<xsd:annotation>
										<xsd:documentation>A list of the new members of this hunt group.</xsd:documentation>
									</xsd:annotation>
								</xsd:element>
							</xsd:sequence>
						</xsd:complexType>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="updateAttendantConsoleHuntGroup" type="axl:UpdateAttendantConsoleHuntGroupReq"/>
	<xsd:element name="updateAttendantConsoleHuntGroupResponse" type="axl:StandardResponse"/>
	<xsd:complexType name="RemoveAttendantConsoleHuntGroupReq">
		<xsd:annotation>
			<xsd:documentation>Removes the specified hunt group from the database.</xsd:documentation>
		</xsd:annotation>
		<xsd:choice>
			<xsd:element name="pilotPointId">
				<xsd:annotation>
					<xsd:documentation>The GUID of the pilotPoint associated with the hunt group to be retrieved.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="pilotPointName">
				<xsd:annotation>
					<xsd:documentation>The name of the pilotPoint associated with the hunt group to be retrieved.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
		</xsd:choice>
	</xsd:complexType>
	<xsd:element name="removeAttendantConsoleHuntGroup" type="axl:RemoveAttendantConsoleHuntGroupReq"/>
	<xsd:element name="removeAttendantConsoleHuntGroupResponse" type="axl:StandardResponse"/>
	<xsd:element name="getAttendantConsoleHuntGroup" type="axl:GetAttendantConsoleHuntGroupReq"/>
	<xsd:complexType name="GetAttendantConsoleHuntGroupRes">
		<xsd:annotation>
			<xsd:documentation>Contains the hunt group that was specified by the request.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axl:APIResponse">
				<xsd:sequence>
					<xsd:element name="return">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="attendantConsoleHuntGroup" type="axl:XPilotHuntGroup"/>
							</xsd:sequence>
						</xsd:complexType>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="getAttendantConsoleHuntGroupResponse" type="axl:GetAttendantConsoleHuntGroupRes"/>
	<xsd:complexType name="GetAttendantConsoleHuntGroupReq">
		<xsd:annotation>
			<xsd:documentation>Retrieves the specified hunt group from the database.</xsd:documentation>
		</xsd:annotation>
		<xsd:choice>
			<xsd:element name="pilotPointId">
				<xsd:annotation>
					<xsd:documentation>The GUID of the pilotPoint associated with the hunt group to be Removed.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="pilotPointName">
				<xsd:annotation>
					<xsd:documentation>The name of the pilotPoint associated with the hunt group to be Removed.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
		</xsd:choice>
	</xsd:complexType>
	<xsd:complexType name="DeviceLoginReq" abstract="false">
		<xsd:annotation>
			<xsd:documentation>Logs-in the specified user to the specified phone.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axl:APIRequest">
				<xsd:sequence>
					<xsd:choice>
						<xsd:element name="deviceId" type="axl:XUUID" nillable="false">
							<xsd:annotation>
								<xsd:documentation>The GUID of the phone that is being logged-into.  Not nullable.</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
						<xsd:element name="deviceName" type="xsd:string" nillable="false">
							<xsd:annotation>
								<xsd:documentation>The name of hte phone that is being logged-into.  Not nullable.</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
					</xsd:choice>
					<xsd:element name="loginDuration" type="xsd:nonNegativeInteger" nillable="false">
						<xsd:annotation>
							<xsd:documentation>The duration of the login.  Not nullable.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:choice>
						<xsd:element name="profileId" type="axl:XUUID" nillable="false">
							<xsd:annotation>
								<xsd:documentation>The GUID of the Device Profile to be used.  Not nullable.</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
						<xsd:element name="profileName" type="xsd:string" nillable="false">
							<xsd:annotation>
								<xsd:documentation>The name of the Device Profile to be used.  Not nullable.</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
					</xsd:choice>
					<xsd:element name="userId" type="xsd:string" nillable="false">
						<xsd:annotation>
							<xsd:documentation>The LDAP RN of the user that is to be logged-into the phone.  Not nullable.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="doDeviceLogin" type="axl:DeviceLoginReq"/>
	<xsd:complexType name="DeviceLoginResponse">
		<xsd:annotation>
			<xsd:documentation>Returns "true" if the login was performed successfully.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axl:StandardResponse"/>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="doDeviceLoginResponse" type="axl:DeviceLoginResponse"/>
	<xsd:complexType name="DeviceLogoutReq" abstract="false">
		<xsd:annotation>
			<xsd:documentation>This method logs-out whichever user is logged-into the device.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axl:APIRequest">
				<xsd:sequence>
					<xsd:choice>
						<xsd:element name="deviceId" type="axl:XUUID" nillable="false">
							<xsd:annotation>
								<xsd:documentation>The GUID of the device to perform the log-out on.</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
						<xsd:element name="deviceName" type="xsd:string" nillable="false">
							<xsd:annotation>
								<xsd:documentation>The name of the device to perform the log-out on.</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
					</xsd:choice>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="doDeviceLogout" type="axl:DeviceLogoutReq"/>
	<xsd:complexType name="DeviceLogoutRes">
		<xsd:annotation>
			<xsd:documentation>Returns "true" if the log-out was performed successfully.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axl:StandardResponse"/>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="doDeviceLogoutResponse" type="axl:DeviceLogoutRes"/>
	<xsd:complexType name="DeviceResetReq">
		<xsd:annotation>
			<xsd:documentation>Performs either a hard or soft reset on the specified device.  If resetting an MGCP box, then set isMGCP attribute to true.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axl:APIRequest">
				<xsd:sequence>
					<xsd:choice>
						<xsd:element name="deviceId" type="axl:XUUID" nillable="false">
							<xsd:annotation>
								<xsd:documentation>The GUID of the device to perform a reset on.  Not nullable.</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
						<xsd:element name="deviceName" type="xsd:string" nillable="false">
							<xsd:annotation>
								<xsd:documentation>The name of the device to performs a reset on.  Not nullable.</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
					</xsd:choice>
					<xsd:element name="isHardReset" type="xsd:boolean" nillable="false">
						<xsd:annotation>
							<xsd:documentation>True performs a hard reset.  False performs a soft reset.  Not nullable.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
				</xsd:sequence>
				<xsd:attribute name="isMGCP" type="xsd:boolean" use="optional" default="false"/>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="doDeviceReset" type="axl:DeviceResetReq">
		<xsd:annotation>
			<xsd:documentation>Performs either a hard or soft reset on the specified device.  If resetting an MGCP box, then set isMGCP attribute to true.</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<xsd:complexType name="DeviceResetRes">
		<xsd:annotation>
			<xsd:documentation>Returns "true" if the reset was performed successfully.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axl:StandardResponse"/>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="doDeviceResetResponse" type="axl:DeviceResetRes"/>
	<xsd:complexType name="AuthenticateUserReq" abstract="false">
		<xsd:annotation>
			<xsd:documentation>Authenticates the user on the basis of pin or password.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axl:APIRequest">
				<xsd:sequence>
					<xsd:element name="userid" type="xsd:string"/>
					<xsd:choice>
						<xsd:element name="password" type="xsd:string"/>
						<xsd:element name="pin">
							<xsd:annotation>
								<xsd:documentation>Applicable for end users only.</xsd:documentation>
							</xsd:annotation>
							<xsd:simpleType>
								<xsd:restriction base="xsd:string">
									<xsd:pattern value="\d\d\d\d+"/>
								</xsd:restriction>
							</xsd:simpleType>
						</xsd:element>
					</xsd:choice>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="doAuthenticateUser" type="axl:AuthenticateUserReq"/>
	<xsd:complexType name="AuthenticateUserResponse">
		<xsd:complexContent>
			<xsd:extension base="axl:APIResponse">
				<xsd:sequence>
					<xsd:element name="return">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="userAuthenticated" type="xsd:boolean">
									<xsd:annotation>
										<xsd:documentation>true indicates that user was authenticated and false indicates that user was not authenticated.</xsd:documentation>
									</xsd:annotation>
								</xsd:element>
							</xsd:sequence>
						</xsd:complexType>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="doAuthenticateUserResponse" type="axl:AuthenticateUserResponse"/>
	<xsd:complexType name="AddLineReq">
		<xsd:annotation>
			<xsd:documentation>Adds a new Directory Number to the database.  Note that this does NOT associate a directory number with a phone.  Please use addPhone or updatePhone to do this.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axl:APIRequest">
				<xsd:sequence>
					<xsd:element name="newLine" type="axl:XNPDirectoryNumber" nillable="false">
						<xsd:annotation>
							<xsd:documentation>The new line to be added.  Not nullable.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="addLine" type="axl:AddLineReq"/>
	<xsd:element name="addLineResponse" type="axl:StandardResponse"/>
	<xsd:complexType name="RemoveLineReq">
		<xsd:annotation>
			<xsd:documentation>Removes the specified line from the database.  The line can be specified by its GUID, or by a combination of its pattern, Route Partition Id, and Route Filter Id.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axl:GetNumPlanPattern"/>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="removeLine" type="axl:RemoveLineReq"/>
	<xsd:element name="removeLineResponse" type="axl:StandardResponse"/>
	<xsd:complexType name="UpdateLineReq">
		<xsd:annotation>
			<xsd:documentation>Updates an existing line (directory number) in the database.  Can specify the line with its GUID or by a combination of its pattern, route partition id, and route filter id.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axl:GetNumPlanPattern">
				<xsd:sequence>
					<xsd:element name="newPattern" type="xsd:string" nillable="false" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>The new directory number.  Not nullable.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="description" type="axl:String50" minOccurs="0"/>
					<xsd:choice minOccurs="0">
						<xsd:element name="newRoutePartitionId" type="axl:XUUID">
							<xsd:annotation>
								<xsd:documentation>The new Route Partition GUID.  Nullable.</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
						<xsd:element name="newRoutePartitionName" type="axl:String50">
							<xsd:annotation>
								<xsd:documentation>The new Route Partition name.  Nullable.</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
					</xsd:choice>
					<xsd:choice minOccurs="0">
						<xsd:element name="aarNeighborhoodId" type="axl:XUUID"/>
						<xsd:element name="aarNeighborhoodName" type="axl:String50"/>
					</xsd:choice>
					<xsd:element name="callForwardAll" type="axl:XCallForwardInfo" nillable="true" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>The Calling Search Space and destination for Call Forwarding on this line.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="callForwardBusy" type="axl:XCallForwardInfo" nillable="true" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>The Calling Search Space and destination for Call Forwarding when this line is busy for external calls.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="callForwardBusyInt" type="axl:XCallForwardInfo" nillable="true" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>The Calling Search Space and destination for Call Forwarding when this line is busy for internal calls.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="callForwardNoAnswer" type="axl:XCallForwardInfo" nillable="true" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>The Calling Search Space and destination for Call Forwarding when there is no answer on this line for external calls.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="callForwardNoAnswerInt" type="axl:XCallForwardInfo" nillable="true" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>The Calling Search Space and destination for Call Forwarding when there is no answer on this line for internal calls.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="callForwardNoCoverage" type="axl:XCallForwardInfo" nillable="true" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>The Calling Search Space and destination for Call Forwarding when there is no coverage on this line for external calls.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="callForwardNoCoverageInt" type="axl:XCallForwardInfo" nillable="true" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>The Calling Search Space and destination for Call Forwarding when there is no coverage on this line for internal calls.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="callForwardOnFailure" type="axl:XCallForwardInfo" minOccurs="0"/>
					<xsd:element name="callForwardAlternateParty" type="axl:XCallForwardInfo" minOccurs="0"/>
					<xsd:choice minOccurs="0">
						<xsd:element name="callPickupGroup" type="axl:XNPCallPickupGroup">
							<xsd:annotation>
								<xsd:documentation>Only the uuid attribute is read by the AXL API.</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
						<xsd:element name="callPickupGroupName" type="axl:String50"/>
					</xsd:choice>
					<xsd:element name="autoAnswer" type="axl:XAutoAnswer" nillable="false" minOccurs="0"/>
					<xsd:element name="networkHoldMOHAudioSourceId" type="axl:XMOHAudioSourceId" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>A value of 0 means 'none selected'.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="userHoldMOHAudioSourceId" type="axl:XMOHAudioSourceId" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>A value of 0 means 'none selected'.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="alertingName" type="axl:String50" nillable="true"/>
					<xsd:choice minOccurs="0">
						<xsd:element name="shareLineAppearanceCSSId" type="axl:XUUID">
							<xsd:annotation>
								<xsd:documentation>The GUID for the new Calling Search Space used for the Shared Line Appearance for this line.  Nullable.</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
						<xsd:element name="shareLineAppearanceCSSName" type="axl:String50"/>
					</xsd:choice>
					<xsd:choice minOccurs="0">
						<xsd:element name="voiceMailProfileId" type="axl:XUUID">
							<xsd:annotation>
								<xsd:documentation>The GUID of the new Voice Messaging Profile for this directory number.  Nullable.</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
						<xsd:element name="voiceMailProfileName" type="axl:String50"/>
					</xsd:choice>
					<xsd:element name="patternPrecedence" type="axl:XPatternPrecedence" nillable="false" minOccurs="0"/>
					<xsd:element name="releaseCause" type="axl:XReleaseCauseValue" nillable="false" minOccurs="0"/>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="updateLine" type="axl:UpdateLineReq"/>
	<xsd:element name="updateLineResponse" type="axl:StandardResponse"/>
	<xsd:complexType name="GetLineReq">
		<xsd:annotation>
			<xsd:documentation>Retrieves the specified line (directory number) from the database.  Can specify the line with its GUID or by a combination of its pattern, route partition id, and route filter id.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axl:GetNumPlanPattern"/>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="getLine" type="axl:GetLineReq"/>
	<xsd:complexType name="GetLineRes">
		<xsd:annotation>
			<xsd:documentation>Contains the directory number that was specified by the GetLine request.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axl:APIResponse">
				<xsd:sequence>
					<xsd:element name="return">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="directoryNumber" type="axl:XNPDirectoryNumber"/>
							</xsd:sequence>
						</xsd:complexType>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="getLineResponse" type="axl:GetLineRes"/>
	<xsd:complexType name="AddUserReq">
		<xsd:annotation>
			<xsd:documentation>Adds a new user to the user directory.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axl:APIRequest">
				<xsd:sequence>
					<xsd:element name="newUser" type="axl:XUser">
						<xsd:annotation>
							<xsd:documentation>The new user to be added.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="addUser" type="axl:AddUserReq"/>
	<xsd:element name="addUserResponse" type="axl:StandardResponse"/>
	<xsd:complexType name="RemoveUserReq">
		<xsd:annotation>
			<xsd:documentation>Removes the specified user from the user directory.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axl:APIRequest">
				<xsd:sequence>
					<xsd:element name="userid" type="xsd:string" nillable="false">
						<xsd:annotation>
							<xsd:documentation>The ID of the user to be removed. Not nullable.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="removeUser" type="axl:RemoveUserReq"/>
	<xsd:element name="removeUserResponse" type="axl:StandardResponse"/>
	<xsd:complexType name="UpdateUserReq">
		<xsd:annotation>
			<xsd:documentation>Updates an existing user in the directory.  Specify the user to be modified with their LDAP RN.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axl:APIRequest">
				<xsd:sequence>
					<xsd:element name="userid" type="xsd:string">
						<xsd:annotation>
							<xsd:documentation>The userid of the user to be modified.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="firstname" type="xsd:string" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>The new first name (given name) of the user.  Nullable.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="lastname" type="xsd:string" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>The new last name (surname) of the user.  Nullable.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="password" type="xsd:string" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>The new password for the user.  Not nullable.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="pin" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>The new PIN (personal identification number) for the user.  Not nullable.</xsd:documentation>
						</xsd:annotation>
						<xsd:simpleType>
							<xsd:restriction base="xsd:string">
								<xsd:pattern value="^\d+$"/>
							</xsd:restriction>
						</xsd:simpleType>
					</xsd:element>
					<xsd:element name="telephoneNumber" type="axl:XDirectoryNumber" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>The new telephone number for the user.  Nullable.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="extension" type="axl:XDirectoryNumber" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>This field has been deprecated in Seadragon</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="department" type="xsd:string" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>The new department for the user.  Nullable.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="manager" type="xsd:string" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>The new manager for the user.  Nullable.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="userLocale" type="axl:XUserLocale" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>The new locale for the user.  Not nullable.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="associatedDevices" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>The devices associated with this user.  Also known as controlled devices.  If "associateDevices" is present, then all current associated devices are replaced by the devices listed underneath the "associatedDevices" element.  Nullable.</xsd:documentation>
						</xsd:annotation>
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="device" type="axl:String50" minOccurs="0" maxOccurs="unbounded">
									<xsd:annotation>
										<xsd:documentation>Name of device.</xsd:documentation>
									</xsd:annotation>
								</xsd:element>
							</xsd:sequence>
						</xsd:complexType>
					</xsd:element>
					<xsd:element name="associatedPC" type="xsd:string" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>The new PC associated with this user.  Nullable.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="authenticationProxyRights" type="xsd:boolean" nillable="false" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>This field has been deprecated in Seadragon</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="enableCTI" type="xsd:boolean" nillable="false" minOccurs="0"/>
					<xsd:element name="digestCredentials" type="xsd:string" nillable="true" minOccurs="0"/>
					<xsd:element name="enableCTISuperProvider" type="xsd:boolean" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>This field has been deprecated in Seadragon</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="allowCallParkRetrieval" type="xsd:boolean" nillable="false" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>This field has been deprecated in Seadragon</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="callingNumberModAllowed" type="xsd:boolean" nillable="false" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>This field has been deprecated in Seadragon</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="iaqExtension" type="xsd:string" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>This field has been deprecated in Seadragon</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="phoneProfiles" minOccurs="0">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:choice>
									<xsd:element name="profile" type="axl:XPhoneProfile" nillable="false" maxOccurs="unbounded">
										<xsd:annotation>
											<xsd:documentation>The complete profile object.  Only the "uuid" attribute is used by the AXL API.</xsd:documentation>
										</xsd:annotation>
									</xsd:element>
									<xsd:element name="profileName" type="xsd:string" nillable="false" maxOccurs="unbounded">
										<xsd:annotation>
											<xsd:documentation>The profile name.</xsd:documentation>
										</xsd:annotation>
									</xsd:element>
								</xsd:choice>
							</xsd:sequence>
						</xsd:complexType>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="updateUser" type="axl:UpdateUserReq"/>
	<xsd:element name="updateUserResponse" type="axl:StandardResponse"/>
	<xsd:complexType name="GetUserReq">
		<xsd:annotation>
			<xsd:documentation>Retrieves the specified user from the directory.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axl:APIRequest">
				<xsd:sequence>
					<xsd:element name="userid" type="xsd:string" nillable="false">
						<xsd:annotation>
							<xsd:documentation>The ID of the user to be retrieved.  Not nullable.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="getUser" type="axl:GetUserReq"/>
	<xsd:complexType name="GetUserRes">
		<xsd:annotation>
			<xsd:documentation>Contains the user that was specified by the GetUser request.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axl:APIResponse">
				<xsd:sequence>
					<xsd:element name="return">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="user" type="axl:XUser"/>
							</xsd:sequence>
						</xsd:complexType>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="getUserResponse" type="axl:GetUserRes"/>
	<xsd:complexType name="StandardResponse">
		<xsd:annotation>
			<xsd:documentation>Returns either the GUID of the object that was altered, or returns true if the operation was successful.  Whichever is appropriate for the corresponding request.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axl:APIResponse">
				<xsd:sequence>
					<xsd:element name="return">
						<xsd:simpleType>
							<xsd:restriction base="xsd:string">
								<xsd:pattern value="(true)|(false)|(\{........-....-....-....-............\})"/>
							</xsd:restriction>
						</xsd:simpleType>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="AddDeviceProfileReq">
		<xsd:annotation>
			<xsd:documentation>Adds a new device profile to the databse.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axl:APIRequest">
				<xsd:sequence>
					<xsd:element name="newProfile" type="axl:XPhoneProfile">
						<xsd:annotation>
							<xsd:documentation>The new profile to be added. Not nullable.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="addDeviceProfile" type="axl:AddDeviceProfileReq"/>
	<xsd:element name="addDeviceProfileResponse" type="axl:StandardResponse"/>
	<xsd:complexType name="RemoveDeviceProfileReq">
		<xsd:annotation>
			<xsd:documentation>Removes the specified device profile from the database.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axl:APIRequest">
				<xsd:choice>
					<xsd:element name="profileId" type="axl:XUUID" nillable="false">
						<xsd:annotation>
							<xsd:documentation>The GUID of the profile to be removed. Not nullable.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="profileName" type="xsd:string" nillable="false">
						<xsd:annotation>
							<xsd:documentation>The name of the profile to be removed. Not nullable</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
				</xsd:choice>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="removeDeviceProfile" type="axl:RemoveDeviceProfileReq"/>
	<xsd:element name="removeDeviceProfileResponse" type="axl:StandardResponse"/>
	<xsd:complexType name="UpdateDeviceProfileReq">
		<xsd:annotation>
			<xsd:documentation>Modifies an existing device profile in the database.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axl:APIRequest">
				<xsd:sequence>
					<xsd:choice>
						<xsd:element name="name" type="xsd:string">
							<xsd:annotation>
								<xsd:documentation>The name of the profile that you want to update.</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
						<xsd:element name="uuid" type="axl:XUUID">
							<xsd:annotation>
								<xsd:documentation>The GUID of the profile that you want to update.</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
					</xsd:choice>
					<xsd:element name="newName" type="xsd:Name" nillable="false" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>The new name of the profile.  Cannot be null.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="description" type="xsd:string" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>The new description of the profile.  Nullable.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="networkHoldMOHAudioSourceId" type="axl:XMOHAudioSourceId" nillable="false" minOccurs="0"/>
					<xsd:element name="userHoldMOHAudioSourceId" type="axl:XMOHAudioSourceId" nillable="false" minOccurs="0"/>
					<xsd:element name="mlppDomainId" type="xsd:int" nillable="false" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>This setting only affects devices that support MLPP.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="mlppIndicationStatus" type="axl:XStatus" nillable="false" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>This setting only affects devices that support MLPP.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="preemption" type="axl:XPreemption" nillable="false" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>This setting only affects devices that support MLPP.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:choice minOccurs="0">
						<xsd:element name="subscribeCallingSearchSpaceId" type="axl:XUUID" nillable="true"/>
						<xsd:element name="subscribeCallingSearchSpaceName" type="axl:String50" nillable="true"/>
					</xsd:choice>
					<xsd:element name="allowCtiControlFlag" type="axl:XBoolean" nillable="true" minOccurs="0"/>
					<xsd:choice minOccurs="0">
						<xsd:element name="presenceGroupID" type="axl:XUUID" nillable="false"/>
						<xsd:element name="PresenceGroupName" type="axl:String50" nillable="false"/>
					</xsd:choice>
					<xsd:element name="lines" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>The new lines for this profile.  If this element is null, then all lines are removed from this profile.  Note:  If the lines element is present, then all existing lines are removed and replaced with the sub-elements described by the line and lineIdentifier elements.  All lines specified must already exist in the database.</xsd:documentation>
						</xsd:annotation>
						<xsd:complexType>
							<xsd:choice>
								<xsd:element name="line" type="axl:XLine" maxOccurs="unbounded"/>
								<xsd:element name="lineIdentifier" type="axl:XNumplanIdentifier" maxOccurs="unbounded"/>
							</xsd:choice>
						</xsd:complexType>
					</xsd:element>
					<xsd:choice minOccurs="0">
						<xsd:element name="phoneTemplateId" type="axl:XUUID">
							<xsd:annotation>
								<xsd:documentation>The GUID of the new Phone Template for this profile.  Nullable.</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
						<xsd:element name="phoneTemplateName" type="axl:String50"/>
					</xsd:choice>
					<xsd:element name="speeddials" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>The new speed-dials for this profile.  If this element is null, then all speed-dials are removed from this profile.  Note:  If the "speeddials" element is present, then all existing speed-dials are removed and replaced with the "speeddial" sub-elements.</xsd:documentation>
						</xsd:annotation>
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="speeddial" type="axl:XSpeeddial" maxOccurs="unbounded"/>
							</xsd:sequence>
						</xsd:complexType>
					</xsd:element>
					<xsd:element name="busyLampFields" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>The new Busy Lamp Fields for this profile.  If this element is null, then all  Busy Lamp Fields are removed from this profile.  Note:  If the " Busy Lamp Fields" element is present, then all existing  Busy Lamp Fields are removed and replaced with the " Busy Lamp Field" sub-elements.</xsd:documentation>
						</xsd:annotation>
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="busyLampField" type="axl:XBusyLampField" minOccurs="0" maxOccurs="unbounded"/>
							</xsd:sequence>
						</xsd:complexType>
					</xsd:element>
					<xsd:element name="addOnModules" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>The new Add-on Modules associated with this profile.  If this element is null, then all Add-on Modules are removed from this profile.  Note:  If the "addOnModules" element is present, then all existing Add-on Modules are removed and replaced with the "addOnModule" sub-elements.  All Add-on Modules specified must already exist in the database.</xsd:documentation>
						</xsd:annotation>
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="addOnModule" type="axl:XAddOnModule" maxOccurs="unbounded"/>
							</xsd:sequence>
						</xsd:complexType>
					</xsd:element>
					<xsd:element name="userLocale" type="axl:XUserLocale" nillable="true" minOccurs="0"/>
					<xsd:element name="services" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>The new subscribed services for this profile.  If this element is null, then all services are removed from this profile.  Note:  If the "services" element is present, then all existing services are removed and replaced with the "service" sub-elements.</xsd:documentation>
						</xsd:annotation>
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="service" type="axl:XSubscribedService" minOccurs="0" maxOccurs="unbounded"/>
							</xsd:sequence>
						</xsd:complexType>
					</xsd:element>
					<xsd:choice minOccurs="0">
						<xsd:element name="softkeyTemplateId" type="axl:XUUID"/>
						<xsd:element name="softkeyTemplateName" type="axl:String50"/>
					</xsd:choice>
					<xsd:element name="loginUserId" type="axl:String255" nillable="false" minOccurs="0"/>
					<xsd:element name="ignorePresentationIndicators" type="xsd:boolean" default="false" nillable="false" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>The new Ignore Presentation Indicators flag for Hospitality Feature is required for most phones and device profiles.Not Nullable.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="updateDeviceProfile" type="axl:UpdateDeviceProfileReq"/>
	<xsd:element name="updateDeviceProfileResponse" type="axl:StandardResponse"/>
	<xsd:complexType name="GetDeviceProfileReq">
		<xsd:annotation>
			<xsd:documentation>Retrieves the specified Device Profile from the database.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axl:APIRequest">
				<xsd:choice>
					<xsd:element name="profileId" type="axl:XUUID" nillable="false">
						<xsd:annotation>
							<xsd:documentation>The GUID of the profile to be retrieved.  Not nullable.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="profileName" type="xsd:string" nillable="false">
						<xsd:annotation>
							<xsd:documentation>The name of the profile to be retrieved.  Not nullable.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
				</xsd:choice>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="getDeviceProfile" type="axl:GetDeviceProfileReq"/>
	<xsd:complexType name="GetDeviceProfileRes">
		<xsd:annotation>
			<xsd:documentation>Contains the device profile that was specified by the request.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axl:APIResponse">
				<xsd:sequence>
					<xsd:element name="return">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="profile" type="axl:XPhoneProfile"/>
							</xsd:sequence>
						</xsd:complexType>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="getDeviceProfileResponse" type="axl:GetDeviceProfileRes"/>
	<xsd:complexType name="AddTimePeriodReq" abstract="false" final="#all">
		<xsd:complexContent>
			<xsd:extension base="axl:APIRequest">
				<xsd:sequence>
					<xsd:element name="timePeriod" type="axl:XTimePeriod"/>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="addTimePeriod" type="axl:AddTimePeriodReq"/>
	<xsd:element name="addTimePeriodResponse" type="axl:StandardResponse"/>
	<xsd:element name="getTimePeriod" type="axl:NameAndGUIDRequest"/>
	<xsd:complexType name="GetTimePeriodRes">
		<xsd:complexContent>
			<xsd:extension base="axl:APIResponse">
				<xsd:sequence>
					<xsd:element name="return">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="timePeriod" type="axl:XTimePeriod"/>
							</xsd:sequence>
						</xsd:complexType>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="getTimePeriodResponse" type="axl:GetTimePeriodRes"/>
	<xsd:element name="removeTimePeriod" type="axl:NameAndGUIDRequest"/>
	<xsd:element name="removeTimePeriodResponse" type="axl:StandardResponse"/>
	<xsd:complexType name="UpdateTimePeriodReq">
		<xsd:complexContent>
			<xsd:extension base="axl:NameAndGUIDRequest">
				<xsd:sequence>
					<xsd:element name="newName" type="axl:String50" nillable="false" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>Not nullable.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="startTime" type="axl:XTimeOfDay" nillable="false" minOccurs="0"/>
					<xsd:element name="endTime" type="axl:XTimeOfDay" nillable="false" minOccurs="0"/>
					<xsd:element name="startDay" type="axl:XDayOfWeek" minOccurs="0"/>
					<xsd:element name="endDay" type="axl:XDayOfWeek" minOccurs="0"/>
					<xsd:element name="monthOfYear" type="axl:XMonthOfYear" minOccurs="0"/>
					<xsd:element name="dayOfMonth" type="xsd:nonNegativeInteger" minOccurs="0"/>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="updateTimePeriod" type="axl:UpdateTimePeriodReq"/>
	<xsd:element name="updateTimePeriodResponse" type="axl:StandardResponse"/>
	<xsd:complexType name="AddTimeScheduleReq">
		<xsd:complexContent>
			<xsd:extension base="axl:APIRequest">
				<xsd:sequence>
					<xsd:element name="timeSchedule" type="axl:XTimeSchedule"/>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="addTimeSchedule" type="axl:AddTimeScheduleReq"/>
	<xsd:element name="addTimeScheduleResponse" type="axl:StandardResponse"/>
	<xsd:element name="getTimeSchedule" type="axl:NameAndGUIDRequest"/>
	<xsd:complexType name="GetTimeScheduleRes">
		<xsd:complexContent>
			<xsd:extension base="axl:APIResponse">
				<xsd:sequence>
					<xsd:element name="return">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="timeSchedule" type="axl:XTimeSchedule"/>
							</xsd:sequence>
						</xsd:complexType>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="getTimeScheduleResponse" type="axl:GetTimeScheduleRes"/>
	<xsd:element name="removeTimeSchedule" type="axl:NameAndGUIDRequest"/>
	<xsd:element name="removeTimeScheduleResponse" type="axl:StandardResponse"/>
	<xsd:complexType name="UpdateTimeScheduleReq">
		<xsd:complexContent>
			<xsd:extension base="axl:NameAndGUIDRequest">
				<xsd:sequence>
					<xsd:element name="newName" type="axl:String50" nillable="false" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>Not nullable.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="members" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>Not nullable.</xsd:documentation>
						</xsd:annotation>
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="member" type="axl:XTimeScheduleTimePeriod" maxOccurs="unbounded"/>
							</xsd:sequence>
						</xsd:complexType>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="updateTimeSchedule" type="axl:UpdateTimeScheduleReq"/>
	<xsd:element name="updateTimeScheduleResponse" type="axl:StandardResponse"/>
	<xsd:complexType name="AddRoutePartitionReq">
		<xsd:annotation>
			<xsd:documentation>Adds a new route partition to the database.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axl:APIRequest">
				<xsd:sequence>
					<xsd:element name="newRoutePartition" type="axl:XRoutePartition" nillable="false">
						<xsd:annotation>
							<xsd:documentation>The route partition to be added.  Not nullable.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="addRoutePartition" type="axl:AddRoutePartitionReq"/>
	<xsd:element name="addRoutePartitionResponse" type="axl:StandardResponse"/>
	<xsd:complexType name="UpdateRoutePartitionReq">
		<xsd:annotation>
			<xsd:documentation>Updates an existing route partition in the database.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axl:APIRequest">
				<xsd:sequence>
					<xsd:choice>
						<xsd:element name="name" type="xsd:string" nillable="false">
							<xsd:annotation>
								<xsd:documentation>The name of the route partition to be modified.  Not nullable.</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
						<xsd:element name="uuid" type="axl:XUUID" nillable="false">
							<xsd:annotation>
								<xsd:documentation>The GUID of the route partition to be modified.  Not nullable.</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
					</xsd:choice>
					<xsd:element name="newName" type="xsd:string" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>The new name for this route partition.  Not nullable.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="description" type="xsd:string" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>The new description for this route partition.  Nullable.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:choice minOccurs="0">
						<xsd:element name="newTimeScheduleId" type="axl:XUUID">
							<xsd:annotation>
								<xsd:documentation>The new Time Schedule GUID for this Route Partition. Nullable.</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
						<xsd:element name="newTimeScheduleName" type="axl:String50"/>
					</xsd:choice>
					<xsd:element name="useOriginatingDeviceTimeZone" type="xsd:boolean" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>Not nullable.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="timeZone" type="axl:XTimeZone" minOccurs="0"/>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="updateRoutePartition" type="axl:UpdateRoutePartitionReq"/>
	<xsd:element name="updateRoutePartitionResponse" type="axl:StandardResponse"/>
	<xsd:complexType name="RemoveRoutePartitionReq">
		<xsd:annotation>
			<xsd:documentation>Removes the specified route partition from the database.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axl:APIRequest">
				<xsd:choice>
					<xsd:element name="partitionId" type="axl:XUUID" nillable="false">
						<xsd:annotation>
							<xsd:documentation>The GUID of the route partition to be removed.  Not nullable.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="partitionName" type="xsd:string" nillable="false">
						<xsd:annotation>
							<xsd:documentation>The name of the route partition to be removed.  Not nullable.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
				</xsd:choice>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="removeRoutePartition" type="axl:RemoveRoutePartitionReq"/>
	<xsd:element name="removeRoutePartitionResponse" type="axl:StandardResponse"/>
	<xsd:complexType name="GetRoutePartitionReq">
		<xsd:annotation>
			<xsd:documentation>Retrieves the specified route partition from the database.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axl:APIRequest">
				<xsd:choice>
					<xsd:element name="partitionId" type="axl:XUUID" nillable="false">
						<xsd:annotation>
							<xsd:documentation>The GUID of the route partition to be retrieved.  Not nullable.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="partitionName" type="xsd:string" nillable="false">
						<xsd:annotation>
							<xsd:documentation>The name of the route partition to be removed.  Not nullable.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
				</xsd:choice>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="getRoutePartition" type="axl:GetRoutePartitionReq"/>
	<xsd:complexType name="GetRoutePartitionRes">
		<xsd:annotation>
			<xsd:documentation>Contains the route partition that was specified by the request.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axl:APIResponse">
				<xsd:sequence>
					<xsd:element name="return">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="routePartition" type="axl:XRoutePartition"/>
							</xsd:sequence>
						</xsd:complexType>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="getRoutePartitionResponse" type="axl:GetRoutePartitionRes"/>
	<xsd:element name="getCSS" type="axl:NameAndGUIDRequest"/>
	<xsd:complexType name="GetCSSRes">
		<xsd:annotation>
			<xsd:documentation>Contains the calling search space that was specified by the request.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axl:APIResponse">
				<xsd:sequence>
					<xsd:element name="return">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="callingSearchSpace" type="axl:XCallingSearchSpace"/>
							</xsd:sequence>
						</xsd:complexType>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="getCSSResponse" type="axl:GetCSSRes"/>
	<xsd:element name="removeCSS" type="axl:NameAndGUIDRequest"/>
	<xsd:element name="removeCSSResponse" type="axl:StandardResponse"/>
	<xsd:complexType name="AddCSSReq">
		<xsd:annotation>
			<xsd:documentation>Adds a new Calling Search Space to the database.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axl:APIRequest">
				<xsd:sequence>
					<xsd:element name="newCSS" type="axl:XCallingSearchSpace" nillable="false">
						<xsd:annotation>
							<xsd:documentation>The calling search space to be added.  Not nullable.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="addCSS" type="axl:AddCSSReq"/>
	<xsd:element name="addCSSResponse" type="axl:StandardResponse"/>
	<xsd:complexType name="UpdateCSSReq">
		<xsd:annotation>
			<xsd:documentation>Updates an existing Calling Search Space in the database.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axl:APIRequest">
				<xsd:sequence>
					<xsd:choice>
						<xsd:element name="name" type="xsd:string" nillable="false">
							<xsd:annotation>
								<xsd:documentation>The name of the calling search space to be modified.  Not nullable.</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
						<xsd:element name="uuid" type="axl:XUUID" nillable="false">
							<xsd:annotation>
								<xsd:documentation>The GUID of the calling search space to be modified.  Not nullable.</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
					</xsd:choice>
					<xsd:element name="newName" type="xsd:string" nillable="false" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>The new name for this calling search space.  Not nullable.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="description" type="xsd:string" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>The new description for this calling search space.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="members" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>The new members of this calling search space.  If "members" is present, then all current members of this calling search space are removed and replaced by the "member" sub-elements.  Nullable.</xsd:documentation>
						</xsd:annotation>
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="member" type="axl:XCallingSearchSpaceMember" minOccurs="0" maxOccurs="unbounded"/>
							</xsd:sequence>
						</xsd:complexType>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="updateCSS" type="axl:UpdateCSSReq"/>
	<xsd:element name="updateCSSResponse" type="axl:StandardResponse"/>
	<xsd:complexType name="UpdateNumPlanPattern" abstract="true">
		<xsd:annotation>
			<xsd:documentation>Abstract</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axl:GetNumPlanPattern"/>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="GetNumPlanPattern" abstract="true">
		<xsd:annotation>
			<xsd:documentation>Abstract</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axl:APIRequest">
				<xsd:sequence>
					<xsd:element name="uuid" type="axl:XUUID"/>
					<xsd:sequence>
						<xsd:element name="pattern" type="xsd:string"/>
						<xsd:choice>
							<xsd:element name="routePartitionId" type="axl:XUUID"/>
							<xsd:element name="routePartitionName" type="axl:String50"/>
						</xsd:choice>
						<xsd:choice>
							<xsd:annotation>
								<xsd:documentation>Some NumPlans do not require a Route Filter, thus these elements can be null.</xsd:documentation>
							</xsd:annotation>
							<xsd:element name="routeFilterId" type="axl:XUUID"/>
							<xsd:element name="routeFilterName" type="axl:String50"/>
						</xsd:choice>
					</xsd:sequence>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="GetCallPickupGroup" abstract="true">
		<xsd:annotation>
			<xsd:documentation>Abstract</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axl:APIRequest">
				<xsd:sequence>
					<xsd:choice>
						<xsd:element name="uuid" type="axl:XUUID">
							<xsd:annotation>
								<xsd:documentation>This is the uuid of CallPickupGroup</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
						<xsd:element name="name" type="axl:String50"/>
						<xsd:sequence>
							<xsd:element name="pattern" type="xsd:string"/>
							<xsd:choice>
								<xsd:element name="routePartitionId" type="axl:XUUID"/>
								<xsd:element name="routePartitionName" type="axl:String50"/>
							</xsd:choice>
							<xsd:choice>
								<xsd:annotation>
									<xsd:documentation>Some NumPlans do not require a Route Filter, thus these elements can be null.</xsd:documentation>
								</xsd:annotation>
								<xsd:element name="routeFilterId" type="axl:XUUID"/>
								<xsd:element name="routeFilterName" type="axl:String50"/>
							</xsd:choice>
						</xsd:sequence>
					</xsd:choice>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="GetTransPatternReq">
		<xsd:annotation>
			<xsd:documentation>Retrieves the specified Translation Pattern from the database. Can specify the translation pattern with its GUID or by a combination of its pattern, route partition id, and route filter id.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axl:GetNumPlanPattern"/>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="getTransPattern" type="axl:GetTransPatternReq"/>
	<xsd:complexType name="GetTransPatternRes">
		<xsd:annotation>
			<xsd:documentation>Contains the translation pattern that was specified by the request.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axl:APIResponse">
				<xsd:sequence>
					<xsd:element name="return">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="pattern" type="axl:XNPTranslationPattern"/>
							</xsd:sequence>
						</xsd:complexType>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="getTransPatternResponse" type="axl:GetTransPatternRes"/>
	<xsd:complexType name="RemoveTransPatternReq">
		<xsd:annotation>
			<xsd:documentation>Removes the specified translation pattern from the database.  Can specify the translation pattern with its GUID or by a combination of its pattern, route partition id, and route filter id.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axl:GetNumPlanPattern"/>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="removeTransPattern" type="axl:RemoveTransPatternReq"/>
	<xsd:element name="removeTransPatternResponse" type="axl:StandardResponse"/>
	<xsd:complexType name="AddTransPatternReq">
		<xsd:annotation>
			<xsd:documentation>Adds a new translation pattern to the database.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axl:APIRequest">
				<xsd:sequence>
					<xsd:element name="newPattern" type="axl:XNPTranslationPattern">
						<xsd:annotation>
							<xsd:documentation>The new pattern to be added.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="addTransPattern" type="axl:AddTransPatternReq"/>
	<xsd:element name="addTransPatternResponse" type="axl:StandardResponse"/>
	<xsd:complexType name="UpdateTransPatternReq">
		<xsd:annotation>
			<xsd:documentation>Updates an existing translation pattern in the database.  Can specify the translation pattern with its GUID or by a combination of its pattern, route partition id, and route filter id.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axl:UpdateNumPlanPattern">
				<xsd:sequence>
					<xsd:element name="newPattern" type="xsd:string" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>The new pattern for this tranlsation pattern.  Nullable.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="description" type="axl:String50" minOccurs="0"/>
					<xsd:choice minOccurs="0">
						<xsd:element name="newRoutePartitionId" type="axl:XUUID">
							<xsd:annotation>
								<xsd:documentation>The GUID of the new route partition of this tranlsation pattern.  Nullable.</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
						<xsd:element name="newRoutePartitionName" type="axl:String50"/>
					</xsd:choice>
					<xsd:element name="blockEnable" type="xsd:boolean" nillable="false" minOccurs="0"/>
					<xsd:element name="calledPartyTransformationMask" type="xsd:string" minOccurs="0"/>
					<xsd:element name="callingPartyTransformationMask" type="xsd:string" minOccurs="0"/>
					<xsd:element name="useCallingPartyPhoneMask" type="axl:XStatus" nillable="false" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>Not nullable.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="callingPartyPrefixDigits" type="axl:String50" nillable="true" minOccurs="0"/>
					<xsd:element name="callingPartyPresentation" type="axl:XPresentationBit" nillable="false" minOccurs="0"/>
					<xsd:choice minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>Nullable.</xsd:documentation>
						</xsd:annotation>
						<xsd:element name="dialPlanId" type="axl:XUUID"/>
						<xsd:element name="dialPlanName" type="axl:String50"/>
					</xsd:choice>
					<xsd:choice minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>Nullable.</xsd:documentation>
						</xsd:annotation>
						<xsd:element name="digitDiscardInstructionId" type="axl:XUUID"/>
						<xsd:element name="digitDiscardInstructionName" type="axl:String50"/>
					</xsd:choice>
					<xsd:element name="messageWaiting" type="axl:XLampBlinkRate" minOccurs="0"/>
					<xsd:element name="networkLocation" type="axl:XNetworkLocation" minOccurs="0"/>
					<xsd:element name="patternUrgency" type="xsd:boolean" nillable="false" minOccurs="0"/>
					<xsd:element name="prefixDigitsOut" type="xsd:string" minOccurs="0"/>
					<xsd:choice minOccurs="0">
						<xsd:element name="newRouteFilterId" type="axl:XUUID">
							<xsd:annotation>
								<xsd:documentation>The GUID of the new route filter for this translation pattern.  Nullable.</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
						<xsd:element name="newRouteFilterName" type="axl:String50"/>
					</xsd:choice>
					<xsd:element name="callingLinePresentationBit" type="axl:XPresentationBit" nillable="false" minOccurs="0"/>
					<xsd:element name="callingNamePresentationBit" type="axl:XPresentationBit" nillable="false" minOccurs="0"/>
					<xsd:element name="connectedLinePresentationBit" type="axl:XPresentationBit" nillable="false" minOccurs="0"/>
					<xsd:element name="connectedNamePresentationBit" type="axl:XPresentationBit" nillable="false" minOccurs="0"/>
					<xsd:element name="supportOverlapSending" type="xsd:boolean" nillable="false" minOccurs="0"/>
					<xsd:element name="patternPrecedence" type="axl:XPatternPrecedence" nillable="false" minOccurs="0"/>
					<xsd:element name="releaseCause" type="axl:XReleaseCauseValue" nillable="false" minOccurs="0"/>
					<xsd:choice minOccurs="0">
						<xsd:element name="callingSearchSpaceId" type="axl:XUUID">
							<xsd:annotation>
								<xsd:documentation>The GUID of the new calling search space for this translation pattern.  Nullable.</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
						<xsd:element name="callingSearchSpaceName" type="axl:String50"/>
					</xsd:choice>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="updateTransPattern" type="axl:UpdateTransPatternReq"/>
	<xsd:element name="updateTransPatternResponse" type="axl:StandardResponse"/>
	<xsd:complexType name="GetRoutePatternReq">
		<xsd:annotation>
			<xsd:documentation>Retrieves the specified Route Pattern from the database.  Can specify the route pattern with its GUID or by a combination of its pattern, route partition id, and route filter id.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axl:GetNumPlanPattern"/>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="getRoutePattern" type="axl:GetRoutePatternReq"/>
	<xsd:complexType name="GetRoutePatternRes">
		<xsd:annotation>
			<xsd:documentation>Contains the route pattern that was specified by the request.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axl:APIResponse">
				<xsd:sequence>
					<xsd:element name="return">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="pattern" type="axl:XNPRoutePattern"/>
							</xsd:sequence>
						</xsd:complexType>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="getRoutePatternResponse" type="axl:GetRoutePatternRes"/>
	<xsd:complexType name="RemoveRoutePatternReq">
		<xsd:annotation>
			<xsd:documentation>Removes the specified route pattern from the database.  Can specify the route pattern with its GUID or by a combination of its pattern, route partition id, and route filter id.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axl:GetNumPlanPattern"/>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="removeRoutePattern" type="axl:RemoveRoutePatternReq"/>
	<xsd:element name="removeRoutePatternResponse" type="axl:StandardResponse"/>
	<xsd:complexType name="AddRoutePatternReq">
		<xsd:annotation>
			<xsd:documentation>Adds a new Route Pattern to the database.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axl:APIRequest">
				<xsd:sequence>
					<xsd:element name="newPattern" type="axl:XNPRoutePattern" nillable="false">
						<xsd:annotation>
							<xsd:documentation>The new route pattern to be added.  Not nullable.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="addRoutePattern" type="axl:AddRoutePatternReq"/>
	<xsd:element name="addRoutePatternResponse" type="axl:StandardResponse"/>
	<xsd:complexType name="UpdateRoutePatternReq">
		<xsd:annotation>
			<xsd:documentation>Updates an existing route pattern in the database.  The route pattern can be specified by its GUID, or by a combination if its pattern, route partition GUID, and route filter GUID.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axl:UpdateNumPlanPattern">
				<xsd:sequence>
					<xsd:element name="newPattern" type="xsd:string" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>The new pattern for this route pattern.  Nullable.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="description" type="axl:String50" minOccurs="0"/>
					<xsd:choice minOccurs="0">
						<xsd:element name="newRoutePartitionId" type="axl:XUUID" minOccurs="0">
							<xsd:annotation>
								<xsd:documentation>The GUID of the new route partition of this route pattern.  Nullable.</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
						<xsd:element name="newRoutePartitionName" type="axl:String50" minOccurs="0"/>
					</xsd:choice>
					<xsd:element name="blockEnable" type="xsd:boolean" nillable="false" minOccurs="0"/>
					<xsd:element name="calledPartyTransformationMask" type="xsd:string" minOccurs="0"/>
					<xsd:element name="callingPartyTransformationMask" type="xsd:string" minOccurs="0"/>
					<xsd:element name="useCallingPartyPhoneMask" type="axl:XStatus" nillable="false" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>Not nullable.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="callingPartyPrefixDigits" type="axl:String50" nillable="true" minOccurs="0"/>
					<xsd:choice minOccurs="0">
						<xsd:element name="dialPlanId" type="axl:XUUID" minOccurs="0"/>
						<xsd:element name="dialPlanName" type="axl:String50" minOccurs="0"/>
					</xsd:choice>
					<xsd:choice minOccurs="0">
						<xsd:element name="digitDiscardInstructionName" type="axl:String50" minOccurs="0"/>
						<xsd:element name="digitDiscardInstructionId" type="axl:XUUID" minOccurs="0"/>
					</xsd:choice>
					<xsd:element name="messageWaiting" type="axl:XLampBlinkRate" minOccurs="0"/>
					<xsd:element name="networkLocation" type="axl:XNetworkLocation" minOccurs="0"/>
					<xsd:element name="patternUrgency" type="xsd:boolean" nillable="false" minOccurs="0"/>
					<xsd:element name="prefixDigitsOut" type="xsd:string" minOccurs="0"/>
					<xsd:choice minOccurs="0">
						<xsd:element name="newRouteFilterId" type="axl:XUUID" minOccurs="0">
							<xsd:annotation>
								<xsd:documentation>The GUID of the new route filter for this route pattern.  Nullable.</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
						<xsd:element name="newRouteFilterName" type="axl:String50" minOccurs="0"/>
					</xsd:choice>
					<xsd:element name="callingLinePresentationBit" type="axl:XPresentationBit" nillable="false" minOccurs="0"/>
					<xsd:element name="callingNamePresentationBit" type="axl:XPresentationBit" nillable="false" minOccurs="0"/>
					<xsd:element name="connectedLinePresentationBit" type="axl:XPresentationBit" nillable="false" minOccurs="0"/>
					<xsd:element name="connectedNamePresentationBit" type="axl:XPresentationBit" nillable="false" minOccurs="0"/>
					<xsd:element name="supportOverlapSending" type="xsd:boolean" nillable="false" minOccurs="0"/>
					<xsd:element name="patternPrecedence" type="axl:XPatternPrecedence" nillable="false" minOccurs="0"/>
					<xsd:element name="releaseCause" type="axl:XReleaseCauseValue" nillable="false" minOccurs="0"/>
					<xsd:element name="allowDeviceOverride" minOccurs="0"/>
					<xsd:element name="provideOutsideDialtone" minOccurs="0"/>
					<xsd:element name="destination" nillable="false" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>The new destination for this route pattern. Can be a gateway or a route list.  Not nullable.</xsd:documentation>
						</xsd:annotation>
						<xsd:complexType>
							<xsd:choice>
								<xsd:sequence>
									<xsd:choice>
										<xsd:element name="gateway" type="axl:XDevice"/>
										<xsd:element name="gatewayName" type="xsd:string"/>
									</xsd:choice>
								</xsd:sequence>
								<xsd:sequence>
									<xsd:choice>
										<xsd:element name="routeList" type="axl:XRouteList"/>
										<xsd:element name="routeListName" type="xsd:string"/>
									</xsd:choice>
								</xsd:sequence>
							</xsd:choice>
						</xsd:complexType>
					</xsd:element>
					<xsd:element name="authorizationCodeRequired" type="xsd:boolean" nillable="false" minOccurs="0"/>
					<xsd:element name="authorizationLevelRequired" type="xsd:nonNegativeInteger" nillable="false" minOccurs="0"/>
					<xsd:element name="clientCodeRequired" type="xsd:boolean" nillable="false" minOccurs="0"/>
					<xsd:element name="withTag" type="axl:String50" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>The new NSF Tag.  Nullable.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="withValueClause" type="axl:String255" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>The new NSF Value Clause.  Nullable.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="updateRoutePattern" type="axl:UpdateRoutePatternReq"/>
	<xsd:element name="updateRoutePatternResponse" type="axl:StandardResponse"/>
	<xsd:complexType name="GetHuntPilotReq">
		<xsd:annotation>
			<xsd:documentation>Retrieves the specified Hunt Pilot from the database.  Can specify the hunt pilot with its GUID or by a combination of its pattern, route partition id, and route filter id.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axl:GetNumPlanPattern"/>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="getHuntPilot" type="axl:GetHuntPilotReq"/>
	<xsd:complexType name="GetHuntPilotRes">
		<xsd:annotation>
			<xsd:documentation>Contains the hunt pilot that was specified by the request.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axl:APIResponse">
				<xsd:sequence>
					<xsd:element name="return">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="pattern" type="axl:XNPHuntPilot"/>
							</xsd:sequence>
						</xsd:complexType>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="getHuntPilotResponse" type="axl:GetHuntPilotRes"/>
	<xsd:complexType name="RemoveHuntPilotReq">
		<xsd:annotation>
			<xsd:documentation>Removes the specified hunt pilot from the database.  Can specify the hunt pilot with its GUID or by a combination of its pattern, route partition id, and route filter id.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axl:GetNumPlanPattern"/>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="removeHuntPilot" type="axl:RemoveHuntPilotReq"/>
	<xsd:element name="removeHuntPilotResponse" type="axl:StandardResponse"/>
	<xsd:complexType name="AddHuntPilotReq">
		<xsd:annotation>
			<xsd:documentation>Adds a new Hunt PIlot to the database.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axl:APIRequest">
				<xsd:sequence>
					<xsd:element name="newPattern" type="axl:XNPHuntPilot" nillable="false">
						<xsd:annotation>
							<xsd:documentation>The new hunt pilot to be added.  Not nullable.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="addHuntPilot" type="axl:AddHuntPilotReq"/>
	<xsd:element name="addHuntPilotResponse" type="axl:StandardResponse"/>
	<xsd:complexType name="UpdateHuntPilotReq">
		<xsd:annotation>
			<xsd:documentation>Updates an existing hunt pilot in the database.  The hunt pilot can be specified by its GUID, or by a combination if its pattern, route partition GUID, and route filter GUID.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axl:UpdateNumPlanPattern">
				<xsd:sequence>
					<xsd:element name="newPattern" type="xsd:string" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>The new pattern for this hunt pilot.  Nullable.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="description" type="axl:String50" minOccurs="0"/>
					<xsd:choice minOccurs="0">
						<xsd:element name="newRoutePartitionId" type="axl:XUUID" minOccurs="0">
							<xsd:annotation>
								<xsd:documentation>The GUID of the new Route Partition of this hunt pilot.  Nullable.</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
						<xsd:element name="newRoutePartitionName" type="axl:String50" minOccurs="0"/>
					</xsd:choice>
					<xsd:element name="blockEnable" type="xsd:boolean" nillable="false" minOccurs="0"/>
					<xsd:element name="calledPartyTransformationMask" type="xsd:string" minOccurs="0"/>
					<xsd:element name="callingPartyTransformationMask" type="xsd:string" minOccurs="0"/>
					<xsd:element name="useCallingPartyPhoneMask" type="axl:XStatus" nillable="false" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>Not nullable.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="callingPartyPrefixDigits" type="axl:String50" nillable="true" minOccurs="0"/>
					<xsd:choice minOccurs="0">
						<xsd:element name="dialPlanId" type="axl:XUUID" minOccurs="0"/>
						<xsd:element name="dialPlanName" type="axl:String50" minOccurs="0"/>
					</xsd:choice>
					<xsd:choice minOccurs="0">
						<xsd:element name="digitDiscardInstructionName" type="axl:String50" minOccurs="0"/>
						<xsd:element name="digitDiscardInstructionId" type="axl:XUUID" minOccurs="0"/>
					</xsd:choice>
					<xsd:element name="messageWaiting" type="axl:XLampBlinkRate" minOccurs="0"/>
					<xsd:element name="networkLocation" type="axl:XNetworkLocation" minOccurs="0"/>
					<xsd:element name="patternUrgency" type="xsd:boolean" nillable="false" minOccurs="0"/>
					<xsd:element name="prefixDigitsOut" type="xsd:string" minOccurs="0"/>
					<xsd:choice minOccurs="0">
						<xsd:element name="newRouteFilterId" type="axl:XUUID" minOccurs="0">
							<xsd:annotation>
								<xsd:documentation>The GUID of the new route filter for this route pattern.  Nullable.</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
						<xsd:element name="newRouteFilterName" type="axl:String50" minOccurs="0"/>
					</xsd:choice>
					<xsd:element name="callingLinePresentationBit" type="axl:XPresentationBit" nillable="false" minOccurs="0"/>
					<xsd:element name="callingNamePresentationBit" type="axl:XPresentationBit" nillable="false" minOccurs="0"/>
					<xsd:element name="connectedLinePresentationBit" type="axl:XPresentationBit" nillable="false" minOccurs="0"/>
					<xsd:element name="connectedNamePresentationBit" type="axl:XPresentationBit" nillable="false" minOccurs="0"/>
					<xsd:element name="patternPrecedence" type="axl:XPatternPrecedence" nillable="false" minOccurs="0"/>
					<xsd:element name="releaseCause" type="axl:XReleaseCauseValue" nillable="false" minOccurs="0"/>
					<xsd:element name="destination" nillable="false" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>The new destination for this hunt pilot. Can only be a hunt list.  Not nullable.</xsd:documentation>
						</xsd:annotation>
						<xsd:complexType>
							<xsd:sequence>
								<xsd:choice>
									<xsd:element name="huntList" type="axl:XHuntList"/>
									<xsd:element name="huntListName" type="xsd:string"/>
								</xsd:choice>
							</xsd:sequence>
						</xsd:complexType>
					</xsd:element>
					<xsd:element name="ForwardHuntBusy" type="axl:XHuntForwardInfo" minOccurs="0"/>
					<xsd:element name="ForwardHuntNoAnswer" type="axl:XHuntForwardInfo" minOccurs="0"/>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="updateHuntPilot" type="axl:UpdateHuntPilotReq"/>
	<xsd:element name="updateHuntPilotResponse" type="axl:StandardResponse"/>
	<xsd:complexType name="AddLineGroupReq">
		<xsd:annotation>
			<xsd:documentation>Adds a new Line Group to the database.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axl:APIRequest">
				<xsd:sequence>
					<xsd:element name="lineGroup" type="axl:XLineGroup"/>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="addLineGroup" type="axl:AddLineGroupReq"/>
	<xsd:element name="addLineGroupResponse" type="axl:StandardResponse"/>
	<xsd:complexType name="UpdateLineGroupReq">
		<xsd:annotation>
			<xsd:documentation>Updates an existing line group in the database.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axl:APIRequest">
				<xsd:sequence>
					<xsd:choice>
						<xsd:element name="name" type="xsd:string" nillable="false"/>
						<xsd:element name="uuid" type="axl:XUUID" nillable="false"/>
					</xsd:choice>
					<xsd:element name="newName" type="xsd:string" nillable="false" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>The new name for this line group.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="distributionAlgorithm" type="axl:XDistributeAlgorithm" nillable="false"/>
					<xsd:element name="rnaReversionTimeOut" type="xsd:nonNegativeInteger" default="10" nillable="false"/>
					<xsd:element name="huntAlgorithmNoAnswer" type="axl:XHuntAlgorithm" nillable="false"/>
					<xsd:element name="huntAlgorithmBusy" type="axl:XHuntAlgorithm" nillable="false"/>
					<xsd:element name="huntAlgorithmNotAvailable" type="axl:XHuntAlgorithm" nillable="false"/>
					<xsd:element name="members" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>This new line group members for this route group.  All of the line group's current members are replaced by the "member" sub-elements specified.</xsd:documentation>
						</xsd:annotation>
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="member" type="axl:XLineGroupMember" maxOccurs="unbounded">
									<xsd:annotation>
										<xsd:documentation>A list of the new members of this Line group.</xsd:documentation>
									</xsd:annotation>
								</xsd:element>
							</xsd:sequence>
						</xsd:complexType>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="updateLineGroup" type="axl:UpdateLineGroupReq"/>
	<xsd:element name="updateLineGroupResponse" type="axl:StandardResponse"/>
	<xsd:element name="getLineGroup" type="axl:NameAndGUIDRequest"/>
	<xsd:complexType name="GetLineGroupRes">
		<xsd:annotation>
			<xsd:documentation>Contains the line group that was specified by the request.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axl:APIResponse">
				<xsd:sequence>
					<xsd:element name="return">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="lineGroup" type="axl:XLineGroup"/>
							</xsd:sequence>
						</xsd:complexType>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="getLineGroupResponse" type="axl:GetLineGroupRes"/>
	<xsd:element name="removeLineGroup" type="axl:NameAndGUIDRequest"/>
	<xsd:element name="removeLineGroupResponse" type="axl:StandardResponse"/>
	<xsd:complexType name="AddRouteGroupReq">
		<xsd:annotation>
			<xsd:documentation>Adds a new Route Group to the database.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axl:APIRequest">
				<xsd:sequence>
					<xsd:element name="routeGroup" type="axl:XRouteGroup"/>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="addRouteGroup" type="axl:AddRouteGroupReq"/>
	<xsd:element name="addRouteGroupResponse" type="axl:StandardResponse"/>
	<xsd:complexType name="UpdateRouteGroupReq">
		<xsd:annotation>
			<xsd:documentation>Updates an existing route group in the database.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axl:APIRequest">
				<xsd:sequence>
					<xsd:choice>
						<xsd:element name="name" type="xsd:string" nillable="false"/>
						<xsd:element name="uuid" type="axl:XUUID" nillable="false"/>
					</xsd:choice>
					<xsd:element name="newName" type="xsd:string" nillable="false" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>The new name for this route group.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="members" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>This new route group members for this route group.  All of the route group's current members are replaced by the "member" sub-elements specified.</xsd:documentation>
						</xsd:annotation>
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="member" type="axl:XRouteGroupMember" maxOccurs="unbounded">
									<xsd:annotation>
										<xsd:documentation>A list of the new members of this route group.</xsd:documentation>
									</xsd:annotation>
								</xsd:element>
							</xsd:sequence>
						</xsd:complexType>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="updateRouteGroup" type="axl:UpdateRouteGroupReq"/>
	<xsd:element name="updateRouteGroupResponse" type="axl:StandardResponse"/>
	<xsd:element name="getRouteGroup" type="axl:NameAndGUIDRequest"/>
	<xsd:complexType name="GetRouteGroupRes">
		<xsd:annotation>
			<xsd:documentation>Contains the route group that was specified by the request.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axl:APIResponse">
				<xsd:sequence>
					<xsd:element name="return">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="routeGroup" type="axl:XRouteGroup"/>
							</xsd:sequence>
						</xsd:complexType>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="getRouteGroupResponse" type="axl:GetRouteGroupRes"/>
	<xsd:element name="removeRouteGroup" type="axl:NameAndGUIDRequest"/>
	<xsd:element name="removeRouteGroupResponse" type="axl:StandardResponse"/>
	<xsd:complexType name="AddRouteListReq">
		<xsd:annotation>
			<xsd:documentation>Add a new Route List to the database.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axl:APIRequest">
				<xsd:sequence>
					<xsd:element name="routeList" type="axl:XRouteList"/>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="addRouteList" type="axl:AddRouteListReq"/>
	<xsd:element name="addRouteListResponse" type="axl:StandardResponse"/>
	<xsd:complexType name="UpdateRouteListReq">
		<xsd:annotation>
			<xsd:documentation>Updates an existing Route List in the database.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axl:APIRequest">
				<xsd:sequence>
					<xsd:choice>
						<xsd:element name="name" type="axl:String50" nillable="false">
							<xsd:annotation>
								<xsd:documentation>The name of the route list to modify (from the Device table).</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
						<xsd:element name="uuid" type="axl:XUUID" nillable="false">
							<xsd:annotation>
								<xsd:documentation>The pkid of the route list to modify (from the Device table).</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
					</xsd:choice>
					<xsd:element name="newName" type="axl:String50" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>The new name for this Route List. Not nullable.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="description" type="xsd:string" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>The new description for this Route List.  Nullable.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:choice minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>Not nullable.</xsd:documentation>
						</xsd:annotation>
						<xsd:element name="callManagerGroupName" type="axl:String50" nillable="false"/>
						<xsd:element name="callManagerGroup" type="axl:XCallManagerGroup" nillable="false">
							<xsd:annotation>
								<xsd:documentation>Only the uuid attribute is read by the AXL API.</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
					</xsd:choice>
					<xsd:element name="routeListEnabled" type="xsd:boolean" nillable="false" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>Not nullable.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="members" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>The new list of route groups that are part of this route list. A route list must have at least one member.</xsd:documentation>
						</xsd:annotation>
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="member" type="axl:XRouteListMember" maxOccurs="unbounded"/>
							</xsd:sequence>
						</xsd:complexType>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="updateRouteList" type="axl:UpdateRouteListReq"/>
	<xsd:element name="updateRouteListResponse" type="axl:StandardResponse"/>
	<xsd:element name="getRouteList" type="axl:NameAndGUIDRequest"/>
	<xsd:complexType name="GetRouteListRes">
		<xsd:annotation>
			<xsd:documentation>Contains the Route List that was specified by the request.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axl:APIResponse">
				<xsd:sequence>
					<xsd:element name="return">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="routeList" type="axl:XRouteList"/>
							</xsd:sequence>
						</xsd:complexType>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="getRouteListResponse" type="axl:GetRouteListRes"/>
	<xsd:element name="removeRouteList" type="axl:NameAndGUIDRequest"/>
	<xsd:element name="removeRouteListResponse" type="axl:StandardResponse"/>
	<xsd:complexType name="AddHuntListReq">
		<xsd:annotation>
			<xsd:documentation>Add a new Hunt List to the database.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axl:APIRequest">
				<xsd:sequence>
					<xsd:element name="huntList" type="axl:XHuntList"/>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="addHuntList" type="axl:AddHuntListReq"/>
	<xsd:element name="addHuntListResponse" type="axl:StandardResponse"/>
	<xsd:complexType name="UpdateHuntListReq">
		<xsd:annotation>
			<xsd:documentation>Updates an existing Hunt List in the database.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axl:APIRequest">
				<xsd:sequence>
					<xsd:choice>
						<xsd:element name="name" type="axl:String50" nillable="false">
							<xsd:annotation>
								<xsd:documentation>The name of the hunt list to modify (from the Device table).</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
						<xsd:element name="uuid" type="axl:XUUID" nillable="false">
							<xsd:annotation>
								<xsd:documentation>The pkid of the hunt list to modify (from the Device table).</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
					</xsd:choice>
					<xsd:element name="newName" type="axl:String50" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>The new name for this Hunt List. Not nullable.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="description" type="xsd:string" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>The new description for this Hunt List.  Nullable.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:choice minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>Not nullable.</xsd:documentation>
						</xsd:annotation>
						<xsd:element name="callManagerGroupName" type="axl:String50" nillable="false"/>
						<xsd:element name="callManagerGroup" type="axl:XCallManagerGroup" nillable="false">
							<xsd:annotation>
								<xsd:documentation>Only the uuid attribute is read by the AXL API.</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
					</xsd:choice>
					<xsd:element name="routeListEnabled" type="xsd:boolean" nillable="false" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>Not nullable.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="members" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>The new list of line groups that are part of this route list. A route list must have at least one member.</xsd:documentation>
						</xsd:annotation>
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="member" type="axl:XHuntListMember" maxOccurs="unbounded"/>
							</xsd:sequence>
						</xsd:complexType>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="updateHuntList" type="axl:UpdateHuntListReq"/>
	<xsd:element name="updateHuntListResponse" type="axl:StandardResponse"/>
	<xsd:element name="getHuntList" type="axl:NameAndGUIDRequest"/>
	<xsd:complexType name="GetHuntListRes">
		<xsd:annotation>
			<xsd:documentation>Contains the Hunt List that was specified by the request.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axl:APIResponse">
				<xsd:sequence>
					<xsd:element name="return">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="huntList" type="axl:XHuntList"/>
							</xsd:sequence>
						</xsd:complexType>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="getHuntListResponse" type="axl:GetHuntListRes"/>
	<xsd:element name="removeHuntList" type="axl:NameAndGUIDRequest"/>
	<xsd:element name="removeHuntListResponse" type="axl:StandardResponse"/>
	<xsd:complexType name="AddCTIRoutePointReq">
		<xsd:annotation>
			<xsd:documentation>Adds a new CTI Route Point to the database.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axl:APIRequest">
				<xsd:sequence>
					<xsd:element name="routePoint" type="axl:XCTIRoutePoint"/>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="addCTIRoutePoint" type="axl:AddCTIRoutePointReq"/>
	<xsd:element name="addCTIRoutePointResponse" type="axl:StandardResponse"/>
	<xsd:complexType name="UpdateCTIRoutePointReq">
		<xsd:annotation>
			<xsd:documentation>Modifies an existing CTI Route Point in the database.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axl:APIRequest">
				<xsd:sequence>
					<xsd:choice>
						<xsd:element name="name" type="axl:Name128" nillable="false"/>
						<xsd:element name="uuid" type="axl:XUUID" nillable="false"/>
					</xsd:choice>
					<xsd:element name="newName" type="axl:Name128" nillable="false" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>The new name of this Route Point.  Not nullable.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="description" type="axl:String128" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>The new description for this Route Point.  Nullable.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:choice minOccurs="0">
						<xsd:element name="callingSearchSpaceId" type="axl:XUUID">
							<xsd:annotation>
								<xsd:documentation>The new Calling Search Space for this Route Point.  Nullable.</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
						<xsd:element name="callingSearchSpaceName" type="axl:Name128">
							<xsd:annotation>
								<xsd:documentation>Nullable.</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
					</xsd:choice>
					<xsd:choice minOccurs="0">
						<xsd:element name="devicePoolId" type="axl:XUUID" nillable="false">
							<xsd:annotation>
								<xsd:documentation>The new Device Pool for this Route Point. Not nullable.</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
						<xsd:element name="devicePoolName" type="axl:Name128">
							<xsd:annotation>
								<xsd:documentation>Not nullable.</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
					</xsd:choice>
					<xsd:choice minOccurs="0">
						<xsd:element name="locationId" type="axl:XUUID">
							<xsd:annotation>
								<xsd:documentation>The new location for this Route Point.  Nullable.</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
						<xsd:element name="locationName" type="axl:String50">
							<xsd:annotation>
								<xsd:documentation>Nullable.</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
					</xsd:choice>
					<xsd:element name="lines" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>The new lines for this phone.  If this element is null, then all lines are removed from this phone.  Note:  If the lines element is present, then all existing lines are removed and replaced with the sub-elements described by the line and lineIdentifier elements.  All directory numbers specified must already exist in the database.</xsd:documentation>
						</xsd:annotation>
						<xsd:complexType>
							<xsd:choice>
								<xsd:element name="line" type="axl:XLine" maxOccurs="unbounded"/>
								<xsd:element name="lineIdentifier" type="axl:XNumplanIdentifier" maxOccurs="unbounded"/>
							</xsd:choice>
						</xsd:complexType>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="updateCTIRoutePoint" type="axl:UpdateCTIRoutePointReq"/>
	<xsd:element name="updateCTIRoutePointResponse" type="axl:StandardResponse"/>
	<xsd:element name="getCTIRoutePoint" type="axl:NameAndGUIDRequest"/>
	<xsd:complexType name="GetCTIRoutePointRes">
		<xsd:annotation>
			<xsd:documentation>Contains the CTI Route Point that was specified by the request.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axl:APIResponse">
				<xsd:sequence>
					<xsd:element name="return">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="routePoint" type="axl:XCTIRoutePoint"/>
							</xsd:sequence>
						</xsd:complexType>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="getCTIRoutePointResponse" type="axl:GetCTIRoutePointRes"/>
	<xsd:element name="removeCTIRoutePoint" type="axl:NameAndGUIDRequest"/>
	<xsd:element name="removeCTIRoutePointResponse" type="axl:StandardResponse"/>
	<xsd:complexType name="AddDialPlanReq">
		<xsd:annotation>
			<xsd:documentation>Adds a new Dial Plan to the database.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axl:APIRequest">
				<xsd:sequence>
					<xsd:element name="dialPlan" type="axl:XDialPlan"/>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<!--<xsd:element name="addDialPlan" type="axl:AddDialPlanReq">
		<xsd:annotation>
			<xsd:documentation>This API call is experimental and not supported in normal operation.</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<xsd:element name="addDialPlanResponse" type="axl:StandardResponse"/>-->
	<xsd:complexType name="UpdateDialPlanReq">
		<xsd:annotation>
			<xsd:documentation>Modifies an existing Dial Plan in the database.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axl:NameAndGUIDRequest">
				<xsd:sequence>
					<xsd:element name="newName" type="axl:String50" nillable="false" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>The new name for this Dial Plan.  Not nullable.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="description" type="axl:String50" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>The new description for this Dial Plan.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<!--<xsd:element name="updateDialPlan" type="axl:UpdateDialPlanReq">
		<xsd:annotation>
			<xsd:documentation>This API call is experimental and not supported in normal operation.</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<xsd:element name="updateDialPlanResponse" type="axl:StandardResponse"/>-->
	<xsd:element name="getDialPlan" type="axl:NameAndGUIDRequest"/>
	<xsd:complexType name="GetDialPlanRes">
		<xsd:annotation>
			<xsd:documentation>Contains the Dial Plan that was specified by the request.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axl:APIResponse">
				<xsd:sequence>
					<xsd:element name="return">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="dialPlan" type="axl:XDialPlan"/>
							</xsd:sequence>
						</xsd:complexType>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="getDialPlanResponse" type="axl:GetDialPlanRes"/>
	<!--<xsd:element name="removeDialPlan" type="axl:NameAndGUIDRequest">
		<xsd:annotation>
			<xsd:documentation>This API call is experimental and not supported in normal operation.</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<xsd:element name="removeDialPlanResponse" type="axl:StandardResponse"/>-->
	<xsd:complexType name="AddDialPlanTagReq">
		<xsd:annotation>
			<xsd:documentation>Adds a new Dial Plan Tag to the databse</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axl:APIRequest">
				<xsd:sequence>
					<xsd:element name="dialPlanTag" type="axl:XDialPlanTag" nillable="false"/>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<!--<xsd:element name="addDialPlanTag" type="axl:AddDialPlanTagReq">
		<xsd:annotation>
			<xsd:documentation>This API call is experimental and not supported in normal operation.</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<xsd:element name="addDialPlanTagResponse" type="axl:StandardResponse"/>-->
	<xsd:complexType name="UpdateDialPlanTagReq">
		<xsd:annotation>
			<xsd:documentation>Modifies an existing Dial Plan Tag in the database.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axl:NameAndGUIDRequest">
				<xsd:sequence>
					<xsd:element name="newName" type="axl:Name50" nillable="false" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>The name (or "tag" in the database) for this Dial Plan Tag. Not nullable.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:choice minOccurs="0">
						<xsd:element name="dialPlan" type="axl:XDialPlan" nillable="false">
							<xsd:annotation>
								<xsd:documentation>The new Dial Plan for this Dial Plan Tag. Note that the "uuid" attribute is used. Not nullable.</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
						<xsd:element name="dialPlanName" type="axl:String50">
							<xsd:annotation>
								<xsd:documentation>Not nullable.</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
					</xsd:choice>
					<xsd:element name="operator" type="axl:XOperator" nillable="false" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>The new Operator type for this Dial Plan Tag. Not nullable.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="suppressFromRouteFilter" type="xsd:boolean" nillable="false" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>The new boolean value for the suppressFromRouteFilter property of this Dial Plan Tag.  Not nullable.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<!--<xsd:element name="updateDialPlanTag" type="axl:UpdateDialPlanTagReq">
		<xsd:annotation>
			<xsd:documentation>This API call is experimental and not supported in normal operation.</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<xsd:element name="updateDialPlanTagResponse" type="axl:StandardResponse"/>-->
	<xsd:element name="getDialPlanTag">
		<xsd:complexType>
			<xsd:sequence>
				<xsd:choice>
					<xsd:sequence>
						<xsd:element name="name"/>
						<xsd:sequence>
							<xsd:choice>
								<xsd:element name="dialPlanUuid"/>
								<xsd:element name="dialPlanName"/>
							</xsd:choice>
						</xsd:sequence>
					</xsd:sequence>
					<xsd:element name="uuid"/>
				</xsd:choice>
			</xsd:sequence>
		</xsd:complexType>
	</xsd:element>
	<xsd:complexType name="GetDialPlanTagRes">
		<xsd:annotation>
			<xsd:documentation>Contains the Dial Plan Tag that was specified by the request.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axl:APIResponse">
				<xsd:sequence>
					<xsd:element name="return">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="dialPlanTag" type="axl:XDialPlanTag"/>
							</xsd:sequence>
						</xsd:complexType>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="getDialPlanTagResponse" type="axl:GetDialPlanTagRes"/>
	<!--<xsd:element name="removeDialPlanTag" type="axl:NameAndGUIDRequest">
		<xsd:annotation>
			<xsd:documentation>This API call is experimental and not supported in normal operation.</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<xsd:element name="removeDialPlanTagResponse" type="axl:StandardResponse"/>-->
	<xsd:complexType name="AddCallParkReq">
		<xsd:annotation>
			<xsd:documentation>Adds a new Call Park num plan to the database.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axl:APIRequest">
				<xsd:sequence>
					<xsd:element name="callPark" type="axl:XNPCallPark" nillable="false"/>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="addCallPark" type="axl:AddCallParkReq"/>
	<xsd:element name="addCallParkResponse" type="axl:StandardResponse"/>
	<xsd:complexType name="UpdateCallParkReq">
		<xsd:annotation>
			<xsd:documentation>Modifies an existing Call Park num plan in the database.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axl:GetNumPlanPattern">
				<xsd:sequence>
					<xsd:element name="newPattern" type="xsd:string" nillable="false" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>The new directory number for this Call Park num plan.  Not Nullable.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="description" type="axl:String50" minOccurs="0"/>
					<xsd:choice minOccurs="0">
						<xsd:element name="newRoutePartitionId" type="axl:XUUID">
							<xsd:annotation>
								<xsd:documentation>The new Route Partition GUID for this Call Park num plan. Nullable.</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
						<xsd:element name="newRoutePartitionName" type="axl:String50"/>
					</xsd:choice>
					<xsd:choice minOccurs="0">
						<xsd:element name="callManagerId" type="axl:XUUID" nillable="false">
							<xsd:annotation>
								<xsd:documentation>The GUID of the new CallManager associated to this Call Park num plan.  Not Nullable.</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
						<xsd:element name="callManagerName" type="axl:String50">
							<xsd:annotation>
								<xsd:documentation>Not nullable.</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
					</xsd:choice>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="updateCallPark" type="axl:UpdateCallParkReq"/>
	<xsd:element name="updateCallParkResponse" type="axl:StandardResponse"/>
	<xsd:complexType name="GetCallParkReq">
		<xsd:annotation>
			<xsd:documentation>Retrieves the specified Call Park num plan from the database.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axl:GetNumPlanPattern"/>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="getCallPark" type="axl:GetCallParkReq"/>
	<xsd:complexType name="GetCallParkRes">
		<xsd:annotation>
			<xsd:documentation>Contains the Call Park num plan specified by the request.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axl:APIResponse">
				<xsd:sequence>
					<xsd:element name="return">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="callPark" type="axl:XNPCallPark"/>
							</xsd:sequence>
						</xsd:complexType>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="getCallParkResponse" type="axl:GetCallParkRes"/>
	<xsd:complexType name="RemoveCallParkReq">
		<xsd:annotation>
			<xsd:documentation>Removes the specified Call Park num plan from the database.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axl:GetNumPlanPattern"/>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="removeCallPark" type="axl:RemoveCallParkReq"/>
	<xsd:element name="removeCallParkResponse" type="axl:StandardResponse"/>
	<xsd:complexType name="AddCallPickupGroupReq">
		<xsd:annotation>
			<xsd:documentation>Adds a new Call Pickup Group to the database.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axl:APIRequest">
				<xsd:sequence>
					<xsd:element name="callPickup" type="axl:XNPCallPickupGroup"/>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="addCallPickupGroup" type="axl:AddCallPickupGroupReq"/>
	<xsd:element name="addCallPickupGroupResponse" type="axl:StandardResponse"/>
	<xsd:complexType name="UpdateCallPickupGroupReq">
		<xsd:annotation>
			<xsd:documentation>Modifies and existing Call Pickup Group in the database.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axl:GetCallPickupGroup">
				<xsd:sequence>
					<xsd:element name="newPattern" type="axl:XDirectoryNumber" minOccurs="0"/>
					<xsd:element name="description" type="axl:String50" minOccurs="0"/>
					<xsd:choice minOccurs="0">
						<xsd:element name="newRoutePartitionId" type="axl:XUUID"/>
						<xsd:element name="newRoutePartitionName" type="axl:String50"/>
					</xsd:choice>
					<xsd:element name="newName" type="axl:XDirectoryNumber" minOccurs="0"/>
					<xsd:element name="members" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>On Addition always the first member added is itself. Do not specify the first member as itself in an Add request . Also make sure that the priority always starts with 1. It will internally be taken care of during Addition and Updation.</xsd:documentation>
						</xsd:annotation>
						<xsd:complexType>
							<xsd:sequence minOccurs="0">
								<xsd:element name="member" type="axl:XPickupGroupMember" minOccurs="0" maxOccurs="unbounded">
									<xsd:annotation>
										<xsd:documentation>A list of the new members of this Pickup group.</xsd:documentation>
									</xsd:annotation>
								</xsd:element>
							</xsd:sequence>
						</xsd:complexType>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="updateCallPickupGroup" type="axl:UpdateCallPickupGroupReq"/>
	<xsd:element name="updateCallPickupGroupResponse" type="axl:StandardResponse"/>
	<xsd:complexType name="GetCallPickupGroupReq">
		<xsd:annotation>
			<xsd:documentation>Retrieves the specified Call Pickup Group from the database.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axl:GetCallPickupGroup"/>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="getCallPickupGroup" type="axl:GetCallPickupGroupReq"/>
	<xsd:complexType name="GetCallPickupGroupRes">
		<xsd:annotation>
			<xsd:documentation>Contains the Call Pickup Group specified by the request.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axl:APIResponse">
				<xsd:sequence>
					<xsd:element name="return">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="callPickup" type="axl:XNPCallPickupGroup"/>
							</xsd:sequence>
						</xsd:complexType>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="getCallPickupGroupResponse" type="axl:GetCallPickupGroupRes"/>
	<xsd:complexType name="RemoveCallPickupGroupReq">
		<xsd:annotation>
			<xsd:documentation>Removes the specified Call Pickup Group from the database.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axl:GetCallPickupGroup"/>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="removeCallPickupGroup" type="axl:RemoveCallPickupGroupReq"/>
	<xsd:element name="removeCallPickupGroupResponse" type="axl:StandardResponse"/>
	<xsd:complexType name="AddDDIReq">
		<xsd:annotation>
			<xsd:documentation>Adds a new Digit Discard Instruction to the database.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axl:APIRequest">
				<xsd:sequence>
					<xsd:element name="ddi" type="axl:XDigitDiscardInstruction"/>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<!--<xsd:element name="addDDI" type="axl:AddDDIReq">
		<xsd:annotation>
			<xsd:documentation>This API call is experimental and not supported in normal operation.</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<xsd:element name="addDDIResponse" type="axl:StandardResponse"/>-->
	<xsd:complexType name="UpdateDDIReq">
		<xsd:annotation>
			<xsd:documentation>Modifies and existing Digit Discard Instruction in the database.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axl:NameAndGUIDRequest">
				<xsd:sequence>
					<xsd:element name="newName" type="axl:Name50" nillable="false" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>The new name for this Digit Discard Instruction. Not nullable.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:choice minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>The GUID or name of the new Dial Plan for this Digit Discard Instruction.  Not nullable.</xsd:documentation>
						</xsd:annotation>
						<xsd:element name="dialPlanId" type="axl:XUUID" nillable="false"/>
						<xsd:element name="dialPlanName" type="axl:String50" nillable="false"/>
					</xsd:choice>
					<xsd:element name="members" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>The "members" element will contain the new list of members of this Digit Discard Instruction.  If the "members" element is present, any existing members are deleted and replaced by the new "member" elements.  Nullable.</xsd:documentation>
						</xsd:annotation>
						<xsd:complexType>
							<xsd:sequence minOccurs="0">
								<xsd:element name="member" type="axl:XDigitDiscardInstructionMember" maxOccurs="unbounded"/>
							</xsd:sequence>
						</xsd:complexType>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<!--<xsd:element name="updateDDI" type="axl:UpdateDDIReq">
		<xsd:annotation>
			<xsd:documentation>This API call is experimental and not supported in normal operation.</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<xsd:element name="updateDDIResponse" type="axl:StandardResponse"/>-->
	<xsd:element name="getDDI">
		<xsd:complexType>
			<xsd:sequence>
				<xsd:choice>
					<xsd:sequence>
						<xsd:element name="name"/>
						<xsd:sequence>
							<xsd:choice>
								<xsd:element name="dialPlanUuid"/>
								<xsd:element name="dialPlanName"/>
							</xsd:choice>
						</xsd:sequence>
					</xsd:sequence>
					<xsd:element name="uuid"/>
				</xsd:choice>
			</xsd:sequence>
		</xsd:complexType>
	</xsd:element>
	<xsd:complexType name="GetDDIRes">
		<xsd:annotation>
			<xsd:documentation>Contains the Digit Discard Instruction specified by the request.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axl:APIResponse">
				<xsd:sequence>
					<xsd:element name="return">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="ddi" type="axl:XDigitDiscardInstruction"/>
							</xsd:sequence>
						</xsd:complexType>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="getDDIResponse" type="axl:GetDDIRes"/>
	<!--<xsd:element name="removeDDI" type="axl:NameAndGUIDRequest">
		<xsd:annotation>
			<xsd:documentation>This API call is experimental and not supported in normal operation.</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<xsd:element name="removeDDIResponse" type="axl:StandardResponse"/>-->
	<xsd:complexType name="CreateAutogeneratedProfileReq">
		<xsd:annotation>
			<xsd:documentation>This method uses the specified phone to create an auto-generated device profile.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axl:APIRequest">
				<xsd:choice>
					<xsd:element name="phoneName" type="xsd:string" nillable="false">
						<xsd:annotation>
							<xsd:documentation>The name of the phone to use to create the profile.  Not nullable.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="phoneId" type="axl:XUUID">
						<xsd:annotation>
							<xsd:documentation>The GUID of the phone to use to create the profile.  Not nullable.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
				</xsd:choice>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="createAutogeneratedProfile" type="axl:CreateAutogeneratedProfileReq"/>
	<xsd:element name="createAutogeneratedProfileResponse" type="axl:StandardResponse"/>
	<xsd:complexType name="ListBySearchString">
		<xsd:annotation>
			<xsd:documentation>This abstract method is to be extended by the "list" methods.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axl:APIRequest">
				<xsd:sequence>
					<xsd:element name="searchString" type="xsd:string">
						<xsd:annotation>
							<xsd:documentation>The string to search for.  Can contain SQL wildcard characters.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="ListPhoneByNameReq">
		<xsd:annotation>
			<xsd:documentation>This method searches for all phones whose name matches the specified search string.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axl:ListBySearchString"/>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="listPhoneByName" type="axl:ListPhoneByNameReq"/>
	<xsd:complexType name="ListPhoneResponse">
		<xsd:annotation>
			<xsd:documentation>This response is returned by the listPhoneByXXX methods.  It includes the phone GUID, name, and product.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axl:APIResponse">
				<xsd:sequence>
					<xsd:element name="return">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="phone" minOccurs="0" maxOccurs="unbounded">
									<xsd:complexType>
										<xsd:sequence>
											<xsd:element name="name" type="axl:String50" nillable="false"/>
											<xsd:element name="product" type="axl:XProduct" nillable="false"/>
											<xsd:element name="model" type="axl:XModel" nillable="false"/>
										</xsd:sequence>
										<xsd:attribute name="uuid" type="axl:XUUID" use="required"/>
									</xsd:complexType>
								</xsd:element>
							</xsd:sequence>
						</xsd:complexType>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="ListPhoneByNameRes">
		<xsd:annotation>
			<xsd:documentation>The response to listPhoneByName.  For each phone returned, lists its name, product type, and model type.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axl:ListPhoneResponse"/>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="listPhoneByNameResponse" type="axl:ListPhoneByNameRes"/>
	<xsd:complexType name="ListPhoneByDescriptionReq">
		<xsd:annotation>
			<xsd:documentation>This method searches for all phones whose description matches the specified search string.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axl:ListBySearchString"/>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="listPhoneByDescription" type="axl:ListPhoneByDescriptionReq"/>
	<xsd:complexType name="ListPhoneByDescriptionRes">
		<xsd:annotation>
			<xsd:documentation>The response to listPhoneByDescription.  For each phone returned, lists its name, product type, and model type.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axl:ListPhoneResponse"/>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="listPhoneByDescriptionResponse" type="axl:ListPhoneByDescriptionRes"/>
	<xsd:complexType name="ListUserByNameReq">
		<xsd:annotation>
			<xsd:documentation>This method searches for all users whose first and last names match the given pattern.  The '*' character is used as the wildcard.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axl:APIRequest">
				<xsd:sequence>
					<xsd:element name="firstname" type="xsd:string">
						<xsd:annotation>
							<xsd:documentation>The first name to search for.  Can contain the '*' character as a wildcard.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="lastname" type="xsd:string">
						<xsd:annotation>
							<xsd:documentation>The last name to search for.  Can contain the '*' character as a wildcard.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="searchLimit" type="xsd:int">
						<xsd:annotation>
							<xsd:documentation>The maximum number of users to be displayed.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="listUserByName" type="axl:ListUserByNameReq"/>
	<xsd:complexType name="ListUserByNameRes">
		<xsd:annotation>
			<xsd:documentation>The is element will contain all the users who matched the search string supplied by listUserByName.  For each user returned, the user's ldapRN, firstname, and lastname is specified.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axl:APIResponse">
				<xsd:sequence>
					<xsd:element name="return">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="user" minOccurs="0" maxOccurs="unbounded">
									<xsd:complexType>
										<xsd:sequence>
											<xsd:element name="firstname" type="xsd:string"/>
											<xsd:element name="lastname" type="xsd:string"/>
										</xsd:sequence>
										<xsd:attribute name="userid" type="xsd:string" use="required"/>
									</xsd:complexType>
								</xsd:element>
							</xsd:sequence>
						</xsd:complexType>
					</xsd:element>
				</xsd:sequence>
				<xsd:attribute name="userid" type="xsd:string" use="required"/>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="listUserByNameResponse" type="axl:ListUserByNameRes"/>
	<xsd:complexType name="ListRoutePlanByTypeReq">
		<xsd:annotation>
			<xsd:documentation>This request returns the all entries in the NumPlan table which match the type given.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axl:APIRequest">
				<xsd:sequence>
					<xsd:element name="usage" type="axl:XPatternUsage" nillable="false">
						<xsd:annotation>
							<xsd:documentation>The type (pattern usage) of Route Plan to return.  Not nullable.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="listRoutePlanByType" type="axl:ListRoutePlanByTypeReq"/>
	<xsd:complexType name="ListRoutePlanByTypeRes">
		<xsd:annotation>
			<xsd:documentation>Response to listRoutePlanByType request.  For each route plan returned, the directory number, route partition name, and usage type is specified.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axl:APIResponse">
				<xsd:sequence>
					<xsd:element name="return">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="routePlan" minOccurs="0" maxOccurs="unbounded">
									<xsd:complexType>
										<xsd:sequence>
											<xsd:element name="directoryNumber" type="axl:XDirectoryNumber"/>
											<xsd:element name="routePartitionName" type="axl:String50"/>
											<xsd:element name="usage" type="axl:XPatternUsage"/>
											<xsd:element name="routeFilterName" type="axl:String50"/>
										</xsd:sequence>
										<xsd:attribute name="uuid" type="axl:XUUID" use="required"/>
									</xsd:complexType>
								</xsd:element>
							</xsd:sequence>
						</xsd:complexType>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="listRoutePlanByTypeResponse" type="axl:ListRoutePlanByTypeRes"/>
	<xsd:complexType name="GetNumDevicesReq">
		<xsd:annotation>
			<xsd:documentation>This method returns the number of devices found.  The caller specifies what class of device they want counted.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axl:APIRequest">
				<xsd:sequence>
					<xsd:element name="class" type="axl:XClass" nillable="false">
						<xsd:annotation>
							<xsd:documentation>The class of device that is to be counted.  Cannot be null.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="getNumDevices" type="axl:GetNumDevicesReq"/>
	<xsd:complexType name="GetNumDevicesRes">
		<xsd:annotation>
			<xsd:documentation>Response to GetNumDevices.  Returns an integer value which is the number of devices found.  The class of device counted is represented by the "class" attribute.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axl:APIResponse">
				<xsd:sequence>
					<xsd:element name="return" type="xsd:nonNegativeInteger"/>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="getNumDevicesResponse" type="axl:GetNumDevicesRes"/>
	<xsd:complexType name="ListServiceParametersReq">
		<xsd:annotation>
			<xsd:documentation>This method can be used to list all service parameters (include Enterprise-Wide parameters) for a particular Process Node and service type.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axl:APIRequest">
				<xsd:sequence>
					<xsd:element name="nodeName" type="xsd:string" nillable="false">
						<xsd:annotation>
							<xsd:documentation>The process node.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="serviceType" type="axl:XService" nillable="false">
						<xsd:annotation>
							<xsd:documentation>The type of service.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="listServiceParameters" type="axl:ListServiceParametersReq"/>
	<xsd:complexType name="ListServiceParametersRes">
		<xsd:annotation>
			<xsd:documentation>Contains all the service parameters as found by ListServiceParameters.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axl:APIResponse">
				<xsd:sequence>
					<xsd:element name="return">
						<xsd:annotation>
							<xsd:documentation>A list of "param" elements.  Eache "param" element represents a service parameter.  If no service parameters were found, then no "param" elements will be present.</xsd:documentation>
						</xsd:annotation>
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="param" minOccurs="0" maxOccurs="unbounded">
									<xsd:complexType>
										<xsd:sequence>
											<xsd:element name="name" type="xsd:string" nillable="false">
												<xsd:annotation>
													<xsd:documentation>The name of this service parameter.</xsd:documentation>
												</xsd:annotation>
											</xsd:element>
											<xsd:element name="value" type="xsd:string" nillable="false">
												<xsd:annotation>
													<xsd:documentation>The value of this service parameter.</xsd:documentation>
												</xsd:annotation>
											</xsd:element>
										</xsd:sequence>
									</xsd:complexType>
								</xsd:element>
							</xsd:sequence>
						</xsd:complexType>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="listServiceParametersResponse" type="axl:ListServiceParametersRes"/>
	<xsd:complexType name="ListCSSByNameReq">
		<xsd:annotation>
			<xsd:documentation>This method searches for all Calling Search Spaces in the database whose name matches the search string.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axl:ListBySearchString"/>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="listCSSByName" type="axl:ListCSSByNameReq"/>
	<xsd:complexType name="ListCSSResponse">
		<xsd:annotation>
			<xsd:documentation>This response is returned by the listCSSByXXX methods.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axl:APIResponse">
				<xsd:sequence>
					<xsd:element name="return">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="callingSearchSpace" type="axl:XCallingSearchSpace" minOccurs="0" maxOccurs="unbounded"/>
							</xsd:sequence>
						</xsd:complexType>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="ListCSSByNameRes">
		<xsd:annotation>
			<xsd:documentation>The response to listCSSByName. Contains all the Calling Search Spaces that matched the search string.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axl:ListCSSResponse"/>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="listCSSByNameResponse" type="axl:ListCSSByNameRes"/>
	<xsd:complexType name="NameAndGUIDRequest">
		<xsd:annotation>
			<xsd:documentation>This is a utility object that created because many of the Get, Remove, and Update methods allow the user to specify either the name or the uuid.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axl:APIRequest">
				<xsd:sequence>
					<xsd:choice>
						<xsd:element name="name" type="axl:String128" nillable="false">
							<xsd:annotation>
								<xsd:documentation>Not nullable.</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
						<xsd:element name="uuid" type="axl:XUUID" nillable="false">
							<xsd:annotation>
								<xsd:documentation>Not nullable.</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
					</xsd:choice>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="GUIDRequest">
		<xsd:annotation>
			<xsd:documentation>This is a utility object that created because many of the Get, Remove, and Update methods allow the user to specify  the uuid.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axl:APIRequest">
				<xsd:sequence>
					<xsd:element name="uuid" type="axl:XUUID" nillable="false">
						<xsd:annotation>
							<xsd:documentation>Not nullable.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="AddDevicePoolReq" abstract="false" final="#all">
		<xsd:annotation>
			<xsd:documentation>Adds a new device pool to the database.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axl:APIRequest">
				<xsd:sequence>
					<xsd:element name="devicePool" type="axl:XDevicePool" nillable="false"/>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="addDevicePool" type="axl:AddDevicePoolReq"/>
	<xsd:element name="addDevicePoolResponse" type="axl:StandardResponse"/>
	<xsd:complexType name="UpdateDevicePoolReq" abstract="false" final="#all">
		<xsd:annotation>
			<xsd:documentation>Update an existing device pool in the database.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axl:APIRequest">
				<xsd:sequence>
					<xsd:choice>
						<xsd:element name="name" type="axl:String50">
							<xsd:annotation>
								<xsd:documentation>The name of the Device Pool to update. Not nullable.</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
						<xsd:element name="uuid" type="axl:XUUID">
							<xsd:annotation>
								<xsd:documentation>The UUID of the Device Pool to update. Not nullable.</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
					</xsd:choice>
					<xsd:element name="newName" type="axl:String50" nillable="false" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>The new name for this Device Pool. Not nullable.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:choice minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>Nullable.</xsd:documentation>
						</xsd:annotation>
						<xsd:element name="autoSearchSpaceId" type="axl:XUUID" nillable="true"/>
						<xsd:element name="autoSearchSpaceName" type="axl:String50" nillable="true"/>
					</xsd:choice>
					<xsd:choice minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>Not nullable.</xsd:documentation>
						</xsd:annotation>
						<xsd:element name="dateTimeSettingId" type="axl:XUUID" nillable="false"/>
						<xsd:element name="dateTimeSettingName" type="axl:String50" nillable="false"/>
					</xsd:choice>
					<xsd:choice minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>Not nullable.</xsd:documentation>
						</xsd:annotation>
						<xsd:element name="callManagerGroupId" type="axl:XUUID" nillable="false"/>
						<xsd:element name="callManagerGroupName" type="axl:String50" nillable="false"/>
					</xsd:choice>
					<xsd:choice minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>Nullable.</xsd:documentation>
						</xsd:annotation>
						<xsd:element name="mediaResourceListId" type="axl:XUUID" nillable="true"/>
						<xsd:element name="mediaResourceListName" type="axl:String50" nillable="true"/>
					</xsd:choice>
					<xsd:choice minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>Not nullable.</xsd:documentation>
						</xsd:annotation>
						<xsd:element name="regionId" type="axl:XUUID" nillable="false"/>
						<xsd:element name="regionName" type="axl:String50" nillable="false"/>
					</xsd:choice>
					<xsd:choice minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>Not nullable.</xsd:documentation>
						</xsd:annotation>
						<xsd:element name="softkeyTemplateId" type="axl:XUUID" nillable="false"/>
						<xsd:element name="softkeyTemplateName" type="axl:String50" nillable="false"/>
					</xsd:choice>
					<xsd:element name="networkLocale" type="axl:XCountry" nillable="false" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>Not nullable.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="userLocale" type="axl:XUserLocale" nillable="false" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>Not nullable.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="networkHoldMOHAudioSourceId" type="xsd:integer" nillable="false" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>Not nullable.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="userHoldMOHAudioSourceId" type="xsd:integer" nillable="false" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>Not nullable.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:choice minOccurs="0">
						<xsd:element name="srstInfoId" type="axl:XUUID"/>
						<xsd:element name="srstName" type="axl:String50"/>
					</xsd:choice>
					<xsd:element name="mlppDomainId" type="xsd:int" nillable="false" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>This setting only affects devices that support MLPP.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="mlppIndicationStatus" type="axl:XStatus" nillable="false" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>This setting only affects devices that support MLPP.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="preemption" type="axl:XPreemption" nillable="false" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>This setting only affects devices that support MLPP.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="connectionMonitorDuration" type="xsd:int" nillable="false" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>-1 means use system default.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="updateDevicePool" type="axl:UpdateDevicePoolReq"/>
	<xsd:element name="updateDevicePoolResponse" type="axl:StandardResponse"/>
	<xsd:element name="getDevicePool" type="axl:NameAndGUIDRequest"/>
	<xsd:complexType name="GetDevicePoolRes">
		<xsd:annotation>
			<xsd:documentation>Contains the device pool specified by the request.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axl:APIResponse">
				<xsd:sequence>
					<xsd:element name="return">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="devicePool" type="axl:XDevicePool"/>
							</xsd:sequence>
						</xsd:complexType>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="getDevicePoolResponse" type="axl:GetDevicePoolRes"/>
	<xsd:element name="removeDevicePool" type="axl:NameAndGUIDRequest"/>
	<xsd:element name="removeDevicePoolResponse" type="axl:StandardResponse"/>
	<xsd:complexType name="AddCallManagerGroupReq" abstract="false" final="#all">
		<xsd:annotation>
			<xsd:documentation>Adds a new CallManager group to the database.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axl:APIRequest">
				<xsd:sequence>
					<xsd:element name="callManagerGroup" type="axl:XCallManagerGroup" nillable="false"/>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="addCallManagerGroup" type="axl:AddCallManagerGroupReq"/>
	<xsd:element name="addCallManagerGroupResponse" type="axl:StandardResponse"/>
	<xsd:complexType name="UpdateCallManagerGroupReq" abstract="false" final="#all">
		<xsd:annotation>
			<xsd:documentation>Update an existing CallManager group in the database.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axl:NameAndGUIDRequest">
				<xsd:sequence>
					<xsd:element name="newName" type="axl:String50" nillable="false" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>Not nullable.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="tftpDefault" type="xsd:boolean" nillable="false" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>Not nullable.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="members" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>The new members of this CallManager group.  If "members" is present, then all current members of this CallManager group are removed and replaced by the "member" sub-elements.  Nullable.</xsd:documentation>
						</xsd:annotation>
						<xsd:complexType>
							<xsd:sequence minOccurs="0">
								<xsd:element name="member" type="axl:XCallManagerMember" maxOccurs="unbounded"/>
							</xsd:sequence>
						</xsd:complexType>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="updateCallManagerGroup" type="axl:UpdateCallManagerGroupReq"/>
	<xsd:element name="updateCallManagerGroupResponse" type="axl:StandardResponse"/>
	<xsd:element name="getCallManagerGroup" type="axl:NameAndGUIDRequest"/>
	<xsd:complexType name="GetCallManagerGroupRes">
		<xsd:annotation>
			<xsd:documentation>Contains the CallManager group specified by the request.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axl:APIResponse">
				<xsd:sequence>
					<xsd:element name="return">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="callManagerGroup" type="axl:XCallManagerGroup"/>
							</xsd:sequence>
						</xsd:complexType>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="getCallManagerGroupResponse" type="axl:GetCallManagerGroupRes"/>
	<xsd:element name="removeCallManagerGroup" type="axl:NameAndGUIDRequest"/>
	<xsd:element name="removeCallManagerGroupResponse" type="axl:StandardResponse"/>
	<xsd:complexType name="AddVoiceMailPilotReq" abstract="false" final="#all">
		<xsd:annotation>
			<xsd:documentation>Adds a new VoiceMail Pilot to the database.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axl:APIRequest">
				<xsd:sequence>
					<xsd:element name="voiceMailPilot" type="axl:XVoiceMailPilot" nillable="false"/>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="addVoiceMailPilot" type="axl:AddVoiceMailPilotReq"/>
	<xsd:element name="addVoiceMailPilotResponse" type="axl:StandardResponse"/>
	<xsd:complexType name="UpdateVoiceMailPilotReq" abstract="false" final="#all">
		<xsd:annotation>
			<xsd:documentation>Updates the specified Voice Mail Pilot from the database.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axl:APIRequest">
				<xsd:sequence>
					<xsd:choice>
						<xsd:element name="uuid" type="axl:XUUID" nillable="false">
							<xsd:annotation>
								<xsd:documentation>The GUID of the Voice Mail Pilot to be updated</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
						<xsd:sequence>
							<xsd:element name="dirn" type="axl:XDirectoryNumber" nillable="true"/>
							<xsd:choice>
								<xsd:element name="CSS" type="axl:XCallingSearchSpace" nillable="true">
									<xsd:annotation>
										<xsd:documentation>Only the UUID attribute is read by the AXL API.</xsd:documentation>
									</xsd:annotation>
								</xsd:element>
								<xsd:element name="CSSName" type="axl:UniqueName50" nillable="true"/>
							</xsd:choice>
						</xsd:sequence>
					</xsd:choice>
					<xsd:sequence minOccurs="0">
						<xsd:element name="newdirn" type="axl:XDirectoryNumber" nillable="true" minOccurs="0"/>
						<xsd:choice minOccurs="0">
							<xsd:element name="newCSS" type="axl:XUUID" nillable="true" minOccurs="0"/>
							<xsd:element name="newCSSName" type="axl:UniqueName50" nillable="true" minOccurs="0"/>
						</xsd:choice>
					</xsd:sequence>
					<xsd:element name="description" type="xsd:string" nillable="true" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>The new description of the device.  Nullable.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="isDefault" type="axl:XBoolean" default="No" nillable="false" minOccurs="0"/>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="updateVoiceMailPilot" type="axl:UpdateVoiceMailPilotReq"/>
	<xsd:element name="updateVoiceMailPilotResponse" type="axl:StandardResponse"/>
	<xsd:complexType name="GetVoiceMailPilotReq" final="#all">
		<xsd:annotation>
			<xsd:documentation>Retrieves the specified Voice Mail Pilot from the database.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axl:APIRequest">
				<xsd:choice>
					<xsd:element name="uuid" type="axl:XUUID" nillable="false">
						<xsd:annotation>
							<xsd:documentation>The GUID of the Voice Mail Pilot to be retrieved.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:sequence>
						<xsd:element name="dirn" type="axl:XDirectoryNumber" nillable="true"/>
						<xsd:choice>
							<xsd:element name="CSS" type="axl:XUUID" nillable="true"/>
							<xsd:element name="CSSName" type="axl:UniqueName50" nillable="true"/>
						</xsd:choice>
					</xsd:sequence>
				</xsd:choice>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="getVoiceMailPilot" type="axl:GetVoiceMailPilotReq"/>
	<xsd:complexType name="GetVoiceMailPilotRes">
		<xsd:annotation>
			<xsd:documentation>Contains the VoiceMail Pilot specified by the request.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axl:APIResponse">
				<xsd:sequence>
					<xsd:element name="return">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="voiceMailPilot" type="axl:XVoiceMailPilot"/>
							</xsd:sequence>
						</xsd:complexType>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="getVoiceMailPilotResponse" type="axl:GetVoiceMailPilotRes"/>
	<xsd:complexType name="RemoveVoiceMailPilotReq" final="#all">
		<xsd:annotation>
			<xsd:documentation>Removes the specified Voice Mail Pilot from the database.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axl:APIRequest">
				<xsd:choice>
					<xsd:element name="uuid" type="axl:XUUID" nillable="false">
						<xsd:annotation>
							<xsd:documentation>The GUID of the Voice Mail Pilot to be removed</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:sequence>
						<xsd:element name="dirn" type="axl:XDirectoryNumber" nillable="true"/>
						<xsd:choice>
							<xsd:element name="CSS" type="axl:XUUID" nillable="true"/>
							<xsd:element name="CSSName" type="axl:UniqueName50" nillable="true"/>
						</xsd:choice>
					</xsd:sequence>
				</xsd:choice>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="removeVoiceMailPilot" type="axl:RemoveVoiceMailPilotReq"/>
	<xsd:complexType name="AddVoiceMailProfileReq" abstract="false" final="#all">
		<xsd:annotation>
			<xsd:documentation>Adds a new VoiceMail Profile to the database.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axl:APIRequest">
				<xsd:sequence>
					<xsd:element name="voiceMailProfile" type="axl:XVoiceMailProfile" nillable="false"/>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="addVoiceMailProfile" type="axl:AddVoiceMailProfileReq"/>
	<xsd:element name="addVoiceMailProfileResponse" type="axl:StandardResponse"/>
	<xsd:complexType name="UpdateVoiceMailProfileReq" abstract="false" final="#all">
		<xsd:annotation>
			<xsd:documentation>Update an existing VoiceMail Profile in the database.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axl:NameAndGUIDRequest">
				<xsd:sequence>
					<xsd:element name="newName" type="axl:String50" nillable="false" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>Not nullable.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="description" type="xsd:string" nillable="true" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>The new description of the device.  Nullable.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="isDefault" type="axl:XBoolean" default="No" nillable="false" minOccurs="0"/>
					<xsd:element name="voiceMailboxMask" type="xsd:string" nillable="true" minOccurs="0"/>
					<xsd:element name="voiceMailPilot" type="axl:XUUID" nillable="false" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>Only UUID attribute is read by the AXL API.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="updateVoiceMailProfile" type="axl:UpdateVoiceMailProfileReq"/>
	<xsd:element name="updateVoiceMailProfileResponse" type="axl:StandardResponse"/>
	<xsd:element name="getVoiceMailProfile" type="axl:NameAndGUIDRequest"/>
	<xsd:complexType name="GetVoiceMailProfileRes">
		<xsd:annotation>
			<xsd:documentation>Contains the VoiceMail Profile specified by the request.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axl:APIResponse">
				<xsd:sequence>
					<xsd:element name="return">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="voiceMailProfile" type="axl:XVoiceMailProfile"/>
							</xsd:sequence>
						</xsd:complexType>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="getVoiceMailProfileResponse" type="axl:GetVoiceMailProfileRes"/>
	<xsd:element name="removeVoiceMailProfile" type="axl:NameAndGUIDRequest"/>
	<xsd:element name="removeVoiceMailProfileResponse" type="axl:StandardResponse"/>
	<xsd:element name="removeVoiceMailPilotResponse" type="axl:StandardResponse"/>
	<xsd:complexType name="AddVoiceMailPortReq" abstract="false" final="#all">
		<xsd:annotation>
			<xsd:documentation>Adds a new VoiceMail Port to the database.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axl:APIRequest">
				<xsd:sequence>
					<xsd:element name="voiceMailPort" type="axl:XVoiceMailPort" nillable="false"/>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="addVoiceMailPort" type="axl:AddVoiceMailPortReq"/>
	<xsd:element name="addVoiceMailPortResponse" type="axl:StandardResponse"/>
	<xsd:complexType name="UpdateVoiceMailPortReq" abstract="false" final="#all">
		<xsd:annotation>
			<xsd:documentation>Update an existing VoiceMail Port in the database.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axl:NameAndGUIDRequest">
				<xsd:sequence>
					<xsd:element name="newName" type="axl:String50" nillable="false" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>Not nullable.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="description" type="xsd:string" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>The new description of the device.  Nullable.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:choice minOccurs="0">
						<xsd:element name="callingSearchSpaceId" type="axl:XUUID">
							<xsd:annotation>
								<xsd:documentation>The GUID of the new Calling Search Space for this device. Nullable.</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
						<xsd:element name="callingSearchSpaceName" type="xsd:Name">
							<xsd:annotation>
								<xsd:documentation>The name of the new Calling Search Space for this device.  Nullable.</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
					</xsd:choice>
					<xsd:choice minOccurs="0">
						<xsd:element name="devicePoolId" type="axl:XUUID" nillable="false">
							<xsd:annotation>
								<xsd:documentation>The GUID of the new Device Pool for this device.  Not nullable.</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
						<xsd:element name="devicePoolName" type="xsd:string" nillable="false">
							<xsd:annotation>
								<xsd:documentation>The name of the new Device Pool for this device. Not nullable.</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
					</xsd:choice>
					<xsd:choice minOccurs="0">
						<xsd:element name="locationId" type="axl:XUUID">
							<xsd:annotation>
								<xsd:documentation>The GUID of the new Location for this device.  Nullable.</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
						<xsd:element name="locationName" type="xsd:Name">
							<xsd:annotation>
								<xsd:documentation>The name of the new Location for this device.  Nullable.</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
					</xsd:choice>
					<xsd:choice minOccurs="0">
						<xsd:element name="mediaResourceListId" type="axl:XUUID">
							<xsd:annotation>
								<xsd:documentation>The GUID of the new Media Resource List for this device.  Nullable.</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
						<xsd:element name="mediaResourceListName" type="xsd:Name">
							<xsd:annotation>
								<xsd:documentation>The name of the new Media Resource List for this device.  Nullable.</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
					</xsd:choice>
					<xsd:choice minOccurs="0">
						<xsd:element name="automatedAlternateRoutingCSSId" type="axl:XUUID"/>
						<xsd:element name="automatedAlternateRoutingCSSName" type="axl:String50"/>
					</xsd:choice>
					<xsd:choice minOccurs="0">
						<xsd:element name="aarNeighborhoodId" type="axl:XUUID"/>
						<xsd:element name="aarNeighborhoodName" type="axl:String50"/>
					</xsd:choice>
					<xsd:element name="loadInformation" type="axl:XLoadInformation" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>The new load information for this device.  Nullable.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="vendorConfig" type="axl:XVendorConfig" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>The new vendor configuration XML for this device. Nullable.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="traceFlag" type="xsd:boolean" nillable="false" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>The new trace flag for this device.  Not nullable.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="line" type="axl:XLine" nillable="true" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>The new line for this voice mail port.  Nullable.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="updateVoiceMailPort" type="axl:UpdateVoiceMailPortReq"/>
	<xsd:element name="updateVoiceMailPortResponse" type="axl:StandardResponse"/>
	<xsd:element name="getVoiceMailPort" type="axl:NameAndGUIDRequest"/>
	<xsd:complexType name="GetVoiceMailPortRes">
		<xsd:annotation>
			<xsd:documentation>Contains the VoiceMail Port specified by the request.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axl:APIResponse">
				<xsd:sequence>
					<xsd:element name="return">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="voiceMailPort" type="axl:XVoiceMailPort"/>
							</xsd:sequence>
						</xsd:complexType>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="getVoiceMailPortResponse" type="axl:GetVoiceMailPortRes"/>
	<xsd:element name="removeVoiceMailPort" type="axl:NameAndGUIDRequest"/>
	<xsd:element name="removeVoiceMailPortResponse" type="axl:StandardResponse"/>
	<xsd:complexType name="AddGatewayEndpointReq" abstract="false" final="#all">
		<xsd:annotation>
			<xsd:documentation>Adds a new Gateway endpoint to the database.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axl:APIRequest">
				<xsd:sequence>
					<xsd:element name="gateway" type="axl:XGateway" nillable="false">
						<xsd:annotation>
							<xsd:documentation>XGateway is abstract, so the  user of AddGatewayEndpoint must specify a complex type that extends XGateway.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="addGatewayEndpoint" type="axl:AddGatewayEndpointReq"/>
	<xsd:element name="addGatewayEndpointResponse" type="axl:StandardResponse"/>
	<xsd:complexType name="UpdateGatewayEndpointReq" abstract="false" final="#all">
		<xsd:annotation>
			<xsd:documentation>Update an existing Gateway endpoint in the database.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axl:NameAndGUIDRequest">
				<xsd:sequence>
					<xsd:element name="newName" type="axl:String50" nillable="false" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>Not nullable.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="description" type="xsd:string" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>The new description of the device.  Nullable.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="protocolSide" type="axl:XProtocolSide" nillable="false" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>Protocol Side can only be modified on PRI gateways. Not nullable.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:choice minOccurs="0">
						<xsd:element name="callingSearchSpaceId" type="axl:XUUID">
							<xsd:annotation>
								<xsd:documentation>The GUID of the new Calling Search Space for this device. Nullable.</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
						<xsd:element name="callingSearchSpaceName" type="xsd:Name">
							<xsd:annotation>
								<xsd:documentation>The name of the new Calling Search Space for this device.  Nullable.</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
					</xsd:choice>
					<xsd:choice minOccurs="0">
						<xsd:element name="devicePoolId" type="axl:XUUID" nillable="false">
							<xsd:annotation>
								<xsd:documentation>The GUID of the new Device Pool for this device.  Not nullable.</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
						<xsd:element name="devicePoolName" type="xsd:string" nillable="false">
							<xsd:annotation>
								<xsd:documentation>The name of the new Device Pool for this device. Not nullable.</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
					</xsd:choice>
					<xsd:element name="networkLocation" type="axl:XNetworkLocation" nillable="false" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>The new Device Destination flag for Trunk to Trunk Transfer and Drop Conference Feature is required for most gateways, except FXS gateways.  Not nullable.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:choice minOccurs="0">
						<xsd:element name="locationId" type="axl:XUUID">
							<xsd:annotation>
								<xsd:documentation>The GUID of the new Location for this device.  Nullable.</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
						<xsd:element name="locationName" type="xsd:Name">
							<xsd:annotation>
								<xsd:documentation>The name of the new Location for this device.  Nullable.</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
					</xsd:choice>
					<xsd:choice minOccurs="0">
						<xsd:element name="mediaResourceListId" type="axl:XUUID">
							<xsd:annotation>
								<xsd:documentation>The GUID of the new Media Resource List for this device.  Nullable.</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
						<xsd:element name="mediaResourceListName" type="xsd:Name">
							<xsd:annotation>
								<xsd:documentation>The name of the new Media Resource List for this device.  Nullable.</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
					</xsd:choice>
					<xsd:element name="networkHoldMOHAudioSourceId" type="axl:XMOHAudioSourceId" nillable="false" minOccurs="0"/>
					<xsd:element name="userHoldMOHAudioSourceId" type="axl:XMOHAudioSourceId" nillable="false" minOccurs="0"/>
					<xsd:choice minOccurs="0">
						<xsd:element name="automatedAlternateRoutingCSSId" type="axl:XUUID"/>
						<xsd:element name="automatedAlternateRoutingCSSName" type="axl:String50"/>
					</xsd:choice>
					<xsd:choice minOccurs="0">
						<xsd:element name="aarNeighborhoodId" type="axl:XUUID"/>
						<xsd:element name="aarNeighborhoodName" type="axl:String50"/>
					</xsd:choice>
					<xsd:element name="loadInformation" type="axl:XLoadInformation" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>The new load information for this device.  Nullable.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="vendorConfig" type="axl:XVendorConfig" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>The new vendor configuration XML for this device. Nullable.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="traceFlag" type="xsd:boolean" nillable="false" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>The new trace flag for this device.  Not nullable.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="mlppDomainId" type="xsd:int" nillable="false" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>This setting only affects devices that support MLPP.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="mlppIndicationStatus" type="axl:XStatus" nillable="false" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>This setting only affects devices that support MLPP.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="preemption" type="axl:XPreemption" nillable="false" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>This setting only affects devices that support MLPP.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="country" type="axl:XCountry" nillable="true" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>Also known as networkLocale.  Nullable.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="packetCaptureMode" type="axl:XPacketCaptureMode" minOccurs="0"/>
					<xsd:element name="packetCaptureDuration" type="xsd:positiveInteger" minOccurs="0"/>
					<xsd:choice minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>At this point, you can edit the elements specific to PRI, BRI, T1, or Analog gateways.</xsd:documentation>
						</xsd:annotation>
						<xsd:element name="analog">
							<xsd:complexType>
								<xsd:sequence>
									<xsd:element name="ports" type="axl:XAnalogPortList" minOccurs="0">
										<xsd:annotation>
											<xsd:documentation>The new list of ports for this gateway.  This list of ports replaces any pre-existing ports on this gateway.</xsd:documentation>
										</xsd:annotation>
									</xsd:element>
									<xsd:element name="trunkSelectionOrder" type="axl:XTrunkSelectionOrder" minOccurs="0">
										<xsd:annotation>
											<xsd:documentation>The new trunk selection order for this gateway. Not nullable.</xsd:documentation>
										</xsd:annotation>
									</xsd:element>
								</xsd:sequence>
							</xsd:complexType>
						</xsd:element>
						<xsd:element name="pri">
							<xsd:complexType>
								<xsd:sequence>
									<xsd:element name="acceptInboundRDNIS" type="xsd:boolean" minOccurs="0">
										<xsd:annotation>
											<xsd:documentation>Not nullable.</xsd:documentation>
										</xsd:annotation>
									</xsd:element>
									<xsd:element name="calledPlan" type="axl:XNumberingPlan" minOccurs="0">
										<xsd:annotation>
											<xsd:documentation>Not nullable.</xsd:documentation>
										</xsd:annotation>
									</xsd:element>
									<xsd:element name="calledPri" type="axl:XPriOfNumber" minOccurs="0">
										<xsd:annotation>
											<xsd:documentation>Not nullable.</xsd:documentation>
										</xsd:annotation>
									</xsd:element>
									<xsd:element name="callerIDDN" type="axl:XDirectoryNumber" minOccurs="0">
										<xsd:annotation>
											<xsd:documentation>Nullable.</xsd:documentation>
										</xsd:annotation>
									</xsd:element>
									<xsd:element name="callingPartySelection" type="axl:XCallingPartySelection" minOccurs="0">
										<xsd:annotation>
											<xsd:documentation>Not nullable.</xsd:documentation>
										</xsd:annotation>
									</xsd:element>
									<xsd:element name="callingPlan" type="axl:XNumberingPlan" minOccurs="0">
										<xsd:annotation>
											<xsd:documentation>Not nullable.</xsd:documentation>
										</xsd:annotation>
									</xsd:element>
									<xsd:element name="callingPri" type="axl:XPriOfNumber" minOccurs="0">
										<xsd:annotation>
											<xsd:documentation>Not nullable.</xsd:documentation>
										</xsd:annotation>
									</xsd:element>
									<xsd:element name="chanIE" type="xsd:nonNegativeInteger" minOccurs="0">
										<xsd:annotation>
											<xsd:documentation>Not nullable.</xsd:documentation>
										</xsd:annotation>
									</xsd:element>
									<xsd:element name="clockReference" type="axl:XClockReference" minOccurs="0">
										<xsd:annotation>
											<xsd:documentation>Not nullable.</xsd:documentation>
										</xsd:annotation>
									</xsd:element>
									<xsd:element name="csuParam" type="axl:XCSUParam" minOccurs="0">
										<xsd:annotation>
											<xsd:documentation>Not nullable.</xsd:documentation>
										</xsd:annotation>
									</xsd:element>
									<xsd:element name="dChannelEnable" type="xsd:boolean" minOccurs="0">
										<xsd:annotation>
											<xsd:documentation>Not nullable.</xsd:documentation>
										</xsd:annotation>
									</xsd:element>
									<xsd:element name="direction" type="xsd:boolean" minOccurs="0">
										<xsd:annotation>
											<xsd:documentation>Not nullable.</xsd:documentation>
										</xsd:annotation>
									</xsd:element>
									<xsd:element name="displayIE" type="xsd:boolean" minOccurs="0">
										<xsd:annotation>
											<xsd:documentation>Not nullable.</xsd:documentation>
										</xsd:annotation>
									</xsd:element>
									<xsd:element name="encode" type="axl:XEncode" minOccurs="0">
										<xsd:annotation>
											<xsd:documentation>Not nullable.</xsd:documentation>
										</xsd:annotation>
									</xsd:element>
									<xsd:element name="fdlChannel" type="axl:XFDLChannel" minOccurs="0">
										<xsd:annotation>
											<xsd:documentation>This field has been deprecated for SeaDragon.</xsd:documentation>
										</xsd:annotation>
									</xsd:element>
									<xsd:element name="firstDelay" type="xsd:nonNegativeInteger" minOccurs="0">
										<xsd:annotation>
											<xsd:documentation>Not nullable.</xsd:documentation>
										</xsd:annotation>
									</xsd:element>
									<xsd:element name="interfaceId" minOccurs="0">
										<xsd:annotation>
											<xsd:documentation>Neither the present attribute nor the value of this element is nullable.</xsd:documentation>
										</xsd:annotation>
										<xsd:complexType>
											<xsd:simpleContent>
												<xsd:extension base="xsd:nonNegativeInteger">
													<xsd:attribute name="present" type="xsd:boolean" use="required"/>
												</xsd:extension>
											</xsd:simpleContent>
										</xsd:complexType>
									</xsd:element>
									<xsd:element name="intraDelay" type="xsd:nonNegativeInteger" minOccurs="0">
										<xsd:annotation>
											<xsd:documentation>Not nullable.</xsd:documentation>
										</xsd:annotation>
									</xsd:element>
									<xsd:element name="mcdnEnable" type="xsd:boolean" minOccurs="0">
										<xsd:annotation>
											<xsd:documentation>Not nullable.</xsd:documentation>
										</xsd:annotation>
									</xsd:element>
									<xsd:element name="numberIE" type="xsd:boolean" minOccurs="0">
										<xsd:annotation>
											<xsd:documentation>Not nullable.</xsd:documentation>
										</xsd:annotation>
									</xsd:element>
									<xsd:element name="numDigits" type="xsd:nonNegativeInteger" minOccurs="0">
										<xsd:annotation>
											<xsd:documentation>Not nullable.</xsd:documentation>
										</xsd:annotation>
									</xsd:element>
									<xsd:element name="passingPrecedenceLevelThroughUUIE" type="xsd:boolean" minOccurs="0">
										<xsd:annotation>
											<xsd:documentation>Not nullable.</xsd:documentation>
										</xsd:annotation>
									</xsd:element>
									<xsd:element name="prefix" type="xsd:string" minOccurs="0">
										<xsd:annotation>
											<xsd:documentation>Nullable.</xsd:documentation>
										</xsd:annotation>
									</xsd:element>
									<xsd:element name="callingLinePresentationBit" type="axl:XPresentationBit" nillable="false" minOccurs="0">
										<xsd:annotation>
											<xsd:documentation>Not nullable.</xsd:documentation>
										</xsd:annotation>
									</xsd:element>
									<xsd:element name="connectedLinePresentationBit" type="axl:XPresentationBit" nillable="false" minOccurs="0">
										<xsd:annotation>
											<xsd:documentation>Not nullable.</xsd:documentation>
										</xsd:annotation>
									</xsd:element>
									<xsd:element name="connectedPBX" type="axl:XConnectedPBX" nillable="false" minOccurs="0">
										<xsd:annotation>
											<xsd:documentation>Not nullable.</xsd:documentation>
										</xsd:annotation>
									</xsd:element>
									<xsd:element name="priProtocol" type="axl:XPriProtocol" minOccurs="0">
										<xsd:annotation>
											<xsd:documentation>Not nullable.</xsd:documentation>
										</xsd:annotation>
									</xsd:element>
									<xsd:element name="securityAccessLevel" type="xsd:nonNegativeInteger" minOccurs="0">
										<xsd:annotation>
											<xsd:documentation>Not nullable.</xsd:documentation>
										</xsd:annotation>
									</xsd:element>
									<xsd:element name="sendCallingNameInFacilityIE" type="xsd:boolean" minOccurs="0">
										<xsd:annotation>
											<xsd:documentation>Not nullable.</xsd:documentation>
										</xsd:annotation>
									</xsd:element>
									<xsd:element name="sendEXLeadingCharInDispIE" type="xsd:boolean" minOccurs="0">
										<xsd:annotation>
											<xsd:documentation>Not nullable.</xsd:documentation>
										</xsd:annotation>
									</xsd:element>
									<xsd:element name="sendRestart" type="xsd:boolean" minOccurs="0">
										<xsd:annotation>
											<xsd:documentation>Not nullable.</xsd:documentation>
										</xsd:annotation>
									</xsd:element>
									<xsd:element name="setupNonISDNPI" type="xsd:boolean" nillable="false" minOccurs="0">
										<xsd:annotation>
											<xsd:documentation>Not nullable.</xsd:documentation>
										</xsd:annotation>
									</xsd:element>
									<xsd:element name="sigDigits" type="xsd:boolean" minOccurs="0">
										<xsd:annotation>
											<xsd:documentation>Not nullable.</xsd:documentation>
										</xsd:annotation>
									</xsd:element>
									<xsd:element name="span" type="xsd:nonNegativeInteger" minOccurs="0">
										<xsd:annotation>
											<xsd:documentation>Not nullable.</xsd:documentation>
										</xsd:annotation>
									</xsd:element>
									<xsd:element name="statusPoll" type="xsd:boolean" minOccurs="0">
										<xsd:annotation>
											<xsd:documentation>Not nullable.</xsd:documentation>
										</xsd:annotation>
									</xsd:element>
									<xsd:element name="stripCountOut" type="xsd:nonNegativeInteger" minOccurs="0">
										<xsd:annotation>
											<xsd:documentation>Not nullable.</xsd:documentation>
										</xsd:annotation>
									</xsd:element>
									<xsd:element name="trunkPadRx" type="axl:XTrunkPad" minOccurs="0">
										<xsd:annotation>
											<xsd:documentation>Not nullable.</xsd:documentation>
										</xsd:annotation>
									</xsd:element>
									<xsd:element name="trunkPadTx" type="axl:XTrunkPad" nillable="false" minOccurs="0">
										<xsd:annotation>
											<xsd:documentation>Not nullable.</xsd:documentation>
										</xsd:annotation>
									</xsd:element>
									<xsd:element name="trunkLevel" type="axl:XTrunkLevel" nillable="false" minOccurs="0">
										<xsd:annotation>
											<xsd:documentation>Not nullable.</xsd:documentation>
										</xsd:annotation>
									</xsd:element>
									<xsd:element name="yellowAlarm" type="axl:XYellowAlarm" minOccurs="0">
										<xsd:annotation>
											<xsd:documentation>Not nullable.</xsd:documentation>
										</xsd:annotation>
									</xsd:element>
									<xsd:element name="zeroSuppression" type="axl:XZeroSuppression" minOccurs="0">
										<xsd:annotation>
											<xsd:documentation>Not nullable.</xsd:documentation>
										</xsd:annotation>
									</xsd:element>
									<xsd:element name="sMDIBasePort" type="xsd:positiveInteger" minOccurs="0">
										<xsd:annotation>
											<xsd:documentation>Not nullable.</xsd:documentation>
										</xsd:annotation>
									</xsd:element>
									<xsd:element name="protocolProfile91NameOnly" type="xsd:boolean" minOccurs="0">
										<xsd:annotation>
											<xsd:documentation>Not nullable.</xsd:documentation>
										</xsd:annotation>
									</xsd:element>
								</xsd:sequence>
							</xsd:complexType>
						</xsd:element>
						<xsd:element name="bri">
							<xsd:complexType>
								<xsd:sequence>
									<xsd:element name="acceptInboundRDNIS" type="xsd:boolean" minOccurs="0">
										<xsd:annotation>
											<xsd:documentation>Not nullable.</xsd:documentation>
										</xsd:annotation>
									</xsd:element>
									<xsd:element name="briProtocol" type="axl:XBriProtocol" minOccurs="0">
										<xsd:annotation>
											<xsd:documentation>Not nullable.</xsd:documentation>
										</xsd:annotation>
									</xsd:element>
									<xsd:element name="calledPlan" type="axl:XNumberingPlan" minOccurs="0">
										<xsd:annotation>
											<xsd:documentation>Not nullable.</xsd:documentation>
										</xsd:annotation>
									</xsd:element>
									<xsd:element name="calledPri" type="axl:XPriOfNumber" minOccurs="0">
										<xsd:annotation>
											<xsd:documentation>Not nullable.</xsd:documentation>
										</xsd:annotation>
									</xsd:element>
									<xsd:element name="callerIDDN" type="axl:XDirectoryNumber" minOccurs="0">
										<xsd:annotation>
											<xsd:documentation>Nullable.</xsd:documentation>
										</xsd:annotation>
									</xsd:element>
									<xsd:element name="callingPartySelection" type="axl:XCallingPartySelection" minOccurs="0">
										<xsd:annotation>
											<xsd:documentation>Not nullable.</xsd:documentation>
										</xsd:annotation>
									</xsd:element>
									<xsd:element name="callingPlan" type="axl:XNumberingPlan" minOccurs="0">
										<xsd:annotation>
											<xsd:documentation>Not nullable.</xsd:documentation>
										</xsd:annotation>
									</xsd:element>
									<xsd:element name="callingPri" type="axl:XPriOfNumber" minOccurs="0">
										<xsd:annotation>
											<xsd:documentation>Not nullable.</xsd:documentation>
										</xsd:annotation>
									</xsd:element>
									<xsd:element name="chanIE" type="xsd:nonNegativeInteger" minOccurs="0">
										<xsd:annotation>
											<xsd:documentation>This field has been deprecated in Seadragon</xsd:documentation>
										</xsd:annotation>
									</xsd:element>
									<xsd:element name="clockReference" type="axl:XClockReference" minOccurs="0">
										<xsd:annotation>
											<xsd:documentation>Not nullable.</xsd:documentation>
										</xsd:annotation>
									</xsd:element>
									<xsd:element name="csuParam" type="axl:XCSUParam" minOccurs="0">
										<xsd:annotation>
											<xsd:documentation>Not nullable.</xsd:documentation>
										</xsd:annotation>
									</xsd:element>
									<xsd:element name="dChannelEnable" type="xsd:boolean" minOccurs="0">
										<xsd:annotation>
											<xsd:documentation>Not nullable.</xsd:documentation>
										</xsd:annotation>
									</xsd:element>
									<xsd:element name="direction" type="xsd:boolean" minOccurs="0">
										<xsd:annotation>
											<xsd:documentation>Not nullable.</xsd:documentation>
										</xsd:annotation>
									</xsd:element>
									<xsd:element name="displayIE" type="xsd:boolean" minOccurs="0">
										<xsd:annotation>
											<xsd:documentation>Not nullable.</xsd:documentation>
										</xsd:annotation>
									</xsd:element>
									<xsd:element name="encode" type="axl:XEncode" minOccurs="0">
										<xsd:annotation>
											<xsd:documentation>Not nullable.</xsd:documentation>
										</xsd:annotation>
									</xsd:element>
									<xsd:element name="fdlChannel" type="axl:XFDLChannel" minOccurs="0">
										<xsd:annotation>
											<xsd:documentation>This field has been deprecated for SeaDragon.</xsd:documentation>
										</xsd:annotation>
									</xsd:element>
									<xsd:element name="firstDelay" type="xsd:nonNegativeInteger" minOccurs="0">
										<xsd:annotation>
											<xsd:documentation>Not nullable.</xsd:documentation>
										</xsd:annotation>
									</xsd:element>
									<xsd:element name="framing" type="axl:XFraming" minOccurs="0">
										<xsd:annotation>
											<xsd:documentation>Not nullable.</xsd:documentation>
										</xsd:annotation>
									</xsd:element>
									<xsd:element name="intraDelay" type="xsd:nonNegativeInteger" minOccurs="0">
										<xsd:annotation>
											<xsd:documentation>Not nullable.</xsd:documentation>
										</xsd:annotation>
									</xsd:element>
									<xsd:element name="numberIE" type="xsd:boolean" minOccurs="0">
										<xsd:annotation>
											<xsd:documentation>Not nullable.</xsd:documentation>
										</xsd:annotation>
									</xsd:element>
									<xsd:element name="numDigits" type="xsd:nonNegativeInteger" minOccurs="0">
										<xsd:annotation>
											<xsd:documentation>Not nullable.</xsd:documentation>
										</xsd:annotation>
									</xsd:element>
									<xsd:element name="prefix" type="xsd:string" minOccurs="0">
										<xsd:annotation>
											<xsd:documentation>Nullable.</xsd:documentation>
										</xsd:annotation>
									</xsd:element>
									<xsd:element name="presentationBit" type="axl:XPresentationBit" minOccurs="0">
										<xsd:annotation>
											<xsd:documentation>Not nullable.</xsd:documentation>
										</xsd:annotation>
									</xsd:element>
									<xsd:element name="sendRestart" type="xsd:boolean" minOccurs="0">
										<xsd:annotation>
											<xsd:documentation>Not nullable.</xsd:documentation>
										</xsd:annotation>
									</xsd:element>
									<xsd:element name="setupNonISDNPI" type="xsd:boolean" nillable="false" minOccurs="0">
										<xsd:annotation>
											<xsd:documentation>Not nullable.</xsd:documentation>
										</xsd:annotation>
									</xsd:element>
									<xsd:element name="sigDigits" type="xsd:boolean" minOccurs="0">
										<xsd:annotation>
											<xsd:documentation>Not nullable.</xsd:documentation>
										</xsd:annotation>
									</xsd:element>
									<xsd:element name="stableIn4" type="xsd:boolean" minOccurs="0">
										<xsd:annotation>
											<xsd:documentation>Not nullable.</xsd:documentation>
										</xsd:annotation>
									</xsd:element>
									<xsd:element name="statusPoll" type="xsd:boolean" minOccurs="0">
										<xsd:annotation>
											<xsd:documentation>Not nullable.</xsd:documentation>
										</xsd:annotation>
									</xsd:element>
									<xsd:element name="stripCountOut" type="xsd:nonNegativeInteger" minOccurs="0">
										<xsd:annotation>
											<xsd:documentation>Not nullable.</xsd:documentation>
										</xsd:annotation>
									</xsd:element>
									<xsd:element name="trunkPadRx" type="axl:XTrunkPad" minOccurs="0">
										<xsd:annotation>
											<xsd:documentation>Not nullable.</xsd:documentation>
										</xsd:annotation>
									</xsd:element>
									<xsd:element name="trunkPadTx" type="axl:XTrunkPad" nillable="false" minOccurs="0">
										<xsd:annotation>
											<xsd:documentation>Not nullable.</xsd:documentation>
										</xsd:annotation>
									</xsd:element>
									<xsd:element name="trunkLevel" type="axl:XTrunkLevel" nillable="false" minOccurs="0">
										<xsd:annotation>
											<xsd:documentation>Not nullable.</xsd:documentation>
										</xsd:annotation>
									</xsd:element>
									<xsd:element name="yellowAlarm" type="axl:XYellowAlarm" minOccurs="0">
										<xsd:annotation>
											<xsd:documentation>Not nullable.</xsd:documentation>
										</xsd:annotation>
									</xsd:element>
									<xsd:element name="zeroSuppression" type="axl:XZeroSuppression" minOccurs="0">
										<xsd:annotation>
											<xsd:documentation>Not nullable.</xsd:documentation>
										</xsd:annotation>
									</xsd:element>
								</xsd:sequence>
							</xsd:complexType>
						</xsd:element>
						<xsd:element name="t1">
							<xsd:complexType>
								<xsd:sequence>
									<xsd:element name="trunkSelectionOrder" type="axl:XTrunkSelectionOrder" minOccurs="0">
										<xsd:annotation>
											<xsd:documentation>Not nullable.</xsd:documentation>
										</xsd:annotation>
									</xsd:element>
									<xsd:element name="clockReference" type="axl:XClockReference" minOccurs="0">
										<xsd:annotation>
											<xsd:documentation>Not nullable.</xsd:documentation>
										</xsd:annotation>
									</xsd:element>
									<xsd:element name="csuParam" type="axl:XCSUParam" minOccurs="0">
										<xsd:annotation>
											<xsd:documentation>Not nullable.</xsd:documentation>
										</xsd:annotation>
									</xsd:element>
									<xsd:element name="digitSending" type="axl:XDigitSending" minOccurs="0">
										<xsd:annotation>
											<xsd:documentation>Not nullable.</xsd:documentation>
										</xsd:annotation>
									</xsd:element>
									<xsd:element name="encode" type="axl:XEncode" minOccurs="0">
										<xsd:annotation>
											<xsd:documentation>Not nullable.</xsd:documentation>
										</xsd:annotation>
									</xsd:element>
									<xsd:element name="fdlChannel" type="axl:XFDLChannel" minOccurs="0">
										<xsd:annotation>
											<xsd:documentation>This field has been deprecated for SeaDragon.</xsd:documentation>
										</xsd:annotation>
									</xsd:element>
									<xsd:element name="ports" type="axl:XT1PortList" minOccurs="0">
										<xsd:annotation>
											<xsd:documentation>If the ports element is included in the request, then all existing ports on this gateway will be replaced by the ports found here.</xsd:documentation>
										</xsd:annotation>
									</xsd:element>
									<xsd:element name="yellowAlarm" type="axl:XYellowAlarm" minOccurs="0">
										<xsd:annotation>
											<xsd:documentation>Not nullable.</xsd:documentation>
										</xsd:annotation>
									</xsd:element>
									<xsd:element name="zeroSuppression" type="axl:XZeroSuppression" minOccurs="0">
										<xsd:annotation>
											<xsd:documentation>Not nullable.</xsd:documentation>
										</xsd:annotation>
									</xsd:element>
								</xsd:sequence>
							</xsd:complexType>
						</xsd:element>
					</xsd:choice>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="updateGatewayEndpoint" type="axl:UpdateGatewayEndpointReq"/>
	<xsd:element name="updateGatewayEndpointResponse" type="axl:StandardResponse"/>
	<xsd:element name="getGatewayEndpoint" type="axl:NameAndGUIDRequest"/>
	<xsd:complexType name="GetGatewayEndpointRes">
		<xsd:annotation>
			<xsd:documentation>Contains the Gateway specified by the request.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axl:APIResponse">
				<xsd:sequence>
					<xsd:element name="return">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="device" type="axl:XGateway"/>
							</xsd:sequence>
						</xsd:complexType>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="getGatewayEndpointResponse" type="axl:GetGatewayEndpointRes"/>
	<xsd:element name="removeGatewayEndpoint" type="axl:NameAndGUIDRequest"/>
	<xsd:element name="removeGatewayEndpointResponse" type="axl:StandardResponse"/>
	<xsd:complexType name="AddRouteFilterReq" abstract="false" final="#all">
		<xsd:annotation>
			<xsd:documentation>Adds a new Route Filter to the database.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axl:APIRequest">
				<xsd:sequence>
					<xsd:element name="routeFilter" type="axl:XRouteFilter" nillable="false"/>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="addRouteFilter" type="axl:AddRouteFilterReq"/>
	<xsd:element name="addRouteFilterResponse" type="axl:StandardResponse"/>
	<xsd:complexType name="UpdateRouteFilterReq" abstract="false" final="#all">
		<xsd:annotation>
			<xsd:documentation>Update an existing Route Filter in the database.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axl:NameAndGUIDRequest">
				<xsd:sequence>
					<xsd:element name="newName" type="axl:String50" nillable="false" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>Not nullable.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:choice minOccurs="0">
						<xsd:element name="dialPlanId" type="axl:XUUID">
							<xsd:annotation>
								<xsd:documentation>The GUID of the new Dial Plan for this Route Filter. Not Nullable.</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
						<xsd:element name="dialPlanName" type="xsd:Name">
							<xsd:annotation>
								<xsd:documentation>The name of the new Dial Plan for this Route Filter.  Not Nullable.</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
					</xsd:choice>
					<xsd:element name="members" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>The new members of this Route Filter.  If this element is null, then all members are removed from this route filter.  Note:  If the "members" element is present, then all existing members are removed and replaced with the "member" sub-elements.</xsd:documentation>
						</xsd:annotation>
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="member" type="axl:XRouteFilterMember" minOccurs="0" maxOccurs="unbounded"/>
							</xsd:sequence>
						</xsd:complexType>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="updateRouteFilter" type="axl:UpdateRouteFilterReq"/>
	<xsd:element name="updateRouteFilterResponse" type="axl:StandardResponse"/>
	<xsd:element name="getRouteFilter" type="axl:NameAndGUIDRequest"/>
	<xsd:complexType name="GetRouteFilterRes">
		<xsd:annotation>
			<xsd:documentation>Contains the Route Filter specified by the request.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axl:APIResponse">
				<xsd:sequence>
					<xsd:element name="return">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="routeFilter" type="axl:XRouteFilter"/>
							</xsd:sequence>
						</xsd:complexType>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="getRouteFilterResponse" type="axl:GetRouteFilterRes"/>
	<xsd:element name="removeRouteFilter" type="axl:NameAndGUIDRequest"/>
	<xsd:element name="removeRouteFilterResponse" type="axl:StandardResponse"/>
	<xsd:complexType name="GetServiceParameterReq">
		<xsd:annotation>
			<xsd:documentation>Retrieves the specified service parameter from the database.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axl:APIRequest">
				<xsd:sequence>
					<xsd:choice>
						<xsd:element name="uuid" type="axl:XUUID">
							<xsd:annotation>
								<xsd:documentation>The pkid of the service parameter in the ProcessConfig table.</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
						<xsd:sequence>
							<xsd:element name="name" type="axl:String50">
								<xsd:annotation>
									<xsd:documentation>Name of the service parameter. Not nullable.</xsd:documentation>
								</xsd:annotation>
							</xsd:element>
							<xsd:choice>
								<xsd:annotation>
									<xsd:documentation>The process Node that this the service parameter belongs to. Not nullable.</xsd:documentation>
								</xsd:annotation>
								<xsd:element name="processNodeId" type="axl:XUUID"/>
								<xsd:element name="processNodeName" type="axl:String50"/>
							</xsd:choice>
							<xsd:element name="service" type="axl:XService">
								<xsd:annotation>
									<xsd:documentation>The service that this service parameter belongs to.</xsd:documentation>
								</xsd:annotation>
							</xsd:element>
						</xsd:sequence>
					</xsd:choice>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="getServiceParameter" type="axl:GetServiceParameterReq"/>
	<xsd:complexType name="GetServiceParameterRes">
		<xsd:annotation>
			<xsd:documentation>Contains the service parameter specified by the request.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axl:APIResponse">
				<xsd:sequence>
					<xsd:element name="return">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="serviceParameter" type="axl:XProcessConfig"/>
							</xsd:sequence>
						</xsd:complexType>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="getServiceParameterResponse" type="axl:GetServiceParameterRes"/>
	<xsd:complexType name="UpdateServiceParameterReq">
		<xsd:annotation>
			<xsd:documentation>Modifies an existing service parameter's value.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axl:GetServiceParameterReq">
				<xsd:sequence>
					<xsd:element name="newValue" type="axl:String1024" nillable="true">
						<xsd:annotation>
							<xsd:documentation>The new value of the service parameter. Nullable in some cases.  Must be a valid value for this service parameter's data type or an error will be returned.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="updateServiceParameter" type="axl:UpdateServiceParameterReq"/>
	<xsd:element name="updateServiceParameterResponse" type="axl:StandardResponse">
		<xsd:annotation>
			<xsd:documentation>Would return either the GUID of the object that was altered, or return true if the operation was successful.  Whichever is possible for this request.</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<xsd:complexType name="AddLocationReq" abstract="false" final="#all">
		<xsd:annotation>
			<xsd:documentation>Adds a new Location to the database.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axl:APIRequest">
				<xsd:sequence>
					<xsd:element name="location" type="axl:XLocation" nillable="false"/>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="addLocation" type="axl:AddLocationReq"/>
	<xsd:element name="addLocationResponse" type="axl:StandardResponse"/>
	<xsd:complexType name="UpdateLocationReq" abstract="false" final="#all">
		<xsd:annotation>
			<xsd:documentation>Update an existing Location in the database.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axl:NameAndGUIDRequest">
				<xsd:sequence>
					<xsd:element name="newName" type="axl:String50" nillable="false" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>Not nullable.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="kbits" type="xsd:nonNegativeInteger" nillable="false" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>Not nullable.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="videoKbits" type="xsd:nonNegativeInteger" nillable="false" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>Not nullable.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="updateLocation" type="axl:UpdateLocationReq"/>
	<xsd:element name="updateLocationResponse" type="axl:StandardResponse"/>
	<xsd:element name="getLocation" type="axl:NameAndGUIDRequest"/>
	<xsd:complexType name="GetLocationRes">
		<xsd:annotation>
			<xsd:documentation>Contains the Location specified by the request.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axl:APIResponse">
				<xsd:sequence>
					<xsd:element name="return">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="location" type="axl:XLocation"/>
							</xsd:sequence>
						</xsd:complexType>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="getLocationResponse" type="axl:GetLocationRes"/>
	<xsd:element name="removeLocation" type="axl:NameAndGUIDRequest"/>
	<xsd:element name="removeLocationResponse" type="axl:StandardResponse"/>
	<xsd:complexType name="AddCMCInfoReq" abstract="false" final="#all">
		<xsd:annotation>
			<xsd:documentation>Adds a new CMCInfo to the database.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axl:APIRequest">
				<xsd:sequence>
					<xsd:element name="cmcInfo" type="axl:XCMCInfo" nillable="false"/>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="addCMCInfo" type="axl:AddCMCInfoReq"/>
	<xsd:element name="addCMCInfoResponse" type="axl:StandardResponse"/>
	<xsd:complexType name="UpdateCMCInfoReq" abstract="false" final="#all">
		<xsd:annotation>
			<xsd:documentation>Update an existing CMCInfo in the database.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axl:GUIDRequest">
				<xsd:sequence>
					<xsd:element name="code" type="axl:String16" nillable="false" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>Not nullable.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="description" type="axl:String16" nillable="false" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>Not nullable.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="authorizationLevel" type="xsd:nonNegativeInteger" nillable="false" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>Not nullable.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="updateCMCInfo" type="axl:UpdateCMCInfoReq"/>
	<xsd:element name="updateCMCInfoResponse" type="axl:StandardResponse"/>
	<xsd:element name="getCMCInfo" type="axl:GUIDRequest"/>
	<xsd:complexType name="GetCMCInfoRes">
		<xsd:annotation>
			<xsd:documentation>Contains the CMCInfo specified by the request.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axl:APIResponse">
				<xsd:sequence>
					<xsd:element name="return">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="cmcInfo" type="axl:XCMCInfo"/>
							</xsd:sequence>
						</xsd:complexType>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="getCMCInfoResponse" type="axl:GetCMCInfoRes"/>
	<xsd:element name="removeCMCInfo" type="axl:GUIDRequest"/>
	<xsd:element name="removeCMCInfoResponse" type="axl:StandardResponse"/>
	<xsd:complexType name="AddFACInfoReq" abstract="false" final="#all">
		<xsd:annotation>
			<xsd:documentation>Adds a new FACInfo to the database.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axl:APIRequest">
				<xsd:sequence>
					<xsd:element name="facInfo" type="axl:XFACInfo" nillable="false"/>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="addFACInfo" type="axl:AddFACInfoReq"/>
	<xsd:element name="addFACInfoResponse" type="axl:StandardResponse"/>
	<xsd:complexType name="UpdateFACInfoReq" abstract="false" final="#all">
		<xsd:annotation>
			<xsd:documentation>Update an existing FACInfo in the database.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axl:GUIDRequest">
				<xsd:sequence>
					<xsd:element name="code" type="axl:String16" nillable="false" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>Not nullable.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="description" type="axl:String50" nillable="false" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>Not nullable.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="authorizationLevel" type="xsd:nonNegativeInteger" nillable="false" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>Not nullable.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="updateFACInfo" type="axl:UpdateFACInfoReq"/>
	<xsd:element name="updateFACInfoResponse" type="axl:StandardResponse"/>
	<xsd:element name="getFACInfo" type="axl:GUIDRequest"/>
	<xsd:complexType name="GetFACInfoRes">
		<xsd:annotation>
			<xsd:documentation>Contains the FACInfo specified by the request.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axl:APIResponse">
				<xsd:sequence>
					<xsd:element name="return">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="facInfo" type="axl:XFACInfo"/>
							</xsd:sequence>
						</xsd:complexType>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="getFACInfoResponse" type="axl:GetFACInfoRes"/>
	<xsd:element name="removeFACInfo" type="axl:GUIDRequest"/>
	<xsd:element name="removeFACInfoResponse" type="axl:StandardResponse"/>
	<xsd:complexType name="AddRegionReq" abstract="false" final="#all">
		<xsd:annotation>
			<xsd:documentation>Adds a new Region to the database and automatically adds associated regions to the Region Matrix table.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axl:APIRequest">
				<xsd:sequence>
					<xsd:element name="region">
						<xsd:complexType>
							<xsd:complexContent>
								<xsd:extension base="axl:XRegion">
									<xsd:sequence minOccurs="0">
										<xsd:element name="defaultCodec" type="axl:XBandwidth" default="G.711" nillable="false" minOccurs="0"/>
									</xsd:sequence>
								</xsd:extension>
							</xsd:complexContent>
						</xsd:complexType>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="addRegion" type="axl:AddRegionReq"/>
	<xsd:element name="addRegionResponse" type="axl:StandardResponse"/>
	<xsd:complexType name="UpdateRegionReq" abstract="false" final="#all">
		<xsd:annotation>
			<xsd:documentation>Update an existing region in the database.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axl:APIRequest">
				<xsd:sequence>
					<xsd:choice>
						<xsd:element name="name" type="axl:String50">
							<xsd:annotation>
								<xsd:documentation>The name of the Region to update. Not nullable.</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
						<xsd:element name="uuid" type="axl:XUUID">
							<xsd:annotation>
								<xsd:documentation>The UUID of the Region to update. Not nullable.</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
					</xsd:choice>
					<xsd:element name="newName" type="axl:String50" nillable="false" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>The new name for this Region. Not nullable.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="updateRegion" type="axl:UpdateRegionReq"/>
	<xsd:element name="updateRegionResponse" type="axl:StandardResponse"/>
	<xsd:element name="removeRegion" type="axl:NameAndGUIDRequest"/>
	<xsd:element name="removeRegionResponse" type="axl:StandardResponse"/>
	<xsd:element name="getRegion" type="axl:NameAndGUIDRequest"/>
	<xsd:complexType name="GetRegionRes">
		<xsd:annotation>
			<xsd:documentation>Contains the Region specified by the request.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axl:APIResponse">
				<xsd:sequence>
					<xsd:element name="return">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="region" type="axl:XRegion"/>
							</xsd:sequence>
						</xsd:complexType>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="getRegionResponse" type="axl:GetRegionRes"/>
	<xsd:complexType name="UpdateRegionMatrixReq">
		<xsd:annotation>
			<xsd:documentation>Updates a specific entry in the RegionMatrix table.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axl:APIRequest">
				<xsd:sequence>
					<xsd:element name="uuid" type="axl:XUUID">
						<xsd:annotation>
							<xsd:documentation>The pkid of the entry in the RegionMatrix table that is to be modified.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="bandwidth" type="axl:XBandwidth" nillable="false" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>The new bandwidth value for this particular region relationship.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="videoBandwidth" type="xsd:nonNegativeInteger" nillable="false" minOccurs="0"/>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="updateRegionMatrix" type="axl:UpdateRegionMatrixReq"/>
	<xsd:element name="updateRegionMatrixResponse" type="axl:StandardResponse"/>
	<xsd:complexType name="AddMGCPReq" abstract="false" final="#all">
		<xsd:annotation>
			<xsd:documentation>Adds one new MGCP to the database.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axl:APIRequest">
				<xsd:sequence>
					<xsd:element name="newMGCP" type="axl:XMGCP"/>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="addMGCP" type="axl:AddMGCPReq"/>
	<xsd:element name="addMGCPResponse" type="axl:StandardResponse"/>
	<xsd:complexType name="AddMGCPUnitReq" abstract="false" final="#all">
		<xsd:annotation>
			<xsd:documentation>Adds one new MGCP Unit to the MGCP Gateway.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axl:APIRequest">
				<xsd:sequence>
					<xsd:choice>
						<xsd:element name="uuid" type="axl:XUUID">
							<xsd:annotation>
								<xsd:documentation>The pkid of the MGCP gateway for which the unit is being added</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
						<xsd:element name="domainName" type="axl:String64">
							<xsd:annotation>
								<xsd:documentation>the domain name of MGCP Gateway for which the unit is being added</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
					</xsd:choice>
					<xsd:element name="unit" type="axl:XMGCPUnit"/>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="addMGCPUnit" type="axl:AddMGCPUnitReq"/>
	<xsd:element name="addMGCPUnitResponse" type="axl:StandardResponse"/>
	<xsd:complexType name="AddMGCPSubunitReq" abstract="false" final="#all">
		<xsd:annotation>
			<xsd:documentation>Adds one new MGCP Subunit to the MGCP Gateway's unit(slot).</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axl:APIRequest">
				<xsd:sequence>
					<xsd:choice>
						<xsd:element name="uuid" type="axl:XUUID">
							<xsd:annotation>
								<xsd:documentation>The pkid of the MGCP gateway for which the subunit is being added</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
						<xsd:element name="domainName" type="axl:String64">
							<xsd:annotation>
								<xsd:documentation>The domain name of MGCP Gateway for which the subunit is being added</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
					</xsd:choice>
					<xsd:element name="unit">
						<xsd:annotation>
							<xsd:documentation>The unit(slot) index for which the subunit is being added</xsd:documentation>
						</xsd:annotation>
						<xsd:complexType>
							<xsd:attribute name="index" type="xsd:nonNegativeInteger" use="required"/>
						</xsd:complexType>
					</xsd:element>
					<xsd:element name="subunit" type="axl:XMGCPSubunit"/>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="addMGCPSubunit" type="axl:AddMGCPSubunitReq"/>
	<xsd:element name="addMGCPSubunitResponse" type="axl:StandardResponse"/>
	<xsd:complexType name="AddMGCPEndpointReq" abstract="false" final="#all">
		<xsd:annotation>
			<xsd:documentation>Adds one and only one new MGCP Endpoint(port) to the MGCP Gateway's subunit.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axl:APIRequest">
				<xsd:sequence>
					<xsd:choice>
						<xsd:element name="uuid" type="axl:XUUID">
							<xsd:annotation>
								<xsd:documentation>The pkid of the MGCP gateway for which the endpoint is being added</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
						<xsd:element name="domainName" type="axl:String64">
							<xsd:annotation>
								<xsd:documentation>The domain name of MGCP Gateway for which the endpoint is being added</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
					</xsd:choice>
					<xsd:element name="unit">
						<xsd:annotation>
							<xsd:documentation>The unit(slot) index for which the endpoint is being added</xsd:documentation>
						</xsd:annotation>
						<xsd:complexType>
							<xsd:attribute name="index" type="xsd:nonNegativeInteger" use="required"/>
						</xsd:complexType>
					</xsd:element>
					<xsd:element name="subunit">
						<xsd:annotation>
							<xsd:documentation>The subunit index for which the endpoint is being added</xsd:documentation>
						</xsd:annotation>
						<xsd:complexType>
							<xsd:attribute name="index" type="xsd:nonNegativeInteger" use="required"/>
						</xsd:complexType>
					</xsd:element>
					<xsd:element name="endpoint">
						<xsd:complexType>
							<xsd:complexContent>
								<xsd:extension base="axl:XMGCPEndpoint">
									<xsd:attribute name="index" type="xsd:nonNegativeInteger" use="required"/>
								</xsd:extension>
							</xsd:complexContent>
						</xsd:complexType>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="addMGCPEndpoint" type="axl:AddMGCPEndpointReq"/>
	<xsd:element name="addMGCPEndpointResponse" type="axl:StandardResponse"/>
	<xsd:complexType name="GetMGCPReq" final="#all">
		<xsd:annotation>
			<xsd:documentation>Retrieves the specified MGCP gateway info from the database.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axl:APIRequest">
				<xsd:choice>
					<xsd:element name="uuid" type="axl:XUUID" nillable="false">
						<xsd:annotation>
							<xsd:documentation>The GUID of the MGCP Gateway to be retrieved.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="domainName" type="xsd:string" nillable="false">
						<xsd:annotation>
							<xsd:documentation>The domain name of the MGCP to be retrieved.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
				</xsd:choice>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="getMGCP" type="axl:GetMGCPReq"/>
	<xsd:complexType name="GetMGCPRes">
		<xsd:annotation>
			<xsd:documentation>Returns the MGCP specified by the GetMGCP request.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axl:APIResponse">
				<xsd:sequence>
					<xsd:element name="return">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="mgcp" type="axl:XMGCP"/>
							</xsd:sequence>
						</xsd:complexType>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="getMGCPResponse" type="axl:GetMGCPRes"/>
	<xsd:complexType name="RemoveMGCPReq">
		<xsd:annotation>
			<xsd:documentation>Removes the specified MGCP Gateway from the database.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axl:APIRequest">
				<xsd:choice>
					<xsd:element name="uuid" type="axl:XUUID" nillable="false">
						<xsd:annotation>
							<xsd:documentation>The GUID of the MGCP to be removed.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="domainName" type="xsd:string" nillable="false">
						<xsd:annotation>
							<xsd:documentation>The domain name of the MGCP to be removed.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
				</xsd:choice>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="removeMGCP" type="axl:RemoveMGCPReq"/>
	<xsd:element name="removeMGCPResponse" type="axl:StandardResponse"/>
	<xsd:complexType name="RemoveMGCPUnitReq">
		<xsd:annotation>
			<xsd:documentation>Removes the specified unit(slot) of MGCP Gateway from the database.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axl:APIRequest">
				<xsd:sequence>
					<xsd:choice>
						<xsd:element name="uuid" type="axl:XUUID" nillable="false">
							<xsd:annotation>
								<xsd:documentation>The GUID of the MGCP whose unit is to be removed.</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
						<xsd:element name="domainName" type="xsd:string" nillable="false">
							<xsd:annotation>
								<xsd:documentation>The domain name of the MGCP whose unit is to be removed.</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
					</xsd:choice>
					<xsd:element name="unit" nillable="false">
						<xsd:annotation>
							<xsd:documentation>The unit or slot number to be removed from the MGCP gateway(specified as the attribute index)</xsd:documentation>
						</xsd:annotation>
						<xsd:complexType>
							<xsd:attribute name="index" type="xsd:nonNegativeInteger" use="required"/>
						</xsd:complexType>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="removeMGCPUnit" type="axl:RemoveMGCPUnitReq"/>
	<xsd:element name="removeMGCPUnitResponse" type="axl:StandardResponse"/>
	<xsd:complexType name="RemoveMGCPSubunitReq">
		<xsd:annotation>
			<xsd:documentation>Removes the specified subunit of MGCP Gateway's unit from the database.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axl:APIRequest">
				<xsd:sequence>
					<xsd:choice>
						<xsd:element name="uuid" type="axl:XUUID" nillable="false">
							<xsd:annotation>
								<xsd:documentation>The GUID of the MGCP whose unit's subunit is to be removed.</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
						<xsd:element name="domainName" type="xsd:string" nillable="false">
							<xsd:annotation>
								<xsd:documentation>The domain name of the MGCP whose subunit is to be removed.</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
					</xsd:choice>
					<xsd:element name="unit" nillable="false">
						<xsd:annotation>
							<xsd:documentation>The unit number from which the subunit is to be removed from the MGCP gateway(specified as the attribute "index")</xsd:documentation>
						</xsd:annotation>
						<xsd:complexType>
							<xsd:attribute name="index" type="xsd:nonNegativeInteger" use="required"/>
						</xsd:complexType>
					</xsd:element>
					<xsd:element name="subunit" nillable="false">
						<xsd:annotation>
							<xsd:documentation>The subunit to be removed from the MGCP gateway(specified as the attribute "index")</xsd:documentation>
						</xsd:annotation>
						<xsd:complexType>
							<xsd:attribute name="index" type="xsd:nonNegativeInteger" use="required"/>
						</xsd:complexType>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="removeMGCPSubunit" type="axl:RemoveMGCPSubunitReq"/>
	<xsd:element name="removeMGCPSubunitResponse" type="axl:StandardResponse"/>
	<xsd:complexType name="RemoveMGCPEndpointReq">
		<xsd:annotation>
			<xsd:documentation>Removes the specified endpoint(port) of MGCP Gateway from the database.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axl:APIRequest">
				<xsd:sequence>
					<xsd:choice>
						<xsd:element name="uuid" type="axl:XUUID" nillable="false">
							<xsd:annotation>
								<xsd:documentation>The GUID of the MGCP whose endpoint is to be removed.</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
						<xsd:element name="domainName" type="xsd:string" nillable="false">
							<xsd:annotation>
								<xsd:documentation>The domain name of the MGCP whose endpoint is to be removed.</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
					</xsd:choice>
					<xsd:element name="unit" nillable="false">
						<xsd:annotation>
							<xsd:documentation>The unit(slot) number from which the endpoint is to be removed(specified as the attribute "index")</xsd:documentation>
						</xsd:annotation>
						<xsd:complexType>
							<xsd:attribute name="index" type="xsd:nonNegativeInteger" use="required"/>
						</xsd:complexType>
					</xsd:element>
					<xsd:element name="subunit" nillable="false">
						<xsd:annotation>
							<xsd:documentation>The subunit from which the endpoint(port) is to be removed (specified as the attribute "index")</xsd:documentation>
						</xsd:annotation>
						<xsd:complexType>
							<xsd:attribute name="index" type="xsd:nonNegativeInteger" use="required"/>
						</xsd:complexType>
					</xsd:element>
					<xsd:element name="endpoint" nillable="false">
						<xsd:annotation>
							<xsd:documentation>The endpoint(port) number to be removed (specified as the attribute "index")</xsd:documentation>
						</xsd:annotation>
						<xsd:complexType>
							<xsd:attribute name="index" type="xsd:nonNegativeInteger" use="required"/>
						</xsd:complexType>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="removeMGCPEndpoint" type="axl:RemoveMGCPEndpointReq"/>
	<xsd:element name="removeMGCPEndpointResponse" type="axl:StandardResponse"/>
	<xsd:complexType name="UpdateMGCPReq">
		<xsd:annotation>
			<xsd:documentation>Updates an existing MGCP Gateway information in the database.
To modify unit, use removeMGCPUnit-addMGCPUnit.
To modify subunit, use removeMGCPSubunit-addMGCPSubunit
To modify endpoint, use removeMGCPEndpoint-addMGCPEndpoint</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axl:APIRequest">
				<xsd:sequence>
					<xsd:choice>
						<xsd:element name="domainName" type="axl:String64">
							<xsd:annotation>
								<xsd:documentation>The domain name of the MGCP that you want to update.</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
						<xsd:element name="uuid" type="axl:XUUID">
							<xsd:annotation>
								<xsd:documentation>The GUID of the MGCP that you want to update.</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
					</xsd:choice>
					<xsd:element name="newDomainName" type="axl:String64" nillable="false" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>The new domain name of the MGCP.  Cannot be null.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="description" type="axl:String100" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>The new description of the MGCP.  Nullable.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="product" type="axl:XProduct" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>Read only</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="model" type="axl:XModel" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>Read only</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:choice minOccurs="0">
						<xsd:element name="callManagerGroup" type="axl:XCallManagerGroup" minOccurs="0">
							<xsd:annotation>
								<xsd:documentation>The GUID of the new Call Manager Group for this MGCP.</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
						<xsd:element name="callManagerGroupName" type="axl:String50" minOccurs="0">
							<xsd:annotation>
								<xsd:documentation>The name of the new Call  Manager Group name for this MGCP. </xsd:documentation>
							</xsd:annotation>
						</xsd:element>
					</xsd:choice>
					<xsd:element name="scratch" type="axl:Name50" minOccurs="0"/>
					<xsd:element name="vendorConfig" type="axl:XVendorConfig" minOccurs="0"/>
					<xsd:element name="versionStamp" type="axl:XUUID" minOccurs="0"/>
					<xsd:element name="loadInformation" type="axl:XLoadInformation" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>The new load information for this phone.  Nullable.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="updateMGCP" type="axl:UpdateMGCPReq"/>
	<xsd:element name="updateMGCPResponse" type="axl:StandardResponse"/>
	<xsd:complexType name="AddCallManagerReq" abstract="false" final="#all">
		<xsd:annotation>
			<xsd:documentation>Adds a new CallManager to the database.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axl:APIRequest">
				<xsd:sequence>
					<xsd:element name="callManager" type="axl:XCallManager" nillable="false"/>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="addCallManager" type="axl:AddCallManagerReq"/>
	<xsd:element name="addCallManagerResponse" type="axl:StandardResponse"/>
	<xsd:complexType name="UpdateCallManagerReq" abstract="false" final="#all">
		<xsd:annotation>
			<xsd:documentation>Update an existing CallManager in the database.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axl:NameAndGUIDRequest">
				<xsd:sequence>
					<xsd:element name="newName" type="axl:String50" nillable="false" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>Not nullable.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="description" type="axl:String50" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>Nullable.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="autoRegistration" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>Auto-registration information block.</xsd:documentation>
						</xsd:annotation>
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="startDN" type="axl:XDirectoryNumber" minOccurs="0">
									<xsd:annotation>
										<xsd:documentation>Nullable.</xsd:documentation>
									</xsd:annotation>
								</xsd:element>
								<xsd:element name="endDN" type="axl:XDirectoryNumber" minOccurs="0">
									<xsd:annotation>
										<xsd:documentation>Nullable.</xsd:documentation>
									</xsd:annotation>
								</xsd:element>
								<xsd:element name="nextDN" type="axl:XDirectoryNumber" minOccurs="0">
									<xsd:annotation>
										<xsd:documentation>Nullable.</xsd:documentation>
									</xsd:annotation>
								</xsd:element>
								<xsd:choice minOccurs="0">
									<xsd:annotation>
										<xsd:documentation>Nullable.</xsd:documentation>
									</xsd:annotation>
									<xsd:element name="routePartitionId" type="axl:XUUID"/>
									<xsd:element name="routePartitionName" type="axl:String50"/>
								</xsd:choice>
								<xsd:element name="e164Mask" type="axl:String50" minOccurs="0">
									<xsd:annotation>
										<xsd:documentation>Nullable.</xsd:documentation>
									</xsd:annotation>
								</xsd:element>
							</xsd:sequence>
						</xsd:complexType>
					</xsd:element>
					<xsd:element name="ports" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>Port information block.</xsd:documentation>
						</xsd:annotation>
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="analogAccessPort" type="xsd:nonNegativeInteger" minOccurs="0">
									<xsd:annotation>
										<xsd:documentation>This field has been deprecated in Seadragon</xsd:documentation>
									</xsd:annotation>
								</xsd:element>
								<xsd:element name="digitalAccessPort" type="xsd:nonNegativeInteger" minOccurs="0">
									<xsd:annotation>
										<xsd:documentation>This field has been deprecated in Seadragon</xsd:documentation>
									</xsd:annotation>
								</xsd:element>
								<xsd:element name="ethernetPhonePort" type="xsd:nonNegativeInteger" nillable="false" minOccurs="0">
									<xsd:annotation>
										<xsd:documentation>Not nullable.</xsd:documentation>
									</xsd:annotation>
								</xsd:element>
								<xsd:element name="mgcpPorts" minOccurs="0">
									<xsd:annotation>
										<xsd:documentation>MGCP port information block.</xsd:documentation>
									</xsd:annotation>
									<xsd:complexType>
										<xsd:sequence>
											<xsd:element name="listen" type="xsd:nonNegativeInteger" nillable="false" minOccurs="0">
												<xsd:annotation>
													<xsd:documentation>Not nullable.</xsd:documentation>
												</xsd:annotation>
											</xsd:element>
											<xsd:element name="keepAlive" type="xsd:nonNegativeInteger" nillable="false" minOccurs="0">
												<xsd:annotation>
													<xsd:documentation>Not nullable.</xsd:documentation>
												</xsd:annotation>
											</xsd:element>
										</xsd:sequence>
									</xsd:complexType>
								</xsd:element>
							</xsd:sequence>
						</xsd:complexType>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="updateCallManager" type="axl:UpdateCallManagerReq"/>
	<xsd:element name="updateCallManagerResponse" type="axl:StandardResponse"/>
	<xsd:element name="getCallManager" type="axl:NameAndGUIDRequest"/>
	<xsd:complexType name="GetCallManagerRes">
		<xsd:annotation>
			<xsd:documentation>Contains the CallManager specified by the request.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axl:APIResponse">
				<xsd:sequence>
					<xsd:element name="return">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="callManager" type="axl:XCallManager"/>
							</xsd:sequence>
						</xsd:complexType>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="getCallManagerResponse" type="axl:GetCallManagerRes"/>
	<xsd:element name="removeCallManager" type="axl:NameAndGUIDRequest"/>
	<xsd:element name="removeCallManagerResponse" type="axl:StandardResponse"/>
	<xsd:complexType name="AddProcessNodeReq" abstract="false" final="#all">
		<xsd:annotation>
			<xsd:documentation>Adds a new ProcessNode to the database.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axl:APIRequest">
				<xsd:sequence>
					<xsd:element name="processNode" type="axl:XProcessNode" nillable="false"/>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="addProcessNode" type="axl:AddProcessNodeReq"/>
	<xsd:element name="addProcessNodeResponse" type="axl:StandardResponse"/>
	<xsd:complexType name="UpdateProcessNodeReq" abstract="false" final="#all">
		<xsd:annotation>
			<xsd:documentation>Update an existing ProcessNode in the database.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axl:NameAndGUIDRequest">
				<xsd:sequence>
					<xsd:element name="newName" type="axl:Name255" nillable="false" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>Not nullable.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="description" type="axl:String50" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>Nullable.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="mac" type="axl:XMacAddress" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>Nullable.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="updateProcessNode" type="axl:UpdateProcessNodeReq"/>
	<xsd:element name="updateProcessNodeResponse" type="axl:StandardResponse"/>
	<xsd:element name="getProcessNode" type="axl:NameAndGUIDRequest"/>
	<xsd:complexType name="GetProcessNodeRes">
		<xsd:annotation>
			<xsd:documentation>Contains the ProcessNode specified by the request.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axl:APIResponse">
				<xsd:sequence>
					<xsd:element name="return">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="processNode" type="axl:XProcessNode"/>
							</xsd:sequence>
						</xsd:complexType>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="getProcessNodeResponse" type="axl:GetProcessNodeRes"/>
	<xsd:element name="removeProcessNode" type="axl:NameAndGUIDRequest"/>
	<xsd:element name="removeProcessNodeResponse" type="axl:StandardResponse"/>
	<xsd:complexType name="ListAllProcessNodesReq">
		<xsd:annotation>
			<xsd:documentation>Sends a request for all ProcessNodes in the database.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axl:APIRequest"/>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="listAllProcessNodes" type="axl:ListAllProcessNodesReq"/>
	<xsd:complexType name="ListAllProcessNodesRes">
		<xsd:annotation>
			<xsd:documentation>Contains all the process nodes in the database.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axl:APIResponse">
				<xsd:sequence>
					<xsd:element name="return">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="processNode" type="axl:XProcessNode" minOccurs="0" maxOccurs="unbounded"/>
							</xsd:sequence>
						</xsd:complexType>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="listAllProcessNodesResponse" type="axl:ListAllProcessNodesRes"/>
	<xsd:complexType name="ListProcessNodesByServiceReq">
		<xsd:annotation>
			<xsd:documentation>Sends a request for all ProcessNodes in the database for this particular service.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axl:APIRequest">
				<xsd:sequence>
					<xsd:element name="service" type="axl:XService"/>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="listProcessNodesByService" type="axl:ListProcessNodesByServiceReq"/>
	<xsd:complexType name="ListProcessNodesByServiceRes">
		<xsd:annotation>
			<xsd:documentation>Contains all the process nodes in the database that matched the service type in the request.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axl:APIResponse">
				<xsd:sequence>
					<xsd:element name="return">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="processNode" type="axl:XProcessNode" minOccurs="0" maxOccurs="unbounded"/>
							</xsd:sequence>
						</xsd:complexType>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="listProcessNodesByServiceResponse" type="axl:ListProcessNodesByServiceRes"/>
	<xsd:complexType name="GetProcessNodeServiceReq">
		<xsd:annotation>
			<xsd:documentation>Retrieves the specified Process Node Service from the database.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axl:APIRequest">
				<xsd:sequence>
					<xsd:choice>
						<xsd:element name="uuid" type="axl:XUUID">
							<xsd:annotation>
								<xsd:documentation>The pkid of the Process Node Service you wish to retrieve.</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
						<xsd:sequence>
							<xsd:choice>
								<xsd:annotation>
									<xsd:documentation>The process Node that this the process node service belongs to. Not nullable.</xsd:documentation>
								</xsd:annotation>
								<xsd:element name="processNodeId" type="axl:XUUID"/>
								<xsd:element name="processNodeName" type="axl:String50"/>
							</xsd:choice>
							<xsd:element name="service" type="axl:XService">
								<xsd:annotation>
									<xsd:documentation>The service that this process node service belongs to.</xsd:documentation>
								</xsd:annotation>
							</xsd:element>
						</xsd:sequence>
					</xsd:choice>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="getProcessNodeService" type="axl:GetProcessNodeServiceReq"/>
	<xsd:complexType name="GetProcessNodeServiceRes">
		<xsd:annotation>
			<xsd:documentation>Contains the Process Node Service specified by the request.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axl:APIResponse">
				<xsd:sequence>
					<xsd:element name="return">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="processNodeService" type="axl:XProcessNodeService"/>
							</xsd:sequence>
						</xsd:complexType>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="getProcessNodeServiceResponse" type="axl:GetProcessNodeServiceRes"/>
	<xsd:complexType name="UpdateProcessNodeServiceReq">
		<xsd:annotation>
			<xsd:documentation>Modifies an existing Process Node Service's value.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axl:GetProcessNodeServiceReq">
				<xsd:sequence>
					<xsd:element name="fileName" type="axl:String255" nillable="true" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>This field has been deprecated in Seadragon</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="traceLevel" type="xsd:nonNegativeInteger" nillable="false" minOccurs="0"/>
					<xsd:element name="userCategories" type="xsd:nonNegativeInteger" nillable="false" minOccurs="0"/>
					<xsd:element name="enable" type="xsd:boolean" nillable="false" minOccurs="0"/>
					<xsd:element name="numFiles" type="xsd:nonNegativeInteger" nillable="false" minOccurs="0"/>
					<xsd:element name="numLines" type="xsd:nonNegativeInteger" nillable="false" minOccurs="0"/>
					<xsd:element name="numMinutes" type="xsd:nonNegativeInteger" nillable="false" minOccurs="0"/>
					<xsd:element name="includeNonDeviceTraces" type="xsd:boolean" nillable="false" minOccurs="0"/>
					<xsd:element name="useXML" type="xsd:boolean" nillable="false" minOccurs="0"/>
					<xsd:element name="serverName" type="axl:String255" nillable="true" minOccurs="0"/>
					<xsd:element name="deviceNameMonitorFlag" type="xsd:boolean" nillable="false" minOccurs="0"/>
					<xsd:element name="deviceTypeMonitorFlag" type="xsd:boolean" nillable="false" minOccurs="0"/>
					<xsd:element name="fileTraceFlag" type="xsd:boolean" nillable="false" minOccurs="0"/>
					<xsd:element name="outputDebugStringFlag" type="xsd:boolean" nillable="false" minOccurs="0"/>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="updateProcessNodeService" type="axl:UpdateProcessNodeServiceReq"/>
	<xsd:element name="updateProcessNodeServiceResponse" type="axl:StandardResponse"/>
	<xsd:element name="listRoutePartitionByName" type="axl:ListBySearchString">
		<xsd:annotation>
			<xsd:documentation>This method searches for all Route Partitions whose name matches the specified search string.</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<xsd:complexType name="ListRoutePartitionRes">
		<xsd:annotation>
			<xsd:documentation>This response is returned by the listRoutePartitionByXXX methods.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axl:APIResponse">
				<xsd:sequence>
					<xsd:element name="return">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="routePartition" type="axl:XRoutePartition" minOccurs="0" maxOccurs="unbounded"/>
							</xsd:sequence>
						</xsd:complexType>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="listRoutePartitionByNameResponse" type="axl:ListRoutePartitionRes">
		<xsd:annotation>
			<xsd:documentation>The response to listRoutePartitionsByName. Contains all the Route Partitions that matched the search string.</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<xsd:element name="listDevicePoolByName" type="axl:ListBySearchString">
		<xsd:annotation>
			<xsd:documentation>This method searches for all Device Pools whose name matches the specified search string.</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<xsd:complexType name="ListDevicePoolRes">
		<xsd:annotation>
			<xsd:documentation>This response is returned by the listDevicePoolByXXX methods.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axl:APIResponse">
				<xsd:sequence>
					<xsd:element name="return">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="devicePool" minOccurs="0" maxOccurs="unbounded">
									<xsd:complexType>
										<xsd:sequence>
											<xsd:element name="name" type="axl:String50"/>
										</xsd:sequence>
										<xsd:attribute name="uuid" type="axl:XUUID" use="required"/>
									</xsd:complexType>
								</xsd:element>
							</xsd:sequence>
						</xsd:complexType>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="listDevicePoolByNameResponse" type="axl:ListDevicePoolRes">
		<xsd:annotation>
			<xsd:documentation>The response to listDevicePoolsByName. Contains all the Device Pools that matched the search string.</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<xsd:element name="listPhoneTemplateByName" type="axl:ListBySearchString">
		<xsd:annotation>
			<xsd:documentation>This method searches for all Phone Templates whose name matches the specified search string.</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<xsd:complexType name="ListPhoneTemplateRes">
		<xsd:annotation>
			<xsd:documentation>This response is returned by the listPhoneTemplateByXXX methods.</xsd:documentation>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="return">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="phoneTemplate" minOccurs="0" maxOccurs="unbounded">
							<xsd:complexType>
								<xsd:sequence>
									<xsd:element name="name" type="axl:String50"/>
								</xsd:sequence>
								<xsd:attribute name="uuid" type="axl:XUUID" use="required"/>
							</xsd:complexType>
						</xsd:element>
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
		</xsd:sequence>
	</xsd:complexType>
	<xsd:element name="listPhoneTemplateByNameResponse" type="axl:ListPhoneTemplateRes">
		<xsd:annotation>
			<xsd:documentation>The response to listPhoneTemplatesByName. Contains all the Phone Templates that matched the search string.</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<xsd:complexType name="ListDeviceByNameAndClassReq">
		<xsd:annotation>
			<xsd:documentation>This method searches for all devices of the specified device class and whose name matches the specified search string.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axl:ListBySearchString">
				<xsd:sequence>
					<xsd:element name="class" type="axl:XClass"/>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="listDeviceByNameAndClass" type="axl:ListDeviceByNameAndClassReq"/>
	<xsd:complexType name="ListDeviceRes">
		<xsd:annotation>
			<xsd:documentation>This response is returned by the listDeviceByXXX methods.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axl:APIResponse">
				<xsd:sequence>
					<xsd:element name="return">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="device" minOccurs="0" maxOccurs="unbounded">
									<xsd:complexType>
										<xsd:sequence>
											<xsd:element name="name" type="axl:String50"/>
											<xsd:element name="product" type="axl:XProduct"/>
											<xsd:element name="model" type="axl:XModel"/>
										</xsd:sequence>
										<xsd:attribute name="uuid" type="axl:XUUID" use="required"/>
									</xsd:complexType>
								</xsd:element>
							</xsd:sequence>
						</xsd:complexType>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="listDeviceByNameAndClassResponse" type="axl:ListDeviceRes">
		<xsd:annotation>
			<xsd:documentation>The response to listDeviceByNameAndClass. Contains all the device that matched the search string and class type.</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<xsd:complexType name="ListDeviceByServiceNameReq">
		<xsd:annotation>
			<xsd:documentation>This method searches for all devices which are subscribed to the specified telecaster service.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axl:ListBySearchString">
				<xsd:sequence>
					<xsd:element name="serviceName" type="axl:XClass"/>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="listDeviceByServiceName" type="axl:ListDeviceByNameAndClassReq"/>
	<xsd:complexType name="ListDeviceByServiceNameRes">
		<xsd:annotation>
			<xsd:documentation>This response is returned by the listDeviceByServiceName methods.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axl:APIResponse">
				<xsd:sequence>
					<xsd:element name="return">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="device" minOccurs="0" maxOccurs="unbounded">
									<xsd:complexType>
										<xsd:sequence>
											<xsd:element name="name" type="axl:String50"/>
										</xsd:sequence>
										<xsd:attribute name="uuid" type="axl:XUUID" use="required"/>
									</xsd:complexType>
								</xsd:element>
							</xsd:sequence>
						</xsd:complexType>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="listDeviceByServiceNameResponse" type="axl:ListDeviceByServiceNameRes">
		<xsd:annotation>
			<xsd:documentation>The response to listDeviceByServiceName. Contains all the device that matched the ServiceName.</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<xsd:element name="listMOHAudioSourceByName" type="axl:ListBySearchString">
		<xsd:annotation>
			<xsd:documentation>This method searches for all MOH Audio Sources whose name matches the specified search string.</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<xsd:complexType name="ListMOHAudioSourceRes">
		<xsd:annotation>
			<xsd:documentation>This response is returned by the listMOHAudioSourceByXXX methods.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axl:APIResponse">
				<xsd:sequence>
					<xsd:element name="return">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="mohAudioSource" minOccurs="0" maxOccurs="unbounded">
									<xsd:complexType>
										<xsd:sequence>
											<xsd:element name="sourceId" type="axl:XMOHAudioSourceId"/>
											<xsd:element name="name" type="axl:String50"/>
										</xsd:sequence>
										<xsd:attribute name="uuid" type="axl:XUUID" use="required"/>
									</xsd:complexType>
								</xsd:element>
							</xsd:sequence>
						</xsd:complexType>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="listMOHAudioSourceByNameResponse" type="axl:ListMOHAudioSourceRes">
		<xsd:annotation>
			<xsd:documentation>The response to listMOHAudioSourcesByName. Contains all the MOH Audio Sources that matched the search string.</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<xsd:complexType name="GetMOHAudioSourceByIDAndSourceReq">
		<xsd:annotation>
			<xsd:documentation>Specifies which MOH Audio Source to retrieve.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axl:APIRequest">
				<xsd:choice>
					<xsd:element name="uuid" type="axl:XUUID" nillable="false"/>
					<xsd:element name="sourceId" type="axl:XMOHAudioSourceId" nillable="false"/>
				</xsd:choice>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="UpdateMOHAudioSourceReq">
		<xsd:complexContent>
			<xsd:extension base="axl:GetMOHAudioSourceByIDAndSourceReq">
				<xsd:sequence>
					<xsd:element name="name" type="axl:String50" minOccurs="0"/>
					<xsd:element name="sourceFile" type="axl:String255" minOccurs="0"/>
					<xsd:element name="multicast" type="xsd:boolean" nillable="false" minOccurs="0"/>
					<xsd:element name="repeat" type="xsd:boolean" nillable="false" minOccurs="0"/>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="updateMOHAudioSource" type="axl:UpdateMOHAudioSourceReq">
		<xsd:annotation>
			<xsd:documentation>Specifies which MOH Audio Source to modify.</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<xsd:element name="updateMOHAudioSourceResponse" type="axl:StandardResponse"/>
	<xsd:element name="getMOHAudioSource" type="axl:GetMOHAudioSourceByIDAndSourceReq">
		<xsd:annotation>
			<xsd:documentation>Specifies which MOH Audio Source to retrieve.</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<xsd:complexType name="GetMOHAudioSourceRes">
		<xsd:complexContent>
			<xsd:extension base="axl:APIResponse">
				<xsd:sequence>
					<xsd:element name="return">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="mohAudioSource" type="axl:XMOHAudioSource"/>
							</xsd:sequence>
						</xsd:complexType>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="getMOHAudioSourceResponse" type="axl:GetMOHAudioSourceRes"/>
	<xsd:element name="removeMOHAudioSource" type="axl:GetMOHAudioSourceByIDAndSourceReq">
		<xsd:annotation>
			<xsd:documentation>Specifies which MOH Audio Source to remove.</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<xsd:element name="removeMOHAudioSourceResponse" type="axl:StandardResponse"/>
	<xsd:element name="listMediaResourceListByName" type="axl:ListBySearchString">
		<xsd:annotation>
			<xsd:documentation>This method searches for all Media Resource Lists whose name matches the specified search string.</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<xsd:complexType name="ListMediaResourceListRes">
		<xsd:annotation>
			<xsd:documentation>This response is returned by the listMediaResourceListByXXX methods.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axl:APIResponse">
				<xsd:sequence>
					<xsd:element name="return">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="mediaResourceList" minOccurs="0" maxOccurs="unbounded">
									<xsd:complexType>
										<xsd:sequence>
											<xsd:element name="name" type="axl:String50"/>
										</xsd:sequence>
										<xsd:attribute name="uuid" type="axl:XUUID" use="required"/>
									</xsd:complexType>
								</xsd:element>
							</xsd:sequence>
						</xsd:complexType>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="listMediaResourceListByNameResponse" type="axl:ListMediaResourceListRes">
		<xsd:annotation>
			<xsd:documentation>The response to listMediaResourceListsByName. Contains all the Media Resource Lists that matched the search string.</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<xsd:complexType name="AddMediaResourceListReq">
		<xsd:complexContent>
			<xsd:extension base="axl:APIRequest">
				<xsd:sequence>
					<xsd:element name="mediaResourceList" type="axl:XMediaResourceList"/>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="addMediaResourceList" type="axl:AddMediaResourceListReq"/>
	<xsd:element name="addMediaResourceListResponse" type="axl:StandardResponse"/>
	<xsd:element name="getMediaResourceList" type="axl:NameAndGUIDRequest"/>
	<xsd:complexType name="GetMediaResourceListRes">
		<xsd:complexContent>
			<xsd:extension base="axl:APIResponse">
				<xsd:sequence>
					<xsd:element name="return">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="mediaResourceList" type="axl:XMediaResourceList"/>
							</xsd:sequence>
						</xsd:complexType>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="getMediaResourceListResponse" type="axl:GetMediaResourceListRes"/>
	<xsd:element name="removeMediaResourceList" type="axl:NameAndGUIDRequest"/>
	<xsd:element name="removeMediaResourceListResponse" type="axl:StandardResponse"/>
	<xsd:complexType name="UpdateMediaResourceListReq">
		<xsd:complexContent>
			<xsd:extension base="axl:NameAndGUIDRequest">
				<xsd:sequence>
					<xsd:element name="newName" type="axl:String50" nillable="false" minOccurs="0"/>
					<xsd:element name="members" minOccurs="0">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="member" type="axl:XMediaResourceListMember" maxOccurs="unbounded"/>
							</xsd:sequence>
						</xsd:complexType>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="updateMediaResourceList" type="axl:UpdateMediaResourceListReq"/>
	<xsd:element name="updateMediaResourceListResponse" type="axl:StandardResponse"/>
	<xsd:element name="listMediaResourceGroupByName" type="axl:ListBySearchString">
		<xsd:annotation>
			<xsd:documentation>This method searches for all Media Resource Groups whose name matches the specified search string.</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<xsd:complexType name="ListMediaResourceGroupRes">
		<xsd:annotation>
			<xsd:documentation>This response is returned by the listMediaResourceGroupByXXX methods.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axl:APIResponse">
				<xsd:sequence>
					<xsd:element name="return">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="mediaResourceGroup" minOccurs="0" maxOccurs="unbounded">
									<xsd:complexType>
										<xsd:sequence>
											<xsd:element name="name" type="axl:String50"/>
										</xsd:sequence>
										<xsd:attribute name="uuid" type="axl:XUUID" use="required"/>
									</xsd:complexType>
								</xsd:element>
							</xsd:sequence>
						</xsd:complexType>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="listMediaResourceGroupByNameResponse" type="axl:ListMediaResourceGroupRes">
		<xsd:annotation>
			<xsd:documentation>The response to listMediaResourceGroupsByName. Contains all the Media Resource Groups that matched the search string.</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<xsd:complexType name="AddMediaResourceGroupReq">
		<xsd:complexContent>
			<xsd:extension base="axl:APIRequest">
				<xsd:sequence>
					<xsd:element name="mediaResourceGroup" type="axl:XMediaResourceGroup"/>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="addMediaResourceGroup" type="axl:AddMediaResourceGroupReq"/>
	<xsd:element name="addMediaResourceGroupResponse" type="axl:StandardResponse"/>
	<xsd:element name="getMediaResourceGroup" type="axl:NameAndGUIDRequest"/>
	<xsd:complexType name="GetMediaResourceGroupRes">
		<xsd:complexContent>
			<xsd:extension base="axl:APIResponse">
				<xsd:sequence>
					<xsd:element name="return">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="mediaResourceGroup" type="axl:XMediaResourceGroup"/>
							</xsd:sequence>
						</xsd:complexType>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="getMediaResourceGroupResponse" type="axl:GetMediaResourceGroupRes"/>
	<xsd:element name="removeMediaResourceGroup" type="axl:NameAndGUIDRequest"/>
	<xsd:element name="removeMediaResourceGroupResponse" type="axl:StandardResponse"/>
	<xsd:complexType name="UpdateMediaResourceGroupReq">
		<xsd:complexContent>
			<xsd:extension base="axl:NameAndGUIDRequest">
				<xsd:sequence>
					<xsd:element name="newName" type="axl:String50" nillable="false" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>Not nullable.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="description" type="axl:String50" minOccurs="0"/>
					<xsd:element name="multicast" type="xsd:boolean" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>Not nullable.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="members" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>Not nullable.</xsd:documentation>
						</xsd:annotation>
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="member" type="axl:XMediaResourceGroupMember" maxOccurs="unbounded"/>
							</xsd:sequence>
						</xsd:complexType>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="updateMediaResourceGroup" type="axl:UpdateMediaResourceGroupReq"/>
	<xsd:element name="updateMediaResourceGroupResponse" type="axl:StandardResponse"/>
	<xsd:complexType name="AddUserGroupReq">
		<xsd:complexContent>
			<xsd:extension base="axl:APIRequest">
				<xsd:sequence>
					<xsd:element name="userGroup" type="axl:XUserGroup"/>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="addUserGroup" type="axl:AddUserGroupReq"/>
	<xsd:element name="addUserGroupResponse" type="axl:StandardResponse"/>
	<xsd:element name="getUserGroup" type="axl:NameAndGUIDRequest"/>
	<xsd:complexType name="GetUserGroupRes">
		<xsd:complexContent>
			<xsd:extension base="axl:APIResponse">
				<xsd:sequence>
					<xsd:element name="return">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="userGroup" type="axl:XUserGroup"/>
							</xsd:sequence>
						</xsd:complexType>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="getUserGroupResponse" type="axl:GetUserGroupRes"/>
	<xsd:element name="removeUserGroup" type="axl:NameAndGUIDRequest"/>
	<xsd:element name="removeUserGroupResponse" type="axl:StandardResponse"/>
	<xsd:complexType name="UpdateUserGroupReq">
		<xsd:complexContent>
			<xsd:extension base="axl:NameAndGUIDRequest">
				<xsd:sequence>
					<xsd:element name="newName" type="axl:String128" nillable="false" minOccurs="0"/>
					<xsd:element name="members" nillable="true" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>The new members of this User Group. If this element is null, then all members are removed from this user group. Note: If the "members" element is present, then all existing members are removed and replaced with the "member" sub-elements.</xsd:documentation>
						</xsd:annotation>
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="member" type="axl:XUserGroupMember" nillable="false" minOccurs="0" maxOccurs="unbounded"/>
							</xsd:sequence>
						</xsd:complexType>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="updateUserGroup" type="axl:UpdateUserGroupReq"/>
	<xsd:element name="updateUserGroupResponse" type="axl:StandardResponse"/>
	<xsd:element name="listLocationByName" type="axl:ListBySearchString"/>
	<xsd:complexType name="ListLocationRes">
		<xsd:complexContent>
			<xsd:extension base="axl:APIResponse">
				<xsd:sequence>
					<xsd:element name="return">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="location" type="axl:XLocation" minOccurs="0" maxOccurs="unbounded"/>
							</xsd:sequence>
						</xsd:complexType>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="listLocationByNameResponse" type="axl:ListLocationRes"/>
	<xsd:element name="listAARGroupByName" type="axl:ListBySearchString">
		<xsd:annotation>
			<xsd:documentation>List all AAR Groups that match the specified name pattern.</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<xsd:complexType name="ListAARGroupRes">
		<xsd:complexContent>
			<xsd:extension base="axl:APIResponse">
				<xsd:sequence>
					<xsd:element name="return">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="aarGroup" type="axl:XAARNeighborhood" minOccurs="0" maxOccurs="unbounded"/>
							</xsd:sequence>
						</xsd:complexType>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="listAARGroupByNameResponse" type="axl:ListAARGroupRes">
		<xsd:annotation>
			<xsd:documentation>The response to listAARGroupByName. Contains all the AAR Groups that matched the search string.</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<xsd:element name="listVoiceMailProfileByName" type="axl:ListBySearchString">
		<xsd:annotation>
			<xsd:documentation>List all Voice Mail Profiles that match the specified name pattern.</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<xsd:complexType name="ListVoiceMailProfileRes">
		<xsd:complexContent>
			<xsd:extension base="axl:APIResponse">
				<xsd:sequence>
					<xsd:element name="return">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="voiceMailProfile" type="axl:XVoiceMailProfile" minOccurs="0" maxOccurs="unbounded"/>
							</xsd:sequence>
						</xsd:complexType>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="listVoiceMailProfileByNameResponse" type="axl:ListVoiceMailProfileRes">
		<xsd:annotation>
			<xsd:documentation>The response to listVoiceMailProfileByName. Contains all the Voice Maile Profiles that matched the search string.</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<xsd:element name="listGatekeeperByName" type="axl:ListBySearchString">
		<xsd:annotation>
			<xsd:documentation>This method searches for all Gatekeepers whose name matches the specified search string.</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<xsd:complexType name="ListGatekeeperRes">
		<xsd:annotation>
			<xsd:documentation>This response is returned by the listGatekeeperByXXX methods.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axl:APIResponse">
				<xsd:sequence>
					<xsd:element name="return">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="gatekeeper" minOccurs="0" maxOccurs="unbounded">
									<xsd:complexType>
										<xsd:sequence>
											<xsd:element name="name" type="axl:String128"/>
										</xsd:sequence>
										<xsd:attribute name="uuid" type="axl:XUUID" use="required"/>
									</xsd:complexType>
								</xsd:element>
							</xsd:sequence>
						</xsd:complexType>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="listGatekeeperByNameResponse" type="axl:ListGatekeeperRes">
		<xsd:annotation>
			<xsd:documentation>The response to listGatekeepersByName. Contains all the Gatekeepers that matched the search string.</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<xsd:complexType name="AddGatekeeperReq">
		<xsd:complexContent>
			<xsd:extension base="axl:APIRequest">
				<xsd:sequence>
					<xsd:element name="gatekeeper" type="axl:XGatekeeper"/>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="addGatekeeper" type="axl:AddGatekeeperReq"/>
	<xsd:element name="addGatekeeperResponse" type="axl:StandardResponse"/>
	<xsd:element name="getGatekeeper" type="axl:NameAndGUIDRequest"/>
	<xsd:complexType name="GetGatekeeperRes">
		<xsd:complexContent>
			<xsd:extension base="axl:APIResponse">
				<xsd:sequence>
					<xsd:element name="return">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="gatekeeper" type="axl:XGatekeeper"/>
							</xsd:sequence>
						</xsd:complexType>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="getGatekeeperResponse" type="axl:GetGatekeeperRes"/>
	<xsd:element name="removeGatekeeper" type="axl:NameAndGUIDRequest"/>
	<xsd:element name="removeGatekeeperResponse" type="axl:StandardResponse"/>
	<xsd:complexType name="UpdateGatekeeperReq">
		<xsd:complexContent>
			<xsd:extension base="axl:NameAndGUIDRequest">
				<xsd:sequence>
					<xsd:element name="newName" type="axl:String50" nillable="false" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>Not nullable.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="description" type="axl:String50" minOccurs="0"/>
					<xsd:element name="rrqTimeToLive" type="xsd:nonNegativeInteger" nillable="false" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>Not nullable.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="retryTimeout" type="xsd:nonNegativeInteger" nillable="false" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>Not nullable.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="enableDevice" type="xsd:boolean" nillable="false" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>Not nullable.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="updateGatekeeper" type="axl:UpdateGatekeeperReq"/>
	<xsd:element name="updateGatekeeperResponse" type="axl:StandardResponse"/>
	<xsd:complexType name="AddH323PhoneReq">
		<xsd:complexContent>
			<xsd:extension base="axl:APIRequest">
				<xsd:sequence>
					<xsd:element name="phone" type="axl:XH323Phone"/>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="addH323Phone" type="axl:AddH323PhoneReq"/>
	<xsd:element name="addH323PhoneResponse" type="axl:StandardResponse"/>
	<xsd:complexType name="AddH323GatewayReq">
		<xsd:complexContent>
			<xsd:extension base="axl:APIRequest">
				<xsd:sequence>
					<xsd:element name="gateway" type="axl:XH323Gateway"/>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="addH323Gateway" type="axl:AddH323GatewayReq"/>
	<xsd:element name="addH323GatewayResponse" type="axl:StandardResponse"/>
	<xsd:complexType name="AddH323TrunkReq">
		<xsd:complexContent>
			<xsd:extension base="axl:APIRequest">
				<xsd:sequence>
					<xsd:element name="trunk" type="axl:XH323Trunk"/>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="addH323Trunk" type="axl:AddH323TrunkReq"/>
	<xsd:element name="addH323TrunkResponse" type="axl:StandardResponse"/>
	<xsd:element name="getH323Phone" type="axl:NameAndGUIDRequest"/>
	<xsd:complexType name="GetH323PhoneRes">
		<xsd:complexContent>
			<xsd:extension base="axl:APIResponse">
				<xsd:sequence>
					<xsd:element name="return">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="phone" type="axl:XH323Phone"/>
							</xsd:sequence>
						</xsd:complexType>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="getH323PhoneResponse" type="axl:GetH323PhoneRes"/>
	<xsd:element name="getH323Gateway" type="axl:NameAndGUIDRequest"/>
	<xsd:complexType name="GetH323GatewayRes">
		<xsd:complexContent>
			<xsd:extension base="axl:APIResponse">
				<xsd:sequence>
					<xsd:element name="return">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="gateway" type="axl:XH323Gateway"/>
							</xsd:sequence>
						</xsd:complexType>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="getH323GatewayResponse" type="axl:GetH323GatewayRes"/>
	<xsd:element name="getH323Trunk" type="axl:NameAndGUIDRequest"/>
	<xsd:complexType name="GetH323Trunk">
		<xsd:complexContent>
			<xsd:extension base="axl:APIResponse">
				<xsd:sequence>
					<xsd:element name="return">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="trunk">
									<xsd:complexType>
										<xsd:complexContent>
											<xsd:extension base="axl:XH323Gateway">
												<xsd:sequence>
													<xsd:choice>
														<xsd:element name="gatekeeperInfo">
															<xsd:complexType>
																<xsd:sequence>
																	<xsd:choice>
																		<xsd:element name="gatekeeperName" type="axl:String50" nillable="false"/>
																		<xsd:element name="gatekeeper" type="axl:XGatekeeper" nillable="false">
																			<xsd:annotation>
																				<xsd:documentation>Only the uuid attribute is read by the AXL API.</xsd:documentation>
																			</xsd:annotation>
																		</xsd:element>
																	</xsd:choice>
																	<xsd:element name="terminal" type="axl:XTerminal" nillable="false"/>
																	<xsd:element name="technologyPrefix" type="axl:String50" minOccurs="0"/>
																	<xsd:element name="zone" type="axl:String50" minOccurs="0"/>
																</xsd:sequence>
															</xsd:complexType>
														</xsd:element>
														<xsd:element name="remoteServerInfo">
															<xsd:complexType>
																<xsd:sequence>
																	<xsd:element name="server1" type="axl:String255" nillable="false"/>
																	<xsd:element name="server2" type="axl:String255" minOccurs="0"/>
																	<xsd:element name="server3" type="axl:String255" minOccurs="0"/>
																</xsd:sequence>
															</xsd:complexType>
														</xsd:element>
													</xsd:choice>
												</xsd:sequence>
											</xsd:extension>
										</xsd:complexContent>
									</xsd:complexType>
								</xsd:element>
							</xsd:sequence>
						</xsd:complexType>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="getH323TrunkResponse" type="axl:GetH323Trunk"/>
	<xsd:element name="removeH323Phone" type="axl:NameAndGUIDRequest"/>
	<xsd:element name="removeH323PhoneResponse" type="axl:StandardResponse"/>
	<xsd:element name="removeH323Gateway" type="axl:NameAndGUIDRequest"/>
	<xsd:element name="removeH323GatewayResponse" type="axl:StandardResponse"/>
	<xsd:element name="removeH323Trunk" type="axl:NameAndGUIDRequest"/>
	<xsd:element name="removeH323TrunkResponse" type="axl:StandardResponse"/>
	<xsd:complexType name="UpdateH323DeviceReq">
		<xsd:complexContent>
			<xsd:extension base="axl:NameAndGUIDRequest">
				<xsd:sequence minOccurs="0">
					<xsd:element name="newName" type="axl:String50" nillable="false" minOccurs="0"/>
					<xsd:element name="description" type="axl:String128" minOccurs="0"/>
					<xsd:choice minOccurs="0">
						<xsd:element name="callingSearchSpaceId" type="axl:XUUID" minOccurs="0"/>
						<xsd:element name="callingSearchSpaceName" type="axl:String50" minOccurs="0"/>
					</xsd:choice>
					<xsd:choice minOccurs="0">
						<xsd:element name="devicePoolId" type="axl:XUUID" nillable="false" minOccurs="0"/>
						<xsd:element name="devicePoolName" type="axl:String50" nillable="false" minOccurs="0"/>
					</xsd:choice>
					<xsd:element name="networkLocation" type="axl:XNetworkLocation" nillable="false" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>The new Device Destination flag for Trunk to Trunk Transfer and Drop Conference Feature is required for H323 Gateways and Trunks.  Not Nullable.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:choice minOccurs="0">
						<xsd:element name="locationId" type="axl:XUUID" minOccurs="0"/>
						<xsd:element name="locationName" type="axl:String50" minOccurs="0"/>
					</xsd:choice>
					<xsd:choice minOccurs="0">
						<xsd:element name="mediaResourceListId" type="axl:XUUID" minOccurs="0"/>
						<xsd:element name="mediaResourceListName" type="axl:String50" minOccurs="0"/>
					</xsd:choice>
					<xsd:element name="networkHoldMOHAudioSourceId" type="axl:XMOHAudioSourceId" nillable="false" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>Not nullable.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="userHoldMOHAudioSourceId" type="axl:XMOHAudioSourceId" nillable="false" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>Not nullable.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:choice minOccurs="0">
						<xsd:element name="automatedAlternateRoutingCSSId" type="axl:XUUID" minOccurs="0"/>
						<xsd:element name="automatedAlternateRoutingCSSName" type="axl:String50" minOccurs="0"/>
					</xsd:choice>
					<xsd:choice minOccurs="0">
						<xsd:element name="aarNeighborhoodId" type="axl:XUUID" minOccurs="0"/>
						<xsd:element name="aarNeighborhoodName" type="axl:String50" minOccurs="0"/>
					</xsd:choice>
					<xsd:element name="retryVideoCallAsAudio" type="xsd:boolean" nillable="false" minOccurs="0"/>
					<xsd:element name="waitForFarEndH245TerminalSet" type="xsd:boolean" nillable="false" minOccurs="0"/>
					<xsd:element name="mtpRequired" type="xsd:boolean" nillable="false" minOccurs="0"/>
					<xsd:element name="callerIdDN" type="axl:String50" minOccurs="0"/>
					<xsd:element name="callingPartySelection" type="axl:XCallingPartySelection" nillable="false" minOccurs="0"/>
					<xsd:element name="callingLineIdPresentation" type="axl:XPresentationBit" nillable="false" minOccurs="0"/>
					<xsd:element name="displayIEDelivery" type="xsd:boolean" nillable="false" minOccurs="0"/>
					<xsd:element name="redirectOutboundNumberIE" type="xsd:boolean" nillable="false" minOccurs="0"/>
					<xsd:element name="redirectInboundNumberIE" type="xsd:boolean" nillable="false" minOccurs="0"/>
					<xsd:element name="enableInboundFaststart" type="xsd:boolean" nillable="false" minOccurs="0"/>
					<xsd:element name="enableOutboundFaststart" type="xsd:boolean" nillable="false" minOccurs="0"/>
					<xsd:element name="packetCaptureMode" type="axl:XPacketCaptureMode" nillable="true" minOccurs="0"/>
					<xsd:element name="packetCaptureDuration" type="xsd:positiveInteger" nillable="true" minOccurs="0"/>
					<xsd:element name="srtpAllowed" type="axl:XBoolean" nillable="false" minOccurs="0"/>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="UpdateH323PhoneReq">
		<xsd:complexContent>
			<xsd:extension base="axl:UpdateH323DeviceReq">
				<xsd:sequence minOccurs="0">
					<xsd:element name="ownerUserId" type="axl:String255" minOccurs="0"/>
					<xsd:element name="signalingPort" type="xsd:nonNegativeInteger" nillable="false" minOccurs="0"/>
					<xsd:element name="gatekeeperInfo" minOccurs="0">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:choice minOccurs="0">
									<xsd:element name="gatekeeperId" type="axl:XUUID" nillable="false" minOccurs="0"/>
									<xsd:element name="gatekeeperName" type="axl:String50" nillable="false" minOccurs="0"/>
								</xsd:choice>
								<xsd:element name="e164" type="axl:String50" nillable="false" minOccurs="0"/>
								<xsd:element name="technologyPrefix" type="axl:String50" minOccurs="0"/>
								<xsd:element name="zone" type="axl:String50" minOccurs="0"/>
							</xsd:sequence>
						</xsd:complexType>
					</xsd:element>
					<xsd:element name="lines" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>The new lines for this phone.  If this element is null, then all lines are removed from this phone.  Note:  If the lines element is present, then all existing lines are removed and replaced with the sub-elements described by the line elements.  All directory numbers specified must already exist in the database.</xsd:documentation>
						</xsd:annotation>
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="line" type="axl:XLine" nillable="false" minOccurs="0" maxOccurs="unbounded"/>
							</xsd:sequence>
						</xsd:complexType>
					</xsd:element>
					<xsd:element name="ignorePresentationIndicators" type="xsd:boolean" default="false" nillable="false" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>The new Ignore Presentation Indicators flag for Hospitality Feature is required for most phones and device profiles.Not Nullable.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="updateH323Phone" type="axl:UpdateH323PhoneReq"/>
	<xsd:element name="updateH323PhoneResponse" type="axl:StandardResponse"/>
	<xsd:complexType name="UpdateH323GatewayReq">
		<xsd:complexContent>
			<xsd:extension base="axl:UpdateH323DeviceReq">
				<xsd:sequence minOccurs="0">
					<xsd:element name="significantDigits" nillable="false" minOccurs="0">
						<xsd:complexType>
							<xsd:simpleContent>
								<xsd:extension base="xsd:nonNegativeInteger">
									<xsd:attribute name="enable" type="xsd:boolean" use="required"/>
								</xsd:extension>
							</xsd:simpleContent>
						</xsd:complexType>
					</xsd:element>
					<xsd:element name="prefixDN" type="axl:String50" minOccurs="0"/>
					<xsd:element name="calledPartyIENumberType" type="axl:XPriOfNumber" nillable="false" minOccurs="0"/>
					<xsd:element name="callingPartyIENumberType" type="axl:XPriOfNumber" nillable="false" minOccurs="0"/>
					<xsd:element name="calledNumberingPlan" type="axl:XNumberingPlan" nillable="false" minOccurs="0"/>
					<xsd:element name="callingNumberingPlan" type="axl:XNumberingPlan" nillable="false" minOccurs="0"/>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="updateH323Gateway" type="axl:UpdateH323GatewayReq"/>
	<xsd:element name="updateH323GatewayResponse" type="axl:StandardResponse" nillable="false"/>
	<xsd:complexType name="UpdateH323TrunkReq">
		<xsd:complexContent>
			<xsd:extension base="axl:UpdateH323GatewayReq">
				<xsd:sequence minOccurs="0">
					<xsd:element name="tunneledProtocol" type="axl:XTunneledProtocol" minOccurs="0"/>
					<xsd:element name="pathReplacementSupport" type="xsd:boolean" default="false" minOccurs="0"/>
					<xsd:choice minOccurs="0">
						<xsd:element name="gatekeeperInfo" minOccurs="0">
							<xsd:complexType>
								<xsd:sequence minOccurs="0">
									<xsd:choice minOccurs="0">
										<xsd:element name="gatekeeperId" type="axl:XUUID" nillable="false" minOccurs="0"/>
										<xsd:element name="gatekeeperName" type="axl:String50" nillable="false" minOccurs="0"/>
									</xsd:choice>
									<xsd:element name="terminal" type="axl:XTerminal" nillable="false" minOccurs="0"/>
									<xsd:element name="technologyPrefix" type="axl:String50" minOccurs="0"/>
									<xsd:element name="zone" type="axl:String50" minOccurs="0"/>
								</xsd:sequence>
							</xsd:complexType>
						</xsd:element>
						<xsd:element name="remoteServerInfo" minOccurs="0">
							<xsd:complexType>
								<xsd:sequence minOccurs="0">
									<xsd:element name="server1" type="axl:String255" nillable="false" minOccurs="0"/>
									<xsd:element name="server2" type="axl:String255" minOccurs="0"/>
									<xsd:element name="server3" type="axl:String255" minOccurs="0"/>
								</xsd:sequence>
							</xsd:complexType>
						</xsd:element>
					</xsd:choice>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="updateH323Trunk" type="axl:UpdateH323TrunkReq" nillable="false"/>
	<xsd:element name="updateH323TrunkResponse" type="axl:StandardResponse"/>
	<xsd:complexType name="ExecuteSQLQueryReq">
		<xsd:complexContent>
			<xsd:extension base="axl:APIRequest">
				<xsd:sequence>
					<xsd:element name="sql" type="xsd:string" nillable="false">
						<xsd:annotation>
							<xsd:documentation>WARNING:  SQL Large Text and BLOB columns cannot be fetched along with other columns.  A Large Text or BLOB column must be selected in its own SQL query.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="AddSIPTrunkReq">
		<xsd:complexContent>
			<xsd:extension base="axl:APIRequest">
				<xsd:sequence>
					<xsd:element name="trunk" type="axl:XSIPTrunk"/>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="addSIPTrunk" type="axl:AddSIPTrunkReq"/>
	<xsd:element name="addSIPTrunkResponse" type="axl:StandardResponse"/>
	<xsd:element name="getSIPTrunk" type="axl:NameAndGUIDRequest"/>
	<xsd:complexType name="GetSIPTrunk">
		<xsd:complexContent>
			<xsd:extension base="axl:APIResponse">
				<xsd:sequence>
					<xsd:element name="return">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="trunk" type="axl:XSIPTrunk"/>
							</xsd:sequence>
						</xsd:complexType>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="getSIPTrunkResponse" type="axl:GetSIPTrunk"/>
	<xsd:element name="removeSIPTrunk" type="axl:NameAndGUIDRequest"/>
	<xsd:element name="removeSIPTrunkResponse" type="axl:StandardResponse"/>
	<xsd:complexType name="UpdateSIPTrunkReq">
		<xsd:complexContent>
			<xsd:extension base="axl:NameAndGUIDRequest">
				<xsd:sequence minOccurs="0">
					<xsd:element name="newName" type="axl:String50" nillable="false" minOccurs="0"/>
					<xsd:element name="description" type="axl:String128" minOccurs="0"/>
					<xsd:choice minOccurs="0">
						<xsd:element name="callingSearchSpaceId" type="axl:XUUID" minOccurs="0"/>
						<xsd:element name="callingSearchSpaceName" type="axl:String50" minOccurs="0"/>
					</xsd:choice>
					<xsd:choice minOccurs="0">
						<xsd:element name="devicePoolId" type="axl:XUUID" nillable="false" minOccurs="0"/>
						<xsd:element name="devicePoolName" type="axl:String50" nillable="false" minOccurs="0"/>
					</xsd:choice>
					<xsd:element name="networkLocation" type="axl:XNetworkLocation" nillable="false" minOccurs="0"/>
					<xsd:choice minOccurs="0">
						<xsd:element name="locationId" type="axl:XUUID" minOccurs="0"/>
						<xsd:element name="locationName" type="axl:String50" minOccurs="0"/>
					</xsd:choice>
					<xsd:choice minOccurs="0">
						<xsd:element name="mediaResourceListId" type="axl:XUUID" minOccurs="0"/>
						<xsd:element name="mediaResourceListName" type="axl:String50" minOccurs="0"/>
					</xsd:choice>
					<xsd:element name="networkHoldMOHAudioSourceId" type="axl:XMOHAudioSourceId" nillable="false" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>Not nullable.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="userHoldMOHAudioSourceId" type="axl:XMOHAudioSourceId" nillable="false" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>Not nullable.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:choice minOccurs="0">
						<xsd:element name="automatedAlternateRoutingCSSId" type="axl:XUUID" minOccurs="0"/>
						<xsd:element name="automatedAlternateRoutingCSSName" type="axl:String50" minOccurs="0"/>
					</xsd:choice>
					<xsd:choice minOccurs="0">
						<xsd:element name="aarNeighborhoodId" type="axl:XUUID" minOccurs="0"/>
						<xsd:element name="aarNeighborhoodName" type="axl:String50" minOccurs="0"/>
					</xsd:choice>
					<xsd:element name="mlppDomainId" type="xsd:int" nillable="false" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>This setting only affects devices that support MLPP.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="mlppIndicationStatus" type="axl:XStatus" nillable="false" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>This setting only affects devices that support MLPP.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="preemption" type="axl:XPreemption" nillable="false" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>This setting only affects devices that support MLPP.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="retryVideoCallAsAudio" type="xsd:boolean" nillable="false" minOccurs="0"/>
					<xsd:element name="mtpRequired" type="xsd:boolean" nillable="false" minOccurs="0"/>
					<xsd:element name="destinationaddress" type="axl:String50" nillable="false" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>Valid characters for Destination Address are letters, numbers, dashes and dots(periods). IP address should have four 8-bit numbers seperated by periods. Host name should start with letter and end with letter or number.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="destAddrIsSRV" type="xsd:boolean" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>This tag is ignored and destAddrIsSRV is set to false if destinationaddress is an IP address and destinationport is mentioned correctly.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="destinationport" type="xsd:integer" default="0" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>This tag depends on destAddrIsSRV. It is mandatory when destAddrIsSRV is false or when destination address is an IP address. Valid values between 1024 to 65535 (inclusive)</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:choice minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>The new Security Profile for this phone.  Nullable.</xsd:documentation>
						</xsd:annotation>
						<xsd:element name="securityProfileId" type="axl:XUUID"/>
						<xsd:element name="securityProfileName" type="axl:UniqueString50"/>
					</xsd:choice>
					<xsd:element name="tkSipCodec" type="axl:XSIPCodec" nillable="false" minOccurs="0"/>
					<xsd:element name="OutgoingTransportType" type="axl:XTransport" nillable="false" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>This field has been deprecated in Seadragon</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="sigDigits" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>The 'enable' attribute enables significant digits.  The value of the 'significanDigits' element is used if enable is true.</xsd:documentation>
						</xsd:annotation>
						<xsd:complexType>
							<xsd:simpleContent>
								<xsd:extension base="xsd:nonNegativeInteger">
									<xsd:attribute name="enable" type="xsd:boolean" use="required"/>
								</xsd:extension>
							</xsd:simpleContent>
						</xsd:complexType>
					</xsd:element>
					<xsd:element name="connectedNamePresentation" type="axl:XPresentationBit" nillable="false" minOccurs="0"/>
					<xsd:element name="connectedPartyIdPresentation" type="axl:XPresentationBit" nillable="false" minOccurs="0"/>
					<xsd:element name="callingPartySelection" type="axl:XCallingPartySelection" nillable="false" minOccurs="0"/>
					<xsd:element name="callingname" type="axl:XPresentationBit" nillable="false" minOccurs="0"/>
					<xsd:element name="callingLineIdPresentation" type="axl:XPresentationBit" nillable="false" minOccurs="0"/>
					<xsd:element name="prefixDN" type="axl:String50" minOccurs="0"/>
					<xsd:element name="callerName" type="axl:String50" nillable="false" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>Characters which are not valid for caller name are ampersand, braces, less than or greater than, percentage sign, double quotes, square brackets and pipe.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="callerIdDN" type="axl:String50" minOccurs="0"/>
					<xsd:element name="acceptInboundRDNIS" type="xsd:boolean" nillable="false" minOccurs="0"/>
					<xsd:element name="acceptOutboundRDNIS" type="xsd:boolean" nillable="false" minOccurs="0"/>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="updateSIPTrunk" type="axl:UpdateSIPTrunkReq" nillable="false"/>
	<xsd:element name="updateSIPTrunkResponse" type="axl:StandardResponse"/>
	<xsd:complexType name="AddPilotPointReq">
		<xsd:annotation>
			<xsd:documentation>Adds a new Pilot Point to the database.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axl:APIRequest">
				<xsd:sequence>
					<xsd:element name="pilotPoint" type="axl:XPilotPoint"/>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="addPilotPoint" type="axl:AddPilotPointReq"/>
	<xsd:element name="addPilotPointResponse" type="axl:StandardResponse"/>
	<xsd:complexType name="UpdatePilotPointReq">
		<xsd:annotation>
			<xsd:documentation>Updates an existing Pilot Point in the database.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axl:APIRequest">
				<xsd:sequence>
					<xsd:choice>
						<xsd:element name="name" type="xsd:string" nillable="false"/>
						<xsd:element name="uuid" type="axl:XUUID" nillable="false"/>
					</xsd:choice>
					<xsd:element name="newName" type="xsd:string" nillable="false" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>The new name for this Pilot Point.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:choice minOccurs="0">
						<xsd:element name="devicePool" type="axl:XDevicePool">
							<xsd:annotation>
								<xsd:documentation>Only the uuid attribute is read by the AXL API.</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
						<xsd:element name="devicePoolName" type="axl:UniqueString50"/>
					</xsd:choice>
					<xsd:choice minOccurs="0">
						<xsd:element name="routePartition" type="axl:XRoutePartition">
							<xsd:annotation>
								<xsd:documentation>Only the uuid attribute is read by the AXL API.</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
						<xsd:element name="routePartitionName" type="axl:String50"/>
					</xsd:choice>
					<xsd:choice minOccurs="0">
						<xsd:element name="callingSearchSpace" type="axl:XCallingSearchSpace">
							<xsd:annotation>
								<xsd:documentation>Only the uuid attribute is read by the AXL API.</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
						<xsd:element name="callingSearchSpaceName" type="axl:UniqueName50"/>
					</xsd:choice>
					<xsd:element name="pilotNumber" type="xsd:string" minOccurs="0"/>
					<xsd:element name="useFirstAvailable" type="xsd:boolean" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>This field has been deprecated in Seadragon</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:choice minOccurs="0">
						<xsd:element name="location" type="axl:XLocation">
							<xsd:annotation>
								<xsd:documentation>Only the uuid attribute is read by the AXL API.</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
						<xsd:element name="locationName" type="axl:String50"/>
					</xsd:choice>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="updatePilotPoint" type="axl:UpdatePilotPointReq"/>
	<xsd:element name="updatePilotPointResponse" type="axl:StandardResponse"/>
	<xsd:element name="getPilotPoint" type="axl:NameAndGUIDRequest"/>
	<xsd:complexType name="GetPilotPointRes">
		<xsd:annotation>
			<xsd:documentation>Contains the Pilot Point that was specified by the request.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axl:APIResponse">
				<xsd:sequence>
					<xsd:element name="return">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="pilotPoint" type="axl:XPilotPoint"/>
							</xsd:sequence>
						</xsd:complexType>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="getPilotPointResponse" type="axl:GetPilotPointRes"/>
	<xsd:element name="removePilotPoint" type="axl:NameAndGUIDRequest"/>
	<xsd:element name="removePilotPointResponse" type="axl:StandardResponse"/>
	<xsd:complexType name="UpdateAppUserReq">
		<xsd:annotation>
			<xsd:documentation>Updates an existing application user. Specify the user to be modified with their user id.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axl:APIRequest">
				<xsd:sequence>
					<xsd:element name="userid" type="xsd:string">
						<xsd:annotation>
							<xsd:documentation>The userid of the user to be modified.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="password" type="xsd:string">
						<xsd:annotation>
							<xsd:documentation>The new password for the user.  Not nullable.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="digestCredentials" type="xsd:string" nillable="true" minOccurs="0"/>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="updateAppUser" type="axl:UpdateAppUserReq"/>
	<xsd:element name="updateAppUserResponse" type="axl:StandardResponse"/>
	<xsd:element name="executeSQLQuery" type="axl:ExecuteSQLQueryReq" nillable="false">
		<xsd:annotation>
			<xsd:documentation>This API call is used to execute a Structured Query Language query against the database.  The sql element would contain the SQL statement.  If special characters are required, wrap the SQL command inside a CDATA element.</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<xsd:complexType name="ExecuteSQLQueryRes">
		<xsd:complexContent>
			<xsd:extension base="axl:APIResponse">
				<xsd:sequence>
					<xsd:element name="return">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="row" type="xsd:anyType" minOccurs="0" maxOccurs="unbounded">
									<xsd:annotation>
										<xsd:documentation>Each row element can contain any number of sub-elements, each sub-element is a column from that row in the result set.</xsd:documentation>
									</xsd:annotation>
								</xsd:element>
							</xsd:sequence>
						</xsd:complexType>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="executeSQLQueryResponse" type="axl:ExecuteSQLQueryRes">
		<xsd:annotation>
			<xsd:documentation>The response message to executeSQLQuery.  The return element represents the result set, which can contain 0 or more rows of data. Each row can have any number of elements as defined by columns specified in the SQL Query.  The name of each sub-element of the row element represents the column name, the value of each sub-element of the row element is the corresponding value of that column in the database.</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<xsd:complexType name="ExecuteSQLUpdateReq">
		<xsd:complexContent>
			<xsd:extension base="axl:APIRequest">
				<xsd:sequence>
					<xsd:element name="sql" type="xsd:string" nillable="false">
						<xsd:annotation>
							<xsd:documentation>Request to execute an SQL update.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="executeSQLUpdate" type="axl:ExecuteSQLUpdateReq" nillable="false">
		<xsd:annotation>
			<xsd:documentation>This API call is used to execute a Structured Query Language Update against the database.  The sql element would contain the SQL statement</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<xsd:complexType name="ExecuteSQLUpdateRes">
		<xsd:complexContent>
			<xsd:extension base="axl:APIResponse">
				<xsd:sequence>
					<xsd:element name="return">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="rowsUpdated" type="xsd:integer">
									<xsd:annotation>
										<xsd:documentation>Rows updated indicates the number of rows updated by the SQL update.</xsd:documentation>
									</xsd:annotation>
								</xsd:element>
							</xsd:sequence>
						</xsd:complexType>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="executeSQLUpdateResponse" type="axl:ExecuteSQLUpdateRes">
		<xsd:annotation>
			<xsd:documentation>The response message to executeSQLUpdate.</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	
	
	<!-- axlmessage.xsd -->
	<xsd:complexType name="APIRequest" abstract="true">
		<xsd:annotation>
			<xsd:documentation>All requests must extend abstractRequest.</xsd:documentation>
		</xsd:annotation>
		<xsd:attribute name="sequence" type="xsd:unsignedLong" use="optional"/>
	</xsd:complexType>
	<xsd:complexType name="APIResponse" abstract="true">
		<xsd:annotation>
			<xsd:documentation>All responses must extend abstractResponse.</xsd:documentation>
		</xsd:annotation>
		<xsd:attribute name="sequence" type="xsd:unsignedLong" use="optional"/>
	</xsd:complexType>
	<xsd:complexType name="Error">
		<xsd:sequence>
			<xsd:element name="code" type="xsd:long">
				<xsd:annotation>
					<xsd:documentation>The error code.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="message" type="xsd:string" minOccurs="0">
				<xsd:annotation>
					<xsd:documentation>Optional text message sent with error code.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="request" type="xsd:string" minOccurs="0">
				<xsd:annotation>
					<xsd:documentation>Optional reference to original request.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="url" type="xsd:anyURI" minOccurs="0">
				<xsd:annotation>
					<xsd:documentation>Optional URL to link for more information.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
		</xsd:sequence>
	</xsd:complexType>
</xsd:schema>
