//------------------------------------------------------------------------------
// <autogenerated>
//     This code was generated by a tool.
//     Runtime Version: 1.1.4322.2032
//
//     Changes to this file may cause incorrect behavior and will be lost if 
//     the code is regenerated.
// </autogenerated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by wsdl, Version=1.1.4322.2032.
// 
using System.Diagnostics;
using System.Xml.Serialization;
using System;
using System.Web.Services.Protocols;
using System.ComponentModel;
using System.Web.Services;


/// <remarks/>
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Web.Services.WebServiceBindingAttribute(Name="AXLAPIBinding", Namespace="http://www.cisco.com/AXLAPIService/")]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(XTrunkInfo))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(XRuleError))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(XServiceDependency))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(XRuleInstance))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(XDisplayInstance))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(GetRoutePatternReq))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(ListRoutePlanByTypeRes))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(GetRoutePatternRes))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(RemoveDeviceProfileReq))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(AddTimeScheduleReq))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(GetHuntListRes))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(GetPhoneReq))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(AddRegionReq))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(GetPhoneRes))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(GetRouteGroupRes))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(UpdateDDIReq))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(UpdateUserReq1))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(AddCSSReq))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(UpdateCallPickupGroupReq))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(UpdateCallParkReq))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(DeviceLoginResponse))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(UpdateGatekeeperReq))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(AddMGCPSubunitReq))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(UpdateProcessNodeReq))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(RemoveRoutePatternReq))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(AddMGCPEndpointReq))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(DeviceLogoutReq))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(NameAndGUIDRequest))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(AddH323PhoneReq))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(UpdateDialPlanTagReq))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(UpdateNumPlanPattern))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(ListDeviceByServiceNameReq))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(GetMediaResourceGroupRes))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(ListDeviceByServiceNameRes))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(UpdateDevicePoolReq))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(AddDeviceProfileReq))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(RemoveMGCPEndpointReq))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(UpdateMOHAudioSourceReq))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(UpdateRouteFilterReq))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(AddLineGroupReq))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(AddH323GatewayReq))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(AddVoiceMailPortReq))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(ListPhoneTemplateRes))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(GetTransPatternRes))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(UpdateHuntListReq))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(GetMOHAudioSourceRes))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(RemoveCallPickupGroupReq))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(AddDialPlanReq))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(GetDevicePoolRes))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(GetProcessNodeServiceRes))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(AddCTIRoutePointReq))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(AddTransPatternReq))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(GetRoutePartitionRes))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(DeviceLogoutRes))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(GetRoutePartitionReq))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(ListPhoneByDescriptionRes))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(UpdateH323GatewayReq))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(ListMediaResourceListRes))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(UpdateH323DeviceReq))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(UpdateLineGroupReq))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(GetLineRes))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(UpdateRegionMatrixReq))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(GetLineReq))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(RemoveLineReq))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(UpdateTimeScheduleReq))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(RemoveTransPatternReq))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(AddRouteListReq))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(AddFACInfoReq))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(ListGatekeeperRes))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(UpdateTransPatternReq))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(UpdateMediaResourceGroupReq))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(GetUserRes))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(GetH323PhoneRes))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(AddCMCInfoReq))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(RemoveRoutePartitionReq))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(ListPhoneByNameReq))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(RemoveMGCPUnitReq))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(AddLocationReq))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(ListMOHAudioSourceRes))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(UpdateHuntPilotReq))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(GUIDRequest))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(AddPilotPointReq))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(UpdateServiceParameterReq))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Error))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(UpdatePhoneReq3))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(AddCallManagerGroupReq))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(ListDeviceByNameAndClassReq))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(ListPhoneByNameRes))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(DeviceLoginReq))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(UpdateRoutePartitionReq))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(RemoveMGCPSubunitReq))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(UpdateCallManagerGroupReq))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(ListUserByNameReq))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(ListUserByNameRes))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(GetLineGroupRes))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(UpdateSIPTrunkReq))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(UpdateRouteListReq))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(AddDDIReq))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(GetDDIRes))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(DeviceResetRes))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(ExecuteSQLQueryReq))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(DeviceResetReq))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(ListProcessNodesByServiceReq))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(GetCallPickupGroupReq))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(GetCallPickupGroupRes))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(GetProcessNodeRes))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(ListPhoneResponse))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(UpdateRegionReq))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(GetDialPlanRes))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(ListVoiceMailProfileRes))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(ListBySearchString))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(GetCTIRoutePointRes))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(ListCSSResponse))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(GetNumDevicesReq))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(GetNumDevicesRes))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(UpdateCSSReq1))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(AddRoutePatternReq))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(AddUserReq))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(GetCSSRes))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(GetRegionRes))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(ListMediaResourceGroupRes))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(ListServiceParametersRes))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(ListServiceParametersReq))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(GetDialPlanTagRes))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(UpdateProcessNodeServiceReq))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(RemovePhoneReq))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(APIResponse))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(GetCallManagerGroupRes))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(AddHuntListReq))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(ListAllProcessNodesReq))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(ListAllProcessNodesRes))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(GetCallPickupGroup))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(GetGatewayEndpointRes))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(GetRouteListRes))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(GetMGCPReq))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(GetTransPatternReq))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(CreateAutogeneratedProfileReq))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(GetCMCInfoRes))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(ListLocationRes))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(ListRoutePartitionRes))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(RemoveHuntPilotReq))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(GetNumPlanPattern))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(ListProcessNodesByServiceRes))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(GetVoiceMailPortRes))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(GetMediaResourceListRes))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(StandardResponse))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(GetPilotPointRes))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(UpdateCTIRoutePointReq))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(GetUserReq))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(GetServiceParameterRes))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(UpdateRoutePatternReq))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(AddH323TrunkReq))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(GetMOHAudioSourceByIDAndSourceReq))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(AddCallManagerReq))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(GetCallParkRes))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(AddCallParkReq))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(GetCallParkReq))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(AddDevicePoolReq))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(GetServiceParameterReq))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(ListPhoneByDescriptionReq))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(RemoveUserReq))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(GetProcessNodeServiceReq))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(UpdateH323PhoneReq))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(UpdateGatewayEndpointReq))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(AddProcessNodeReq))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(AddMGCPReq))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(AddLineReq))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(UpdateLocationReq))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(UpdateMediaResourceListReq))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(UpdatePilotPointReq))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(UpdateDialPlanReq))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(GetHuntPilotReq))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(GetGatekeeperRes))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(GetHuntPilotRes))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(ListCSSByNameRes))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(ListCSSByNameReq))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(AddDialPlanTagReq))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(AddSIPTrunkReq))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(GetFACInfoRes))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(RemoveCallParkReq))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(AddCallPickupGroupReq))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(ExecuteSQLQueryRes))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(UpdateCallManagerReq))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(GetH323GatewayRes))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(UpdateVoiceMailPortReq))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(AddGatewayEndpointReq))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(UpdateDeviceProfileReq3))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(RemoveMGCPReq))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(GetTimeScheduleRes))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(GetCallManagerRes))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(AddRoutePartitionReq))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(APIRequest))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(GetRouteFilterRes))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(ListDevicePoolRes))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(AddRouteFilterReq))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(GetDeviceProfileRes))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(AddPhoneReq))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(GetDeviceProfileReq))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(GetMGCPRes))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(AddTimePeriodReq))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(AddRouteGroupReq))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(AddGatekeeperReq))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(ListDeviceRes))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(GetTimePeriodRes))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(GetH323Trunk))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(UpdateMGCPReq))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(AddMediaResourceGroupReq))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(UpdateTimePeriodReq))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(ListAARGroupRes))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(AddMGCPUnitReq))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(GetLocationRes))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(GetSIPTrunk))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(UpdateLineReq))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(UpdateRouteGroupReq))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(AddHuntPilotReq))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(AddMediaResourceListReq))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(ListRoutePlanByTypeReq))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(XNPPattern))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(XNumPlan))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(XFeature[]))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(XCallingSearchSpaceMember[]))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(XCallManagerMember[]))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(XMediaResourceGroupMember[]))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(XMediaResourceListMember[]))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(XRegionRelationship[]))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(XPickupGroupMember[]))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(string[]))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(XButton[]))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(XSpeeddial[]))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(XAddOnModule[]))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(XSubscribedService[]))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(XLine[]))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(XDigitDiscardInstructionMember[]))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(XRouteFilterMember[]))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(XLineGroupMember[]))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(XHuntListMember[]))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(XRouteGroupMember[]))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(XAARNeighborhood[]))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(ListDeviceResDevice[]))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(ListDevicePoolResDevicePool[]))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(XTimeScheduleTimePeriod[]))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(object[]))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(XCallingSearchSpace[]))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(XRouteListMember[]))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(XProcessNode[]))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(XRoutePartition[]))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(XLocation[]))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(ListServiceParametersResParam[]))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(ListMediaResourceGroupResMediaResourceGroup[]))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(XVoiceMailProfile[]))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(ListPhoneResponsePhone[]))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(ListUserByNameResUser[]))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(ListPhoneByNameResPhone[]))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(ListMOHAudioSourceResMohAudioSource[]))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(ListGatekeeperResGatekeeper[]))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(ListMediaResourceListResMediaResourceList[]))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(ListPhoneByDescriptionResPhone[]))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(ListPhoneTemplateResPhoneTemplate[]))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(ListDeviceByServiceNameResDevice[]))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(ListRoutePlanByTypeResRoutePlan[]))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(XListRuleOption[]))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(XRule[]))]
public class AXLAPIService : System.Web.Services.Protocols.SoapHttpClientProtocol {
    
    /// <remarks/>
    public AXLAPIService() {
        this.Url = "http://CCMSERVERNAME/CCMApi/AXL/V1/SOAPISAPI.dll";
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.cisco.com/AXLPort/addPhone", RequestNamespace="http://www.cisco.com/AXL/API/1.0", ResponseNamespace="http://www.cisco.com/AXL/API/1.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string addPhone([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] XIPPhone newPhone, [System.Xml.Serialization.XmlAttributeAttribute()] ref System.UInt64 sequence, [System.Xml.Serialization.XmlAttributeAttribute()] [System.Xml.Serialization.XmlIgnoreAttribute()] ref bool sequenceSpecified) {
        object[] results = this.Invoke("addPhone", new object[] {
                    newPhone,
                    sequence,
                    sequenceSpecified});
        sequence = ((System.UInt64)(results[1]));
        sequenceSpecified = ((bool)(results[2]));
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginaddPhone(XIPPhone newPhone, System.UInt64 sequence, bool sequenceSpecified, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("addPhone", new object[] {
                    newPhone,
                    sequence,
                    sequenceSpecified}, callback, asyncState);
    }
    
    /// <remarks/>
    public string EndaddPhone(System.IAsyncResult asyncResult, out System.UInt64 sequence, out bool sequenceSpecified) {
        object[] results = this.EndInvoke(asyncResult);
        sequence = ((System.UInt64)(results[1]));
        sequenceSpecified = ((bool)(results[2]));
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.cisco.com/AXLPort/removePhone", RequestNamespace="http://www.cisco.com/AXL/API/1.0", ResponseNamespace="http://www.cisco.com/AXL/API/1.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string removePhone([System.Xml.Serialization.XmlElementAttribute("phoneId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlElementAttribute("phoneName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")] string Item, [System.Xml.Serialization.XmlIgnoreAttribute()] ItemChoiceType3 ItemElementName, [System.Xml.Serialization.XmlAttributeAttribute()] ref System.UInt64 sequence, [System.Xml.Serialization.XmlAttributeAttribute()] [System.Xml.Serialization.XmlIgnoreAttribute()] ref bool sequenceSpecified) {
        object[] results = this.Invoke("removePhone", new object[] {
                    Item,
                    ItemElementName,
                    sequence,
                    sequenceSpecified});
        sequence = ((System.UInt64)(results[1]));
        sequenceSpecified = ((bool)(results[2]));
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginremovePhone(string Item, ItemChoiceType3 ItemElementName, System.UInt64 sequence, bool sequenceSpecified, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("removePhone", new object[] {
                    Item,
                    ItemElementName,
                    sequence,
                    sequenceSpecified}, callback, asyncState);
    }
    
    /// <remarks/>
    public string EndremovePhone(System.IAsyncResult asyncResult, out System.UInt64 sequence, out bool sequenceSpecified) {
        object[] results = this.EndInvoke(asyncResult);
        sequence = ((System.UInt64)(results[1]));
        sequenceSpecified = ((bool)(results[2]));
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.cisco.com/AXLPort/updatePhone", RequestNamespace="http://www.cisco.com/AXL/API/1.0", ResponseNamespace="http://www.cisco.com/AXL/API/1.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string updatePhone(
                [System.Xml.Serialization.XmlElementAttribute("name", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlElementAttribute("uuid", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")] string Item, 
                [System.Xml.Serialization.XmlIgnoreAttribute()] ItemChoiceType4 ItemElementName, 
                [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="Name")] string newName, 
                [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string description, 
                [System.Xml.Serialization.XmlElementAttribute("callingSearchSpaceId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlElementAttribute("callingSearchSpaceName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="Name")] [System.Xml.Serialization.XmlChoiceIdentifierAttribute("Item1ElementName")] string Item1, 
                [System.Xml.Serialization.XmlIgnoreAttribute()] Item1ChoiceType1 Item1ElementName, 
                [System.Xml.Serialization.XmlElementAttribute("devicePoolName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlElementAttribute("devicePoolId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlChoiceIdentifierAttribute("Item2ElementName")] string Item2, 
                [System.Xml.Serialization.XmlIgnoreAttribute()] Item2ChoiceType Item2ElementName, 
                [System.Xml.Serialization.XmlElementAttribute("locationName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="Name")] [System.Xml.Serialization.XmlElementAttribute("locationId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlChoiceIdentifierAttribute("Item3ElementName")] string Item3, 
                [System.Xml.Serialization.XmlIgnoreAttribute()] Item3ChoiceType Item3ElementName, 
                [System.Xml.Serialization.XmlElementAttribute("mediaResourceListId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlElementAttribute("mediaResourceListName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="Name")] [System.Xml.Serialization.XmlChoiceIdentifierAttribute("Item4ElementName")] string Item4, 
                [System.Xml.Serialization.XmlIgnoreAttribute()] Item4ChoiceType Item4ElementName, 
                [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="nonNegativeInteger")] string networkHoldMOHAudioSourceId, 
                [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="nonNegativeInteger")] string userHoldMOHAudioSourceId, 
                [System.Xml.Serialization.XmlElementAttribute("automatedAlternateRoutingCSSId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlElementAttribute("automatedAlternateRoutingCSSName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlChoiceIdentifierAttribute("Item5ElementName")] string Item5, 
                [System.Xml.Serialization.XmlIgnoreAttribute()] Item5ChoiceType Item5ElementName, 
                [System.Xml.Serialization.XmlElementAttribute("aarNeighborhoodName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlElementAttribute("aarNeighborhoodId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlChoiceIdentifierAttribute("Item6ElementName")] string Item6, 
                [System.Xml.Serialization.XmlIgnoreAttribute()] Item6ChoiceType Item6ElementName, 
                [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] XLoadInformation loadInformation, 
                [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] System.Xml.XmlElement vendorConfig, 
                [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] bool traceFlag, 
                [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool traceFlagSpecified, 
                [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int mlppDomainId, 
                [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool mlppDomainIdSpecified, 
                [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] XStatus mlppIndicationStatus, 
                [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool mlppIndicationStatusSpecified, 
                [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] XPreemption preemption, 
                [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool preemptionSpecified, 
                [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] bool retryVideoCallAsVoice, 
                [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool retryVideoCallAsVoiceSpecified, 
                [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string associatedPC, 
                [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] UpdatePhoneReqLines lines, 
                [System.Xml.Serialization.XmlElementAttribute("phoneTemplateId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlElementAttribute("phoneTemplateName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlChoiceIdentifierAttribute("Item7ElementName")] string Item7, 
                [System.Xml.Serialization.XmlIgnoreAttribute()] Item7ChoiceType Item7ElementName, 
                [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlArrayItemAttribute("speeddial", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)] XSpeeddial[] speeddials, 
                [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlArrayItemAttribute("addOnModule", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)] XAddOnModule[] addOnModules, 
                [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] XUserLocale userLocale, 
                [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool userLocaleSpecified, 
                [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] XCountry networkLocale, 
                [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool networkLocaleSpecified, 
                [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] XDeviceSecurityMode deviceSecurityMode, 
                [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool deviceSecurityModeSpecified, 
                [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="nonNegativeInteger")] string idleTimeout, 
                [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="anyURI")] string authenticationURL, 
                [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="anyURI")] string directoryURL, 
                [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="anyURI")] string idleURL, 
                [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="anyURI")] string informationURL, 
                [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="anyURI")] string messagesURL, 
                [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="anyURI")] string proxyServerURL, 
                [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="anyURI")] string servicesURL, 
                [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlArrayItemAttribute("service", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)] XSubscribedService[] services, 
                [System.Xml.Serialization.XmlElementAttribute("softkeyTemplateName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlElementAttribute("softkeyTemplateId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlChoiceIdentifierAttribute("Item8ElementName")] string Item8, 
                [System.Xml.Serialization.XmlIgnoreAttribute()] Item8ChoiceType1 Item8ElementName, 
                [System.Xml.Serialization.XmlElementAttribute("defaultProfileId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlElementAttribute("defaultProfileName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlChoiceIdentifierAttribute("Item9ElementName")] string Item9, 
                [System.Xml.Serialization.XmlIgnoreAttribute()] Item9ChoiceType Item9ElementName, 
                [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] bool enableExtensionMobility, 
                [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] XStatus builtInBridgeStatus, 
                [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool builtInBridgeStatusSpecified, 
                [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] XStatus callInfoPrivacyStatus, 
                [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool callInfoPrivacyStatusSpecified, 
                [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] string ownerUserId, 
                [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.ComponentModel.DefaultValueAttribute(false)] bool ignorePresentationIndicators, 
                [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] XPacketCaptureMode packetCaptureMode, 
                [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool packetCaptureModeSpecified, 
                [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="positiveInteger", IsNullable=true)] string packetCaptureDuration, 
                [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] XCertificateOperation certificateOperation, 
                [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool certificateOperationSpecified, 
                [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] XAuthenticationMode authenticationMode, 
                [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool authenticationModeSpecified, 
                [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="Name", IsNullable=true)] string authenticationString, 
                [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] XCertificateStatus certificateStatus, 
                [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool certificateStatusSpecified, 
                [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] XKeySize keySize, 
                [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool keySizeSpecified, 
                [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="Name", IsNullable=true)] string upgradeFinishTime, 
                [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] XCertificate certificate, 
                [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool certificateSpecified, 
                [System.Xml.Serialization.XmlAttributeAttribute()] ref System.UInt64 sequence, 
                [System.Xml.Serialization.XmlAttributeAttribute()] [System.Xml.Serialization.XmlIgnoreAttribute()] ref bool sequenceSpecified) {
        object[] results = this.Invoke("updatePhone", new object[] {
                    Item,
                    ItemElementName,
                    newName,
                    description,
                    Item1,
                    Item1ElementName,
                    Item2,
                    Item2ElementName,
                    Item3,
                    Item3ElementName,
                    Item4,
                    Item4ElementName,
                    networkHoldMOHAudioSourceId,
                    userHoldMOHAudioSourceId,
                    Item5,
                    Item5ElementName,
                    Item6,
                    Item6ElementName,
                    loadInformation,
                    vendorConfig,
                    traceFlag,
                    traceFlagSpecified,
                    mlppDomainId,
                    mlppDomainIdSpecified,
                    mlppIndicationStatus,
                    mlppIndicationStatusSpecified,
                    preemption,
                    preemptionSpecified,
                    retryVideoCallAsVoice,
                    retryVideoCallAsVoiceSpecified,
                    associatedPC,
                    lines,
                    Item7,
                    Item7ElementName,
                    speeddials,
                    addOnModules,
                    userLocale,
                    userLocaleSpecified,
                    networkLocale,
                    networkLocaleSpecified,
                    deviceSecurityMode,
                    deviceSecurityModeSpecified,
                    idleTimeout,
                    authenticationURL,
                    directoryURL,
                    idleURL,
                    informationURL,
                    messagesURL,
                    proxyServerURL,
                    servicesURL,
                    services,
                    Item8,
                    Item8ElementName,
                    Item9,
                    Item9ElementName,
                    enableExtensionMobility,
                    builtInBridgeStatus,
                    builtInBridgeStatusSpecified,
                    callInfoPrivacyStatus,
                    callInfoPrivacyStatusSpecified,
                    ownerUserId,
                    ignorePresentationIndicators,
                    packetCaptureMode,
                    packetCaptureModeSpecified,
                    packetCaptureDuration,
                    certificateOperation,
                    certificateOperationSpecified,
                    authenticationMode,
                    authenticationModeSpecified,
                    authenticationString,
                    certificateStatus,
                    certificateStatusSpecified,
                    keySize,
                    keySizeSpecified,
                    upgradeFinishTime,
                    certificate,
                    certificateSpecified,
                    sequence,
                    sequenceSpecified});
        sequence = ((System.UInt64)(results[1]));
        sequenceSpecified = ((bool)(results[2]));
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginupdatePhone(
                string Item, 
                ItemChoiceType4 ItemElementName, 
                string newName, 
                string description, 
                string Item1, 
                Item1ChoiceType1 Item1ElementName, 
                string Item2, 
                Item2ChoiceType Item2ElementName, 
                string Item3, 
                Item3ChoiceType Item3ElementName, 
                string Item4, 
                Item4ChoiceType Item4ElementName, 
                string networkHoldMOHAudioSourceId, 
                string userHoldMOHAudioSourceId, 
                string Item5, 
                Item5ChoiceType Item5ElementName, 
                string Item6, 
                Item6ChoiceType Item6ElementName, 
                XLoadInformation loadInformation, 
                System.Xml.XmlElement vendorConfig, 
                bool traceFlag, 
                bool traceFlagSpecified, 
                int mlppDomainId, 
                bool mlppDomainIdSpecified, 
                XStatus mlppIndicationStatus, 
                bool mlppIndicationStatusSpecified, 
                XPreemption preemption, 
                bool preemptionSpecified, 
                bool retryVideoCallAsVoice, 
                bool retryVideoCallAsVoiceSpecified, 
                string associatedPC, 
                UpdatePhoneReqLines lines, 
                string Item7, 
                Item7ChoiceType Item7ElementName, 
                XSpeeddial[] speeddials, 
                XAddOnModule[] addOnModules, 
                XUserLocale userLocale, 
                bool userLocaleSpecified, 
                XCountry networkLocale, 
                bool networkLocaleSpecified, 
                XDeviceSecurityMode deviceSecurityMode, 
                bool deviceSecurityModeSpecified, 
                string idleTimeout, 
                string authenticationURL, 
                string directoryURL, 
                string idleURL, 
                string informationURL, 
                string messagesURL, 
                string proxyServerURL, 
                string servicesURL, 
                XSubscribedService[] services, 
                string Item8, 
                Item8ChoiceType1 Item8ElementName, 
                string Item9, 
                Item9ChoiceType Item9ElementName, 
                bool enableExtensionMobility, 
                XStatus builtInBridgeStatus, 
                bool builtInBridgeStatusSpecified, 
                XStatus callInfoPrivacyStatus, 
                bool callInfoPrivacyStatusSpecified, 
                string ownerUserId, 
                bool ignorePresentationIndicators, 
                XPacketCaptureMode packetCaptureMode, 
                bool packetCaptureModeSpecified, 
                string packetCaptureDuration, 
                XCertificateOperation certificateOperation, 
                bool certificateOperationSpecified, 
                XAuthenticationMode authenticationMode, 
                bool authenticationModeSpecified, 
                string authenticationString, 
                XCertificateStatus certificateStatus, 
                bool certificateStatusSpecified, 
                XKeySize keySize, 
                bool keySizeSpecified, 
                string upgradeFinishTime, 
                XCertificate certificate, 
                bool certificateSpecified, 
                System.UInt64 sequence, 
                bool sequenceSpecified, 
                System.AsyncCallback callback, 
                object asyncState) {
        return this.BeginInvoke("updatePhone", new object[] {
                    Item,
                    ItemElementName,
                    newName,
                    description,
                    Item1,
                    Item1ElementName,
                    Item2,
                    Item2ElementName,
                    Item3,
                    Item3ElementName,
                    Item4,
                    Item4ElementName,
                    networkHoldMOHAudioSourceId,
                    userHoldMOHAudioSourceId,
                    Item5,
                    Item5ElementName,
                    Item6,
                    Item6ElementName,
                    loadInformation,
                    vendorConfig,
                    traceFlag,
                    traceFlagSpecified,
                    mlppDomainId,
                    mlppDomainIdSpecified,
                    mlppIndicationStatus,
                    mlppIndicationStatusSpecified,
                    preemption,
                    preemptionSpecified,
                    retryVideoCallAsVoice,
                    retryVideoCallAsVoiceSpecified,
                    associatedPC,
                    lines,
                    Item7,
                    Item7ElementName,
                    speeddials,
                    addOnModules,
                    userLocale,
                    userLocaleSpecified,
                    networkLocale,
                    networkLocaleSpecified,
                    deviceSecurityMode,
                    deviceSecurityModeSpecified,
                    idleTimeout,
                    authenticationURL,
                    directoryURL,
                    idleURL,
                    informationURL,
                    messagesURL,
                    proxyServerURL,
                    servicesURL,
                    services,
                    Item8,
                    Item8ElementName,
                    Item9,
                    Item9ElementName,
                    enableExtensionMobility,
                    builtInBridgeStatus,
                    builtInBridgeStatusSpecified,
                    callInfoPrivacyStatus,
                    callInfoPrivacyStatusSpecified,
                    ownerUserId,
                    ignorePresentationIndicators,
                    packetCaptureMode,
                    packetCaptureModeSpecified,
                    packetCaptureDuration,
                    certificateOperation,
                    certificateOperationSpecified,
                    authenticationMode,
                    authenticationModeSpecified,
                    authenticationString,
                    certificateStatus,
                    certificateStatusSpecified,
                    keySize,
                    keySizeSpecified,
                    upgradeFinishTime,
                    certificate,
                    certificateSpecified,
                    sequence,
                    sequenceSpecified}, callback, asyncState);
    }
    
    /// <remarks/>
    public string EndupdatePhone(System.IAsyncResult asyncResult, out System.UInt64 sequence, out bool sequenceSpecified) {
        object[] results = this.EndInvoke(asyncResult);
        sequence = ((System.UInt64)(results[1]));
        sequenceSpecified = ((bool)(results[2]));
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.cisco.com/AXLPort/getPhone", RequestNamespace="http://www.cisco.com/AXL/API/1.0", ResponseNamespace="http://www.cisco.com/AXL/API/1.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public GetPhoneResReturn getPhone([System.Xml.Serialization.XmlElementAttribute("phoneId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlElementAttribute("phoneName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")] string Item, [System.Xml.Serialization.XmlIgnoreAttribute()] ItemChoiceType5 ItemElementName, [System.Xml.Serialization.XmlAttributeAttribute()] ref System.UInt64 sequence, [System.Xml.Serialization.XmlAttributeAttribute()] [System.Xml.Serialization.XmlIgnoreAttribute()] ref bool sequenceSpecified) {
        object[] results = this.Invoke("getPhone", new object[] {
                    Item,
                    ItemElementName,
                    sequence,
                    sequenceSpecified});
        sequence = ((System.UInt64)(results[1]));
        sequenceSpecified = ((bool)(results[2]));
        return ((GetPhoneResReturn)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BegingetPhone(string Item, ItemChoiceType5 ItemElementName, System.UInt64 sequence, bool sequenceSpecified, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("getPhone", new object[] {
                    Item,
                    ItemElementName,
                    sequence,
                    sequenceSpecified}, callback, asyncState);
    }
    
    /// <remarks/>
    public GetPhoneResReturn EndgetPhone(System.IAsyncResult asyncResult, out System.UInt64 sequence, out bool sequenceSpecified) {
        object[] results = this.EndInvoke(asyncResult);
        sequence = ((System.UInt64)(results[1]));
        sequenceSpecified = ((bool)(results[2]));
        return ((GetPhoneResReturn)(results[0]));
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.cisco.com/AXLPort/doDeviceLogin", RequestNamespace="http://www.cisco.com/AXL/API/1.0", ResponseNamespace="http://www.cisco.com/AXL/API/1.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string doDeviceLogin([System.Xml.Serialization.XmlElementAttribute("deviceId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlElementAttribute("deviceName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")] string Item, [System.Xml.Serialization.XmlIgnoreAttribute()] ItemChoiceType6 ItemElementName, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="nonNegativeInteger")] string loginDuration, [System.Xml.Serialization.XmlElementAttribute("profileName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlElementAttribute("profileId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlChoiceIdentifierAttribute("Item1ElementName")] string Item1, [System.Xml.Serialization.XmlIgnoreAttribute()] Item1ChoiceType2 Item1ElementName, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string userId, [System.Xml.Serialization.XmlAttributeAttribute()] ref System.UInt64 sequence, [System.Xml.Serialization.XmlAttributeAttribute()] [System.Xml.Serialization.XmlIgnoreAttribute()] ref bool sequenceSpecified) {
        object[] results = this.Invoke("doDeviceLogin", new object[] {
                    Item,
                    ItemElementName,
                    loginDuration,
                    Item1,
                    Item1ElementName,
                    userId,
                    sequence,
                    sequenceSpecified});
        sequence = ((System.UInt64)(results[1]));
        sequenceSpecified = ((bool)(results[2]));
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BegindoDeviceLogin(string Item, ItemChoiceType6 ItemElementName, string loginDuration, string Item1, Item1ChoiceType2 Item1ElementName, string userId, System.UInt64 sequence, bool sequenceSpecified, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("doDeviceLogin", new object[] {
                    Item,
                    ItemElementName,
                    loginDuration,
                    Item1,
                    Item1ElementName,
                    userId,
                    sequence,
                    sequenceSpecified}, callback, asyncState);
    }
    
    /// <remarks/>
    public string EnddoDeviceLogin(System.IAsyncResult asyncResult, out System.UInt64 sequence, out bool sequenceSpecified) {
        object[] results = this.EndInvoke(asyncResult);
        sequence = ((System.UInt64)(results[1]));
        sequenceSpecified = ((bool)(results[2]));
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.cisco.com/AXLPort/doDeviceLogout", RequestNamespace="http://www.cisco.com/AXL/API/1.0", ResponseNamespace="http://www.cisco.com/AXL/API/1.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string doDeviceLogout([System.Xml.Serialization.XmlElementAttribute("deviceId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlElementAttribute("deviceName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")] string Item, [System.Xml.Serialization.XmlIgnoreAttribute()] ItemChoiceType7 ItemElementName, [System.Xml.Serialization.XmlAttributeAttribute()] ref System.UInt64 sequence, [System.Xml.Serialization.XmlAttributeAttribute()] [System.Xml.Serialization.XmlIgnoreAttribute()] ref bool sequenceSpecified) {
        object[] results = this.Invoke("doDeviceLogout", new object[] {
                    Item,
                    ItemElementName,
                    sequence,
                    sequenceSpecified});
        sequence = ((System.UInt64)(results[1]));
        sequenceSpecified = ((bool)(results[2]));
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BegindoDeviceLogout(string Item, ItemChoiceType7 ItemElementName, System.UInt64 sequence, bool sequenceSpecified, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("doDeviceLogout", new object[] {
                    Item,
                    ItemElementName,
                    sequence,
                    sequenceSpecified}, callback, asyncState);
    }
    
    /// <remarks/>
    public string EnddoDeviceLogout(System.IAsyncResult asyncResult, out System.UInt64 sequence, out bool sequenceSpecified) {
        object[] results = this.EndInvoke(asyncResult);
        sequence = ((System.UInt64)(results[1]));
        sequenceSpecified = ((bool)(results[2]));
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.cisco.com/AXLPort/doDeviceReset", RequestNamespace="http://www.cisco.com/AXL/API/1.0", ResponseNamespace="http://www.cisco.com/AXL/API/1.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    [return: System.Xml.Serialization.XmlElementAttribute("routePartitionId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [return: System.Xml.Serialization.XmlElementAttribute("routePartitionName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [return: System.Xml.Serialization.XmlElementAttribute("uuid", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [return: System.Xml.Serialization.XmlElementAttribute("pattern", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [return: System.Xml.Serialization.XmlElementAttribute("routeFilterId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [return: System.Xml.Serialization.XmlElementAttribute("routeFilterName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [return: System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")]
    public string doDeviceReset([System.Xml.Serialization.XmlElementAttribute("deviceId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlElementAttribute("deviceName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")] string Item, [System.Xml.Serialization.XmlIgnoreAttribute()] ItemChoiceType8 ItemElementName, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.ComponentModel.DefaultValueAttribute(false)] bool isHardReset, [System.Xml.Serialization.XmlAttributeAttribute()] ref System.UInt64 sequence, [System.Xml.Serialization.XmlAttributeAttribute()] [System.Xml.Serialization.XmlIgnoreAttribute()] ref bool sequenceSpecified, [System.Xml.Serialization.XmlElementAttribute("ItemElementName")] [System.Xml.Serialization.XmlIgnoreAttribute()] out ItemChoiceType9 ItemElementName1) {
        object[] results = this.Invoke("doDeviceReset", new object[] {
                    Item,
                    ItemElementName,
                    isHardReset,
                    sequence,
                    sequenceSpecified});
        sequence = ((System.UInt64)(results[1]));
        sequenceSpecified = ((bool)(results[2]));
        ItemElementName1 = ((ItemChoiceType9)(results[3]));
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BegindoDeviceReset(string Item, ItemChoiceType8 ItemElementName, bool isHardReset, System.UInt64 sequence, bool sequenceSpecified, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("doDeviceReset", new object[] {
                    Item,
                    ItemElementName,
                    isHardReset,
                    sequence,
                    sequenceSpecified}, callback, asyncState);
    }
    
    /// <remarks/>
    public string EnddoDeviceReset(System.IAsyncResult asyncResult, out System.UInt64 sequence, out bool sequenceSpecified, out ItemChoiceType9 ItemElementName1) {
        object[] results = this.EndInvoke(asyncResult);
        sequence = ((System.UInt64)(results[1]));
        sequenceSpecified = ((bool)(results[2]));
        ItemElementName1 = ((ItemChoiceType9)(results[3]));
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.cisco.com/AXLPort/addLine", RequestNamespace="http://www.cisco.com/AXL/API/1.0", ResponseNamespace="http://www.cisco.com/AXL/API/1.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string addLine([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] XNPDirectoryNumber newLine, [System.Xml.Serialization.XmlAttributeAttribute()] ref System.UInt64 sequence, [System.Xml.Serialization.XmlAttributeAttribute()] [System.Xml.Serialization.XmlIgnoreAttribute()] ref bool sequenceSpecified) {
        object[] results = this.Invoke("addLine", new object[] {
                    newLine,
                    sequence,
                    sequenceSpecified});
        sequence = ((System.UInt64)(results[1]));
        sequenceSpecified = ((bool)(results[2]));
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginaddLine(XNPDirectoryNumber newLine, System.UInt64 sequence, bool sequenceSpecified, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("addLine", new object[] {
                    newLine,
                    sequence,
                    sequenceSpecified}, callback, asyncState);
    }
    
    /// <remarks/>
    public string EndaddLine(System.IAsyncResult asyncResult, out System.UInt64 sequence, out bool sequenceSpecified) {
        object[] results = this.EndInvoke(asyncResult);
        sequence = ((System.UInt64)(results[1]));
        sequenceSpecified = ((bool)(results[2]));
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.cisco.com/AXLPort/removeLine", RequestNamespace="http://www.cisco.com/AXL/API/1.0", ResponseNamespace="http://www.cisco.com/AXL/API/1.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string removeLine([System.Xml.Serialization.XmlElementAttribute("routePartitionId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlElementAttribute("routePartitionName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlElementAttribute("uuid", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlElementAttribute("pattern", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlElementAttribute("routeFilterId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlElementAttribute("routeFilterName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")] string Item, [System.Xml.Serialization.XmlIgnoreAttribute()] ItemChoiceType10 ItemElementName, [System.Xml.Serialization.XmlAttributeAttribute()] ref System.UInt64 sequence, [System.Xml.Serialization.XmlAttributeAttribute()] [System.Xml.Serialization.XmlIgnoreAttribute()] ref bool sequenceSpecified) {
        object[] results = this.Invoke("removeLine", new object[] {
                    Item,
                    ItemElementName,
                    sequence,
                    sequenceSpecified});
        sequence = ((System.UInt64)(results[1]));
        sequenceSpecified = ((bool)(results[2]));
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginremoveLine(string Item, ItemChoiceType10 ItemElementName, System.UInt64 sequence, bool sequenceSpecified, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("removeLine", new object[] {
                    Item,
                    ItemElementName,
                    sequence,
                    sequenceSpecified}, callback, asyncState);
    }
    
    /// <remarks/>
    public string EndremoveLine(System.IAsyncResult asyncResult, out System.UInt64 sequence, out bool sequenceSpecified) {
        object[] results = this.EndInvoke(asyncResult);
        sequence = ((System.UInt64)(results[1]));
        sequenceSpecified = ((bool)(results[2]));
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.cisco.com/AXLPort/updateLine", RequestNamespace="http://www.cisco.com/AXL/API/1.0", ResponseNamespace="http://www.cisco.com/AXL/API/1.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string updateLine(
                [System.Xml.Serialization.XmlElementAttribute("routePartitionId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlElementAttribute("routePartitionName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlElementAttribute("uuid", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlElementAttribute("pattern", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlElementAttribute("routeFilterId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlElementAttribute("routeFilterName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")] string Item, 
                [System.Xml.Serialization.XmlIgnoreAttribute()] ItemChoiceType11 ItemElementName, 
                [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string newPattern, 
                [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string description, 
                [System.Xml.Serialization.XmlElementAttribute("newRoutePartitionId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlElementAttribute("newRoutePartitionName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlChoiceIdentifierAttribute("Item1ElementName")] string Item1, 
                [System.Xml.Serialization.XmlIgnoreAttribute()] Item1ChoiceType3 Item1ElementName, 
                [System.Xml.Serialization.XmlElementAttribute("aarNeighborhoodName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlElementAttribute("aarNeighborhoodId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlChoiceIdentifierAttribute("Item2ElementName")] string Item2, 
                [System.Xml.Serialization.XmlIgnoreAttribute()] Item2ChoiceType1 Item2ElementName, 
                [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] XCallForwardInfo callForwardAll, 
                [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] XCallForwardInfo callForwardBusy, 
                [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] XCallForwardInfo callForwardBusyInt, 
                [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] XCallForwardInfo callForwardNoAnswer, 
                [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] XCallForwardInfo callForwardNoAnswerInt, 
                [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] XCallForwardInfo callForwardNoCoverage, 
                [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] XCallForwardInfo callForwardNoCoverageInt, 
                [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] XCallForwardInfo callForwardOnFailure, 
                [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] XCallForwardInfo callForwardAlternateParty, 
                [System.Xml.Serialization.XmlElementAttribute("callPickupGroupName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlElementAttribute("callPickupGroupId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlChoiceIdentifierAttribute("Item3ElementName")] string Item3, 
                [System.Xml.Serialization.XmlIgnoreAttribute()] Item3ChoiceType1 Item3ElementName, 
                [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] XAutoAnswer autoAnswer, 
                [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool autoAnswerSpecified, 
                [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="nonNegativeInteger")] string networkHoldMOHAudioSourceId, 
                [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="nonNegativeInteger")] string userHoldMOHAudioSourceId, 
                [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] string alertingName, 
                [System.Xml.Serialization.XmlElementAttribute("shareLineAppearanceCSSId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlElementAttribute("shareLineAppearanceCSSName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlChoiceIdentifierAttribute("Item4ElementName")] string Item4, 
                [System.Xml.Serialization.XmlIgnoreAttribute()] Item4ChoiceType1 Item4ElementName, 
                [System.Xml.Serialization.XmlElementAttribute("voiceMailProfileId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlElementAttribute("voiceMailProfileName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlChoiceIdentifierAttribute("Item5ElementName")] string Item5, 
                [System.Xml.Serialization.XmlIgnoreAttribute()] Item5ChoiceType1 Item5ElementName, 
                [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] XPatternPrecedence patternPrecedence, 
                [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool patternPrecedenceSpecified, 
                [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] XReleaseCauseValue releaseCause, 
                [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool releaseCauseSpecified, 
                [System.Xml.Serialization.XmlAttributeAttribute()] ref System.UInt64 sequence, 
                [System.Xml.Serialization.XmlAttributeAttribute()] [System.Xml.Serialization.XmlIgnoreAttribute()] ref bool sequenceSpecified) {
        object[] results = this.Invoke("updateLine", new object[] {
                    Item,
                    ItemElementName,
                    newPattern,
                    description,
                    Item1,
                    Item1ElementName,
                    Item2,
                    Item2ElementName,
                    callForwardAll,
                    callForwardBusy,
                    callForwardBusyInt,
                    callForwardNoAnswer,
                    callForwardNoAnswerInt,
                    callForwardNoCoverage,
                    callForwardNoCoverageInt,
                    callForwardOnFailure,
                    callForwardAlternateParty,
                    Item3,
                    Item3ElementName,
                    autoAnswer,
                    autoAnswerSpecified,
                    networkHoldMOHAudioSourceId,
                    userHoldMOHAudioSourceId,
                    alertingName,
                    Item4,
                    Item4ElementName,
                    Item5,
                    Item5ElementName,
                    patternPrecedence,
                    patternPrecedenceSpecified,
                    releaseCause,
                    releaseCauseSpecified,
                    sequence,
                    sequenceSpecified});
        sequence = ((System.UInt64)(results[1]));
        sequenceSpecified = ((bool)(results[2]));
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginupdateLine(
                string Item, 
                ItemChoiceType11 ItemElementName, 
                string newPattern, 
                string description, 
                string Item1, 
                Item1ChoiceType3 Item1ElementName, 
                string Item2, 
                Item2ChoiceType1 Item2ElementName, 
                XCallForwardInfo callForwardAll, 
                XCallForwardInfo callForwardBusy, 
                XCallForwardInfo callForwardBusyInt, 
                XCallForwardInfo callForwardNoAnswer, 
                XCallForwardInfo callForwardNoAnswerInt, 
                XCallForwardInfo callForwardNoCoverage, 
                XCallForwardInfo callForwardNoCoverageInt, 
                XCallForwardInfo callForwardOnFailure, 
                XCallForwardInfo callForwardAlternateParty, 
                string Item3, 
                Item3ChoiceType1 Item3ElementName, 
                XAutoAnswer autoAnswer, 
                bool autoAnswerSpecified, 
                string networkHoldMOHAudioSourceId, 
                string userHoldMOHAudioSourceId, 
                string alertingName, 
                string Item4, 
                Item4ChoiceType1 Item4ElementName, 
                string Item5, 
                Item5ChoiceType1 Item5ElementName, 
                XPatternPrecedence patternPrecedence, 
                bool patternPrecedenceSpecified, 
                XReleaseCauseValue releaseCause, 
                bool releaseCauseSpecified, 
                System.UInt64 sequence, 
                bool sequenceSpecified, 
                System.AsyncCallback callback, 
                object asyncState) {
        return this.BeginInvoke("updateLine", new object[] {
                    Item,
                    ItemElementName,
                    newPattern,
                    description,
                    Item1,
                    Item1ElementName,
                    Item2,
                    Item2ElementName,
                    callForwardAll,
                    callForwardBusy,
                    callForwardBusyInt,
                    callForwardNoAnswer,
                    callForwardNoAnswerInt,
                    callForwardNoCoverage,
                    callForwardNoCoverageInt,
                    callForwardOnFailure,
                    callForwardAlternateParty,
                    Item3,
                    Item3ElementName,
                    autoAnswer,
                    autoAnswerSpecified,
                    networkHoldMOHAudioSourceId,
                    userHoldMOHAudioSourceId,
                    alertingName,
                    Item4,
                    Item4ElementName,
                    Item5,
                    Item5ElementName,
                    patternPrecedence,
                    patternPrecedenceSpecified,
                    releaseCause,
                    releaseCauseSpecified,
                    sequence,
                    sequenceSpecified}, callback, asyncState);
    }
    
    /// <remarks/>
    public string EndupdateLine(System.IAsyncResult asyncResult, out System.UInt64 sequence, out bool sequenceSpecified) {
        object[] results = this.EndInvoke(asyncResult);
        sequence = ((System.UInt64)(results[1]));
        sequenceSpecified = ((bool)(results[2]));
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.cisco.com/AXLPort/getLine", RequestNamespace="http://www.cisco.com/AXL/API/1.0", ResponseNamespace="http://www.cisco.com/AXL/API/1.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public GetLineResReturn getLine([System.Xml.Serialization.XmlElementAttribute("routePartitionId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlElementAttribute("routePartitionName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlElementAttribute("uuid", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlElementAttribute("pattern", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlElementAttribute("routeFilterId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlElementAttribute("routeFilterName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")] string Item, [System.Xml.Serialization.XmlIgnoreAttribute()] ItemChoiceType12 ItemElementName, [System.Xml.Serialization.XmlAttributeAttribute()] ref System.UInt64 sequence, [System.Xml.Serialization.XmlAttributeAttribute()] [System.Xml.Serialization.XmlIgnoreAttribute()] ref bool sequenceSpecified) {
        object[] results = this.Invoke("getLine", new object[] {
                    Item,
                    ItemElementName,
                    sequence,
                    sequenceSpecified});
        sequence = ((System.UInt64)(results[1]));
        sequenceSpecified = ((bool)(results[2]));
        return ((GetLineResReturn)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BegingetLine(string Item, ItemChoiceType12 ItemElementName, System.UInt64 sequence, bool sequenceSpecified, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("getLine", new object[] {
                    Item,
                    ItemElementName,
                    sequence,
                    sequenceSpecified}, callback, asyncState);
    }
    
    /// <remarks/>
    public GetLineResReturn EndgetLine(System.IAsyncResult asyncResult, out System.UInt64 sequence, out bool sequenceSpecified) {
        object[] results = this.EndInvoke(asyncResult);
        sequence = ((System.UInt64)(results[1]));
        sequenceSpecified = ((bool)(results[2]));
        return ((GetLineResReturn)(results[0]));
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.cisco.com/AXLPort/addUser", RequestNamespace="http://www.cisco.com/AXL/API/1.0", ResponseNamespace="http://www.cisco.com/AXL/API/1.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string addUser([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] XUser newUser, [System.Xml.Serialization.XmlAttributeAttribute()] ref System.UInt64 sequence, [System.Xml.Serialization.XmlAttributeAttribute()] [System.Xml.Serialization.XmlIgnoreAttribute()] ref bool sequenceSpecified) {
        object[] results = this.Invoke("addUser", new object[] {
                    newUser,
                    sequence,
                    sequenceSpecified});
        sequence = ((System.UInt64)(results[1]));
        sequenceSpecified = ((bool)(results[2]));
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginaddUser(XUser newUser, System.UInt64 sequence, bool sequenceSpecified, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("addUser", new object[] {
                    newUser,
                    sequence,
                    sequenceSpecified}, callback, asyncState);
    }
    
    /// <remarks/>
    public string EndaddUser(System.IAsyncResult asyncResult, out System.UInt64 sequence, out bool sequenceSpecified) {
        object[] results = this.EndInvoke(asyncResult);
        sequence = ((System.UInt64)(results[1]));
        sequenceSpecified = ((bool)(results[2]));
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.cisco.com/AXLPort/removeUser", RequestNamespace="http://www.cisco.com/AXL/API/1.0", ResponseNamespace="http://www.cisco.com/AXL/API/1.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string removeUser([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string userid, [System.Xml.Serialization.XmlAttributeAttribute()] ref System.UInt64 sequence, [System.Xml.Serialization.XmlAttributeAttribute()] [System.Xml.Serialization.XmlIgnoreAttribute()] ref bool sequenceSpecified) {
        object[] results = this.Invoke("removeUser", new object[] {
                    userid,
                    sequence,
                    sequenceSpecified});
        sequence = ((System.UInt64)(results[1]));
        sequenceSpecified = ((bool)(results[2]));
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginremoveUser(string userid, System.UInt64 sequence, bool sequenceSpecified, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("removeUser", new object[] {
                    userid,
                    sequence,
                    sequenceSpecified}, callback, asyncState);
    }
    
    /// <remarks/>
    public string EndremoveUser(System.IAsyncResult asyncResult, out System.UInt64 sequence, out bool sequenceSpecified) {
        object[] results = this.EndInvoke(asyncResult);
        sequence = ((System.UInt64)(results[1]));
        sequenceSpecified = ((bool)(results[2]));
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.cisco.com/AXLPort/updateUser", RequestNamespace="http://www.cisco.com/AXL/API/1.0", ResponseNamespace="http://www.cisco.com/AXL/API/1.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string updateUser(
                [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string userid, 
                [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string firstname, 
                [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string lastname, 
                [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string password, 
                [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string pin, 
                [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string telephoneNumber, 
                [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string extension, 
                [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string department, 
                [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string manager, 
                [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] XCountry locale, 
                [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool localeSpecified, 
                [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlArrayItemAttribute("device", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)] string[] associatedDevices, 
                [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string associatedPC, 
                [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] bool authenticationProxyRights, 
                [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool authenticationProxyRightsSpecified, 
                [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] bool enableCTI, 
                [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool enableCTISpecified, 
                [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] bool enableCTISuperProvider, 
                [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool enableCTISuperProviderSpecified, 
                [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] bool allowCallParkRetrieval, 
                [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool allowCallParkRetrievalSpecified, 
                [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] bool callingNumberModAllowed, 
                [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool callingNumberModAllowedSpecified, 
                [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string iaqExtension, 
                [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] UpdateUserReqPhoneProfiles phoneProfiles, 
                [System.Xml.Serialization.XmlAttributeAttribute()] ref System.UInt64 sequence, 
                [System.Xml.Serialization.XmlAttributeAttribute()] [System.Xml.Serialization.XmlIgnoreAttribute()] ref bool sequenceSpecified) {
        object[] results = this.Invoke("updateUser", new object[] {
                    userid,
                    firstname,
                    lastname,
                    password,
                    pin,
                    telephoneNumber,
                    extension,
                    department,
                    manager,
                    locale,
                    localeSpecified,
                    associatedDevices,
                    associatedPC,
                    authenticationProxyRights,
                    authenticationProxyRightsSpecified,
                    enableCTI,
                    enableCTISpecified,
                    enableCTISuperProvider,
                    enableCTISuperProviderSpecified,
                    allowCallParkRetrieval,
                    allowCallParkRetrievalSpecified,
                    callingNumberModAllowed,
                    callingNumberModAllowedSpecified,
                    iaqExtension,
                    phoneProfiles,
                    sequence,
                    sequenceSpecified});
        sequence = ((System.UInt64)(results[1]));
        sequenceSpecified = ((bool)(results[2]));
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginupdateUser(
                string userid, 
                string firstname, 
                string lastname, 
                string password, 
                string pin, 
                string telephoneNumber, 
                string extension, 
                string department, 
                string manager, 
                XCountry locale, 
                bool localeSpecified, 
                string[] associatedDevices, 
                string associatedPC, 
                bool authenticationProxyRights, 
                bool authenticationProxyRightsSpecified, 
                bool enableCTI, 
                bool enableCTISpecified, 
                bool enableCTISuperProvider, 
                bool enableCTISuperProviderSpecified, 
                bool allowCallParkRetrieval, 
                bool allowCallParkRetrievalSpecified, 
                bool callingNumberModAllowed, 
                bool callingNumberModAllowedSpecified, 
                string iaqExtension, 
                UpdateUserReqPhoneProfiles phoneProfiles, 
                System.UInt64 sequence, 
                bool sequenceSpecified, 
                System.AsyncCallback callback, 
                object asyncState) {
        return this.BeginInvoke("updateUser", new object[] {
                    userid,
                    firstname,
                    lastname,
                    password,
                    pin,
                    telephoneNumber,
                    extension,
                    department,
                    manager,
                    locale,
                    localeSpecified,
                    associatedDevices,
                    associatedPC,
                    authenticationProxyRights,
                    authenticationProxyRightsSpecified,
                    enableCTI,
                    enableCTISpecified,
                    enableCTISuperProvider,
                    enableCTISuperProviderSpecified,
                    allowCallParkRetrieval,
                    allowCallParkRetrievalSpecified,
                    callingNumberModAllowed,
                    callingNumberModAllowedSpecified,
                    iaqExtension,
                    phoneProfiles,
                    sequence,
                    sequenceSpecified}, callback, asyncState);
    }
    
    /// <remarks/>
    public string EndupdateUser(System.IAsyncResult asyncResult, out System.UInt64 sequence, out bool sequenceSpecified) {
        object[] results = this.EndInvoke(asyncResult);
        sequence = ((System.UInt64)(results[1]));
        sequenceSpecified = ((bool)(results[2]));
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.cisco.com/AXLPort/getUser", RequestNamespace="http://www.cisco.com/AXL/API/1.0", ResponseNamespace="http://www.cisco.com/AXL/API/1.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public GetUserResReturn getUser([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string userid, [System.Xml.Serialization.XmlAttributeAttribute()] ref System.UInt64 sequence, [System.Xml.Serialization.XmlAttributeAttribute()] [System.Xml.Serialization.XmlIgnoreAttribute()] ref bool sequenceSpecified) {
        object[] results = this.Invoke("getUser", new object[] {
                    userid,
                    sequence,
                    sequenceSpecified});
        sequence = ((System.UInt64)(results[1]));
        sequenceSpecified = ((bool)(results[2]));
        return ((GetUserResReturn)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BegingetUser(string userid, System.UInt64 sequence, bool sequenceSpecified, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("getUser", new object[] {
                    userid,
                    sequence,
                    sequenceSpecified}, callback, asyncState);
    }
    
    /// <remarks/>
    public GetUserResReturn EndgetUser(System.IAsyncResult asyncResult, out System.UInt64 sequence, out bool sequenceSpecified) {
        object[] results = this.EndInvoke(asyncResult);
        sequence = ((System.UInt64)(results[1]));
        sequenceSpecified = ((bool)(results[2]));
        return ((GetUserResReturn)(results[0]));
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.cisco.com/AXLPort/addDeviceProfile", RequestNamespace="http://www.cisco.com/AXL/API/1.0", ResponseNamespace="http://www.cisco.com/AXL/API/1.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string addDeviceProfile([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] XPhoneProfile newProfile, [System.Xml.Serialization.XmlAttributeAttribute()] ref System.UInt64 sequence, [System.Xml.Serialization.XmlAttributeAttribute()] [System.Xml.Serialization.XmlIgnoreAttribute()] ref bool sequenceSpecified) {
        object[] results = this.Invoke("addDeviceProfile", new object[] {
                    newProfile,
                    sequence,
                    sequenceSpecified});
        sequence = ((System.UInt64)(results[1]));
        sequenceSpecified = ((bool)(results[2]));
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginaddDeviceProfile(XPhoneProfile newProfile, System.UInt64 sequence, bool sequenceSpecified, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("addDeviceProfile", new object[] {
                    newProfile,
                    sequence,
                    sequenceSpecified}, callback, asyncState);
    }
    
    /// <remarks/>
    public string EndaddDeviceProfile(System.IAsyncResult asyncResult, out System.UInt64 sequence, out bool sequenceSpecified) {
        object[] results = this.EndInvoke(asyncResult);
        sequence = ((System.UInt64)(results[1]));
        sequenceSpecified = ((bool)(results[2]));
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.cisco.com/AXLPort/removeDeviceProfile", RequestNamespace="http://www.cisco.com/AXL/API/1.0", ResponseNamespace="http://www.cisco.com/AXL/API/1.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string removeDeviceProfile([System.Xml.Serialization.XmlElementAttribute("profileName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlElementAttribute("profileId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")] string Item, [System.Xml.Serialization.XmlIgnoreAttribute()] ItemChoiceType13 ItemElementName, [System.Xml.Serialization.XmlAttributeAttribute()] ref System.UInt64 sequence, [System.Xml.Serialization.XmlAttributeAttribute()] [System.Xml.Serialization.XmlIgnoreAttribute()] ref bool sequenceSpecified) {
        object[] results = this.Invoke("removeDeviceProfile", new object[] {
                    Item,
                    ItemElementName,
                    sequence,
                    sequenceSpecified});
        sequence = ((System.UInt64)(results[1]));
        sequenceSpecified = ((bool)(results[2]));
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginremoveDeviceProfile(string Item, ItemChoiceType13 ItemElementName, System.UInt64 sequence, bool sequenceSpecified, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("removeDeviceProfile", new object[] {
                    Item,
                    ItemElementName,
                    sequence,
                    sequenceSpecified}, callback, asyncState);
    }
    
    /// <remarks/>
    public string EndremoveDeviceProfile(System.IAsyncResult asyncResult, out System.UInt64 sequence, out bool sequenceSpecified) {
        object[] results = this.EndInvoke(asyncResult);
        sequence = ((System.UInt64)(results[1]));
        sequenceSpecified = ((bool)(results[2]));
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.cisco.com/AXLPort/updateDeviceProfile", RequestNamespace="http://www.cisco.com/AXL/API/1.0", ResponseNamespace="http://www.cisco.com/AXL/API/1.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string updateDeviceProfile(
                [System.Xml.Serialization.XmlElementAttribute("name", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlElementAttribute("uuid", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")] string Item, 
                [System.Xml.Serialization.XmlIgnoreAttribute()] ItemChoiceType14 ItemElementName, 
                [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="Name")] string newName, 
                [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string description, 
                [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="nonNegativeInteger")] string networkHoldMOHAudioSourceId, 
                [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="nonNegativeInteger")] string userHoldMOHAudioSourceId, 
                [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int mlppDomainId, 
                [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool mlppDomainIdSpecified, 
                [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] XStatus mlppIndicationStatus, 
                [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool mlppIndicationStatusSpecified, 
                [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] XPreemption preemption, 
                [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool preemptionSpecified, 
                [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] UpdateDeviceProfileReqLines lines, 
                [System.Xml.Serialization.XmlElementAttribute("phoneTemplateId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlElementAttribute("phoneTemplateName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlChoiceIdentifierAttribute("Item1ElementName")] string Item1, 
                [System.Xml.Serialization.XmlIgnoreAttribute()] Item1ChoiceType4 Item1ElementName, 
                [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlArrayItemAttribute("speeddial", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)] XSpeeddial[] speeddials, 
                [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlArrayItemAttribute("addOnModule", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)] XAddOnModule[] addOnModules, 
                [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] XUserLocale userLocale, 
                [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool userLocaleSpecified, 
                [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlArrayItemAttribute("service", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)] XSubscribedService[] services, 
                [System.Xml.Serialization.XmlElementAttribute("softkeyTemplateName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlElementAttribute("softkeyTemplateId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlChoiceIdentifierAttribute("Item2ElementName")] string Item2, 
                [System.Xml.Serialization.XmlIgnoreAttribute()] Item2ChoiceType2 Item2ElementName, 
                [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string loginUserId, 
                [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.ComponentModel.DefaultValueAttribute(false)] bool ignorePresentationIndicators, 
                [System.Xml.Serialization.XmlAttributeAttribute()] ref System.UInt64 sequence, 
                [System.Xml.Serialization.XmlAttributeAttribute()] [System.Xml.Serialization.XmlIgnoreAttribute()] ref bool sequenceSpecified) {
        object[] results = this.Invoke("updateDeviceProfile", new object[] {
                    Item,
                    ItemElementName,
                    newName,
                    description,
                    networkHoldMOHAudioSourceId,
                    userHoldMOHAudioSourceId,
                    mlppDomainId,
                    mlppDomainIdSpecified,
                    mlppIndicationStatus,
                    mlppIndicationStatusSpecified,
                    preemption,
                    preemptionSpecified,
                    lines,
                    Item1,
                    Item1ElementName,
                    speeddials,
                    addOnModules,
                    userLocale,
                    userLocaleSpecified,
                    services,
                    Item2,
                    Item2ElementName,
                    loginUserId,
                    ignorePresentationIndicators,
                    sequence,
                    sequenceSpecified});
        sequence = ((System.UInt64)(results[1]));
        sequenceSpecified = ((bool)(results[2]));
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginupdateDeviceProfile(
                string Item, 
                ItemChoiceType14 ItemElementName, 
                string newName, 
                string description, 
                string networkHoldMOHAudioSourceId, 
                string userHoldMOHAudioSourceId, 
                int mlppDomainId, 
                bool mlppDomainIdSpecified, 
                XStatus mlppIndicationStatus, 
                bool mlppIndicationStatusSpecified, 
                XPreemption preemption, 
                bool preemptionSpecified, 
                UpdateDeviceProfileReqLines lines, 
                string Item1, 
                Item1ChoiceType4 Item1ElementName, 
                XSpeeddial[] speeddials, 
                XAddOnModule[] addOnModules, 
                XUserLocale userLocale, 
                bool userLocaleSpecified, 
                XSubscribedService[] services, 
                string Item2, 
                Item2ChoiceType2 Item2ElementName, 
                string loginUserId, 
                bool ignorePresentationIndicators, 
                System.UInt64 sequence, 
                bool sequenceSpecified, 
                System.AsyncCallback callback, 
                object asyncState) {
        return this.BeginInvoke("updateDeviceProfile", new object[] {
                    Item,
                    ItemElementName,
                    newName,
                    description,
                    networkHoldMOHAudioSourceId,
                    userHoldMOHAudioSourceId,
                    mlppDomainId,
                    mlppDomainIdSpecified,
                    mlppIndicationStatus,
                    mlppIndicationStatusSpecified,
                    preemption,
                    preemptionSpecified,
                    lines,
                    Item1,
                    Item1ElementName,
                    speeddials,
                    addOnModules,
                    userLocale,
                    userLocaleSpecified,
                    services,
                    Item2,
                    Item2ElementName,
                    loginUserId,
                    ignorePresentationIndicators,
                    sequence,
                    sequenceSpecified}, callback, asyncState);
    }
    
    /// <remarks/>
    public string EndupdateDeviceProfile(System.IAsyncResult asyncResult, out System.UInt64 sequence, out bool sequenceSpecified) {
        object[] results = this.EndInvoke(asyncResult);
        sequence = ((System.UInt64)(results[1]));
        sequenceSpecified = ((bool)(results[2]));
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.cisco.com/AXLPort/getDeviceProfile", RequestNamespace="http://www.cisco.com/AXL/API/1.0", ResponseNamespace="http://www.cisco.com/AXL/API/1.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public GetDeviceProfileResReturn getDeviceProfile([System.Xml.Serialization.XmlElementAttribute("profileName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlElementAttribute("profileId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")] string Item, [System.Xml.Serialization.XmlIgnoreAttribute()] ItemChoiceType15 ItemElementName, [System.Xml.Serialization.XmlAttributeAttribute()] ref System.UInt64 sequence, [System.Xml.Serialization.XmlAttributeAttribute()] [System.Xml.Serialization.XmlIgnoreAttribute()] ref bool sequenceSpecified) {
        object[] results = this.Invoke("getDeviceProfile", new object[] {
                    Item,
                    ItemElementName,
                    sequence,
                    sequenceSpecified});
        sequence = ((System.UInt64)(results[1]));
        sequenceSpecified = ((bool)(results[2]));
        return ((GetDeviceProfileResReturn)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BegingetDeviceProfile(string Item, ItemChoiceType15 ItemElementName, System.UInt64 sequence, bool sequenceSpecified, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("getDeviceProfile", new object[] {
                    Item,
                    ItemElementName,
                    sequence,
                    sequenceSpecified}, callback, asyncState);
    }
    
    /// <remarks/>
    public GetDeviceProfileResReturn EndgetDeviceProfile(System.IAsyncResult asyncResult, out System.UInt64 sequence, out bool sequenceSpecified) {
        object[] results = this.EndInvoke(asyncResult);
        sequence = ((System.UInt64)(results[1]));
        sequenceSpecified = ((bool)(results[2]));
        return ((GetDeviceProfileResReturn)(results[0]));
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.cisco.com/AXLPort/addRoutePartition", RequestNamespace="http://www.cisco.com/AXL/API/1.0", ResponseNamespace="http://www.cisco.com/AXL/API/1.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string addRoutePartition([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] XRoutePartition newRoutePartition, [System.Xml.Serialization.XmlAttributeAttribute()] ref System.UInt64 sequence, [System.Xml.Serialization.XmlAttributeAttribute()] [System.Xml.Serialization.XmlIgnoreAttribute()] ref bool sequenceSpecified) {
        object[] results = this.Invoke("addRoutePartition", new object[] {
                    newRoutePartition,
                    sequence,
                    sequenceSpecified});
        sequence = ((System.UInt64)(results[1]));
        sequenceSpecified = ((bool)(results[2]));
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginaddRoutePartition(XRoutePartition newRoutePartition, System.UInt64 sequence, bool sequenceSpecified, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("addRoutePartition", new object[] {
                    newRoutePartition,
                    sequence,
                    sequenceSpecified}, callback, asyncState);
    }
    
    /// <remarks/>
    public string EndaddRoutePartition(System.IAsyncResult asyncResult, out System.UInt64 sequence, out bool sequenceSpecified) {
        object[] results = this.EndInvoke(asyncResult);
        sequence = ((System.UInt64)(results[1]));
        sequenceSpecified = ((bool)(results[2]));
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.cisco.com/AXLPort/updateRoutePartition", RequestNamespace="http://www.cisco.com/AXL/API/1.0", ResponseNamespace="http://www.cisco.com/AXL/API/1.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string updateRoutePartition([System.Xml.Serialization.XmlElementAttribute("name", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlElementAttribute("uuid", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")] string Item, [System.Xml.Serialization.XmlIgnoreAttribute()] ItemChoiceType16 ItemElementName, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string newName, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string description, [System.Xml.Serialization.XmlElementAttribute("newTimeScheduleName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlElementAttribute("newTimeScheduleId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlChoiceIdentifierAttribute("Item1ElementName")] string Item1, [System.Xml.Serialization.XmlIgnoreAttribute()] Item1ChoiceType5 Item1ElementName, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] bool useOriginatingDeviceTimeZone, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool useOriginatingDeviceTimeZoneSpecified, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] XTimeZone timeZone, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool timeZoneSpecified, [System.Xml.Serialization.XmlAttributeAttribute()] ref System.UInt64 sequence, [System.Xml.Serialization.XmlAttributeAttribute()] [System.Xml.Serialization.XmlIgnoreAttribute()] ref bool sequenceSpecified) {
        object[] results = this.Invoke("updateRoutePartition", new object[] {
                    Item,
                    ItemElementName,
                    newName,
                    description,
                    Item1,
                    Item1ElementName,
                    useOriginatingDeviceTimeZone,
                    useOriginatingDeviceTimeZoneSpecified,
                    timeZone,
                    timeZoneSpecified,
                    sequence,
                    sequenceSpecified});
        sequence = ((System.UInt64)(results[1]));
        sequenceSpecified = ((bool)(results[2]));
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginupdateRoutePartition(string Item, ItemChoiceType16 ItemElementName, string newName, string description, string Item1, Item1ChoiceType5 Item1ElementName, bool useOriginatingDeviceTimeZone, bool useOriginatingDeviceTimeZoneSpecified, XTimeZone timeZone, bool timeZoneSpecified, System.UInt64 sequence, bool sequenceSpecified, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("updateRoutePartition", new object[] {
                    Item,
                    ItemElementName,
                    newName,
                    description,
                    Item1,
                    Item1ElementName,
                    useOriginatingDeviceTimeZone,
                    useOriginatingDeviceTimeZoneSpecified,
                    timeZone,
                    timeZoneSpecified,
                    sequence,
                    sequenceSpecified}, callback, asyncState);
    }
    
    /// <remarks/>
    public string EndupdateRoutePartition(System.IAsyncResult asyncResult, out System.UInt64 sequence, out bool sequenceSpecified) {
        object[] results = this.EndInvoke(asyncResult);
        sequence = ((System.UInt64)(results[1]));
        sequenceSpecified = ((bool)(results[2]));
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.cisco.com/AXLPort/removeRoutePartition", RequestNamespace="http://www.cisco.com/AXL/API/1.0", ResponseNamespace="http://www.cisco.com/AXL/API/1.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string removeRoutePartition([System.Xml.Serialization.XmlElementAttribute("partitionId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlElementAttribute("partitionName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")] string Item, [System.Xml.Serialization.XmlIgnoreAttribute()] ItemChoiceType17 ItemElementName, [System.Xml.Serialization.XmlAttributeAttribute()] ref System.UInt64 sequence, [System.Xml.Serialization.XmlAttributeAttribute()] [System.Xml.Serialization.XmlIgnoreAttribute()] ref bool sequenceSpecified) {
        object[] results = this.Invoke("removeRoutePartition", new object[] {
                    Item,
                    ItemElementName,
                    sequence,
                    sequenceSpecified});
        sequence = ((System.UInt64)(results[1]));
        sequenceSpecified = ((bool)(results[2]));
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginremoveRoutePartition(string Item, ItemChoiceType17 ItemElementName, System.UInt64 sequence, bool sequenceSpecified, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("removeRoutePartition", new object[] {
                    Item,
                    ItemElementName,
                    sequence,
                    sequenceSpecified}, callback, asyncState);
    }
    
    /// <remarks/>
    public string EndremoveRoutePartition(System.IAsyncResult asyncResult, out System.UInt64 sequence, out bool sequenceSpecified) {
        object[] results = this.EndInvoke(asyncResult);
        sequence = ((System.UInt64)(results[1]));
        sequenceSpecified = ((bool)(results[2]));
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.cisco.com/AXLPort/getRoutePartition", RequestNamespace="http://www.cisco.com/AXL/API/1.0", ResponseNamespace="http://www.cisco.com/AXL/API/1.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public GetRoutePartitionResReturn getRoutePartition([System.Xml.Serialization.XmlElementAttribute("partitionId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlElementAttribute("partitionName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")] string Item, [System.Xml.Serialization.XmlIgnoreAttribute()] ItemChoiceType18 ItemElementName, [System.Xml.Serialization.XmlAttributeAttribute()] ref System.UInt64 sequence, [System.Xml.Serialization.XmlAttributeAttribute()] [System.Xml.Serialization.XmlIgnoreAttribute()] ref bool sequenceSpecified) {
        object[] results = this.Invoke("getRoutePartition", new object[] {
                    Item,
                    ItemElementName,
                    sequence,
                    sequenceSpecified});
        sequence = ((System.UInt64)(results[1]));
        sequenceSpecified = ((bool)(results[2]));
        return ((GetRoutePartitionResReturn)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BegingetRoutePartition(string Item, ItemChoiceType18 ItemElementName, System.UInt64 sequence, bool sequenceSpecified, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("getRoutePartition", new object[] {
                    Item,
                    ItemElementName,
                    sequence,
                    sequenceSpecified}, callback, asyncState);
    }
    
    /// <remarks/>
    public GetRoutePartitionResReturn EndgetRoutePartition(System.IAsyncResult asyncResult, out System.UInt64 sequence, out bool sequenceSpecified) {
        object[] results = this.EndInvoke(asyncResult);
        sequence = ((System.UInt64)(results[1]));
        sequenceSpecified = ((bool)(results[2]));
        return ((GetRoutePartitionResReturn)(results[0]));
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.cisco.com/AXLPort/getCSS", RequestNamespace="http://www.cisco.com/AXL/API/1.0", ResponseNamespace="http://www.cisco.com/AXL/API/1.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public GetCSSResReturn getCSS([System.Xml.Serialization.XmlElementAttribute("name", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlElementAttribute("uuid", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")] string Item, [System.Xml.Serialization.XmlIgnoreAttribute()] ItemChoiceType19 ItemElementName, [System.Xml.Serialization.XmlAttributeAttribute()] ref System.UInt64 sequence, [System.Xml.Serialization.XmlAttributeAttribute()] [System.Xml.Serialization.XmlIgnoreAttribute()] ref bool sequenceSpecified) {
        object[] results = this.Invoke("getCSS", new object[] {
                    Item,
                    ItemElementName,
                    sequence,
                    sequenceSpecified});
        sequence = ((System.UInt64)(results[1]));
        sequenceSpecified = ((bool)(results[2]));
        return ((GetCSSResReturn)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BegingetCSS(string Item, ItemChoiceType19 ItemElementName, System.UInt64 sequence, bool sequenceSpecified, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("getCSS", new object[] {
                    Item,
                    ItemElementName,
                    sequence,
                    sequenceSpecified}, callback, asyncState);
    }
    
    /// <remarks/>
    public GetCSSResReturn EndgetCSS(System.IAsyncResult asyncResult, out System.UInt64 sequence, out bool sequenceSpecified) {
        object[] results = this.EndInvoke(asyncResult);
        sequence = ((System.UInt64)(results[1]));
        sequenceSpecified = ((bool)(results[2]));
        return ((GetCSSResReturn)(results[0]));
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.cisco.com/AXLPort/removeCSS", RequestNamespace="http://www.cisco.com/AXL/API/1.0", ResponseNamespace="http://www.cisco.com/AXL/API/1.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string removeCSS([System.Xml.Serialization.XmlElementAttribute("name", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlElementAttribute("uuid", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")] string Item, [System.Xml.Serialization.XmlIgnoreAttribute()] ItemChoiceType20 ItemElementName, [System.Xml.Serialization.XmlAttributeAttribute()] ref System.UInt64 sequence, [System.Xml.Serialization.XmlAttributeAttribute()] [System.Xml.Serialization.XmlIgnoreAttribute()] ref bool sequenceSpecified) {
        object[] results = this.Invoke("removeCSS", new object[] {
                    Item,
                    ItemElementName,
                    sequence,
                    sequenceSpecified});
        sequence = ((System.UInt64)(results[1]));
        sequenceSpecified = ((bool)(results[2]));
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginremoveCSS(string Item, ItemChoiceType20 ItemElementName, System.UInt64 sequence, bool sequenceSpecified, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("removeCSS", new object[] {
                    Item,
                    ItemElementName,
                    sequence,
                    sequenceSpecified}, callback, asyncState);
    }
    
    /// <remarks/>
    public string EndremoveCSS(System.IAsyncResult asyncResult, out System.UInt64 sequence, out bool sequenceSpecified) {
        object[] results = this.EndInvoke(asyncResult);
        sequence = ((System.UInt64)(results[1]));
        sequenceSpecified = ((bool)(results[2]));
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.cisco.com/AXLPort/addCSS", RequestNamespace="http://www.cisco.com/AXL/API/1.0", ResponseNamespace="http://www.cisco.com/AXL/API/1.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string addCSS([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] XCallingSearchSpace newCSS, [System.Xml.Serialization.XmlAttributeAttribute()] ref System.UInt64 sequence, [System.Xml.Serialization.XmlAttributeAttribute()] [System.Xml.Serialization.XmlIgnoreAttribute()] ref bool sequenceSpecified) {
        object[] results = this.Invoke("addCSS", new object[] {
                    newCSS,
                    sequence,
                    sequenceSpecified});
        sequence = ((System.UInt64)(results[1]));
        sequenceSpecified = ((bool)(results[2]));
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginaddCSS(XCallingSearchSpace newCSS, System.UInt64 sequence, bool sequenceSpecified, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("addCSS", new object[] {
                    newCSS,
                    sequence,
                    sequenceSpecified}, callback, asyncState);
    }
    
    /// <remarks/>
    public string EndaddCSS(System.IAsyncResult asyncResult, out System.UInt64 sequence, out bool sequenceSpecified) {
        object[] results = this.EndInvoke(asyncResult);
        sequence = ((System.UInt64)(results[1]));
        sequenceSpecified = ((bool)(results[2]));
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.cisco.com/AXLPort/updateCSS", RequestNamespace="http://www.cisco.com/AXL/API/1.0", ResponseNamespace="http://www.cisco.com/AXL/API/1.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string updateCSS([System.Xml.Serialization.XmlElementAttribute("name", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlElementAttribute("uuid", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")] string Item, [System.Xml.Serialization.XmlIgnoreAttribute()] ItemChoiceType21 ItemElementName, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string newName, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string description, [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlArrayItemAttribute("member", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)] XCallingSearchSpaceMember[] members, [System.Xml.Serialization.XmlAttributeAttribute()] ref System.UInt64 sequence, [System.Xml.Serialization.XmlAttributeAttribute()] [System.Xml.Serialization.XmlIgnoreAttribute()] ref bool sequenceSpecified) {
        object[] results = this.Invoke("updateCSS", new object[] {
                    Item,
                    ItemElementName,
                    newName,
                    description,
                    members,
                    sequence,
                    sequenceSpecified});
        sequence = ((System.UInt64)(results[1]));
        sequenceSpecified = ((bool)(results[2]));
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginupdateCSS(string Item, ItemChoiceType21 ItemElementName, string newName, string description, XCallingSearchSpaceMember[] members, System.UInt64 sequence, bool sequenceSpecified, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("updateCSS", new object[] {
                    Item,
                    ItemElementName,
                    newName,
                    description,
                    members,
                    sequence,
                    sequenceSpecified}, callback, asyncState);
    }
    
    /// <remarks/>
    public string EndupdateCSS(System.IAsyncResult asyncResult, out System.UInt64 sequence, out bool sequenceSpecified) {
        object[] results = this.EndInvoke(asyncResult);
        sequence = ((System.UInt64)(results[1]));
        sequenceSpecified = ((bool)(results[2]));
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.cisco.com/AXLPort/getTransPattern", RequestNamespace="http://www.cisco.com/AXL/API/1.0", ResponseNamespace="http://www.cisco.com/AXL/API/1.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public GetTransPatternResReturn getTransPattern([System.Xml.Serialization.XmlElementAttribute("routePartitionId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlElementAttribute("routePartitionName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlElementAttribute("uuid", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlElementAttribute("pattern", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlElementAttribute("routeFilterId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlElementAttribute("routeFilterName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")] string Item, [System.Xml.Serialization.XmlIgnoreAttribute()] ItemChoiceType22 ItemElementName, [System.Xml.Serialization.XmlAttributeAttribute()] ref System.UInt64 sequence, [System.Xml.Serialization.XmlAttributeAttribute()] [System.Xml.Serialization.XmlIgnoreAttribute()] ref bool sequenceSpecified) {
        object[] results = this.Invoke("getTransPattern", new object[] {
                    Item,
                    ItemElementName,
                    sequence,
                    sequenceSpecified});
        sequence = ((System.UInt64)(results[1]));
        sequenceSpecified = ((bool)(results[2]));
        return ((GetTransPatternResReturn)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BegingetTransPattern(string Item, ItemChoiceType22 ItemElementName, System.UInt64 sequence, bool sequenceSpecified, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("getTransPattern", new object[] {
                    Item,
                    ItemElementName,
                    sequence,
                    sequenceSpecified}, callback, asyncState);
    }
    
    /// <remarks/>
    public GetTransPatternResReturn EndgetTransPattern(System.IAsyncResult asyncResult, out System.UInt64 sequence, out bool sequenceSpecified) {
        object[] results = this.EndInvoke(asyncResult);
        sequence = ((System.UInt64)(results[1]));
        sequenceSpecified = ((bool)(results[2]));
        return ((GetTransPatternResReturn)(results[0]));
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.cisco.com/AXLPort/removeTransPattern", RequestNamespace="http://www.cisco.com/AXL/API/1.0", ResponseNamespace="http://www.cisco.com/AXL/API/1.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string removeTransPattern([System.Xml.Serialization.XmlElementAttribute("routePartitionId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlElementAttribute("routePartitionName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlElementAttribute("uuid", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlElementAttribute("pattern", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlElementAttribute("routeFilterId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlElementAttribute("routeFilterName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")] string Item, [System.Xml.Serialization.XmlIgnoreAttribute()] ItemChoiceType110 ItemElementName, [System.Xml.Serialization.XmlAttributeAttribute()] ref System.UInt64 sequence, [System.Xml.Serialization.XmlAttributeAttribute()] [System.Xml.Serialization.XmlIgnoreAttribute()] ref bool sequenceSpecified) {
        object[] results = this.Invoke("removeTransPattern", new object[] {
                    Item,
                    ItemElementName,
                    sequence,
                    sequenceSpecified});
        sequence = ((System.UInt64)(results[1]));
        sequenceSpecified = ((bool)(results[2]));
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginremoveTransPattern(string Item, ItemChoiceType110 ItemElementName, System.UInt64 sequence, bool sequenceSpecified, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("removeTransPattern", new object[] {
                    Item,
                    ItemElementName,
                    sequence,
                    sequenceSpecified}, callback, asyncState);
    }
    
    /// <remarks/>
    public string EndremoveTransPattern(System.IAsyncResult asyncResult, out System.UInt64 sequence, out bool sequenceSpecified) {
        object[] results = this.EndInvoke(asyncResult);
        sequence = ((System.UInt64)(results[1]));
        sequenceSpecified = ((bool)(results[2]));
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.cisco.com/AXLPort/addTransPattern", RequestNamespace="http://www.cisco.com/AXL/API/1.0", ResponseNamespace="http://www.cisco.com/AXL/API/1.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string addTransPattern([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] XNPTranslationPattern newPattern, [System.Xml.Serialization.XmlAttributeAttribute()] ref System.UInt64 sequence, [System.Xml.Serialization.XmlAttributeAttribute()] [System.Xml.Serialization.XmlIgnoreAttribute()] ref bool sequenceSpecified) {
        object[] results = this.Invoke("addTransPattern", new object[] {
                    newPattern,
                    sequence,
                    sequenceSpecified});
        sequence = ((System.UInt64)(results[1]));
        sequenceSpecified = ((bool)(results[2]));
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginaddTransPattern(XNPTranslationPattern newPattern, System.UInt64 sequence, bool sequenceSpecified, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("addTransPattern", new object[] {
                    newPattern,
                    sequence,
                    sequenceSpecified}, callback, asyncState);
    }
    
    /// <remarks/>
    public string EndaddTransPattern(System.IAsyncResult asyncResult, out System.UInt64 sequence, out bool sequenceSpecified) {
        object[] results = this.EndInvoke(asyncResult);
        sequence = ((System.UInt64)(results[1]));
        sequenceSpecified = ((bool)(results[2]));
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.cisco.com/AXLPort/updateTransPattern", RequestNamespace="http://www.cisco.com/AXL/API/1.0", ResponseNamespace="http://www.cisco.com/AXL/API/1.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string updateTransPattern(
                [System.Xml.Serialization.XmlElementAttribute("routePartitionId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlElementAttribute("routePartitionName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlElementAttribute("uuid", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlElementAttribute("pattern", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlElementAttribute("routeFilterId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlElementAttribute("routeFilterName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")] string Item, 
                [System.Xml.Serialization.XmlIgnoreAttribute()] ItemChoiceType111 ItemElementName, 
                [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string newPattern, 
                [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string description, 
                [System.Xml.Serialization.XmlElementAttribute("routePartitionId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlElementAttribute("routePartitionName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlChoiceIdentifierAttribute("Item1ElementName")] string Item1, 
                [System.Xml.Serialization.XmlIgnoreAttribute()] Item1ChoiceType26 Item1ElementName, 
                [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] bool blockEnable, 
                [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool blockEnableSpecified, 
                [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string calledPartyTransformationMask, 
                [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string callingPartyTransformationMask, 
                [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] XStatus useCallingPartyPhoneMask, 
                [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool useCallingPartyPhoneMaskSpecified, 
                [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] string callingPartyPrefixDigits, 
                [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] XPresentationBit callingPartyPresentation, 
                [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool callingPartyPresentationSpecified, 
                [System.Xml.Serialization.XmlElementAttribute("dialPlanName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlElementAttribute("dialPlanId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlChoiceIdentifierAttribute("Item2ElementName")] string Item2, 
                [System.Xml.Serialization.XmlIgnoreAttribute()] Item2ChoiceType18 Item2ElementName, 
                [System.Xml.Serialization.XmlElementAttribute("digitDiscardInstructionName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlElementAttribute("digitDiscardInstructionId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlChoiceIdentifierAttribute("Item3ElementName")] string Item3, 
                [System.Xml.Serialization.XmlIgnoreAttribute()] Item3ChoiceType15 Item3ElementName, 
                [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] XLampBlinkRate messageWaiting, 
                [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool messageWaitingSpecified, 
                [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] XNetworkLocation networkLocation, 
                [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool networkLocationSpecified, 
                [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] bool patternUrgency, 
                [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool patternUrgencySpecified, 
                [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string prefixDigitsOut, 
                [System.Xml.Serialization.XmlElementAttribute("routeFilterId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlElementAttribute("routeFilterName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlChoiceIdentifierAttribute("Item4ElementName")] string Item4, 
                [System.Xml.Serialization.XmlIgnoreAttribute()] Item4ChoiceType14 Item4ElementName, 
                [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] XPresentationBit callingLinePresentationBit, 
                [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool callingLinePresentationBitSpecified, 
                [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] XPresentationBit callingNamePresentationBit, 
                [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool callingNamePresentationBitSpecified, 
                [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] XPresentationBit connectedLinePresentationBit, 
                [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool connectedLinePresentationBitSpecified, 
                [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] XPresentationBit connectedNamePresentationBit, 
                [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool connectedNamePresentationBitSpecified, 
                [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] bool supportOverlapSending, 
                [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool supportOverlapSendingSpecified, 
                [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] XPatternPrecedence patternPrecedence, 
                [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool patternPrecedenceSpecified, 
                [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] XReleaseCauseValue releaseCause, 
                [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool releaseCauseSpecified, 
                [System.Xml.Serialization.XmlElementAttribute("callingSearchSpaceId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlElementAttribute("callingSearchSpaceName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlChoiceIdentifierAttribute("Item5ElementName")] string Item5, 
                [System.Xml.Serialization.XmlIgnoreAttribute()] Item5ChoiceType12 Item5ElementName, 
                [System.Xml.Serialization.XmlAttributeAttribute()] ref System.UInt64 sequence, 
                [System.Xml.Serialization.XmlAttributeAttribute()] [System.Xml.Serialization.XmlIgnoreAttribute()] ref bool sequenceSpecified) {
        object[] results = this.Invoke("updateTransPattern", new object[] {
                    Item,
                    ItemElementName,
                    newPattern,
                    description,
                    Item1,
                    Item1ElementName,
                    blockEnable,
                    blockEnableSpecified,
                    calledPartyTransformationMask,
                    callingPartyTransformationMask,
                    useCallingPartyPhoneMask,
                    useCallingPartyPhoneMaskSpecified,
                    callingPartyPrefixDigits,
                    callingPartyPresentation,
                    callingPartyPresentationSpecified,
                    Item2,
                    Item2ElementName,
                    Item3,
                    Item3ElementName,
                    messageWaiting,
                    messageWaitingSpecified,
                    networkLocation,
                    networkLocationSpecified,
                    patternUrgency,
                    patternUrgencySpecified,
                    prefixDigitsOut,
                    Item4,
                    Item4ElementName,
                    callingLinePresentationBit,
                    callingLinePresentationBitSpecified,
                    callingNamePresentationBit,
                    callingNamePresentationBitSpecified,
                    connectedLinePresentationBit,
                    connectedLinePresentationBitSpecified,
                    connectedNamePresentationBit,
                    connectedNamePresentationBitSpecified,
                    supportOverlapSending,
                    supportOverlapSendingSpecified,
                    patternPrecedence,
                    patternPrecedenceSpecified,
                    releaseCause,
                    releaseCauseSpecified,
                    Item5,
                    Item5ElementName,
                    sequence,
                    sequenceSpecified});
        sequence = ((System.UInt64)(results[1]));
        sequenceSpecified = ((bool)(results[2]));
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginupdateTransPattern(
                string Item, 
                ItemChoiceType111 ItemElementName, 
                string newPattern, 
                string description, 
                string Item1, 
                Item1ChoiceType26 Item1ElementName, 
                bool blockEnable, 
                bool blockEnableSpecified, 
                string calledPartyTransformationMask, 
                string callingPartyTransformationMask, 
                XStatus useCallingPartyPhoneMask, 
                bool useCallingPartyPhoneMaskSpecified, 
                string callingPartyPrefixDigits, 
                XPresentationBit callingPartyPresentation, 
                bool callingPartyPresentationSpecified, 
                string Item2, 
                Item2ChoiceType18 Item2ElementName, 
                string Item3, 
                Item3ChoiceType15 Item3ElementName, 
                XLampBlinkRate messageWaiting, 
                bool messageWaitingSpecified, 
                XNetworkLocation networkLocation, 
                bool networkLocationSpecified, 
                bool patternUrgency, 
                bool patternUrgencySpecified, 
                string prefixDigitsOut, 
                string Item4, 
                Item4ChoiceType14 Item4ElementName, 
                XPresentationBit callingLinePresentationBit, 
                bool callingLinePresentationBitSpecified, 
                XPresentationBit callingNamePresentationBit, 
                bool callingNamePresentationBitSpecified, 
                XPresentationBit connectedLinePresentationBit, 
                bool connectedLinePresentationBitSpecified, 
                XPresentationBit connectedNamePresentationBit, 
                bool connectedNamePresentationBitSpecified, 
                bool supportOverlapSending, 
                bool supportOverlapSendingSpecified, 
                XPatternPrecedence patternPrecedence, 
                bool patternPrecedenceSpecified, 
                XReleaseCauseValue releaseCause, 
                bool releaseCauseSpecified, 
                string Item5, 
                Item5ChoiceType12 Item5ElementName, 
                System.UInt64 sequence, 
                bool sequenceSpecified, 
                System.AsyncCallback callback, 
                object asyncState) {
        return this.BeginInvoke("updateTransPattern", new object[] {
                    Item,
                    ItemElementName,
                    newPattern,
                    description,
                    Item1,
                    Item1ElementName,
                    blockEnable,
                    blockEnableSpecified,
                    calledPartyTransformationMask,
                    callingPartyTransformationMask,
                    useCallingPartyPhoneMask,
                    useCallingPartyPhoneMaskSpecified,
                    callingPartyPrefixDigits,
                    callingPartyPresentation,
                    callingPartyPresentationSpecified,
                    Item2,
                    Item2ElementName,
                    Item3,
                    Item3ElementName,
                    messageWaiting,
                    messageWaitingSpecified,
                    networkLocation,
                    networkLocationSpecified,
                    patternUrgency,
                    patternUrgencySpecified,
                    prefixDigitsOut,
                    Item4,
                    Item4ElementName,
                    callingLinePresentationBit,
                    callingLinePresentationBitSpecified,
                    callingNamePresentationBit,
                    callingNamePresentationBitSpecified,
                    connectedLinePresentationBit,
                    connectedLinePresentationBitSpecified,
                    connectedNamePresentationBit,
                    connectedNamePresentationBitSpecified,
                    supportOverlapSending,
                    supportOverlapSendingSpecified,
                    patternPrecedence,
                    patternPrecedenceSpecified,
                    releaseCause,
                    releaseCauseSpecified,
                    Item5,
                    Item5ElementName,
                    sequence,
                    sequenceSpecified}, callback, asyncState);
    }
    
    /// <remarks/>
    public string EndupdateTransPattern(System.IAsyncResult asyncResult, out System.UInt64 sequence, out bool sequenceSpecified) {
        object[] results = this.EndInvoke(asyncResult);
        sequence = ((System.UInt64)(results[1]));
        sequenceSpecified = ((bool)(results[2]));
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.cisco.com/AXLPort/getRoutePattern", RequestNamespace="http://www.cisco.com/AXL/API/1.0", ResponseNamespace="http://www.cisco.com/AXL/API/1.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public GetRoutePatternResReturn getRoutePattern([System.Xml.Serialization.XmlElementAttribute("routePartitionId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlElementAttribute("routePartitionName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlElementAttribute("uuid", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlElementAttribute("pattern", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlElementAttribute("routeFilterId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlElementAttribute("routeFilterName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")] string Item, [System.Xml.Serialization.XmlIgnoreAttribute()] ItemChoiceType112 ItemElementName, [System.Xml.Serialization.XmlAttributeAttribute()] ref System.UInt64 sequence, [System.Xml.Serialization.XmlAttributeAttribute()] [System.Xml.Serialization.XmlIgnoreAttribute()] ref bool sequenceSpecified) {
        object[] results = this.Invoke("getRoutePattern", new object[] {
                    Item,
                    ItemElementName,
                    sequence,
                    sequenceSpecified});
        sequence = ((System.UInt64)(results[1]));
        sequenceSpecified = ((bool)(results[2]));
        return ((GetRoutePatternResReturn)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BegingetRoutePattern(string Item, ItemChoiceType112 ItemElementName, System.UInt64 sequence, bool sequenceSpecified, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("getRoutePattern", new object[] {
                    Item,
                    ItemElementName,
                    sequence,
                    sequenceSpecified}, callback, asyncState);
    }
    
    /// <remarks/>
    public GetRoutePatternResReturn EndgetRoutePattern(System.IAsyncResult asyncResult, out System.UInt64 sequence, out bool sequenceSpecified) {
        object[] results = this.EndInvoke(asyncResult);
        sequence = ((System.UInt64)(results[1]));
        sequenceSpecified = ((bool)(results[2]));
        return ((GetRoutePatternResReturn)(results[0]));
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.cisco.com/AXLPort/removeRoutePattern", RequestNamespace="http://www.cisco.com/AXL/API/1.0", ResponseNamespace="http://www.cisco.com/AXL/API/1.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string removeRoutePattern([System.Xml.Serialization.XmlElementAttribute("routePartitionId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlElementAttribute("routePartitionName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlElementAttribute("uuid", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlElementAttribute("pattern", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlElementAttribute("routeFilterId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlElementAttribute("routeFilterName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")] string Item, [System.Xml.Serialization.XmlIgnoreAttribute()] ItemChoiceType113 ItemElementName, [System.Xml.Serialization.XmlAttributeAttribute()] ref System.UInt64 sequence, [System.Xml.Serialization.XmlAttributeAttribute()] [System.Xml.Serialization.XmlIgnoreAttribute()] ref bool sequenceSpecified) {
        object[] results = this.Invoke("removeRoutePattern", new object[] {
                    Item,
                    ItemElementName,
                    sequence,
                    sequenceSpecified});
        sequence = ((System.UInt64)(results[1]));
        sequenceSpecified = ((bool)(results[2]));
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginremoveRoutePattern(string Item, ItemChoiceType113 ItemElementName, System.UInt64 sequence, bool sequenceSpecified, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("removeRoutePattern", new object[] {
                    Item,
                    ItemElementName,
                    sequence,
                    sequenceSpecified}, callback, asyncState);
    }
    
    /// <remarks/>
    public string EndremoveRoutePattern(System.IAsyncResult asyncResult, out System.UInt64 sequence, out bool sequenceSpecified) {
        object[] results = this.EndInvoke(asyncResult);
        sequence = ((System.UInt64)(results[1]));
        sequenceSpecified = ((bool)(results[2]));
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.cisco.com/AXLPort/addRoutePattern", RequestNamespace="http://www.cisco.com/AXL/API/1.0", ResponseNamespace="http://www.cisco.com/AXL/API/1.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string addRoutePattern([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] XNPRoutePattern newPattern, [System.Xml.Serialization.XmlAttributeAttribute()] ref System.UInt64 sequence, [System.Xml.Serialization.XmlAttributeAttribute()] [System.Xml.Serialization.XmlIgnoreAttribute()] ref bool sequenceSpecified) {
        object[] results = this.Invoke("addRoutePattern", new object[] {
                    newPattern,
                    sequence,
                    sequenceSpecified});
        sequence = ((System.UInt64)(results[1]));
        sequenceSpecified = ((bool)(results[2]));
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginaddRoutePattern(XNPRoutePattern newPattern, System.UInt64 sequence, bool sequenceSpecified, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("addRoutePattern", new object[] {
                    newPattern,
                    sequence,
                    sequenceSpecified}, callback, asyncState);
    }
    
    /// <remarks/>
    public string EndaddRoutePattern(System.IAsyncResult asyncResult, out System.UInt64 sequence, out bool sequenceSpecified) {
        object[] results = this.EndInvoke(asyncResult);
        sequence = ((System.UInt64)(results[1]));
        sequenceSpecified = ((bool)(results[2]));
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.cisco.com/AXLPort/updateRoutePattern", RequestNamespace="http://www.cisco.com/AXL/API/1.0", ResponseNamespace="http://www.cisco.com/AXL/API/1.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string updateRoutePattern(
                [System.Xml.Serialization.XmlElementAttribute("routePartitionId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlElementAttribute("routePartitionName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlElementAttribute("uuid", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlElementAttribute("pattern", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlElementAttribute("routeFilterId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlElementAttribute("routeFilterName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")] string Item, 
                [System.Xml.Serialization.XmlIgnoreAttribute()] ItemChoiceType114 ItemElementName, 
                [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string newPattern, 
                [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string description, 
                [System.Xml.Serialization.XmlElementAttribute("routePartitionId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlElementAttribute("routePartitionName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlChoiceIdentifierAttribute("Item1ElementName")] string Item1, 
                [System.Xml.Serialization.XmlIgnoreAttribute()] Item1ChoiceType27 Item1ElementName, 
                [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] bool blockEnable, 
                [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool blockEnableSpecified, 
                [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string calledPartyTransformationMask, 
                [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string callingPartyTransformationMask, 
                [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] XStatus useCallingPartyPhoneMask, 
                [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool useCallingPartyPhoneMaskSpecified, 
                [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] string callingPartyPrefixDigits, 
                [System.Xml.Serialization.XmlElementAttribute("dialPlanName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlElementAttribute("dialPlanId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlChoiceIdentifierAttribute("Item2ElementName")] string Item2, 
                [System.Xml.Serialization.XmlIgnoreAttribute()] Item2ChoiceType19 Item2ElementName, 
                [System.Xml.Serialization.XmlElementAttribute("digitDiscardInstructionName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlElementAttribute("digitDiscardInstructionId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlChoiceIdentifierAttribute("Item3ElementName")] string Item3, 
                [System.Xml.Serialization.XmlIgnoreAttribute()] Item3ChoiceType16 Item3ElementName, 
                [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] XLampBlinkRate messageWaiting, 
                [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool messageWaitingSpecified, 
                [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] XNetworkLocation networkLocation, 
                [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool networkLocationSpecified, 
                [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] bool patternUrgency, 
                [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool patternUrgencySpecified, 
                [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string prefixDigitsOut, 
                [System.Xml.Serialization.XmlElementAttribute("routeFilterId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlElementAttribute("routeFilterName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlChoiceIdentifierAttribute("Item4ElementName")] string Item4, 
                [System.Xml.Serialization.XmlIgnoreAttribute()] Item4ChoiceType15 Item4ElementName, 
                [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] XPresentationBit callingLinePresentationBit, 
                [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool callingLinePresentationBitSpecified, 
                [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] XPresentationBit callingNamePresentationBit, 
                [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool callingNamePresentationBitSpecified, 
                [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] XPresentationBit connectedLinePresentationBit, 
                [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool connectedLinePresentationBitSpecified, 
                [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] XPresentationBit connectedNamePresentationBit, 
                [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool connectedNamePresentationBitSpecified, 
                [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] bool supportOverlapSending, 
                [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool supportOverlapSendingSpecified, 
                [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] XPatternPrecedence patternPrecedence, 
                [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool patternPrecedenceSpecified, 
                [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] XReleaseCauseValue releaseCause, 
                [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool releaseCauseSpecified, 
                [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] object allowDeviceOverride, 
                [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] object provideOutsideDialtone, 
                [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] UpdateRoutePatternReqDestination destination, 
                [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] bool authorizationCodeRequired, 
                [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool authorizationCodeRequiredSpecified, 
                [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="nonNegativeInteger")] string authorizationLevelRequired, 
                [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] bool clientCodeRequired, 
                [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool clientCodeRequiredSpecified, 
                [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string withTag, 
                [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string withValueClause, 
                [System.Xml.Serialization.XmlAttributeAttribute()] ref System.UInt64 sequence, 
                [System.Xml.Serialization.XmlAttributeAttribute()] [System.Xml.Serialization.XmlIgnoreAttribute()] ref bool sequenceSpecified) {
        object[] results = this.Invoke("updateRoutePattern", new object[] {
                    Item,
                    ItemElementName,
                    newPattern,
                    description,
                    Item1,
                    Item1ElementName,
                    blockEnable,
                    blockEnableSpecified,
                    calledPartyTransformationMask,
                    callingPartyTransformationMask,
                    useCallingPartyPhoneMask,
                    useCallingPartyPhoneMaskSpecified,
                    callingPartyPrefixDigits,
                    Item2,
                    Item2ElementName,
                    Item3,
                    Item3ElementName,
                    messageWaiting,
                    messageWaitingSpecified,
                    networkLocation,
                    networkLocationSpecified,
                    patternUrgency,
                    patternUrgencySpecified,
                    prefixDigitsOut,
                    Item4,
                    Item4ElementName,
                    callingLinePresentationBit,
                    callingLinePresentationBitSpecified,
                    callingNamePresentationBit,
                    callingNamePresentationBitSpecified,
                    connectedLinePresentationBit,
                    connectedLinePresentationBitSpecified,
                    connectedNamePresentationBit,
                    connectedNamePresentationBitSpecified,
                    supportOverlapSending,
                    supportOverlapSendingSpecified,
                    patternPrecedence,
                    patternPrecedenceSpecified,
                    releaseCause,
                    releaseCauseSpecified,
                    allowDeviceOverride,
                    provideOutsideDialtone,
                    destination,
                    authorizationCodeRequired,
                    authorizationCodeRequiredSpecified,
                    authorizationLevelRequired,
                    clientCodeRequired,
                    clientCodeRequiredSpecified,
                    withTag,
                    withValueClause,
                    sequence,
                    sequenceSpecified});
        sequence = ((System.UInt64)(results[1]));
        sequenceSpecified = ((bool)(results[2]));
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginupdateRoutePattern(
                string Item, 
                ItemChoiceType114 ItemElementName, 
                string newPattern, 
                string description, 
                string Item1, 
                Item1ChoiceType27 Item1ElementName, 
                bool blockEnable, 
                bool blockEnableSpecified, 
                string calledPartyTransformationMask, 
                string callingPartyTransformationMask, 
                XStatus useCallingPartyPhoneMask, 
                bool useCallingPartyPhoneMaskSpecified, 
                string callingPartyPrefixDigits, 
                string Item2, 
                Item2ChoiceType19 Item2ElementName, 
                string Item3, 
                Item3ChoiceType16 Item3ElementName, 
                XLampBlinkRate messageWaiting, 
                bool messageWaitingSpecified, 
                XNetworkLocation networkLocation, 
                bool networkLocationSpecified, 
                bool patternUrgency, 
                bool patternUrgencySpecified, 
                string prefixDigitsOut, 
                string Item4, 
                Item4ChoiceType15 Item4ElementName, 
                XPresentationBit callingLinePresentationBit, 
                bool callingLinePresentationBitSpecified, 
                XPresentationBit callingNamePresentationBit, 
                bool callingNamePresentationBitSpecified, 
                XPresentationBit connectedLinePresentationBit, 
                bool connectedLinePresentationBitSpecified, 
                XPresentationBit connectedNamePresentationBit, 
                bool connectedNamePresentationBitSpecified, 
                bool supportOverlapSending, 
                bool supportOverlapSendingSpecified, 
                XPatternPrecedence patternPrecedence, 
                bool patternPrecedenceSpecified, 
                XReleaseCauseValue releaseCause, 
                bool releaseCauseSpecified, 
                object allowDeviceOverride, 
                object provideOutsideDialtone, 
                UpdateRoutePatternReqDestination destination, 
                bool authorizationCodeRequired, 
                bool authorizationCodeRequiredSpecified, 
                string authorizationLevelRequired, 
                bool clientCodeRequired, 
                bool clientCodeRequiredSpecified, 
                string withTag, 
                string withValueClause, 
                System.UInt64 sequence, 
                bool sequenceSpecified, 
                System.AsyncCallback callback, 
                object asyncState) {
        return this.BeginInvoke("updateRoutePattern", new object[] {
                    Item,
                    ItemElementName,
                    newPattern,
                    description,
                    Item1,
                    Item1ElementName,
                    blockEnable,
                    blockEnableSpecified,
                    calledPartyTransformationMask,
                    callingPartyTransformationMask,
                    useCallingPartyPhoneMask,
                    useCallingPartyPhoneMaskSpecified,
                    callingPartyPrefixDigits,
                    Item2,
                    Item2ElementName,
                    Item3,
                    Item3ElementName,
                    messageWaiting,
                    messageWaitingSpecified,
                    networkLocation,
                    networkLocationSpecified,
                    patternUrgency,
                    patternUrgencySpecified,
                    prefixDigitsOut,
                    Item4,
                    Item4ElementName,
                    callingLinePresentationBit,
                    callingLinePresentationBitSpecified,
                    callingNamePresentationBit,
                    callingNamePresentationBitSpecified,
                    connectedLinePresentationBit,
                    connectedLinePresentationBitSpecified,
                    connectedNamePresentationBit,
                    connectedNamePresentationBitSpecified,
                    supportOverlapSending,
                    supportOverlapSendingSpecified,
                    patternPrecedence,
                    patternPrecedenceSpecified,
                    releaseCause,
                    releaseCauseSpecified,
                    allowDeviceOverride,
                    provideOutsideDialtone,
                    destination,
                    authorizationCodeRequired,
                    authorizationCodeRequiredSpecified,
                    authorizationLevelRequired,
                    clientCodeRequired,
                    clientCodeRequiredSpecified,
                    withTag,
                    withValueClause,
                    sequence,
                    sequenceSpecified}, callback, asyncState);
    }
    
    /// <remarks/>
    public string EndupdateRoutePattern(System.IAsyncResult asyncResult, out System.UInt64 sequence, out bool sequenceSpecified) {
        object[] results = this.EndInvoke(asyncResult);
        sequence = ((System.UInt64)(results[1]));
        sequenceSpecified = ((bool)(results[2]));
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.cisco.com/AXLPort/addRouteGroup", RequestNamespace="http://www.cisco.com/AXL/API/1.0", ResponseNamespace="http://www.cisco.com/AXL/API/1.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string addRouteGroup([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] XRouteGroup routeGroup, [System.Xml.Serialization.XmlAttributeAttribute()] ref System.UInt64 sequence, [System.Xml.Serialization.XmlAttributeAttribute()] [System.Xml.Serialization.XmlIgnoreAttribute()] ref bool sequenceSpecified) {
        object[] results = this.Invoke("addRouteGroup", new object[] {
                    routeGroup,
                    sequence,
                    sequenceSpecified});
        sequence = ((System.UInt64)(results[1]));
        sequenceSpecified = ((bool)(results[2]));
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginaddRouteGroup(XRouteGroup routeGroup, System.UInt64 sequence, bool sequenceSpecified, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("addRouteGroup", new object[] {
                    routeGroup,
                    sequence,
                    sequenceSpecified}, callback, asyncState);
    }
    
    /// <remarks/>
    public string EndaddRouteGroup(System.IAsyncResult asyncResult, out System.UInt64 sequence, out bool sequenceSpecified) {
        object[] results = this.EndInvoke(asyncResult);
        sequence = ((System.UInt64)(results[1]));
        sequenceSpecified = ((bool)(results[2]));
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.cisco.com/AXLPort/updateRouteGroup", RequestNamespace="http://www.cisco.com/AXL/API/1.0", ResponseNamespace="http://www.cisco.com/AXL/API/1.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string updateRouteGroup([System.Xml.Serialization.XmlElementAttribute("name", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlElementAttribute("uuid", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")] string Item, [System.Xml.Serialization.XmlIgnoreAttribute()] ItemChoiceType115 ItemElementName, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string newName, [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlArrayItemAttribute("member", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)] XRouteGroupMember[] members, [System.Xml.Serialization.XmlAttributeAttribute()] ref System.UInt64 sequence, [System.Xml.Serialization.XmlAttributeAttribute()] [System.Xml.Serialization.XmlIgnoreAttribute()] ref bool sequenceSpecified) {
        object[] results = this.Invoke("updateRouteGroup", new object[] {
                    Item,
                    ItemElementName,
                    newName,
                    members,
                    sequence,
                    sequenceSpecified});
        sequence = ((System.UInt64)(results[1]));
        sequenceSpecified = ((bool)(results[2]));
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginupdateRouteGroup(string Item, ItemChoiceType115 ItemElementName, string newName, XRouteGroupMember[] members, System.UInt64 sequence, bool sequenceSpecified, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("updateRouteGroup", new object[] {
                    Item,
                    ItemElementName,
                    newName,
                    members,
                    sequence,
                    sequenceSpecified}, callback, asyncState);
    }
    
    /// <remarks/>
    public string EndupdateRouteGroup(System.IAsyncResult asyncResult, out System.UInt64 sequence, out bool sequenceSpecified) {
        object[] results = this.EndInvoke(asyncResult);
        sequence = ((System.UInt64)(results[1]));
        sequenceSpecified = ((bool)(results[2]));
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.cisco.com/AXLPort/getRouteGroup", RequestNamespace="http://www.cisco.com/AXL/API/1.0", ResponseNamespace="http://www.cisco.com/AXL/API/1.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public GetRouteGroupResReturn getRouteGroup([System.Xml.Serialization.XmlElementAttribute("name", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlElementAttribute("uuid", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")] string Item, [System.Xml.Serialization.XmlIgnoreAttribute()] ItemChoiceType116 ItemElementName, [System.Xml.Serialization.XmlAttributeAttribute()] ref System.UInt64 sequence, [System.Xml.Serialization.XmlAttributeAttribute()] [System.Xml.Serialization.XmlIgnoreAttribute()] ref bool sequenceSpecified) {
        object[] results = this.Invoke("getRouteGroup", new object[] {
                    Item,
                    ItemElementName,
                    sequence,
                    sequenceSpecified});
        sequence = ((System.UInt64)(results[1]));
        sequenceSpecified = ((bool)(results[2]));
        return ((GetRouteGroupResReturn)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BegingetRouteGroup(string Item, ItemChoiceType116 ItemElementName, System.UInt64 sequence, bool sequenceSpecified, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("getRouteGroup", new object[] {
                    Item,
                    ItemElementName,
                    sequence,
                    sequenceSpecified}, callback, asyncState);
    }
    
    /// <remarks/>
    public GetRouteGroupResReturn EndgetRouteGroup(System.IAsyncResult asyncResult, out System.UInt64 sequence, out bool sequenceSpecified) {
        object[] results = this.EndInvoke(asyncResult);
        sequence = ((System.UInt64)(results[1]));
        sequenceSpecified = ((bool)(results[2]));
        return ((GetRouteGroupResReturn)(results[0]));
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.cisco.com/AXLPort/removeRouteGroup", RequestNamespace="http://www.cisco.com/AXL/API/1.0", ResponseNamespace="http://www.cisco.com/AXL/API/1.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string removeRouteGroup([System.Xml.Serialization.XmlElementAttribute("name", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlElementAttribute("uuid", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")] string Item, [System.Xml.Serialization.XmlIgnoreAttribute()] ItemChoiceType117 ItemElementName, [System.Xml.Serialization.XmlAttributeAttribute()] ref System.UInt64 sequence, [System.Xml.Serialization.XmlAttributeAttribute()] [System.Xml.Serialization.XmlIgnoreAttribute()] ref bool sequenceSpecified) {
        object[] results = this.Invoke("removeRouteGroup", new object[] {
                    Item,
                    ItemElementName,
                    sequence,
                    sequenceSpecified});
        sequence = ((System.UInt64)(results[1]));
        sequenceSpecified = ((bool)(results[2]));
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginremoveRouteGroup(string Item, ItemChoiceType117 ItemElementName, System.UInt64 sequence, bool sequenceSpecified, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("removeRouteGroup", new object[] {
                    Item,
                    ItemElementName,
                    sequence,
                    sequenceSpecified}, callback, asyncState);
    }
    
    /// <remarks/>
    public string EndremoveRouteGroup(System.IAsyncResult asyncResult, out System.UInt64 sequence, out bool sequenceSpecified) {
        object[] results = this.EndInvoke(asyncResult);
        sequence = ((System.UInt64)(results[1]));
        sequenceSpecified = ((bool)(results[2]));
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.cisco.com/AXLPort/addRouteList", RequestNamespace="http://www.cisco.com/AXL/API/1.0", ResponseNamespace="http://www.cisco.com/AXL/API/1.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string addRouteList([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] XRouteList routeList, [System.Xml.Serialization.XmlAttributeAttribute()] ref System.UInt64 sequence, [System.Xml.Serialization.XmlAttributeAttribute()] [System.Xml.Serialization.XmlIgnoreAttribute()] ref bool sequenceSpecified) {
        object[] results = this.Invoke("addRouteList", new object[] {
                    routeList,
                    sequence,
                    sequenceSpecified});
        sequence = ((System.UInt64)(results[1]));
        sequenceSpecified = ((bool)(results[2]));
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginaddRouteList(XRouteList routeList, System.UInt64 sequence, bool sequenceSpecified, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("addRouteList", new object[] {
                    routeList,
                    sequence,
                    sequenceSpecified}, callback, asyncState);
    }
    
    /// <remarks/>
    public string EndaddRouteList(System.IAsyncResult asyncResult, out System.UInt64 sequence, out bool sequenceSpecified) {
        object[] results = this.EndInvoke(asyncResult);
        sequence = ((System.UInt64)(results[1]));
        sequenceSpecified = ((bool)(results[2]));
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.cisco.com/AXLPort/updateRouteList", RequestNamespace="http://www.cisco.com/AXL/API/1.0", ResponseNamespace="http://www.cisco.com/AXL/API/1.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string updateRouteList([System.Xml.Serialization.XmlElementAttribute("name", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlElementAttribute("uuid", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")] string Item, [System.Xml.Serialization.XmlIgnoreAttribute()] ItemChoiceType118 ItemElementName, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string newName, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string description, [System.Xml.Serialization.XmlElementAttribute("callManagerGroupName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlElementAttribute("callManagerGroup", typeof(XCallManagerGroup), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] object Item1, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] bool routeListEnabled, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool routeListEnabledSpecified, [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlArrayItemAttribute("member", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)] XRouteListMember[] members, [System.Xml.Serialization.XmlAttributeAttribute()] ref System.UInt64 sequence, [System.Xml.Serialization.XmlAttributeAttribute()] [System.Xml.Serialization.XmlIgnoreAttribute()] ref bool sequenceSpecified) {
        object[] results = this.Invoke("updateRouteList", new object[] {
                    Item,
                    ItemElementName,
                    newName,
                    description,
                    Item1,
                    routeListEnabled,
                    routeListEnabledSpecified,
                    members,
                    sequence,
                    sequenceSpecified});
        sequence = ((System.UInt64)(results[1]));
        sequenceSpecified = ((bool)(results[2]));
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginupdateRouteList(string Item, ItemChoiceType118 ItemElementName, string newName, string description, object Item1, bool routeListEnabled, bool routeListEnabledSpecified, XRouteListMember[] members, System.UInt64 sequence, bool sequenceSpecified, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("updateRouteList", new object[] {
                    Item,
                    ItemElementName,
                    newName,
                    description,
                    Item1,
                    routeListEnabled,
                    routeListEnabledSpecified,
                    members,
                    sequence,
                    sequenceSpecified}, callback, asyncState);
    }
    
    /// <remarks/>
    public string EndupdateRouteList(System.IAsyncResult asyncResult, out System.UInt64 sequence, out bool sequenceSpecified) {
        object[] results = this.EndInvoke(asyncResult);
        sequence = ((System.UInt64)(results[1]));
        sequenceSpecified = ((bool)(results[2]));
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.cisco.com/AXLPort/getRouteList", RequestNamespace="http://www.cisco.com/AXL/API/1.0", ResponseNamespace="http://www.cisco.com/AXL/API/1.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public GetRouteListResReturn getRouteList([System.Xml.Serialization.XmlElementAttribute("name", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlElementAttribute("uuid", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")] string Item, [System.Xml.Serialization.XmlIgnoreAttribute()] ItemChoiceType119 ItemElementName, [System.Xml.Serialization.XmlAttributeAttribute()] ref System.UInt64 sequence, [System.Xml.Serialization.XmlAttributeAttribute()] [System.Xml.Serialization.XmlIgnoreAttribute()] ref bool sequenceSpecified) {
        object[] results = this.Invoke("getRouteList", new object[] {
                    Item,
                    ItemElementName,
                    sequence,
                    sequenceSpecified});
        sequence = ((System.UInt64)(results[1]));
        sequenceSpecified = ((bool)(results[2]));
        return ((GetRouteListResReturn)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BegingetRouteList(string Item, ItemChoiceType119 ItemElementName, System.UInt64 sequence, bool sequenceSpecified, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("getRouteList", new object[] {
                    Item,
                    ItemElementName,
                    sequence,
                    sequenceSpecified}, callback, asyncState);
    }
    
    /// <remarks/>
    public GetRouteListResReturn EndgetRouteList(System.IAsyncResult asyncResult, out System.UInt64 sequence, out bool sequenceSpecified) {
        object[] results = this.EndInvoke(asyncResult);
        sequence = ((System.UInt64)(results[1]));
        sequenceSpecified = ((bool)(results[2]));
        return ((GetRouteListResReturn)(results[0]));
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.cisco.com/AXLPort/removeRouteList", RequestNamespace="http://www.cisco.com/AXL/API/1.0", ResponseNamespace="http://www.cisco.com/AXL/API/1.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string removeRouteList([System.Xml.Serialization.XmlElementAttribute("name", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlElementAttribute("uuid", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")] string Item, [System.Xml.Serialization.XmlIgnoreAttribute()] ItemChoiceType120 ItemElementName, [System.Xml.Serialization.XmlAttributeAttribute()] ref System.UInt64 sequence, [System.Xml.Serialization.XmlAttributeAttribute()] [System.Xml.Serialization.XmlIgnoreAttribute()] ref bool sequenceSpecified) {
        object[] results = this.Invoke("removeRouteList", new object[] {
                    Item,
                    ItemElementName,
                    sequence,
                    sequenceSpecified});
        sequence = ((System.UInt64)(results[1]));
        sequenceSpecified = ((bool)(results[2]));
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginremoveRouteList(string Item, ItemChoiceType120 ItemElementName, System.UInt64 sequence, bool sequenceSpecified, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("removeRouteList", new object[] {
                    Item,
                    ItemElementName,
                    sequence,
                    sequenceSpecified}, callback, asyncState);
    }
    
    /// <remarks/>
    public string EndremoveRouteList(System.IAsyncResult asyncResult, out System.UInt64 sequence, out bool sequenceSpecified) {
        object[] results = this.EndInvoke(asyncResult);
        sequence = ((System.UInt64)(results[1]));
        sequenceSpecified = ((bool)(results[2]));
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.cisco.com/AXLPort/addCTIRoutePoint", RequestNamespace="http://www.cisco.com/AXL/API/1.0", ResponseNamespace="http://www.cisco.com/AXL/API/1.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string addCTIRoutePoint([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] XCTIRoutePoint routePoint, [System.Xml.Serialization.XmlAttributeAttribute()] ref System.UInt64 sequence, [System.Xml.Serialization.XmlAttributeAttribute()] [System.Xml.Serialization.XmlIgnoreAttribute()] ref bool sequenceSpecified) {
        object[] results = this.Invoke("addCTIRoutePoint", new object[] {
                    routePoint,
                    sequence,
                    sequenceSpecified});
        sequence = ((System.UInt64)(results[1]));
        sequenceSpecified = ((bool)(results[2]));
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginaddCTIRoutePoint(XCTIRoutePoint routePoint, System.UInt64 sequence, bool sequenceSpecified, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("addCTIRoutePoint", new object[] {
                    routePoint,
                    sequence,
                    sequenceSpecified}, callback, asyncState);
    }
    
    /// <remarks/>
    public string EndaddCTIRoutePoint(System.IAsyncResult asyncResult, out System.UInt64 sequence, out bool sequenceSpecified) {
        object[] results = this.EndInvoke(asyncResult);
        sequence = ((System.UInt64)(results[1]));
        sequenceSpecified = ((bool)(results[2]));
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.cisco.com/AXLPort/updateCTIRoutePoint", RequestNamespace="http://www.cisco.com/AXL/API/1.0", ResponseNamespace="http://www.cisco.com/AXL/API/1.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string updateCTIRoutePoint([System.Xml.Serialization.XmlElementAttribute("name", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="Name")] [System.Xml.Serialization.XmlElementAttribute("uuid", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")] string Item, [System.Xml.Serialization.XmlIgnoreAttribute()] ItemChoiceType121 ItemElementName, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="Name")] string newName, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string description, [System.Xml.Serialization.XmlElementAttribute("callingSearchSpaceId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlElementAttribute("callingSearchSpaceName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="Name")] [System.Xml.Serialization.XmlChoiceIdentifierAttribute("Item1ElementName")] string Item1, [System.Xml.Serialization.XmlIgnoreAttribute()] Item1ChoiceType28 Item1ElementName, [System.Xml.Serialization.XmlElementAttribute("devicePoolName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="Name")] [System.Xml.Serialization.XmlElementAttribute("devicePoolId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlChoiceIdentifierAttribute("Item2ElementName")] string Item2, [System.Xml.Serialization.XmlIgnoreAttribute()] Item2ChoiceType20 Item2ElementName, [System.Xml.Serialization.XmlElementAttribute("locationName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlElementAttribute("locationId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlChoiceIdentifierAttribute("Item3ElementName")] string Item3, 
        [System.Xml.Serialization.XmlIgnoreAttribute()] Item3ChoiceType17 Item3ElementName, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] UpdateCTIRoutePointReqLines lines, [System.Xml.Serialization.XmlAttributeAttribute()] ref System.UInt64 sequence, [System.Xml.Serialization.XmlAttributeAttribute()] [System.Xml.Serialization.XmlIgnoreAttribute()] ref bool sequenceSpecified) {
        object[] results = this.Invoke("updateCTIRoutePoint", new object[] {
                    Item,
                    ItemElementName,
                    newName,
                    description,
                    Item1,
                    Item1ElementName,
                    Item2,
                    Item2ElementName,
                    Item3,
                    Item3ElementName,
                    lines,
                    sequence,
                    sequenceSpecified});
        sequence = ((System.UInt64)(results[1]));
        sequenceSpecified = ((bool)(results[2]));
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginupdateCTIRoutePoint(string Item, ItemChoiceType121 ItemElementName, string newName, string description, string Item1, Item1ChoiceType28 Item1ElementName, string Item2, Item2ChoiceType20 Item2ElementName, string Item3, Item3ChoiceType17 Item3ElementName, UpdateCTIRoutePointReqLines lines, System.UInt64 sequence, bool sequenceSpecified, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("updateCTIRoutePoint", new object[] {
                    Item,
                    ItemElementName,
                    newName,
                    description,
                    Item1,
                    Item1ElementName,
                    Item2,
                    Item2ElementName,
                    Item3,
                    Item3ElementName,
                    lines,
                    sequence,
                    sequenceSpecified}, callback, asyncState);
    }
    
    /// <remarks/>
    public string EndupdateCTIRoutePoint(System.IAsyncResult asyncResult, out System.UInt64 sequence, out bool sequenceSpecified) {
        object[] results = this.EndInvoke(asyncResult);
        sequence = ((System.UInt64)(results[1]));
        sequenceSpecified = ((bool)(results[2]));
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.cisco.com/AXLPort/getCTIRoutePoint", RequestNamespace="http://www.cisco.com/AXL/API/1.0", ResponseNamespace="http://www.cisco.com/AXL/API/1.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public GetCTIRoutePointResReturn getCTIRoutePoint([System.Xml.Serialization.XmlElementAttribute("name", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlElementAttribute("uuid", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")] string Item, [System.Xml.Serialization.XmlIgnoreAttribute()] ItemChoiceType122 ItemElementName, [System.Xml.Serialization.XmlAttributeAttribute()] ref System.UInt64 sequence, [System.Xml.Serialization.XmlAttributeAttribute()] [System.Xml.Serialization.XmlIgnoreAttribute()] ref bool sequenceSpecified) {
        object[] results = this.Invoke("getCTIRoutePoint", new object[] {
                    Item,
                    ItemElementName,
                    sequence,
                    sequenceSpecified});
        sequence = ((System.UInt64)(results[1]));
        sequenceSpecified = ((bool)(results[2]));
        return ((GetCTIRoutePointResReturn)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BegingetCTIRoutePoint(string Item, ItemChoiceType122 ItemElementName, System.UInt64 sequence, bool sequenceSpecified, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("getCTIRoutePoint", new object[] {
                    Item,
                    ItemElementName,
                    sequence,
                    sequenceSpecified}, callback, asyncState);
    }
    
    /// <remarks/>
    public GetCTIRoutePointResReturn EndgetCTIRoutePoint(System.IAsyncResult asyncResult, out System.UInt64 sequence, out bool sequenceSpecified) {
        object[] results = this.EndInvoke(asyncResult);
        sequence = ((System.UInt64)(results[1]));
        sequenceSpecified = ((bool)(results[2]));
        return ((GetCTIRoutePointResReturn)(results[0]));
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.cisco.com/AXLPort/removeCTIRoutePoint", RequestNamespace="http://www.cisco.com/AXL/API/1.0", ResponseNamespace="http://www.cisco.com/AXL/API/1.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string removeCTIRoutePoint([System.Xml.Serialization.XmlElementAttribute("name", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlElementAttribute("uuid", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")] string Item, [System.Xml.Serialization.XmlIgnoreAttribute()] ItemChoiceType123 ItemElementName, [System.Xml.Serialization.XmlAttributeAttribute()] ref System.UInt64 sequence, [System.Xml.Serialization.XmlAttributeAttribute()] [System.Xml.Serialization.XmlIgnoreAttribute()] ref bool sequenceSpecified) {
        object[] results = this.Invoke("removeCTIRoutePoint", new object[] {
                    Item,
                    ItemElementName,
                    sequence,
                    sequenceSpecified});
        sequence = ((System.UInt64)(results[1]));
        sequenceSpecified = ((bool)(results[2]));
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginremoveCTIRoutePoint(string Item, ItemChoiceType123 ItemElementName, System.UInt64 sequence, bool sequenceSpecified, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("removeCTIRoutePoint", new object[] {
                    Item,
                    ItemElementName,
                    sequence,
                    sequenceSpecified}, callback, asyncState);
    }
    
    /// <remarks/>
    public string EndremoveCTIRoutePoint(System.IAsyncResult asyncResult, out System.UInt64 sequence, out bool sequenceSpecified) {
        object[] results = this.EndInvoke(asyncResult);
        sequence = ((System.UInt64)(results[1]));
        sequenceSpecified = ((bool)(results[2]));
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.cisco.com/AXLPort/addDialPlan", RequestNamespace="http://www.cisco.com/AXL/API/1.0", ResponseNamespace="http://www.cisco.com/AXL/API/1.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string addDialPlan([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] XDialPlan dialPlan, [System.Xml.Serialization.XmlAttributeAttribute()] ref System.UInt64 sequence, [System.Xml.Serialization.XmlAttributeAttribute()] [System.Xml.Serialization.XmlIgnoreAttribute()] ref bool sequenceSpecified) {
        object[] results = this.Invoke("addDialPlan", new object[] {
                    dialPlan,
                    sequence,
                    sequenceSpecified});
        sequence = ((System.UInt64)(results[1]));
        sequenceSpecified = ((bool)(results[2]));
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginaddDialPlan(XDialPlan dialPlan, System.UInt64 sequence, bool sequenceSpecified, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("addDialPlan", new object[] {
                    dialPlan,
                    sequence,
                    sequenceSpecified}, callback, asyncState);
    }
    
    /// <remarks/>
    public string EndaddDialPlan(System.IAsyncResult asyncResult, out System.UInt64 sequence, out bool sequenceSpecified) {
        object[] results = this.EndInvoke(asyncResult);
        sequence = ((System.UInt64)(results[1]));
        sequenceSpecified = ((bool)(results[2]));
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.cisco.com/AXLPort/updateDialPlan", RequestNamespace="http://www.cisco.com/AXL/API/1.0", ResponseNamespace="http://www.cisco.com/AXL/API/1.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string updateDialPlan([System.Xml.Serialization.XmlElementAttribute("name", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlElementAttribute("uuid", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")] string Item, [System.Xml.Serialization.XmlIgnoreAttribute()] ItemChoiceType124 ItemElementName, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string newName, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string description, [System.Xml.Serialization.XmlAttributeAttribute()] ref System.UInt64 sequence, [System.Xml.Serialization.XmlAttributeAttribute()] [System.Xml.Serialization.XmlIgnoreAttribute()] ref bool sequenceSpecified) {
        object[] results = this.Invoke("updateDialPlan", new object[] {
                    Item,
                    ItemElementName,
                    newName,
                    description,
                    sequence,
                    sequenceSpecified});
        sequence = ((System.UInt64)(results[1]));
        sequenceSpecified = ((bool)(results[2]));
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginupdateDialPlan(string Item, ItemChoiceType124 ItemElementName, string newName, string description, System.UInt64 sequence, bool sequenceSpecified, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("updateDialPlan", new object[] {
                    Item,
                    ItemElementName,
                    newName,
                    description,
                    sequence,
                    sequenceSpecified}, callback, asyncState);
    }
    
    /// <remarks/>
    public string EndupdateDialPlan(System.IAsyncResult asyncResult, out System.UInt64 sequence, out bool sequenceSpecified) {
        object[] results = this.EndInvoke(asyncResult);
        sequence = ((System.UInt64)(results[1]));
        sequenceSpecified = ((bool)(results[2]));
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.cisco.com/AXLPort/getDialPlan", RequestNamespace="http://www.cisco.com/AXL/API/1.0", ResponseNamespace="http://www.cisco.com/AXL/API/1.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public GetDialPlanResReturn getDialPlan([System.Xml.Serialization.XmlElementAttribute("name", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlElementAttribute("uuid", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")] string Item, [System.Xml.Serialization.XmlIgnoreAttribute()] ItemChoiceType125 ItemElementName, [System.Xml.Serialization.XmlAttributeAttribute()] ref System.UInt64 sequence, [System.Xml.Serialization.XmlAttributeAttribute()] [System.Xml.Serialization.XmlIgnoreAttribute()] ref bool sequenceSpecified) {
        object[] results = this.Invoke("getDialPlan", new object[] {
                    Item,
                    ItemElementName,
                    sequence,
                    sequenceSpecified});
        sequence = ((System.UInt64)(results[1]));
        sequenceSpecified = ((bool)(results[2]));
        return ((GetDialPlanResReturn)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BegingetDialPlan(string Item, ItemChoiceType125 ItemElementName, System.UInt64 sequence, bool sequenceSpecified, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("getDialPlan", new object[] {
                    Item,
                    ItemElementName,
                    sequence,
                    sequenceSpecified}, callback, asyncState);
    }
    
    /// <remarks/>
    public GetDialPlanResReturn EndgetDialPlan(System.IAsyncResult asyncResult, out System.UInt64 sequence, out bool sequenceSpecified) {
        object[] results = this.EndInvoke(asyncResult);
        sequence = ((System.UInt64)(results[1]));
        sequenceSpecified = ((bool)(results[2]));
        return ((GetDialPlanResReturn)(results[0]));
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.cisco.com/AXLPort/removeDialPlan", RequestNamespace="http://www.cisco.com/AXL/API/1.0", ResponseNamespace="http://www.cisco.com/AXL/API/1.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string removeDialPlan([System.Xml.Serialization.XmlElementAttribute("name", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlElementAttribute("uuid", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")] string Item, [System.Xml.Serialization.XmlIgnoreAttribute()] ItemChoiceType126 ItemElementName, [System.Xml.Serialization.XmlAttributeAttribute()] ref System.UInt64 sequence, [System.Xml.Serialization.XmlAttributeAttribute()] [System.Xml.Serialization.XmlIgnoreAttribute()] ref bool sequenceSpecified) {
        object[] results = this.Invoke("removeDialPlan", new object[] {
                    Item,
                    ItemElementName,
                    sequence,
                    sequenceSpecified});
        sequence = ((System.UInt64)(results[1]));
        sequenceSpecified = ((bool)(results[2]));
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginremoveDialPlan(string Item, ItemChoiceType126 ItemElementName, System.UInt64 sequence, bool sequenceSpecified, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("removeDialPlan", new object[] {
                    Item,
                    ItemElementName,
                    sequence,
                    sequenceSpecified}, callback, asyncState);
    }
    
    /// <remarks/>
    public string EndremoveDialPlan(System.IAsyncResult asyncResult, out System.UInt64 sequence, out bool sequenceSpecified) {
        object[] results = this.EndInvoke(asyncResult);
        sequence = ((System.UInt64)(results[1]));
        sequenceSpecified = ((bool)(results[2]));
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.cisco.com/AXLPort/addDialPlanTag", RequestNamespace="http://www.cisco.com/AXL/API/1.0", ResponseNamespace="http://www.cisco.com/AXL/API/1.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string addDialPlanTag([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] XDialPlanTag dialPlanTag, [System.Xml.Serialization.XmlAttributeAttribute()] ref System.UInt64 sequence, [System.Xml.Serialization.XmlAttributeAttribute()] [System.Xml.Serialization.XmlIgnoreAttribute()] ref bool sequenceSpecified) {
        object[] results = this.Invoke("addDialPlanTag", new object[] {
                    dialPlanTag,
                    sequence,
                    sequenceSpecified});
        sequence = ((System.UInt64)(results[1]));
        sequenceSpecified = ((bool)(results[2]));
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginaddDialPlanTag(XDialPlanTag dialPlanTag, System.UInt64 sequence, bool sequenceSpecified, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("addDialPlanTag", new object[] {
                    dialPlanTag,
                    sequence,
                    sequenceSpecified}, callback, asyncState);
    }
    
    /// <remarks/>
    public string EndaddDialPlanTag(System.IAsyncResult asyncResult, out System.UInt64 sequence, out bool sequenceSpecified) {
        object[] results = this.EndInvoke(asyncResult);
        sequence = ((System.UInt64)(results[1]));
        sequenceSpecified = ((bool)(results[2]));
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.cisco.com/AXLPort/updateDialPlanTag", RequestNamespace="http://www.cisco.com/AXL/API/1.0", ResponseNamespace="http://www.cisco.com/AXL/API/1.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string updateDialPlanTag([System.Xml.Serialization.XmlElementAttribute("name", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlElementAttribute("uuid", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")] string Item, [System.Xml.Serialization.XmlIgnoreAttribute()] ItemChoiceType127 ItemElementName, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="Name")] string newName, [System.Xml.Serialization.XmlElementAttribute("dialPlanName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlElementAttribute("dialPlan", typeof(XDialPlan), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] object Item1, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] XOperator @operator, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool operatorSpecified, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] bool suppressFromRouteFilter, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool suppressFromRouteFilterSpecified, [System.Xml.Serialization.XmlAttributeAttribute()] ref System.UInt64 sequence, [System.Xml.Serialization.XmlAttributeAttribute()] [System.Xml.Serialization.XmlIgnoreAttribute()] ref bool sequenceSpecified) {
        object[] results = this.Invoke("updateDialPlanTag", new object[] {
                    Item,
                    ItemElementName,
                    newName,
                    Item1,
                    @operator,
                    operatorSpecified,
                    suppressFromRouteFilter,
                    suppressFromRouteFilterSpecified,
                    sequence,
                    sequenceSpecified});
        sequence = ((System.UInt64)(results[1]));
        sequenceSpecified = ((bool)(results[2]));
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginupdateDialPlanTag(string Item, ItemChoiceType127 ItemElementName, string newName, object Item1, XOperator @operator, bool operatorSpecified, bool suppressFromRouteFilter, bool suppressFromRouteFilterSpecified, System.UInt64 sequence, bool sequenceSpecified, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("updateDialPlanTag", new object[] {
                    Item,
                    ItemElementName,
                    newName,
                    Item1,
                    @operator,
                    operatorSpecified,
                    suppressFromRouteFilter,
                    suppressFromRouteFilterSpecified,
                    sequence,
                    sequenceSpecified}, callback, asyncState);
    }
    
    /// <remarks/>
    public string EndupdateDialPlanTag(System.IAsyncResult asyncResult, out System.UInt64 sequence, out bool sequenceSpecified) {
        object[] results = this.EndInvoke(asyncResult);
        sequence = ((System.UInt64)(results[1]));
        sequenceSpecified = ((bool)(results[2]));
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.cisco.com/AXLPort/getDialPlanTag", RequestNamespace="http://www.cisco.com/AXL/API/1.0", ResponseNamespace="http://www.cisco.com/AXL/API/1.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public GetDialPlanTagResReturn getDialPlanTag([System.Xml.Serialization.XmlElementAttribute("name", typeof(object), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlElementAttribute("dialPlanUuid", typeof(object), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlElementAttribute("uuid", typeof(object), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlElementAttribute("dialPlanName", typeof(object), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")] object Item, [System.Xml.Serialization.XmlIgnoreAttribute()] ItemChoiceType128 ItemElementName, [System.Xml.Serialization.XmlAttributeAttribute()] out System.UInt64 sequence, [System.Xml.Serialization.XmlAttributeAttribute()] [System.Xml.Serialization.XmlIgnoreAttribute()] out bool sequenceSpecified) {
        object[] results = this.Invoke("getDialPlanTag", new object[] {
                    Item,
                    ItemElementName});
        sequence = ((System.UInt64)(results[1]));
        sequenceSpecified = ((bool)(results[2]));
        return ((GetDialPlanTagResReturn)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BegingetDialPlanTag(object Item, ItemChoiceType128 ItemElementName, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("getDialPlanTag", new object[] {
                    Item,
                    ItemElementName}, callback, asyncState);
    }
    
    /// <remarks/>
    public GetDialPlanTagResReturn EndgetDialPlanTag(System.IAsyncResult asyncResult, out System.UInt64 sequence, out bool sequenceSpecified) {
        object[] results = this.EndInvoke(asyncResult);
        sequence = ((System.UInt64)(results[1]));
        sequenceSpecified = ((bool)(results[2]));
        return ((GetDialPlanTagResReturn)(results[0]));
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.cisco.com/AXLPort/removeDialPlanTag", RequestNamespace="http://www.cisco.com/AXL/API/1.0", ResponseNamespace="http://www.cisco.com/AXL/API/1.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string removeDialPlanTag([System.Xml.Serialization.XmlElementAttribute("name", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlElementAttribute("uuid", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")] string Item, [System.Xml.Serialization.XmlIgnoreAttribute()] ItemChoiceType129 ItemElementName, [System.Xml.Serialization.XmlAttributeAttribute()] ref System.UInt64 sequence, [System.Xml.Serialization.XmlAttributeAttribute()] [System.Xml.Serialization.XmlIgnoreAttribute()] ref bool sequenceSpecified) {
        object[] results = this.Invoke("removeDialPlanTag", new object[] {
                    Item,
                    ItemElementName,
                    sequence,
                    sequenceSpecified});
        sequence = ((System.UInt64)(results[1]));
        sequenceSpecified = ((bool)(results[2]));
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginremoveDialPlanTag(string Item, ItemChoiceType129 ItemElementName, System.UInt64 sequence, bool sequenceSpecified, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("removeDialPlanTag", new object[] {
                    Item,
                    ItemElementName,
                    sequence,
                    sequenceSpecified}, callback, asyncState);
    }
    
    /// <remarks/>
    public string EndremoveDialPlanTag(System.IAsyncResult asyncResult, out System.UInt64 sequence, out bool sequenceSpecified) {
        object[] results = this.EndInvoke(asyncResult);
        sequence = ((System.UInt64)(results[1]));
        sequenceSpecified = ((bool)(results[2]));
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.cisco.com/AXLPort/addCallPark", RequestNamespace="http://www.cisco.com/AXL/API/1.0", ResponseNamespace="http://www.cisco.com/AXL/API/1.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string addCallPark([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] XNPCallPark callPark, [System.Xml.Serialization.XmlAttributeAttribute()] ref System.UInt64 sequence, [System.Xml.Serialization.XmlAttributeAttribute()] [System.Xml.Serialization.XmlIgnoreAttribute()] ref bool sequenceSpecified) {
        object[] results = this.Invoke("addCallPark", new object[] {
                    callPark,
                    sequence,
                    sequenceSpecified});
        sequence = ((System.UInt64)(results[1]));
        sequenceSpecified = ((bool)(results[2]));
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginaddCallPark(XNPCallPark callPark, System.UInt64 sequence, bool sequenceSpecified, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("addCallPark", new object[] {
                    callPark,
                    sequence,
                    sequenceSpecified}, callback, asyncState);
    }
    
    /// <remarks/>
    public string EndaddCallPark(System.IAsyncResult asyncResult, out System.UInt64 sequence, out bool sequenceSpecified) {
        object[] results = this.EndInvoke(asyncResult);
        sequence = ((System.UInt64)(results[1]));
        sequenceSpecified = ((bool)(results[2]));
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.cisco.com/AXLPort/updateCallPark", RequestNamespace="http://www.cisco.com/AXL/API/1.0", ResponseNamespace="http://www.cisco.com/AXL/API/1.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string updateCallPark([System.Xml.Serialization.XmlElementAttribute("routePartitionId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlElementAttribute("routePartitionName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlElementAttribute("uuid", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlElementAttribute("pattern", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlElementAttribute("routeFilterId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlElementAttribute("routeFilterName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")] string Item, [System.Xml.Serialization.XmlIgnoreAttribute()] ItemChoiceType130 ItemElementName, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string newPattern, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string description, [System.Xml.Serialization.XmlElementAttribute("newRoutePartitionId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlElementAttribute("newRoutePartitionName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlChoiceIdentifierAttribute("Item1ElementName")] string Item1, [System.Xml.Serialization.XmlIgnoreAttribute()] Item1ChoiceType29 Item1ElementName, [System.Xml.Serialization.XmlElementAttribute("callManagerName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlElementAttribute("callManagerId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlChoiceIdentifierAttribute("Item2ElementName")] string Item2, 
        [System.Xml.Serialization.XmlIgnoreAttribute()] Item2ChoiceType21 Item2ElementName, [System.Xml.Serialization.XmlAttributeAttribute()] ref System.UInt64 sequence, [System.Xml.Serialization.XmlAttributeAttribute()] [System.Xml.Serialization.XmlIgnoreAttribute()] ref bool sequenceSpecified) {
        object[] results = this.Invoke("updateCallPark", new object[] {
                    Item,
                    ItemElementName,
                    newPattern,
                    description,
                    Item1,
                    Item1ElementName,
                    Item2,
                    Item2ElementName,
                    sequence,
                    sequenceSpecified});
        sequence = ((System.UInt64)(results[1]));
        sequenceSpecified = ((bool)(results[2]));
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginupdateCallPark(string Item, ItemChoiceType130 ItemElementName, string newPattern, string description, string Item1, Item1ChoiceType29 Item1ElementName, string Item2, Item2ChoiceType21 Item2ElementName, System.UInt64 sequence, bool sequenceSpecified, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("updateCallPark", new object[] {
                    Item,
                    ItemElementName,
                    newPattern,
                    description,
                    Item1,
                    Item1ElementName,
                    Item2,
                    Item2ElementName,
                    sequence,
                    sequenceSpecified}, callback, asyncState);
    }
    
    /// <remarks/>
    public string EndupdateCallPark(System.IAsyncResult asyncResult, out System.UInt64 sequence, out bool sequenceSpecified) {
        object[] results = this.EndInvoke(asyncResult);
        sequence = ((System.UInt64)(results[1]));
        sequenceSpecified = ((bool)(results[2]));
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.cisco.com/AXLPort/getCallPark", RequestNamespace="http://www.cisco.com/AXL/API/1.0", ResponseNamespace="http://www.cisco.com/AXL/API/1.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public GetCallParkResReturn getCallPark([System.Xml.Serialization.XmlElementAttribute("routePartitionId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlElementAttribute("routePartitionName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlElementAttribute("uuid", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlElementAttribute("pattern", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlElementAttribute("routeFilterId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlElementAttribute("routeFilterName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")] string Item, [System.Xml.Serialization.XmlIgnoreAttribute()] ItemChoiceType131 ItemElementName, [System.Xml.Serialization.XmlAttributeAttribute()] ref System.UInt64 sequence, [System.Xml.Serialization.XmlAttributeAttribute()] [System.Xml.Serialization.XmlIgnoreAttribute()] ref bool sequenceSpecified) {
        object[] results = this.Invoke("getCallPark", new object[] {
                    Item,
                    ItemElementName,
                    sequence,
                    sequenceSpecified});
        sequence = ((System.UInt64)(results[1]));
        sequenceSpecified = ((bool)(results[2]));
        return ((GetCallParkResReturn)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BegingetCallPark(string Item, ItemChoiceType131 ItemElementName, System.UInt64 sequence, bool sequenceSpecified, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("getCallPark", new object[] {
                    Item,
                    ItemElementName,
                    sequence,
                    sequenceSpecified}, callback, asyncState);
    }
    
    /// <remarks/>
    public GetCallParkResReturn EndgetCallPark(System.IAsyncResult asyncResult, out System.UInt64 sequence, out bool sequenceSpecified) {
        object[] results = this.EndInvoke(asyncResult);
        sequence = ((System.UInt64)(results[1]));
        sequenceSpecified = ((bool)(results[2]));
        return ((GetCallParkResReturn)(results[0]));
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.cisco.com/AXLPort/removeCallPark", RequestNamespace="http://www.cisco.com/AXL/API/1.0", ResponseNamespace="http://www.cisco.com/AXL/API/1.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string removeCallPark([System.Xml.Serialization.XmlElementAttribute("routePartitionId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlElementAttribute("routePartitionName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlElementAttribute("uuid", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlElementAttribute("pattern", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlElementAttribute("routeFilterId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlElementAttribute("routeFilterName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")] string Item, [System.Xml.Serialization.XmlIgnoreAttribute()] ItemChoiceType132 ItemElementName, [System.Xml.Serialization.XmlAttributeAttribute()] ref System.UInt64 sequence, [System.Xml.Serialization.XmlAttributeAttribute()] [System.Xml.Serialization.XmlIgnoreAttribute()] ref bool sequenceSpecified) {
        object[] results = this.Invoke("removeCallPark", new object[] {
                    Item,
                    ItemElementName,
                    sequence,
                    sequenceSpecified});
        sequence = ((System.UInt64)(results[1]));
        sequenceSpecified = ((bool)(results[2]));
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginremoveCallPark(string Item, ItemChoiceType132 ItemElementName, System.UInt64 sequence, bool sequenceSpecified, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("removeCallPark", new object[] {
                    Item,
                    ItemElementName,
                    sequence,
                    sequenceSpecified}, callback, asyncState);
    }
    
    /// <remarks/>
    public string EndremoveCallPark(System.IAsyncResult asyncResult, out System.UInt64 sequence, out bool sequenceSpecified) {
        object[] results = this.EndInvoke(asyncResult);
        sequence = ((System.UInt64)(results[1]));
        sequenceSpecified = ((bool)(results[2]));
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.cisco.com/AXLPort/addCallPickupGroup", RequestNamespace="http://www.cisco.com/AXL/API/1.0", ResponseNamespace="http://www.cisco.com/AXL/API/1.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string addCallPickupGroup([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] XNPCallPickupGroup callPickup, [System.Xml.Serialization.XmlAttributeAttribute()] ref System.UInt64 sequence, [System.Xml.Serialization.XmlAttributeAttribute()] [System.Xml.Serialization.XmlIgnoreAttribute()] ref bool sequenceSpecified) {
        object[] results = this.Invoke("addCallPickupGroup", new object[] {
                    callPickup,
                    sequence,
                    sequenceSpecified});
        sequence = ((System.UInt64)(results[1]));
        sequenceSpecified = ((bool)(results[2]));
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginaddCallPickupGroup(XNPCallPickupGroup callPickup, System.UInt64 sequence, bool sequenceSpecified, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("addCallPickupGroup", new object[] {
                    callPickup,
                    sequence,
                    sequenceSpecified}, callback, asyncState);
    }
    
    /// <remarks/>
    public string EndaddCallPickupGroup(System.IAsyncResult asyncResult, out System.UInt64 sequence, out bool sequenceSpecified) {
        object[] results = this.EndInvoke(asyncResult);
        sequence = ((System.UInt64)(results[1]));
        sequenceSpecified = ((bool)(results[2]));
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.cisco.com/AXLPort/updateCallPickupGroup", RequestNamespace="http://www.cisco.com/AXL/API/1.0", ResponseNamespace="http://www.cisco.com/AXL/API/1.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string updateCallPickupGroup([System.Xml.Serialization.XmlElementAttribute("routePartitionId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlElementAttribute("name", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlElementAttribute("routePartitionName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlElementAttribute("uuid", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlElementAttribute("pattern", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlElementAttribute("routeFilterId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlElementAttribute("routeFilterName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")] string Item, [System.Xml.Serialization.XmlIgnoreAttribute()] ItemChoiceType133 ItemElementName, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string newPattern, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string description, [System.Xml.Serialization.XmlElementAttribute("newRoutePartitionId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlElementAttribute("newRoutePartitionName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlChoiceIdentifierAttribute("Item1ElementName")] string Item1, [System.Xml.Serialization.XmlIgnoreAttribute()] Item1ChoiceType30 Item1ElementName, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string newName, 
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlArrayItemAttribute("member", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)] XPickupGroupMember[] members, [System.Xml.Serialization.XmlAttributeAttribute()] ref System.UInt64 sequence, [System.Xml.Serialization.XmlAttributeAttribute()] [System.Xml.Serialization.XmlIgnoreAttribute()] ref bool sequenceSpecified) {
        object[] results = this.Invoke("updateCallPickupGroup", new object[] {
                    Item,
                    ItemElementName,
                    newPattern,
                    description,
                    Item1,
                    Item1ElementName,
                    newName,
                    members,
                    sequence,
                    sequenceSpecified});
        sequence = ((System.UInt64)(results[1]));
        sequenceSpecified = ((bool)(results[2]));
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginupdateCallPickupGroup(string Item, ItemChoiceType133 ItemElementName, string newPattern, string description, string Item1, Item1ChoiceType30 Item1ElementName, string newName, XPickupGroupMember[] members, System.UInt64 sequence, bool sequenceSpecified, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("updateCallPickupGroup", new object[] {
                    Item,
                    ItemElementName,
                    newPattern,
                    description,
                    Item1,
                    Item1ElementName,
                    newName,
                    members,
                    sequence,
                    sequenceSpecified}, callback, asyncState);
    }
    
    /// <remarks/>
    public string EndupdateCallPickupGroup(System.IAsyncResult asyncResult, out System.UInt64 sequence, out bool sequenceSpecified) {
        object[] results = this.EndInvoke(asyncResult);
        sequence = ((System.UInt64)(results[1]));
        sequenceSpecified = ((bool)(results[2]));
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.cisco.com/AXLPort/getCallPickupGroup", RequestNamespace="http://www.cisco.com/AXL/API/1.0", ResponseNamespace="http://www.cisco.com/AXL/API/1.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public GetCallPickupGroupResReturn getCallPickupGroup([System.Xml.Serialization.XmlElementAttribute("routePartitionId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlElementAttribute("name", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlElementAttribute("routePartitionName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlElementAttribute("uuid", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlElementAttribute("pattern", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlElementAttribute("routeFilterId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlElementAttribute("routeFilterName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")] string Item, [System.Xml.Serialization.XmlIgnoreAttribute()] ItemChoiceType134 ItemElementName, [System.Xml.Serialization.XmlAttributeAttribute()] ref System.UInt64 sequence, [System.Xml.Serialization.XmlAttributeAttribute()] [System.Xml.Serialization.XmlIgnoreAttribute()] ref bool sequenceSpecified) {
        object[] results = this.Invoke("getCallPickupGroup", new object[] {
                    Item,
                    ItemElementName,
                    sequence,
                    sequenceSpecified});
        sequence = ((System.UInt64)(results[1]));
        sequenceSpecified = ((bool)(results[2]));
        return ((GetCallPickupGroupResReturn)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BegingetCallPickupGroup(string Item, ItemChoiceType134 ItemElementName, System.UInt64 sequence, bool sequenceSpecified, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("getCallPickupGroup", new object[] {
                    Item,
                    ItemElementName,
                    sequence,
                    sequenceSpecified}, callback, asyncState);
    }
    
    /// <remarks/>
    public GetCallPickupGroupResReturn EndgetCallPickupGroup(System.IAsyncResult asyncResult, out System.UInt64 sequence, out bool sequenceSpecified) {
        object[] results = this.EndInvoke(asyncResult);
        sequence = ((System.UInt64)(results[1]));
        sequenceSpecified = ((bool)(results[2]));
        return ((GetCallPickupGroupResReturn)(results[0]));
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.cisco.com/AXLPort/removeCallPickupGroup", RequestNamespace="http://www.cisco.com/AXL/API/1.0", ResponseNamespace="http://www.cisco.com/AXL/API/1.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string removeCallPickupGroup([System.Xml.Serialization.XmlElementAttribute("routePartitionId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlElementAttribute("name", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlElementAttribute("routePartitionName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlElementAttribute("uuid", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlElementAttribute("pattern", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlElementAttribute("routeFilterId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlElementAttribute("routeFilterName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")] string Item, [System.Xml.Serialization.XmlIgnoreAttribute()] ItemChoiceType135 ItemElementName, [System.Xml.Serialization.XmlAttributeAttribute()] ref System.UInt64 sequence, [System.Xml.Serialization.XmlAttributeAttribute()] [System.Xml.Serialization.XmlIgnoreAttribute()] ref bool sequenceSpecified) {
        object[] results = this.Invoke("removeCallPickupGroup", new object[] {
                    Item,
                    ItemElementName,
                    sequence,
                    sequenceSpecified});
        sequence = ((System.UInt64)(results[1]));
        sequenceSpecified = ((bool)(results[2]));
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginremoveCallPickupGroup(string Item, ItemChoiceType135 ItemElementName, System.UInt64 sequence, bool sequenceSpecified, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("removeCallPickupGroup", new object[] {
                    Item,
                    ItemElementName,
                    sequence,
                    sequenceSpecified}, callback, asyncState);
    }
    
    /// <remarks/>
    public string EndremoveCallPickupGroup(System.IAsyncResult asyncResult, out System.UInt64 sequence, out bool sequenceSpecified) {
        object[] results = this.EndInvoke(asyncResult);
        sequence = ((System.UInt64)(results[1]));
        sequenceSpecified = ((bool)(results[2]));
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.cisco.com/AXLPort/addDDI", RequestNamespace="http://www.cisco.com/AXL/API/1.0", ResponseNamespace="http://www.cisco.com/AXL/API/1.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string addDDI([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] XDigitDiscardInstruction ddi, [System.Xml.Serialization.XmlAttributeAttribute()] ref System.UInt64 sequence, [System.Xml.Serialization.XmlAttributeAttribute()] [System.Xml.Serialization.XmlIgnoreAttribute()] ref bool sequenceSpecified) {
        object[] results = this.Invoke("addDDI", new object[] {
                    ddi,
                    sequence,
                    sequenceSpecified});
        sequence = ((System.UInt64)(results[1]));
        sequenceSpecified = ((bool)(results[2]));
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginaddDDI(XDigitDiscardInstruction ddi, System.UInt64 sequence, bool sequenceSpecified, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("addDDI", new object[] {
                    ddi,
                    sequence,
                    sequenceSpecified}, callback, asyncState);
    }
    
    /// <remarks/>
    public string EndaddDDI(System.IAsyncResult asyncResult, out System.UInt64 sequence, out bool sequenceSpecified) {
        object[] results = this.EndInvoke(asyncResult);
        sequence = ((System.UInt64)(results[1]));
        sequenceSpecified = ((bool)(results[2]));
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.cisco.com/AXLPort/updateDDI", RequestNamespace="http://www.cisco.com/AXL/API/1.0", ResponseNamespace="http://www.cisco.com/AXL/API/1.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string updateDDI([System.Xml.Serialization.XmlElementAttribute("name", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlElementAttribute("uuid", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")] string Item, [System.Xml.Serialization.XmlIgnoreAttribute()] ItemChoiceType136 ItemElementName, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="Name")] string newName, [System.Xml.Serialization.XmlElementAttribute("dialPlanName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlElementAttribute("dialPlanId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlChoiceIdentifierAttribute("Item1ElementName")] string Item1, [System.Xml.Serialization.XmlIgnoreAttribute()] Item1ChoiceType31 Item1ElementName, [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlArrayItemAttribute("member", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)] XDigitDiscardInstructionMember[] members, [System.Xml.Serialization.XmlAttributeAttribute()] ref System.UInt64 sequence, [System.Xml.Serialization.XmlAttributeAttribute()] [System.Xml.Serialization.XmlIgnoreAttribute()] ref bool sequenceSpecified) {
        object[] results = this.Invoke("updateDDI", new object[] {
                    Item,
                    ItemElementName,
                    newName,
                    Item1,
                    Item1ElementName,
                    members,
                    sequence,
                    sequenceSpecified});
        sequence = ((System.UInt64)(results[1]));
        sequenceSpecified = ((bool)(results[2]));
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginupdateDDI(string Item, ItemChoiceType136 ItemElementName, string newName, string Item1, Item1ChoiceType31 Item1ElementName, XDigitDiscardInstructionMember[] members, System.UInt64 sequence, bool sequenceSpecified, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("updateDDI", new object[] {
                    Item,
                    ItemElementName,
                    newName,
                    Item1,
                    Item1ElementName,
                    members,
                    sequence,
                    sequenceSpecified}, callback, asyncState);
    }
    
    /// <remarks/>
    public string EndupdateDDI(System.IAsyncResult asyncResult, out System.UInt64 sequence, out bool sequenceSpecified) {
        object[] results = this.EndInvoke(asyncResult);
        sequence = ((System.UInt64)(results[1]));
        sequenceSpecified = ((bool)(results[2]));
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.cisco.com/AXLPort/getDDI", RequestNamespace="http://www.cisco.com/AXL/API/1.0", ResponseNamespace="http://www.cisco.com/AXL/API/1.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public GetDDIResReturn getDDI([System.Xml.Serialization.XmlElementAttribute("name", typeof(object), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlElementAttribute("dialPlanUuid", typeof(object), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlElementAttribute("uuid", typeof(object), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlElementAttribute("dialPlanName", typeof(object), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")] object Item, [System.Xml.Serialization.XmlIgnoreAttribute()] ItemChoiceType137 ItemElementName, [System.Xml.Serialization.XmlAttributeAttribute()] out System.UInt64 sequence, [System.Xml.Serialization.XmlAttributeAttribute()] [System.Xml.Serialization.XmlIgnoreAttribute()] out bool sequenceSpecified) {
        object[] results = this.Invoke("getDDI", new object[] {
                    Item,
                    ItemElementName});
        sequence = ((System.UInt64)(results[1]));
        sequenceSpecified = ((bool)(results[2]));
        return ((GetDDIResReturn)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BegingetDDI(object Item, ItemChoiceType137 ItemElementName, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("getDDI", new object[] {
                    Item,
                    ItemElementName}, callback, asyncState);
    }
    
    /// <remarks/>
    public GetDDIResReturn EndgetDDI(System.IAsyncResult asyncResult, out System.UInt64 sequence, out bool sequenceSpecified) {
        object[] results = this.EndInvoke(asyncResult);
        sequence = ((System.UInt64)(results[1]));
        sequenceSpecified = ((bool)(results[2]));
        return ((GetDDIResReturn)(results[0]));
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.cisco.com/AXLPort/removeDDI", RequestNamespace="http://www.cisco.com/AXL/API/1.0", ResponseNamespace="http://www.cisco.com/AXL/API/1.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string removeDDI([System.Xml.Serialization.XmlElementAttribute("name", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlElementAttribute("uuid", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")] string Item, [System.Xml.Serialization.XmlIgnoreAttribute()] ItemChoiceType138 ItemElementName, [System.Xml.Serialization.XmlAttributeAttribute()] ref System.UInt64 sequence, [System.Xml.Serialization.XmlAttributeAttribute()] [System.Xml.Serialization.XmlIgnoreAttribute()] ref bool sequenceSpecified) {
        object[] results = this.Invoke("removeDDI", new object[] {
                    Item,
                    ItemElementName,
                    sequence,
                    sequenceSpecified});
        sequence = ((System.UInt64)(results[1]));
        sequenceSpecified = ((bool)(results[2]));
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginremoveDDI(string Item, ItemChoiceType138 ItemElementName, System.UInt64 sequence, bool sequenceSpecified, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("removeDDI", new object[] {
                    Item,
                    ItemElementName,
                    sequence,
                    sequenceSpecified}, callback, asyncState);
    }
    
    /// <remarks/>
    public string EndremoveDDI(System.IAsyncResult asyncResult, out System.UInt64 sequence, out bool sequenceSpecified) {
        object[] results = this.EndInvoke(asyncResult);
        sequence = ((System.UInt64)(results[1]));
        sequenceSpecified = ((bool)(results[2]));
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.cisco.com/AXLPort/createAutogeneratedProfile", RequestNamespace="http://www.cisco.com/AXL/API/1.0", ResponseNamespace="http://www.cisco.com/AXL/API/1.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string createAutogeneratedProfile([System.Xml.Serialization.XmlElementAttribute("phoneId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlElementAttribute("phoneName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")] string Item, [System.Xml.Serialization.XmlIgnoreAttribute()] ItemChoiceType139 ItemElementName, [System.Xml.Serialization.XmlAttributeAttribute()] ref System.UInt64 sequence, [System.Xml.Serialization.XmlAttributeAttribute()] [System.Xml.Serialization.XmlIgnoreAttribute()] ref bool sequenceSpecified) {
        object[] results = this.Invoke("createAutogeneratedProfile", new object[] {
                    Item,
                    ItemElementName,
                    sequence,
                    sequenceSpecified});
        sequence = ((System.UInt64)(results[1]));
        sequenceSpecified = ((bool)(results[2]));
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BegincreateAutogeneratedProfile(string Item, ItemChoiceType139 ItemElementName, System.UInt64 sequence, bool sequenceSpecified, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("createAutogeneratedProfile", new object[] {
                    Item,
                    ItemElementName,
                    sequence,
                    sequenceSpecified}, callback, asyncState);
    }
    
    /// <remarks/>
    public string EndcreateAutogeneratedProfile(System.IAsyncResult asyncResult, out System.UInt64 sequence, out bool sequenceSpecified) {
        object[] results = this.EndInvoke(asyncResult);
        sequence = ((System.UInt64)(results[1]));
        sequenceSpecified = ((bool)(results[2]));
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.cisco.com/AXLPort/listPhoneByName", RequestNamespace="http://www.cisco.com/AXL/API/1.0", ResponseNamespace="http://www.cisco.com/AXL/API/1.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    [return: System.Xml.Serialization.XmlArrayAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [return: System.Xml.Serialization.XmlArrayItemAttribute("phone", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
    public ListPhoneByNameResPhone[] listPhoneByName([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string searchString, [System.Xml.Serialization.XmlAttributeAttribute()] ref System.UInt64 sequence, [System.Xml.Serialization.XmlAttributeAttribute()] [System.Xml.Serialization.XmlIgnoreAttribute()] ref bool sequenceSpecified) {
        object[] results = this.Invoke("listPhoneByName", new object[] {
                    searchString,
                    sequence,
                    sequenceSpecified});
        sequence = ((System.UInt64)(results[1]));
        sequenceSpecified = ((bool)(results[2]));
        return ((ListPhoneByNameResPhone[])(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginlistPhoneByName(string searchString, System.UInt64 sequence, bool sequenceSpecified, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("listPhoneByName", new object[] {
                    searchString,
                    sequence,
                    sequenceSpecified}, callback, asyncState);
    }
    
    /// <remarks/>
    public ListPhoneByNameResPhone[] EndlistPhoneByName(System.IAsyncResult asyncResult, out System.UInt64 sequence, out bool sequenceSpecified) {
        object[] results = this.EndInvoke(asyncResult);
        sequence = ((System.UInt64)(results[1]));
        sequenceSpecified = ((bool)(results[2]));
        return ((ListPhoneByNameResPhone[])(results[0]));
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.cisco.com/AXLPort/listPhoneByDescription", RequestNamespace="http://www.cisco.com/AXL/API/1.0", ResponseNamespace="http://www.cisco.com/AXL/API/1.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    [return: System.Xml.Serialization.XmlArrayAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [return: System.Xml.Serialization.XmlArrayItemAttribute("phone", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
    public ListPhoneByDescriptionResPhone[] listPhoneByDescription([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string searchString, [System.Xml.Serialization.XmlAttributeAttribute()] ref System.UInt64 sequence, [System.Xml.Serialization.XmlAttributeAttribute()] [System.Xml.Serialization.XmlIgnoreAttribute()] ref bool sequenceSpecified) {
        object[] results = this.Invoke("listPhoneByDescription", new object[] {
                    searchString,
                    sequence,
                    sequenceSpecified});
        sequence = ((System.UInt64)(results[1]));
        sequenceSpecified = ((bool)(results[2]));
        return ((ListPhoneByDescriptionResPhone[])(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginlistPhoneByDescription(string searchString, System.UInt64 sequence, bool sequenceSpecified, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("listPhoneByDescription", new object[] {
                    searchString,
                    sequence,
                    sequenceSpecified}, callback, asyncState);
    }
    
    /// <remarks/>
    public ListPhoneByDescriptionResPhone[] EndlistPhoneByDescription(System.IAsyncResult asyncResult, out System.UInt64 sequence, out bool sequenceSpecified) {
        object[] results = this.EndInvoke(asyncResult);
        sequence = ((System.UInt64)(results[1]));
        sequenceSpecified = ((bool)(results[2]));
        return ((ListPhoneByDescriptionResPhone[])(results[0]));
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.cisco.com/AXLPort/listUserByName", RequestNamespace="http://www.cisco.com/AXL/API/1.0", ResponseNamespace="http://www.cisco.com/AXL/API/1.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    [return: System.Xml.Serialization.XmlArrayAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [return: System.Xml.Serialization.XmlArrayItemAttribute("user", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
    public ListUserByNameResUser[] listUserByName([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string firstname, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string lastname, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int searchLimit, [System.Xml.Serialization.XmlAttributeAttribute()] ref System.UInt64 sequence, [System.Xml.Serialization.XmlAttributeAttribute()] [System.Xml.Serialization.XmlIgnoreAttribute()] ref bool sequenceSpecified) {
        object[] results = this.Invoke("listUserByName", new object[] {
                    firstname,
                    lastname,
                    searchLimit,
                    sequence,
                    sequenceSpecified});
        sequence = ((System.UInt64)(results[1]));
        sequenceSpecified = ((bool)(results[2]));
        return ((ListUserByNameResUser[])(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginlistUserByName(string firstname, string lastname, int searchLimit, System.UInt64 sequence, bool sequenceSpecified, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("listUserByName", new object[] {
                    firstname,
                    lastname,
                    searchLimit,
                    sequence,
                    sequenceSpecified}, callback, asyncState);
    }
    
    /// <remarks/>
    public ListUserByNameResUser[] EndlistUserByName(System.IAsyncResult asyncResult, out System.UInt64 sequence, out bool sequenceSpecified) {
        object[] results = this.EndInvoke(asyncResult);
        sequence = ((System.UInt64)(results[1]));
        sequenceSpecified = ((bool)(results[2]));
        return ((ListUserByNameResUser[])(results[0]));
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.cisco.com/AXLPort/listRoutePlanByType", RequestNamespace="http://www.cisco.com/AXL/API/1.0", ResponseNamespace="http://www.cisco.com/AXL/API/1.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    [return: System.Xml.Serialization.XmlArrayAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [return: System.Xml.Serialization.XmlArrayItemAttribute("routePlan", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
    public ListRoutePlanByTypeResRoutePlan[] listRoutePlanByType([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] XPatternUsage usage, [System.Xml.Serialization.XmlAttributeAttribute()] ref System.UInt64 sequence, [System.Xml.Serialization.XmlAttributeAttribute()] [System.Xml.Serialization.XmlIgnoreAttribute()] ref bool sequenceSpecified) {
        object[] results = this.Invoke("listRoutePlanByType", new object[] {
                    usage,
                    sequence,
                    sequenceSpecified});
        sequence = ((System.UInt64)(results[1]));
        sequenceSpecified = ((bool)(results[2]));
        return ((ListRoutePlanByTypeResRoutePlan[])(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginlistRoutePlanByType(XPatternUsage usage, System.UInt64 sequence, bool sequenceSpecified, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("listRoutePlanByType", new object[] {
                    usage,
                    sequence,
                    sequenceSpecified}, callback, asyncState);
    }
    
    /// <remarks/>
    public ListRoutePlanByTypeResRoutePlan[] EndlistRoutePlanByType(System.IAsyncResult asyncResult, out System.UInt64 sequence, out bool sequenceSpecified) {
        object[] results = this.EndInvoke(asyncResult);
        sequence = ((System.UInt64)(results[1]));
        sequenceSpecified = ((bool)(results[2]));
        return ((ListRoutePlanByTypeResRoutePlan[])(results[0]));
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.cisco.com/AXLPort/getNumDevices", RequestNamespace="http://www.cisco.com/AXL/API/1.0", ResponseNamespace="http://www.cisco.com/AXL/API/1.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="nonNegativeInteger")]
    public string getNumDevices([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] XClass @class, [System.Xml.Serialization.XmlAttributeAttribute()] ref System.UInt64 sequence, [System.Xml.Serialization.XmlAttributeAttribute()] [System.Xml.Serialization.XmlIgnoreAttribute()] ref bool sequenceSpecified) {
        object[] results = this.Invoke("getNumDevices", new object[] {
                    @class,
                    sequence,
                    sequenceSpecified});
        sequence = ((System.UInt64)(results[1]));
        sequenceSpecified = ((bool)(results[2]));
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BegingetNumDevices(XClass @class, System.UInt64 sequence, bool sequenceSpecified, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("getNumDevices", new object[] {
                    @class,
                    sequence,
                    sequenceSpecified}, callback, asyncState);
    }
    
    /// <remarks/>
    public string EndgetNumDevices(System.IAsyncResult asyncResult, out System.UInt64 sequence, out bool sequenceSpecified) {
        object[] results = this.EndInvoke(asyncResult);
        sequence = ((System.UInt64)(results[1]));
        sequenceSpecified = ((bool)(results[2]));
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.cisco.com/AXLPort/listServiceParameters", RequestNamespace="http://www.cisco.com/AXL/API/1.0", ResponseNamespace="http://www.cisco.com/AXL/API/1.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    [return: System.Xml.Serialization.XmlArrayAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [return: System.Xml.Serialization.XmlArrayItemAttribute("param", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
    public ListServiceParametersResParam[] listServiceParameters([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string nodeName, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] XService serviceType, [System.Xml.Serialization.XmlAttributeAttribute()] ref System.UInt64 sequence, [System.Xml.Serialization.XmlAttributeAttribute()] [System.Xml.Serialization.XmlIgnoreAttribute()] ref bool sequenceSpecified) {
        object[] results = this.Invoke("listServiceParameters", new object[] {
                    nodeName,
                    serviceType,
                    sequence,
                    sequenceSpecified});
        sequence = ((System.UInt64)(results[1]));
        sequenceSpecified = ((bool)(results[2]));
        return ((ListServiceParametersResParam[])(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginlistServiceParameters(string nodeName, XService serviceType, System.UInt64 sequence, bool sequenceSpecified, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("listServiceParameters", new object[] {
                    nodeName,
                    serviceType,
                    sequence,
                    sequenceSpecified}, callback, asyncState);
    }
    
    /// <remarks/>
    public ListServiceParametersResParam[] EndlistServiceParameters(System.IAsyncResult asyncResult, out System.UInt64 sequence, out bool sequenceSpecified) {
        object[] results = this.EndInvoke(asyncResult);
        sequence = ((System.UInt64)(results[1]));
        sequenceSpecified = ((bool)(results[2]));
        return ((ListServiceParametersResParam[])(results[0]));
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.cisco.com/AXLPort/listCSSByName", RequestNamespace="http://www.cisco.com/AXL/API/1.0", ResponseNamespace="http://www.cisco.com/AXL/API/1.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    [return: System.Xml.Serialization.XmlArrayAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [return: System.Xml.Serialization.XmlArrayItemAttribute("callingSearchSpace", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
    public XCallingSearchSpace[] listCSSByName([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string searchString, [System.Xml.Serialization.XmlAttributeAttribute()] ref System.UInt64 sequence, [System.Xml.Serialization.XmlAttributeAttribute()] [System.Xml.Serialization.XmlIgnoreAttribute()] ref bool sequenceSpecified) {
        object[] results = this.Invoke("listCSSByName", new object[] {
                    searchString,
                    sequence,
                    sequenceSpecified});
        sequence = ((System.UInt64)(results[1]));
        sequenceSpecified = ((bool)(results[2]));
        return ((XCallingSearchSpace[])(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginlistCSSByName(string searchString, System.UInt64 sequence, bool sequenceSpecified, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("listCSSByName", new object[] {
                    searchString,
                    sequence,
                    sequenceSpecified}, callback, asyncState);
    }
    
    /// <remarks/>
    public XCallingSearchSpace[] EndlistCSSByName(System.IAsyncResult asyncResult, out System.UInt64 sequence, out bool sequenceSpecified) {
        object[] results = this.EndInvoke(asyncResult);
        sequence = ((System.UInt64)(results[1]));
        sequenceSpecified = ((bool)(results[2]));
        return ((XCallingSearchSpace[])(results[0]));
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.cisco.com/AXLPort/addDevicePool", RequestNamespace="http://www.cisco.com/AXL/API/1.0", ResponseNamespace="http://www.cisco.com/AXL/API/1.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string addDevicePool([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] XDevicePool devicePool, [System.Xml.Serialization.XmlAttributeAttribute()] ref System.UInt64 sequence, [System.Xml.Serialization.XmlAttributeAttribute()] [System.Xml.Serialization.XmlIgnoreAttribute()] ref bool sequenceSpecified) {
        object[] results = this.Invoke("addDevicePool", new object[] {
                    devicePool,
                    sequence,
                    sequenceSpecified});
        sequence = ((System.UInt64)(results[1]));
        sequenceSpecified = ((bool)(results[2]));
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginaddDevicePool(XDevicePool devicePool, System.UInt64 sequence, bool sequenceSpecified, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("addDevicePool", new object[] {
                    devicePool,
                    sequence,
                    sequenceSpecified}, callback, asyncState);
    }
    
    /// <remarks/>
    public string EndaddDevicePool(System.IAsyncResult asyncResult, out System.UInt64 sequence, out bool sequenceSpecified) {
        object[] results = this.EndInvoke(asyncResult);
        sequence = ((System.UInt64)(results[1]));
        sequenceSpecified = ((bool)(results[2]));
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.cisco.com/AXLPort/updateDevicePool", RequestNamespace="http://www.cisco.com/AXL/API/1.0", ResponseNamespace="http://www.cisco.com/AXL/API/1.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string updateDevicePool(
                [System.Xml.Serialization.XmlElementAttribute("name", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlElementAttribute("uuid", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")] string Item, 
                [System.Xml.Serialization.XmlIgnoreAttribute()] ItemChoiceType140 ItemElementName, 
                [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string newName, 
                [System.Xml.Serialization.XmlElementAttribute("autoSearchSpaceName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] [System.Xml.Serialization.XmlElementAttribute("autoSearchSpaceId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] [System.Xml.Serialization.XmlChoiceIdentifierAttribute("Item1ElementName")] string Item1, 
                [System.Xml.Serialization.XmlIgnoreAttribute()] Item1ChoiceType32 Item1ElementName, 
                [System.Xml.Serialization.XmlElementAttribute("dateTimeSettingId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlElementAttribute("dateTimeSettingName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlChoiceIdentifierAttribute("Item2ElementName")] string Item2, 
                [System.Xml.Serialization.XmlIgnoreAttribute()] Item2ChoiceType22 Item2ElementName, 
                [System.Xml.Serialization.XmlElementAttribute("callManagerGroupId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlElementAttribute("callManagerGroupName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlChoiceIdentifierAttribute("Item3ElementName")] string Item3, 
                [System.Xml.Serialization.XmlIgnoreAttribute()] Item3ChoiceType18 Item3ElementName, 
                [System.Xml.Serialization.XmlElementAttribute("mediaResourceListId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] [System.Xml.Serialization.XmlElementAttribute("mediaResourceListName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] [System.Xml.Serialization.XmlChoiceIdentifierAttribute("Item4ElementName")] string Item4, 
                [System.Xml.Serialization.XmlIgnoreAttribute()] Item4ChoiceType16 Item4ElementName, 
                [System.Xml.Serialization.XmlElementAttribute("regionId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlElementAttribute("regionName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlChoiceIdentifierAttribute("Item5ElementName")] string Item5, 
                [System.Xml.Serialization.XmlIgnoreAttribute()] Item5ChoiceType13 Item5ElementName, 
                [System.Xml.Serialization.XmlElementAttribute("softkeyTemplateName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlElementAttribute("softkeyTemplateId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlChoiceIdentifierAttribute("Item6ElementName")] string Item6, 
                [System.Xml.Serialization.XmlIgnoreAttribute()] Item6ChoiceType9 Item6ElementName, 
                [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] XCountry networkLocale, 
                [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool networkLocaleSpecified, 
                [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] XUserLocale userLocale, 
                [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool userLocaleSpecified, 
                [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="integer")] string networkHoldMOHAudioSourceId, 
                [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="integer")] string userHoldMOHAudioSourceId, 
                [System.Xml.Serialization.XmlElementAttribute("srstName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlElementAttribute("srstInfoId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlChoiceIdentifierAttribute("Item7ElementName")] string Item7, 
                [System.Xml.Serialization.XmlIgnoreAttribute()] Item7ChoiceType3 Item7ElementName, 
                [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int mlppDomainId, 
                [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool mlppDomainIdSpecified, 
                [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] XStatus mlppIndicationStatus, 
                [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool mlppIndicationStatusSpecified, 
                [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] XPreemption preemption, 
                [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool preemptionSpecified, 
                [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int connectionMonitorDuration, 
                [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool connectionMonitorDurationSpecified, 
                [System.Xml.Serialization.XmlAttributeAttribute()] ref System.UInt64 sequence, 
                [System.Xml.Serialization.XmlAttributeAttribute()] [System.Xml.Serialization.XmlIgnoreAttribute()] ref bool sequenceSpecified) {
        object[] results = this.Invoke("updateDevicePool", new object[] {
                    Item,
                    ItemElementName,
                    newName,
                    Item1,
                    Item1ElementName,
                    Item2,
                    Item2ElementName,
                    Item3,
                    Item3ElementName,
                    Item4,
                    Item4ElementName,
                    Item5,
                    Item5ElementName,
                    Item6,
                    Item6ElementName,
                    networkLocale,
                    networkLocaleSpecified,
                    userLocale,
                    userLocaleSpecified,
                    networkHoldMOHAudioSourceId,
                    userHoldMOHAudioSourceId,
                    Item7,
                    Item7ElementName,
                    mlppDomainId,
                    mlppDomainIdSpecified,
                    mlppIndicationStatus,
                    mlppIndicationStatusSpecified,
                    preemption,
                    preemptionSpecified,
                    connectionMonitorDuration,
                    connectionMonitorDurationSpecified,
                    sequence,
                    sequenceSpecified});
        sequence = ((System.UInt64)(results[1]));
        sequenceSpecified = ((bool)(results[2]));
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginupdateDevicePool(
                string Item, 
                ItemChoiceType140 ItemElementName, 
                string newName, 
                string Item1, 
                Item1ChoiceType32 Item1ElementName, 
                string Item2, 
                Item2ChoiceType22 Item2ElementName, 
                string Item3, 
                Item3ChoiceType18 Item3ElementName, 
                string Item4, 
                Item4ChoiceType16 Item4ElementName, 
                string Item5, 
                Item5ChoiceType13 Item5ElementName, 
                string Item6, 
                Item6ChoiceType9 Item6ElementName, 
                XCountry networkLocale, 
                bool networkLocaleSpecified, 
                XUserLocale userLocale, 
                bool userLocaleSpecified, 
                string networkHoldMOHAudioSourceId, 
                string userHoldMOHAudioSourceId, 
                string Item7, 
                Item7ChoiceType3 Item7ElementName, 
                int mlppDomainId, 
                bool mlppDomainIdSpecified, 
                XStatus mlppIndicationStatus, 
                bool mlppIndicationStatusSpecified, 
                XPreemption preemption, 
                bool preemptionSpecified, 
                int connectionMonitorDuration, 
                bool connectionMonitorDurationSpecified, 
                System.UInt64 sequence, 
                bool sequenceSpecified, 
                System.AsyncCallback callback, 
                object asyncState) {
        return this.BeginInvoke("updateDevicePool", new object[] {
                    Item,
                    ItemElementName,
                    newName,
                    Item1,
                    Item1ElementName,
                    Item2,
                    Item2ElementName,
                    Item3,
                    Item3ElementName,
                    Item4,
                    Item4ElementName,
                    Item5,
                    Item5ElementName,
                    Item6,
                    Item6ElementName,
                    networkLocale,
                    networkLocaleSpecified,
                    userLocale,
                    userLocaleSpecified,
                    networkHoldMOHAudioSourceId,
                    userHoldMOHAudioSourceId,
                    Item7,
                    Item7ElementName,
                    mlppDomainId,
                    mlppDomainIdSpecified,
                    mlppIndicationStatus,
                    mlppIndicationStatusSpecified,
                    preemption,
                    preemptionSpecified,
                    connectionMonitorDuration,
                    connectionMonitorDurationSpecified,
                    sequence,
                    sequenceSpecified}, callback, asyncState);
    }
    
    /// <remarks/>
    public string EndupdateDevicePool(System.IAsyncResult asyncResult, out System.UInt64 sequence, out bool sequenceSpecified) {
        object[] results = this.EndInvoke(asyncResult);
        sequence = ((System.UInt64)(results[1]));
        sequenceSpecified = ((bool)(results[2]));
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.cisco.com/AXLPort/getDevicePool", RequestNamespace="http://www.cisco.com/AXL/API/1.0", ResponseNamespace="http://www.cisco.com/AXL/API/1.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public GetDevicePoolResReturn getDevicePool([System.Xml.Serialization.XmlElementAttribute("name", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlElementAttribute("uuid", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")] string Item, [System.Xml.Serialization.XmlIgnoreAttribute()] ItemChoiceType141 ItemElementName, [System.Xml.Serialization.XmlAttributeAttribute()] ref System.UInt64 sequence, [System.Xml.Serialization.XmlAttributeAttribute()] [System.Xml.Serialization.XmlIgnoreAttribute()] ref bool sequenceSpecified) {
        object[] results = this.Invoke("getDevicePool", new object[] {
                    Item,
                    ItemElementName,
                    sequence,
                    sequenceSpecified});
        sequence = ((System.UInt64)(results[1]));
        sequenceSpecified = ((bool)(results[2]));
        return ((GetDevicePoolResReturn)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BegingetDevicePool(string Item, ItemChoiceType141 ItemElementName, System.UInt64 sequence, bool sequenceSpecified, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("getDevicePool", new object[] {
                    Item,
                    ItemElementName,
                    sequence,
                    sequenceSpecified}, callback, asyncState);
    }
    
    /// <remarks/>
    public GetDevicePoolResReturn EndgetDevicePool(System.IAsyncResult asyncResult, out System.UInt64 sequence, out bool sequenceSpecified) {
        object[] results = this.EndInvoke(asyncResult);
        sequence = ((System.UInt64)(results[1]));
        sequenceSpecified = ((bool)(results[2]));
        return ((GetDevicePoolResReturn)(results[0]));
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.cisco.com/AXLPort/removeDevicePool", RequestNamespace="http://www.cisco.com/AXL/API/1.0", ResponseNamespace="http://www.cisco.com/AXL/API/1.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string removeDevicePool([System.Xml.Serialization.XmlElementAttribute("name", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlElementAttribute("uuid", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")] string Item, [System.Xml.Serialization.XmlIgnoreAttribute()] ItemChoiceType142 ItemElementName, [System.Xml.Serialization.XmlAttributeAttribute()] ref System.UInt64 sequence, [System.Xml.Serialization.XmlAttributeAttribute()] [System.Xml.Serialization.XmlIgnoreAttribute()] ref bool sequenceSpecified) {
        object[] results = this.Invoke("removeDevicePool", new object[] {
                    Item,
                    ItemElementName,
                    sequence,
                    sequenceSpecified});
        sequence = ((System.UInt64)(results[1]));
        sequenceSpecified = ((bool)(results[2]));
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginremoveDevicePool(string Item, ItemChoiceType142 ItemElementName, System.UInt64 sequence, bool sequenceSpecified, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("removeDevicePool", new object[] {
                    Item,
                    ItemElementName,
                    sequence,
                    sequenceSpecified}, callback, asyncState);
    }
    
    /// <remarks/>
    public string EndremoveDevicePool(System.IAsyncResult asyncResult, out System.UInt64 sequence, out bool sequenceSpecified) {
        object[] results = this.EndInvoke(asyncResult);
        sequence = ((System.UInt64)(results[1]));
        sequenceSpecified = ((bool)(results[2]));
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.cisco.com/AXLPort/addCallManagerGroup", RequestNamespace="http://www.cisco.com/AXL/API/1.0", ResponseNamespace="http://www.cisco.com/AXL/API/1.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string addCallManagerGroup([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] XCallManagerGroup callManagerGroup, [System.Xml.Serialization.XmlAttributeAttribute()] ref System.UInt64 sequence, [System.Xml.Serialization.XmlAttributeAttribute()] [System.Xml.Serialization.XmlIgnoreAttribute()] ref bool sequenceSpecified) {
        object[] results = this.Invoke("addCallManagerGroup", new object[] {
                    callManagerGroup,
                    sequence,
                    sequenceSpecified});
        sequence = ((System.UInt64)(results[1]));
        sequenceSpecified = ((bool)(results[2]));
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginaddCallManagerGroup(XCallManagerGroup callManagerGroup, System.UInt64 sequence, bool sequenceSpecified, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("addCallManagerGroup", new object[] {
                    callManagerGroup,
                    sequence,
                    sequenceSpecified}, callback, asyncState);
    }
    
    /// <remarks/>
    public string EndaddCallManagerGroup(System.IAsyncResult asyncResult, out System.UInt64 sequence, out bool sequenceSpecified) {
        object[] results = this.EndInvoke(asyncResult);
        sequence = ((System.UInt64)(results[1]));
        sequenceSpecified = ((bool)(results[2]));
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.cisco.com/AXLPort/updateCallManagerGroup", RequestNamespace="http://www.cisco.com/AXL/API/1.0", ResponseNamespace="http://www.cisco.com/AXL/API/1.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string updateCallManagerGroup([System.Xml.Serialization.XmlElementAttribute("name", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlElementAttribute("uuid", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")] string Item, [System.Xml.Serialization.XmlIgnoreAttribute()] ItemChoiceType143 ItemElementName, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string newName, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] bool tftpDefault, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool tftpDefaultSpecified, [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlArrayItemAttribute("member", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)] XCallManagerMember[] members, [System.Xml.Serialization.XmlAttributeAttribute()] ref System.UInt64 sequence, [System.Xml.Serialization.XmlAttributeAttribute()] [System.Xml.Serialization.XmlIgnoreAttribute()] ref bool sequenceSpecified) {
        object[] results = this.Invoke("updateCallManagerGroup", new object[] {
                    Item,
                    ItemElementName,
                    newName,
                    tftpDefault,
                    tftpDefaultSpecified,
                    members,
                    sequence,
                    sequenceSpecified});
        sequence = ((System.UInt64)(results[1]));
        sequenceSpecified = ((bool)(results[2]));
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginupdateCallManagerGroup(string Item, ItemChoiceType143 ItemElementName, string newName, bool tftpDefault, bool tftpDefaultSpecified, XCallManagerMember[] members, System.UInt64 sequence, bool sequenceSpecified, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("updateCallManagerGroup", new object[] {
                    Item,
                    ItemElementName,
                    newName,
                    tftpDefault,
                    tftpDefaultSpecified,
                    members,
                    sequence,
                    sequenceSpecified}, callback, asyncState);
    }
    
    /// <remarks/>
    public string EndupdateCallManagerGroup(System.IAsyncResult asyncResult, out System.UInt64 sequence, out bool sequenceSpecified) {
        object[] results = this.EndInvoke(asyncResult);
        sequence = ((System.UInt64)(results[1]));
        sequenceSpecified = ((bool)(results[2]));
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.cisco.com/AXLPort/getCallManagerGroup", RequestNamespace="http://www.cisco.com/AXL/API/1.0", ResponseNamespace="http://www.cisco.com/AXL/API/1.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public GetCallManagerGroupResReturn getCallManagerGroup([System.Xml.Serialization.XmlElementAttribute("name", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlElementAttribute("uuid", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")] string Item, [System.Xml.Serialization.XmlIgnoreAttribute()] ItemChoiceType144 ItemElementName, [System.Xml.Serialization.XmlAttributeAttribute()] ref System.UInt64 sequence, [System.Xml.Serialization.XmlAttributeAttribute()] [System.Xml.Serialization.XmlIgnoreAttribute()] ref bool sequenceSpecified) {
        object[] results = this.Invoke("getCallManagerGroup", new object[] {
                    Item,
                    ItemElementName,
                    sequence,
                    sequenceSpecified});
        sequence = ((System.UInt64)(results[1]));
        sequenceSpecified = ((bool)(results[2]));
        return ((GetCallManagerGroupResReturn)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BegingetCallManagerGroup(string Item, ItemChoiceType144 ItemElementName, System.UInt64 sequence, bool sequenceSpecified, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("getCallManagerGroup", new object[] {
                    Item,
                    ItemElementName,
                    sequence,
                    sequenceSpecified}, callback, asyncState);
    }
    
    /// <remarks/>
    public GetCallManagerGroupResReturn EndgetCallManagerGroup(System.IAsyncResult asyncResult, out System.UInt64 sequence, out bool sequenceSpecified) {
        object[] results = this.EndInvoke(asyncResult);
        sequence = ((System.UInt64)(results[1]));
        sequenceSpecified = ((bool)(results[2]));
        return ((GetCallManagerGroupResReturn)(results[0]));
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.cisco.com/AXLPort/removeCallManagerGroup", RequestNamespace="http://www.cisco.com/AXL/API/1.0", ResponseNamespace="http://www.cisco.com/AXL/API/1.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string removeCallManagerGroup([System.Xml.Serialization.XmlElementAttribute("name", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlElementAttribute("uuid", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")] string Item, [System.Xml.Serialization.XmlIgnoreAttribute()] ItemChoiceType145 ItemElementName, [System.Xml.Serialization.XmlAttributeAttribute()] ref System.UInt64 sequence, [System.Xml.Serialization.XmlAttributeAttribute()] [System.Xml.Serialization.XmlIgnoreAttribute()] ref bool sequenceSpecified) {
        object[] results = this.Invoke("removeCallManagerGroup", new object[] {
                    Item,
                    ItemElementName,
                    sequence,
                    sequenceSpecified});
        sequence = ((System.UInt64)(results[1]));
        sequenceSpecified = ((bool)(results[2]));
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginremoveCallManagerGroup(string Item, ItemChoiceType145 ItemElementName, System.UInt64 sequence, bool sequenceSpecified, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("removeCallManagerGroup", new object[] {
                    Item,
                    ItemElementName,
                    sequence,
                    sequenceSpecified}, callback, asyncState);
    }
    
    /// <remarks/>
    public string EndremoveCallManagerGroup(System.IAsyncResult asyncResult, out System.UInt64 sequence, out bool sequenceSpecified) {
        object[] results = this.EndInvoke(asyncResult);
        sequence = ((System.UInt64)(results[1]));
        sequenceSpecified = ((bool)(results[2]));
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.cisco.com/AXLPort/addVoiceMailPort", RequestNamespace="http://www.cisco.com/AXL/API/1.0", ResponseNamespace="http://www.cisco.com/AXL/API/1.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string addVoiceMailPort([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] XVoiceMailPort voiceMailPort, [System.Xml.Serialization.XmlAttributeAttribute()] ref System.UInt64 sequence, [System.Xml.Serialization.XmlAttributeAttribute()] [System.Xml.Serialization.XmlIgnoreAttribute()] ref bool sequenceSpecified) {
        object[] results = this.Invoke("addVoiceMailPort", new object[] {
                    voiceMailPort,
                    sequence,
                    sequenceSpecified});
        sequence = ((System.UInt64)(results[1]));
        sequenceSpecified = ((bool)(results[2]));
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginaddVoiceMailPort(XVoiceMailPort voiceMailPort, System.UInt64 sequence, bool sequenceSpecified, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("addVoiceMailPort", new object[] {
                    voiceMailPort,
                    sequence,
                    sequenceSpecified}, callback, asyncState);
    }
    
    /// <remarks/>
    public string EndaddVoiceMailPort(System.IAsyncResult asyncResult, out System.UInt64 sequence, out bool sequenceSpecified) {
        object[] results = this.EndInvoke(asyncResult);
        sequence = ((System.UInt64)(results[1]));
        sequenceSpecified = ((bool)(results[2]));
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.cisco.com/AXLPort/updateVoiceMailPort", RequestNamespace="http://www.cisco.com/AXL/API/1.0", ResponseNamespace="http://www.cisco.com/AXL/API/1.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string updateVoiceMailPort(
                [System.Xml.Serialization.XmlElementAttribute("name", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlElementAttribute("uuid", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")] string Item, 
                [System.Xml.Serialization.XmlIgnoreAttribute()] ItemChoiceType146 ItemElementName, 
                [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string newName, 
                [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string description, 
                [System.Xml.Serialization.XmlElementAttribute("callingSearchSpaceId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlElementAttribute("callingSearchSpaceName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="Name")] [System.Xml.Serialization.XmlChoiceIdentifierAttribute("Item1ElementName")] string Item1, 
                [System.Xml.Serialization.XmlIgnoreAttribute()] Item1ChoiceType33 Item1ElementName, 
                [System.Xml.Serialization.XmlElementAttribute("devicePoolName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlElementAttribute("devicePoolId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlChoiceIdentifierAttribute("Item2ElementName")] string Item2, 
                [System.Xml.Serialization.XmlIgnoreAttribute()] Item2ChoiceType23 Item2ElementName, 
                [System.Xml.Serialization.XmlElementAttribute("locationName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="Name")] [System.Xml.Serialization.XmlElementAttribute("locationId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlChoiceIdentifierAttribute("Item3ElementName")] string Item3, 
                [System.Xml.Serialization.XmlIgnoreAttribute()] Item3ChoiceType19 Item3ElementName, 
                [System.Xml.Serialization.XmlElementAttribute("mediaResourceListId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlElementAttribute("mediaResourceListName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="Name")] [System.Xml.Serialization.XmlChoiceIdentifierAttribute("Item4ElementName")] string Item4, 
                [System.Xml.Serialization.XmlIgnoreAttribute()] Item4ChoiceType17 Item4ElementName, 
                [System.Xml.Serialization.XmlElementAttribute("automatedAlternateRoutingCSSId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlElementAttribute("automatedAlternateRoutingCSSName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlChoiceIdentifierAttribute("Item5ElementName")] string Item5, 
                [System.Xml.Serialization.XmlIgnoreAttribute()] Item5ChoiceType14 Item5ElementName, 
                [System.Xml.Serialization.XmlElementAttribute("aarNeighborhoodName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlElementAttribute("aarNeighborhoodId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlChoiceIdentifierAttribute("Item6ElementName")] string Item6, 
                [System.Xml.Serialization.XmlIgnoreAttribute()] Item6ChoiceType10 Item6ElementName, 
                [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] XLoadInformation loadInformation, 
                [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] System.Xml.XmlElement vendorConfig, 
                [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] bool traceFlag, 
                [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool traceFlagSpecified, 
                [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] XLine line, 
                [System.Xml.Serialization.XmlAttributeAttribute()] ref System.UInt64 sequence, 
                [System.Xml.Serialization.XmlAttributeAttribute()] [System.Xml.Serialization.XmlIgnoreAttribute()] ref bool sequenceSpecified) {
        object[] results = this.Invoke("updateVoiceMailPort", new object[] {
                    Item,
                    ItemElementName,
                    newName,
                    description,
                    Item1,
                    Item1ElementName,
                    Item2,
                    Item2ElementName,
                    Item3,
                    Item3ElementName,
                    Item4,
                    Item4ElementName,
                    Item5,
                    Item5ElementName,
                    Item6,
                    Item6ElementName,
                    loadInformation,
                    vendorConfig,
                    traceFlag,
                    traceFlagSpecified,
                    line,
                    sequence,
                    sequenceSpecified});
        sequence = ((System.UInt64)(results[1]));
        sequenceSpecified = ((bool)(results[2]));
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginupdateVoiceMailPort(
                string Item, 
                ItemChoiceType146 ItemElementName, 
                string newName, 
                string description, 
                string Item1, 
                Item1ChoiceType33 Item1ElementName, 
                string Item2, 
                Item2ChoiceType23 Item2ElementName, 
                string Item3, 
                Item3ChoiceType19 Item3ElementName, 
                string Item4, 
                Item4ChoiceType17 Item4ElementName, 
                string Item5, 
                Item5ChoiceType14 Item5ElementName, 
                string Item6, 
                Item6ChoiceType10 Item6ElementName, 
                XLoadInformation loadInformation, 
                System.Xml.XmlElement vendorConfig, 
                bool traceFlag, 
                bool traceFlagSpecified, 
                XLine line, 
                System.UInt64 sequence, 
                bool sequenceSpecified, 
                System.AsyncCallback callback, 
                object asyncState) {
        return this.BeginInvoke("updateVoiceMailPort", new object[] {
                    Item,
                    ItemElementName,
                    newName,
                    description,
                    Item1,
                    Item1ElementName,
                    Item2,
                    Item2ElementName,
                    Item3,
                    Item3ElementName,
                    Item4,
                    Item4ElementName,
                    Item5,
                    Item5ElementName,
                    Item6,
                    Item6ElementName,
                    loadInformation,
                    vendorConfig,
                    traceFlag,
                    traceFlagSpecified,
                    line,
                    sequence,
                    sequenceSpecified}, callback, asyncState);
    }
    
    /// <remarks/>
    public string EndupdateVoiceMailPort(System.IAsyncResult asyncResult, out System.UInt64 sequence, out bool sequenceSpecified) {
        object[] results = this.EndInvoke(asyncResult);
        sequence = ((System.UInt64)(results[1]));
        sequenceSpecified = ((bool)(results[2]));
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.cisco.com/AXLPort/getVoiceMailPort", RequestNamespace="http://www.cisco.com/AXL/API/1.0", ResponseNamespace="http://www.cisco.com/AXL/API/1.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public GetVoiceMailPortResReturn getVoiceMailPort([System.Xml.Serialization.XmlElementAttribute("name", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlElementAttribute("uuid", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")] string Item, [System.Xml.Serialization.XmlIgnoreAttribute()] ItemChoiceType147 ItemElementName, [System.Xml.Serialization.XmlAttributeAttribute()] ref System.UInt64 sequence, [System.Xml.Serialization.XmlAttributeAttribute()] [System.Xml.Serialization.XmlIgnoreAttribute()] ref bool sequenceSpecified) {
        object[] results = this.Invoke("getVoiceMailPort", new object[] {
                    Item,
                    ItemElementName,
                    sequence,
                    sequenceSpecified});
        sequence = ((System.UInt64)(results[1]));
        sequenceSpecified = ((bool)(results[2]));
        return ((GetVoiceMailPortResReturn)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BegingetVoiceMailPort(string Item, ItemChoiceType147 ItemElementName, System.UInt64 sequence, bool sequenceSpecified, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("getVoiceMailPort", new object[] {
                    Item,
                    ItemElementName,
                    sequence,
                    sequenceSpecified}, callback, asyncState);
    }
    
    /// <remarks/>
    public GetVoiceMailPortResReturn EndgetVoiceMailPort(System.IAsyncResult asyncResult, out System.UInt64 sequence, out bool sequenceSpecified) {
        object[] results = this.EndInvoke(asyncResult);
        sequence = ((System.UInt64)(results[1]));
        sequenceSpecified = ((bool)(results[2]));
        return ((GetVoiceMailPortResReturn)(results[0]));
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.cisco.com/AXLPort/removeVoiceMailPort", RequestNamespace="http://www.cisco.com/AXL/API/1.0", ResponseNamespace="http://www.cisco.com/AXL/API/1.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string removeVoiceMailPort([System.Xml.Serialization.XmlElementAttribute("name", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlElementAttribute("uuid", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")] string Item, [System.Xml.Serialization.XmlIgnoreAttribute()] ItemChoiceType148 ItemElementName, [System.Xml.Serialization.XmlAttributeAttribute()] ref System.UInt64 sequence, [System.Xml.Serialization.XmlAttributeAttribute()] [System.Xml.Serialization.XmlIgnoreAttribute()] ref bool sequenceSpecified) {
        object[] results = this.Invoke("removeVoiceMailPort", new object[] {
                    Item,
                    ItemElementName,
                    sequence,
                    sequenceSpecified});
        sequence = ((System.UInt64)(results[1]));
        sequenceSpecified = ((bool)(results[2]));
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginremoveVoiceMailPort(string Item, ItemChoiceType148 ItemElementName, System.UInt64 sequence, bool sequenceSpecified, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("removeVoiceMailPort", new object[] {
                    Item,
                    ItemElementName,
                    sequence,
                    sequenceSpecified}, callback, asyncState);
    }
    
    /// <remarks/>
    public string EndremoveVoiceMailPort(System.IAsyncResult asyncResult, out System.UInt64 sequence, out bool sequenceSpecified) {
        object[] results = this.EndInvoke(asyncResult);
        sequence = ((System.UInt64)(results[1]));
        sequenceSpecified = ((bool)(results[2]));
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.cisco.com/AXLPort/addGatewayEndpoint", RequestNamespace="http://www.cisco.com/AXL/API/1.0", ResponseNamespace="http://www.cisco.com/AXL/API/1.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string addGatewayEndpoint([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] XGateway gateway, [System.Xml.Serialization.XmlAttributeAttribute()] ref System.UInt64 sequence, [System.Xml.Serialization.XmlAttributeAttribute()] [System.Xml.Serialization.XmlIgnoreAttribute()] ref bool sequenceSpecified) {
        object[] results = this.Invoke("addGatewayEndpoint", new object[] {
                    gateway,
                    sequence,
                    sequenceSpecified});
        sequence = ((System.UInt64)(results[1]));
        sequenceSpecified = ((bool)(results[2]));
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginaddGatewayEndpoint(XGateway gateway, System.UInt64 sequence, bool sequenceSpecified, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("addGatewayEndpoint", new object[] {
                    gateway,
                    sequence,
                    sequenceSpecified}, callback, asyncState);
    }
    
    /// <remarks/>
    public string EndaddGatewayEndpoint(System.IAsyncResult asyncResult, out System.UInt64 sequence, out bool sequenceSpecified) {
        object[] results = this.EndInvoke(asyncResult);
        sequence = ((System.UInt64)(results[1]));
        sequenceSpecified = ((bool)(results[2]));
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.cisco.com/AXLPort/updateGatewayEndpoint", RequestNamespace="http://www.cisco.com/AXL/API/1.0", ResponseNamespace="http://www.cisco.com/AXL/API/1.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string updateGatewayEndpoint(
                [System.Xml.Serialization.XmlElementAttribute("name", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlElementAttribute("uuid", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")] string Item, 
                [System.Xml.Serialization.XmlIgnoreAttribute()] ItemChoiceType149 ItemElementName, 
                [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string newName, 
                [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string description, 
                [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] XProtocolSide protocolSide, 
                [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool protocolSideSpecified, 
                [System.Xml.Serialization.XmlElementAttribute("callingSearchSpaceId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlElementAttribute("callingSearchSpaceName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="Name")] [System.Xml.Serialization.XmlChoiceIdentifierAttribute("Item1ElementName")] string Item1, 
                [System.Xml.Serialization.XmlIgnoreAttribute()] Item1ChoiceType34 Item1ElementName, 
                [System.Xml.Serialization.XmlElementAttribute("devicePoolName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlElementAttribute("devicePoolId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlChoiceIdentifierAttribute("Item2ElementName")] string Item2, 
                [System.Xml.Serialization.XmlIgnoreAttribute()] Item2ChoiceType24 Item2ElementName, 
                [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] XNetworkLocation networkLocation, 
                [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool networkLocationSpecified, 
                [System.Xml.Serialization.XmlElementAttribute("locationName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="Name")] [System.Xml.Serialization.XmlElementAttribute("locationId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlChoiceIdentifierAttribute("Item3ElementName")] string Item3, 
                [System.Xml.Serialization.XmlIgnoreAttribute()] Item3ChoiceType20 Item3ElementName, 
                [System.Xml.Serialization.XmlElementAttribute("mediaResourceListId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlElementAttribute("mediaResourceListName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="Name")] [System.Xml.Serialization.XmlChoiceIdentifierAttribute("Item4ElementName")] string Item4, 
                [System.Xml.Serialization.XmlIgnoreAttribute()] Item4ChoiceType18 Item4ElementName, 
                [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="nonNegativeInteger")] string networkHoldMOHAudioSourceId, 
                [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="nonNegativeInteger")] string userHoldMOHAudioSourceId, 
                [System.Xml.Serialization.XmlElementAttribute("automatedAlternateRoutingCSSId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlElementAttribute("automatedAlternateRoutingCSSName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlChoiceIdentifierAttribute("Item5ElementName")] string Item5, 
                [System.Xml.Serialization.XmlIgnoreAttribute()] Item5ChoiceType15 Item5ElementName, 
                [System.Xml.Serialization.XmlElementAttribute("aarNeighborhoodName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlElementAttribute("aarNeighborhoodId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlChoiceIdentifierAttribute("Item6ElementName")] string Item6, 
                [System.Xml.Serialization.XmlIgnoreAttribute()] Item6ChoiceType11 Item6ElementName, 
                [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] XLoadInformation loadInformation, 
                [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] System.Xml.XmlElement vendorConfig, 
                [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] bool traceFlag, 
                [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool traceFlagSpecified, 
                [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int mlppDomainId, 
                [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool mlppDomainIdSpecified, 
                [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] XStatus mlppIndicationStatus, 
                [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool mlppIndicationStatusSpecified, 
                [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] XPreemption preemption, 
                [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool preemptionSpecified, 
                [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] XCountry country, 
                [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool countrySpecified, 
                [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] XPacketCaptureMode packetCaptureMode, 
                [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool packetCaptureModeSpecified, 
                [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="positiveInteger")] string packetCaptureDuration, 
                [System.Xml.Serialization.XmlElementAttribute("pri", typeof(UpdateGatewayEndpointReqPri), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlElementAttribute("analog", typeof(UpdateGatewayEndpointReqAnalog), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlElementAttribute("bri", typeof(UpdateGatewayEndpointReqBri), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlElementAttribute("t1", typeof(UpdateGatewayEndpointReqT1), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] object Item7, 
                [System.Xml.Serialization.XmlAttributeAttribute()] ref System.UInt64 sequence, 
                [System.Xml.Serialization.XmlAttributeAttribute()] [System.Xml.Serialization.XmlIgnoreAttribute()] ref bool sequenceSpecified) {
        object[] results = this.Invoke("updateGatewayEndpoint", new object[] {
                    Item,
                    ItemElementName,
                    newName,
                    description,
                    protocolSide,
                    protocolSideSpecified,
                    Item1,
                    Item1ElementName,
                    Item2,
                    Item2ElementName,
                    networkLocation,
                    networkLocationSpecified,
                    Item3,
                    Item3ElementName,
                    Item4,
                    Item4ElementName,
                    networkHoldMOHAudioSourceId,
                    userHoldMOHAudioSourceId,
                    Item5,
                    Item5ElementName,
                    Item6,
                    Item6ElementName,
                    loadInformation,
                    vendorConfig,
                    traceFlag,
                    traceFlagSpecified,
                    mlppDomainId,
                    mlppDomainIdSpecified,
                    mlppIndicationStatus,
                    mlppIndicationStatusSpecified,
                    preemption,
                    preemptionSpecified,
                    country,
                    countrySpecified,
                    packetCaptureMode,
                    packetCaptureModeSpecified,
                    packetCaptureDuration,
                    Item7,
                    sequence,
                    sequenceSpecified});
        sequence = ((System.UInt64)(results[1]));
        sequenceSpecified = ((bool)(results[2]));
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginupdateGatewayEndpoint(
                string Item, 
                ItemChoiceType149 ItemElementName, 
                string newName, 
                string description, 
                XProtocolSide protocolSide, 
                bool protocolSideSpecified, 
                string Item1, 
                Item1ChoiceType34 Item1ElementName, 
                string Item2, 
                Item2ChoiceType24 Item2ElementName, 
                XNetworkLocation networkLocation, 
                bool networkLocationSpecified, 
                string Item3, 
                Item3ChoiceType20 Item3ElementName, 
                string Item4, 
                Item4ChoiceType18 Item4ElementName, 
                string networkHoldMOHAudioSourceId, 
                string userHoldMOHAudioSourceId, 
                string Item5, 
                Item5ChoiceType15 Item5ElementName, 
                string Item6, 
                Item6ChoiceType11 Item6ElementName, 
                XLoadInformation loadInformation, 
                System.Xml.XmlElement vendorConfig, 
                bool traceFlag, 
                bool traceFlagSpecified, 
                int mlppDomainId, 
                bool mlppDomainIdSpecified, 
                XStatus mlppIndicationStatus, 
                bool mlppIndicationStatusSpecified, 
                XPreemption preemption, 
                bool preemptionSpecified, 
                XCountry country, 
                bool countrySpecified, 
                XPacketCaptureMode packetCaptureMode, 
                bool packetCaptureModeSpecified, 
                string packetCaptureDuration, 
                object Item7, 
                System.UInt64 sequence, 
                bool sequenceSpecified, 
                System.AsyncCallback callback, 
                object asyncState) {
        return this.BeginInvoke("updateGatewayEndpoint", new object[] {
                    Item,
                    ItemElementName,
                    newName,
                    description,
                    protocolSide,
                    protocolSideSpecified,
                    Item1,
                    Item1ElementName,
                    Item2,
                    Item2ElementName,
                    networkLocation,
                    networkLocationSpecified,
                    Item3,
                    Item3ElementName,
                    Item4,
                    Item4ElementName,
                    networkHoldMOHAudioSourceId,
                    userHoldMOHAudioSourceId,
                    Item5,
                    Item5ElementName,
                    Item6,
                    Item6ElementName,
                    loadInformation,
                    vendorConfig,
                    traceFlag,
                    traceFlagSpecified,
                    mlppDomainId,
                    mlppDomainIdSpecified,
                    mlppIndicationStatus,
                    mlppIndicationStatusSpecified,
                    preemption,
                    preemptionSpecified,
                    country,
                    countrySpecified,
                    packetCaptureMode,
                    packetCaptureModeSpecified,
                    packetCaptureDuration,
                    Item7,
                    sequence,
                    sequenceSpecified}, callback, asyncState);
    }
    
    /// <remarks/>
    public string EndupdateGatewayEndpoint(System.IAsyncResult asyncResult, out System.UInt64 sequence, out bool sequenceSpecified) {
        object[] results = this.EndInvoke(asyncResult);
        sequence = ((System.UInt64)(results[1]));
        sequenceSpecified = ((bool)(results[2]));
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.cisco.com/AXLPort/getGatewayEndpoint", RequestNamespace="http://www.cisco.com/AXL/API/1.0", ResponseNamespace="http://www.cisco.com/AXL/API/1.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public GetGatewayEndpointResReturn getGatewayEndpoint([System.Xml.Serialization.XmlElementAttribute("name", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlElementAttribute("uuid", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")] string Item, [System.Xml.Serialization.XmlIgnoreAttribute()] ItemChoiceType150 ItemElementName, [System.Xml.Serialization.XmlAttributeAttribute()] ref System.UInt64 sequence, [System.Xml.Serialization.XmlAttributeAttribute()] [System.Xml.Serialization.XmlIgnoreAttribute()] ref bool sequenceSpecified) {
        object[] results = this.Invoke("getGatewayEndpoint", new object[] {
                    Item,
                    ItemElementName,
                    sequence,
                    sequenceSpecified});
        sequence = ((System.UInt64)(results[1]));
        sequenceSpecified = ((bool)(results[2]));
        return ((GetGatewayEndpointResReturn)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BegingetGatewayEndpoint(string Item, ItemChoiceType150 ItemElementName, System.UInt64 sequence, bool sequenceSpecified, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("getGatewayEndpoint", new object[] {
                    Item,
                    ItemElementName,
                    sequence,
                    sequenceSpecified}, callback, asyncState);
    }
    
    /// <remarks/>
    public GetGatewayEndpointResReturn EndgetGatewayEndpoint(System.IAsyncResult asyncResult, out System.UInt64 sequence, out bool sequenceSpecified) {
        object[] results = this.EndInvoke(asyncResult);
        sequence = ((System.UInt64)(results[1]));
        sequenceSpecified = ((bool)(results[2]));
        return ((GetGatewayEndpointResReturn)(results[0]));
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.cisco.com/AXLPort/removeGatewayEndpoint", RequestNamespace="http://www.cisco.com/AXL/API/1.0", ResponseNamespace="http://www.cisco.com/AXL/API/1.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string removeGatewayEndpoint([System.Xml.Serialization.XmlElementAttribute("name", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlElementAttribute("uuid", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")] string Item, [System.Xml.Serialization.XmlIgnoreAttribute()] ItemChoiceType151 ItemElementName, [System.Xml.Serialization.XmlAttributeAttribute()] ref System.UInt64 sequence, [System.Xml.Serialization.XmlAttributeAttribute()] [System.Xml.Serialization.XmlIgnoreAttribute()] ref bool sequenceSpecified) {
        object[] results = this.Invoke("removeGatewayEndpoint", new object[] {
                    Item,
                    ItemElementName,
                    sequence,
                    sequenceSpecified});
        sequence = ((System.UInt64)(results[1]));
        sequenceSpecified = ((bool)(results[2]));
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginremoveGatewayEndpoint(string Item, ItemChoiceType151 ItemElementName, System.UInt64 sequence, bool sequenceSpecified, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("removeGatewayEndpoint", new object[] {
                    Item,
                    ItemElementName,
                    sequence,
                    sequenceSpecified}, callback, asyncState);
    }
    
    /// <remarks/>
    public string EndremoveGatewayEndpoint(System.IAsyncResult asyncResult, out System.UInt64 sequence, out bool sequenceSpecified) {
        object[] results = this.EndInvoke(asyncResult);
        sequence = ((System.UInt64)(results[1]));
        sequenceSpecified = ((bool)(results[2]));
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.cisco.com/AXLPort/addRouteFilter", RequestNamespace="http://www.cisco.com/AXL/API/1.0", ResponseNamespace="http://www.cisco.com/AXL/API/1.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string addRouteFilter([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] XRouteFilter routeFilter, [System.Xml.Serialization.XmlAttributeAttribute()] ref System.UInt64 sequence, [System.Xml.Serialization.XmlAttributeAttribute()] [System.Xml.Serialization.XmlIgnoreAttribute()] ref bool sequenceSpecified) {
        object[] results = this.Invoke("addRouteFilter", new object[] {
                    routeFilter,
                    sequence,
                    sequenceSpecified});
        sequence = ((System.UInt64)(results[1]));
        sequenceSpecified = ((bool)(results[2]));
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginaddRouteFilter(XRouteFilter routeFilter, System.UInt64 sequence, bool sequenceSpecified, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("addRouteFilter", new object[] {
                    routeFilter,
                    sequence,
                    sequenceSpecified}, callback, asyncState);
    }
    
    /// <remarks/>
    public string EndaddRouteFilter(System.IAsyncResult asyncResult, out System.UInt64 sequence, out bool sequenceSpecified) {
        object[] results = this.EndInvoke(asyncResult);
        sequence = ((System.UInt64)(results[1]));
        sequenceSpecified = ((bool)(results[2]));
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.cisco.com/AXLPort/updateRouteFilter", RequestNamespace="http://www.cisco.com/AXL/API/1.0", ResponseNamespace="http://www.cisco.com/AXL/API/1.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string updateRouteFilter([System.Xml.Serialization.XmlElementAttribute("name", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlElementAttribute("uuid", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")] string Item, [System.Xml.Serialization.XmlIgnoreAttribute()] ItemChoiceType152 ItemElementName, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string newName, [System.Xml.Serialization.XmlElementAttribute("dialPlanName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="Name")] [System.Xml.Serialization.XmlElementAttribute("dialPlanId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlChoiceIdentifierAttribute("Item1ElementName")] string Item1, [System.Xml.Serialization.XmlIgnoreAttribute()] Item1ChoiceType35 Item1ElementName, [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlArrayItemAttribute("member", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)] XRouteFilterMember[] members, [System.Xml.Serialization.XmlAttributeAttribute()] ref System.UInt64 sequence, [System.Xml.Serialization.XmlAttributeAttribute()] [System.Xml.Serialization.XmlIgnoreAttribute()] ref bool sequenceSpecified) {
        object[] results = this.Invoke("updateRouteFilter", new object[] {
                    Item,
                    ItemElementName,
                    newName,
                    Item1,
                    Item1ElementName,
                    members,
                    sequence,
                    sequenceSpecified});
        sequence = ((System.UInt64)(results[1]));
        sequenceSpecified = ((bool)(results[2]));
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginupdateRouteFilter(string Item, ItemChoiceType152 ItemElementName, string newName, string Item1, Item1ChoiceType35 Item1ElementName, XRouteFilterMember[] members, System.UInt64 sequence, bool sequenceSpecified, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("updateRouteFilter", new object[] {
                    Item,
                    ItemElementName,
                    newName,
                    Item1,
                    Item1ElementName,
                    members,
                    sequence,
                    sequenceSpecified}, callback, asyncState);
    }
    
    /// <remarks/>
    public string EndupdateRouteFilter(System.IAsyncResult asyncResult, out System.UInt64 sequence, out bool sequenceSpecified) {
        object[] results = this.EndInvoke(asyncResult);
        sequence = ((System.UInt64)(results[1]));
        sequenceSpecified = ((bool)(results[2]));
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.cisco.com/AXLPort/getRouteFilter", RequestNamespace="http://www.cisco.com/AXL/API/1.0", ResponseNamespace="http://www.cisco.com/AXL/API/1.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public GetRouteFilterResReturn getRouteFilter([System.Xml.Serialization.XmlElementAttribute("name", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlElementAttribute("uuid", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")] string Item, [System.Xml.Serialization.XmlIgnoreAttribute()] ItemChoiceType153 ItemElementName, [System.Xml.Serialization.XmlAttributeAttribute()] ref System.UInt64 sequence, [System.Xml.Serialization.XmlAttributeAttribute()] [System.Xml.Serialization.XmlIgnoreAttribute()] ref bool sequenceSpecified) {
        object[] results = this.Invoke("getRouteFilter", new object[] {
                    Item,
                    ItemElementName,
                    sequence,
                    sequenceSpecified});
        sequence = ((System.UInt64)(results[1]));
        sequenceSpecified = ((bool)(results[2]));
        return ((GetRouteFilterResReturn)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BegingetRouteFilter(string Item, ItemChoiceType153 ItemElementName, System.UInt64 sequence, bool sequenceSpecified, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("getRouteFilter", new object[] {
                    Item,
                    ItemElementName,
                    sequence,
                    sequenceSpecified}, callback, asyncState);
    }
    
    /// <remarks/>
    public GetRouteFilterResReturn EndgetRouteFilter(System.IAsyncResult asyncResult, out System.UInt64 sequence, out bool sequenceSpecified) {
        object[] results = this.EndInvoke(asyncResult);
        sequence = ((System.UInt64)(results[1]));
        sequenceSpecified = ((bool)(results[2]));
        return ((GetRouteFilterResReturn)(results[0]));
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.cisco.com/AXLPort/removeRouteFilter", RequestNamespace="http://www.cisco.com/AXL/API/1.0", ResponseNamespace="http://www.cisco.com/AXL/API/1.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string removeRouteFilter([System.Xml.Serialization.XmlElementAttribute("name", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlElementAttribute("uuid", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")] string Item, [System.Xml.Serialization.XmlIgnoreAttribute()] ItemChoiceType154 ItemElementName, [System.Xml.Serialization.XmlAttributeAttribute()] ref System.UInt64 sequence, [System.Xml.Serialization.XmlAttributeAttribute()] [System.Xml.Serialization.XmlIgnoreAttribute()] ref bool sequenceSpecified) {
        object[] results = this.Invoke("removeRouteFilter", new object[] {
                    Item,
                    ItemElementName,
                    sequence,
                    sequenceSpecified});
        sequence = ((System.UInt64)(results[1]));
        sequenceSpecified = ((bool)(results[2]));
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginremoveRouteFilter(string Item, ItemChoiceType154 ItemElementName, System.UInt64 sequence, bool sequenceSpecified, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("removeRouteFilter", new object[] {
                    Item,
                    ItemElementName,
                    sequence,
                    sequenceSpecified}, callback, asyncState);
    }
    
    /// <remarks/>
    public string EndremoveRouteFilter(System.IAsyncResult asyncResult, out System.UInt64 sequence, out bool sequenceSpecified) {
        object[] results = this.EndInvoke(asyncResult);
        sequence = ((System.UInt64)(results[1]));
        sequenceSpecified = ((bool)(results[2]));
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.cisco.com/AXLPort/getServiceParameter", RequestNamespace="http://www.cisco.com/AXL/API/1.0", ResponseNamespace="http://www.cisco.com/AXL/API/1.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public GetServiceParameterResReturn getServiceParameter([System.Xml.Serialization.XmlElementAttribute("name", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlElementAttribute("uuid", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlElementAttribute("processNodeId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlElementAttribute("processNodeName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlElementAttribute("service", typeof(XService), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")] object Item, [System.Xml.Serialization.XmlIgnoreAttribute()] ItemChoiceType155 ItemElementName, [System.Xml.Serialization.XmlAttributeAttribute()] ref System.UInt64 sequence, [System.Xml.Serialization.XmlAttributeAttribute()] [System.Xml.Serialization.XmlIgnoreAttribute()] ref bool sequenceSpecified) {
        object[] results = this.Invoke("getServiceParameter", new object[] {
                    Item,
                    ItemElementName,
                    sequence,
                    sequenceSpecified});
        sequence = ((System.UInt64)(results[1]));
        sequenceSpecified = ((bool)(results[2]));
        return ((GetServiceParameterResReturn)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BegingetServiceParameter(object Item, ItemChoiceType155 ItemElementName, System.UInt64 sequence, bool sequenceSpecified, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("getServiceParameter", new object[] {
                    Item,
                    ItemElementName,
                    sequence,
                    sequenceSpecified}, callback, asyncState);
    }
    
    /// <remarks/>
    public GetServiceParameterResReturn EndgetServiceParameter(System.IAsyncResult asyncResult, out System.UInt64 sequence, out bool sequenceSpecified) {
        object[] results = this.EndInvoke(asyncResult);
        sequence = ((System.UInt64)(results[1]));
        sequenceSpecified = ((bool)(results[2]));
        return ((GetServiceParameterResReturn)(results[0]));
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.cisco.com/AXLPort/updateServiceParameter", RequestNamespace="http://www.cisco.com/AXL/API/1.0", ResponseNamespace="http://www.cisco.com/AXL/API/1.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string updateServiceParameter([System.Xml.Serialization.XmlElementAttribute("name", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlElementAttribute("uuid", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlElementAttribute("processNodeId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlElementAttribute("processNodeName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlElementAttribute("service", typeof(XService), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")] object Item, [System.Xml.Serialization.XmlIgnoreAttribute()] ItemChoiceType156 ItemElementName, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] string newValue, [System.Xml.Serialization.XmlAttributeAttribute()] ref System.UInt64 sequence, [System.Xml.Serialization.XmlAttributeAttribute()] [System.Xml.Serialization.XmlIgnoreAttribute()] ref bool sequenceSpecified) {
        object[] results = this.Invoke("updateServiceParameter", new object[] {
                    Item,
                    ItemElementName,
                    newValue,
                    sequence,
                    sequenceSpecified});
        sequence = ((System.UInt64)(results[1]));
        sequenceSpecified = ((bool)(results[2]));
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginupdateServiceParameter(object Item, ItemChoiceType156 ItemElementName, string newValue, System.UInt64 sequence, bool sequenceSpecified, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("updateServiceParameter", new object[] {
                    Item,
                    ItemElementName,
                    newValue,
                    sequence,
                    sequenceSpecified}, callback, asyncState);
    }
    
    /// <remarks/>
    public string EndupdateServiceParameter(System.IAsyncResult asyncResult, out System.UInt64 sequence, out bool sequenceSpecified) {
        object[] results = this.EndInvoke(asyncResult);
        sequence = ((System.UInt64)(results[1]));
        sequenceSpecified = ((bool)(results[2]));
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.cisco.com/AXLPort/addLocation", RequestNamespace="http://www.cisco.com/AXL/API/1.0", ResponseNamespace="http://www.cisco.com/AXL/API/1.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string addLocation([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] XLocation location, [System.Xml.Serialization.XmlAttributeAttribute()] ref System.UInt64 sequence, [System.Xml.Serialization.XmlAttributeAttribute()] [System.Xml.Serialization.XmlIgnoreAttribute()] ref bool sequenceSpecified) {
        object[] results = this.Invoke("addLocation", new object[] {
                    location,
                    sequence,
                    sequenceSpecified});
        sequence = ((System.UInt64)(results[1]));
        sequenceSpecified = ((bool)(results[2]));
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginaddLocation(XLocation location, System.UInt64 sequence, bool sequenceSpecified, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("addLocation", new object[] {
                    location,
                    sequence,
                    sequenceSpecified}, callback, asyncState);
    }
    
    /// <remarks/>
    public string EndaddLocation(System.IAsyncResult asyncResult, out System.UInt64 sequence, out bool sequenceSpecified) {
        object[] results = this.EndInvoke(asyncResult);
        sequence = ((System.UInt64)(results[1]));
        sequenceSpecified = ((bool)(results[2]));
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.cisco.com/AXLPort/updateLocation", RequestNamespace="http://www.cisco.com/AXL/API/1.0", ResponseNamespace="http://www.cisco.com/AXL/API/1.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string updateLocation([System.Xml.Serialization.XmlElementAttribute("name", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlElementAttribute("uuid", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")] string Item, [System.Xml.Serialization.XmlIgnoreAttribute()] ItemChoiceType157 ItemElementName, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string newName, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="nonNegativeInteger")] string kbits, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="nonNegativeInteger")] string videoKbits, [System.Xml.Serialization.XmlAttributeAttribute()] ref System.UInt64 sequence, [System.Xml.Serialization.XmlAttributeAttribute()] [System.Xml.Serialization.XmlIgnoreAttribute()] ref bool sequenceSpecified) {
        object[] results = this.Invoke("updateLocation", new object[] {
                    Item,
                    ItemElementName,
                    newName,
                    kbits,
                    videoKbits,
                    sequence,
                    sequenceSpecified});
        sequence = ((System.UInt64)(results[1]));
        sequenceSpecified = ((bool)(results[2]));
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginupdateLocation(string Item, ItemChoiceType157 ItemElementName, string newName, string kbits, string videoKbits, System.UInt64 sequence, bool sequenceSpecified, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("updateLocation", new object[] {
                    Item,
                    ItemElementName,
                    newName,
                    kbits,
                    videoKbits,
                    sequence,
                    sequenceSpecified}, callback, asyncState);
    }
    
    /// <remarks/>
    public string EndupdateLocation(System.IAsyncResult asyncResult, out System.UInt64 sequence, out bool sequenceSpecified) {
        object[] results = this.EndInvoke(asyncResult);
        sequence = ((System.UInt64)(results[1]));
        sequenceSpecified = ((bool)(results[2]));
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.cisco.com/AXLPort/getLocation", RequestNamespace="http://www.cisco.com/AXL/API/1.0", ResponseNamespace="http://www.cisco.com/AXL/API/1.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public GetLocationResReturn getLocation([System.Xml.Serialization.XmlElementAttribute("name", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlElementAttribute("uuid", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")] string Item, [System.Xml.Serialization.XmlIgnoreAttribute()] ItemChoiceType158 ItemElementName, [System.Xml.Serialization.XmlAttributeAttribute()] ref System.UInt64 sequence, [System.Xml.Serialization.XmlAttributeAttribute()] [System.Xml.Serialization.XmlIgnoreAttribute()] ref bool sequenceSpecified) {
        object[] results = this.Invoke("getLocation", new object[] {
                    Item,
                    ItemElementName,
                    sequence,
                    sequenceSpecified});
        sequence = ((System.UInt64)(results[1]));
        sequenceSpecified = ((bool)(results[2]));
        return ((GetLocationResReturn)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BegingetLocation(string Item, ItemChoiceType158 ItemElementName, System.UInt64 sequence, bool sequenceSpecified, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("getLocation", new object[] {
                    Item,
                    ItemElementName,
                    sequence,
                    sequenceSpecified}, callback, asyncState);
    }
    
    /// <remarks/>
    public GetLocationResReturn EndgetLocation(System.IAsyncResult asyncResult, out System.UInt64 sequence, out bool sequenceSpecified) {
        object[] results = this.EndInvoke(asyncResult);
        sequence = ((System.UInt64)(results[1]));
        sequenceSpecified = ((bool)(results[2]));
        return ((GetLocationResReturn)(results[0]));
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.cisco.com/AXLPort/removeLocation", RequestNamespace="http://www.cisco.com/AXL/API/1.0", ResponseNamespace="http://www.cisco.com/AXL/API/1.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string removeLocation([System.Xml.Serialization.XmlElementAttribute("name", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlElementAttribute("uuid", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")] string Item, [System.Xml.Serialization.XmlIgnoreAttribute()] ItemChoiceType159 ItemElementName, [System.Xml.Serialization.XmlAttributeAttribute()] ref System.UInt64 sequence, [System.Xml.Serialization.XmlAttributeAttribute()] [System.Xml.Serialization.XmlIgnoreAttribute()] ref bool sequenceSpecified) {
        object[] results = this.Invoke("removeLocation", new object[] {
                    Item,
                    ItemElementName,
                    sequence,
                    sequenceSpecified});
        sequence = ((System.UInt64)(results[1]));
        sequenceSpecified = ((bool)(results[2]));
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginremoveLocation(string Item, ItemChoiceType159 ItemElementName, System.UInt64 sequence, bool sequenceSpecified, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("removeLocation", new object[] {
                    Item,
                    ItemElementName,
                    sequence,
                    sequenceSpecified}, callback, asyncState);
    }
    
    /// <remarks/>
    public string EndremoveLocation(System.IAsyncResult asyncResult, out System.UInt64 sequence, out bool sequenceSpecified) {
        object[] results = this.EndInvoke(asyncResult);
        sequence = ((System.UInt64)(results[1]));
        sequenceSpecified = ((bool)(results[2]));
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.cisco.com/AXLPort/addRegion", RequestNamespace="http://www.cisco.com/AXL/API/1.0", ResponseNamespace="http://www.cisco.com/AXL/API/1.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string addRegion([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] XRegion region, [System.Xml.Serialization.XmlAttributeAttribute()] ref System.UInt64 sequence, [System.Xml.Serialization.XmlAttributeAttribute()] [System.Xml.Serialization.XmlIgnoreAttribute()] ref bool sequenceSpecified) {
        object[] results = this.Invoke("addRegion", new object[] {
                    region,
                    sequence,
                    sequenceSpecified});
        sequence = ((System.UInt64)(results[1]));
        sequenceSpecified = ((bool)(results[2]));
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginaddRegion(XRegion region, System.UInt64 sequence, bool sequenceSpecified, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("addRegion", new object[] {
                    region,
                    sequence,
                    sequenceSpecified}, callback, asyncState);
    }
    
    /// <remarks/>
    public string EndaddRegion(System.IAsyncResult asyncResult, out System.UInt64 sequence, out bool sequenceSpecified) {
        object[] results = this.EndInvoke(asyncResult);
        sequence = ((System.UInt64)(results[1]));
        sequenceSpecified = ((bool)(results[2]));
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.cisco.com/AXLPort/removeRegion", RequestNamespace="http://www.cisco.com/AXL/API/1.0", ResponseNamespace="http://www.cisco.com/AXL/API/1.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string removeRegion([System.Xml.Serialization.XmlElementAttribute("name", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlElementAttribute("uuid", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")] string Item, [System.Xml.Serialization.XmlIgnoreAttribute()] ItemChoiceType160 ItemElementName, [System.Xml.Serialization.XmlAttributeAttribute()] ref System.UInt64 sequence, [System.Xml.Serialization.XmlAttributeAttribute()] [System.Xml.Serialization.XmlIgnoreAttribute()] ref bool sequenceSpecified) {
        object[] results = this.Invoke("removeRegion", new object[] {
                    Item,
                    ItemElementName,
                    sequence,
                    sequenceSpecified});
        sequence = ((System.UInt64)(results[1]));
        sequenceSpecified = ((bool)(results[2]));
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginremoveRegion(string Item, ItemChoiceType160 ItemElementName, System.UInt64 sequence, bool sequenceSpecified, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("removeRegion", new object[] {
                    Item,
                    ItemElementName,
                    sequence,
                    sequenceSpecified}, callback, asyncState);
    }
    
    /// <remarks/>
    public string EndremoveRegion(System.IAsyncResult asyncResult, out System.UInt64 sequence, out bool sequenceSpecified) {
        object[] results = this.EndInvoke(asyncResult);
        sequence = ((System.UInt64)(results[1]));
        sequenceSpecified = ((bool)(results[2]));
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.cisco.com/AXLPort/getRegion", RequestNamespace="http://www.cisco.com/AXL/API/1.0", ResponseNamespace="http://www.cisco.com/AXL/API/1.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public GetRegionResReturn getRegion([System.Xml.Serialization.XmlElementAttribute("name", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlElementAttribute("uuid", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")] string Item, [System.Xml.Serialization.XmlIgnoreAttribute()] ItemChoiceType161 ItemElementName, [System.Xml.Serialization.XmlAttributeAttribute()] ref System.UInt64 sequence, [System.Xml.Serialization.XmlAttributeAttribute()] [System.Xml.Serialization.XmlIgnoreAttribute()] ref bool sequenceSpecified) {
        object[] results = this.Invoke("getRegion", new object[] {
                    Item,
                    ItemElementName,
                    sequence,
                    sequenceSpecified});
        sequence = ((System.UInt64)(results[1]));
        sequenceSpecified = ((bool)(results[2]));
        return ((GetRegionResReturn)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BegingetRegion(string Item, ItemChoiceType161 ItemElementName, System.UInt64 sequence, bool sequenceSpecified, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("getRegion", new object[] {
                    Item,
                    ItemElementName,
                    sequence,
                    sequenceSpecified}, callback, asyncState);
    }
    
    /// <remarks/>
    public GetRegionResReturn EndgetRegion(System.IAsyncResult asyncResult, out System.UInt64 sequence, out bool sequenceSpecified) {
        object[] results = this.EndInvoke(asyncResult);
        sequence = ((System.UInt64)(results[1]));
        sequenceSpecified = ((bool)(results[2]));
        return ((GetRegionResReturn)(results[0]));
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.cisco.com/AXLPort/updateRegionMatrix", RequestNamespace="http://www.cisco.com/AXL/API/1.0", ResponseNamespace="http://www.cisco.com/AXL/API/1.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string updateRegionMatrix([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string uuid, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] XBandwidth bandwidth, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool bandwidthSpecified, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="nonNegativeInteger")] string videoBandwidth, [System.Xml.Serialization.XmlAttributeAttribute()] ref System.UInt64 sequence, [System.Xml.Serialization.XmlAttributeAttribute()] [System.Xml.Serialization.XmlIgnoreAttribute()] ref bool sequenceSpecified) {
        object[] results = this.Invoke("updateRegionMatrix", new object[] {
                    uuid,
                    bandwidth,
                    bandwidthSpecified,
                    videoBandwidth,
                    sequence,
                    sequenceSpecified});
        sequence = ((System.UInt64)(results[1]));
        sequenceSpecified = ((bool)(results[2]));
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginupdateRegionMatrix(string uuid, XBandwidth bandwidth, bool bandwidthSpecified, string videoBandwidth, System.UInt64 sequence, bool sequenceSpecified, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("updateRegionMatrix", new object[] {
                    uuid,
                    bandwidth,
                    bandwidthSpecified,
                    videoBandwidth,
                    sequence,
                    sequenceSpecified}, callback, asyncState);
    }
    
    /// <remarks/>
    public string EndupdateRegionMatrix(System.IAsyncResult asyncResult, out System.UInt64 sequence, out bool sequenceSpecified) {
        object[] results = this.EndInvoke(asyncResult);
        sequence = ((System.UInt64)(results[1]));
        sequenceSpecified = ((bool)(results[2]));
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.cisco.com/AXLPort/addMGCP", RequestNamespace="http://www.cisco.com/AXL/API/1.0", ResponseNamespace="http://www.cisco.com/AXL/API/1.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string addMGCP([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] XMGCP newMGCP, [System.Xml.Serialization.XmlAttributeAttribute()] ref System.UInt64 sequence, [System.Xml.Serialization.XmlAttributeAttribute()] [System.Xml.Serialization.XmlIgnoreAttribute()] ref bool sequenceSpecified) {
        object[] results = this.Invoke("addMGCP", new object[] {
                    newMGCP,
                    sequence,
                    sequenceSpecified});
        sequence = ((System.UInt64)(results[1]));
        sequenceSpecified = ((bool)(results[2]));
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginaddMGCP(XMGCP newMGCP, System.UInt64 sequence, bool sequenceSpecified, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("addMGCP", new object[] {
                    newMGCP,
                    sequence,
                    sequenceSpecified}, callback, asyncState);
    }
    
    /// <remarks/>
    public string EndaddMGCP(System.IAsyncResult asyncResult, out System.UInt64 sequence, out bool sequenceSpecified) {
        object[] results = this.EndInvoke(asyncResult);
        sequence = ((System.UInt64)(results[1]));
        sequenceSpecified = ((bool)(results[2]));
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.cisco.com/AXLPort/addMGCPUnit", RequestNamespace="http://www.cisco.com/AXL/API/1.0", ResponseNamespace="http://www.cisco.com/AXL/API/1.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string addMGCPUnit([System.Xml.Serialization.XmlElementAttribute("uuid", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlElementAttribute("domainName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")] string Item, [System.Xml.Serialization.XmlIgnoreAttribute()] ItemChoiceType162 ItemElementName, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] XMGCPUnit unit, [System.Xml.Serialization.XmlAttributeAttribute()] ref System.UInt64 sequence, [System.Xml.Serialization.XmlAttributeAttribute()] [System.Xml.Serialization.XmlIgnoreAttribute()] ref bool sequenceSpecified) {
        object[] results = this.Invoke("addMGCPUnit", new object[] {
                    Item,
                    ItemElementName,
                    unit,
                    sequence,
                    sequenceSpecified});
        sequence = ((System.UInt64)(results[1]));
        sequenceSpecified = ((bool)(results[2]));
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginaddMGCPUnit(string Item, ItemChoiceType162 ItemElementName, XMGCPUnit unit, System.UInt64 sequence, bool sequenceSpecified, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("addMGCPUnit", new object[] {
                    Item,
                    ItemElementName,
                    unit,
                    sequence,
                    sequenceSpecified}, callback, asyncState);
    }
    
    /// <remarks/>
    public string EndaddMGCPUnit(System.IAsyncResult asyncResult, out System.UInt64 sequence, out bool sequenceSpecified) {
        object[] results = this.EndInvoke(asyncResult);
        sequence = ((System.UInt64)(results[1]));
        sequenceSpecified = ((bool)(results[2]));
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.cisco.com/AXLPort/addMGCPSubunit", RequestNamespace="http://www.cisco.com/AXL/API/1.0", ResponseNamespace="http://www.cisco.com/AXL/API/1.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string addMGCPSubunit([System.Xml.Serialization.XmlElementAttribute("uuid", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlElementAttribute("domainName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")] string Item, [System.Xml.Serialization.XmlIgnoreAttribute()] ItemChoiceType163 ItemElementName, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] AddMGCPSubunitReqUnit unit, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] XMGCPSubunit subunit, [System.Xml.Serialization.XmlAttributeAttribute()] ref System.UInt64 sequence, [System.Xml.Serialization.XmlAttributeAttribute()] [System.Xml.Serialization.XmlIgnoreAttribute()] ref bool sequenceSpecified) {
        object[] results = this.Invoke("addMGCPSubunit", new object[] {
                    Item,
                    ItemElementName,
                    unit,
                    subunit,
                    sequence,
                    sequenceSpecified});
        sequence = ((System.UInt64)(results[1]));
        sequenceSpecified = ((bool)(results[2]));
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginaddMGCPSubunit(string Item, ItemChoiceType163 ItemElementName, AddMGCPSubunitReqUnit unit, XMGCPSubunit subunit, System.UInt64 sequence, bool sequenceSpecified, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("addMGCPSubunit", new object[] {
                    Item,
                    ItemElementName,
                    unit,
                    subunit,
                    sequence,
                    sequenceSpecified}, callback, asyncState);
    }
    
    /// <remarks/>
    public string EndaddMGCPSubunit(System.IAsyncResult asyncResult, out System.UInt64 sequence, out bool sequenceSpecified) {
        object[] results = this.EndInvoke(asyncResult);
        sequence = ((System.UInt64)(results[1]));
        sequenceSpecified = ((bool)(results[2]));
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.cisco.com/AXLPort/addMGCPEndpoint", RequestNamespace="http://www.cisco.com/AXL/API/1.0", ResponseNamespace="http://www.cisco.com/AXL/API/1.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string addMGCPEndpoint([System.Xml.Serialization.XmlElementAttribute("uuid", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlElementAttribute("domainName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")] string Item, [System.Xml.Serialization.XmlIgnoreAttribute()] ItemChoiceType164 ItemElementName, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] AddMGCPEndpointReqUnit unit, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] AddMGCPEndpointReqSubunit subunit, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] AddMGCPEndpointReqEndpoint endpoint, [System.Xml.Serialization.XmlAttributeAttribute()] ref System.UInt64 sequence, [System.Xml.Serialization.XmlAttributeAttribute()] [System.Xml.Serialization.XmlIgnoreAttribute()] ref bool sequenceSpecified) {
        object[] results = this.Invoke("addMGCPEndpoint", new object[] {
                    Item,
                    ItemElementName,
                    unit,
                    subunit,
                    endpoint,
                    sequence,
                    sequenceSpecified});
        sequence = ((System.UInt64)(results[1]));
        sequenceSpecified = ((bool)(results[2]));
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginaddMGCPEndpoint(string Item, ItemChoiceType164 ItemElementName, AddMGCPEndpointReqUnit unit, AddMGCPEndpointReqSubunit subunit, AddMGCPEndpointReqEndpoint endpoint, System.UInt64 sequence, bool sequenceSpecified, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("addMGCPEndpoint", new object[] {
                    Item,
                    ItemElementName,
                    unit,
                    subunit,
                    endpoint,
                    sequence,
                    sequenceSpecified}, callback, asyncState);
    }
    
    /// <remarks/>
    public string EndaddMGCPEndpoint(System.IAsyncResult asyncResult, out System.UInt64 sequence, out bool sequenceSpecified) {
        object[] results = this.EndInvoke(asyncResult);
        sequence = ((System.UInt64)(results[1]));
        sequenceSpecified = ((bool)(results[2]));
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.cisco.com/AXLPort/getMGCP", RequestNamespace="http://www.cisco.com/AXL/API/1.0", ResponseNamespace="http://www.cisco.com/AXL/API/1.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public GetMGCPResReturn getMGCP([System.Xml.Serialization.XmlElementAttribute("uuid", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlElementAttribute("domainName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")] string Item, [System.Xml.Serialization.XmlIgnoreAttribute()] ItemChoiceType165 ItemElementName, [System.Xml.Serialization.XmlAttributeAttribute()] ref System.UInt64 sequence, [System.Xml.Serialization.XmlAttributeAttribute()] [System.Xml.Serialization.XmlIgnoreAttribute()] ref bool sequenceSpecified) {
        object[] results = this.Invoke("getMGCP", new object[] {
                    Item,
                    ItemElementName,
                    sequence,
                    sequenceSpecified});
        sequence = ((System.UInt64)(results[1]));
        sequenceSpecified = ((bool)(results[2]));
        return ((GetMGCPResReturn)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BegingetMGCP(string Item, ItemChoiceType165 ItemElementName, System.UInt64 sequence, bool sequenceSpecified, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("getMGCP", new object[] {
                    Item,
                    ItemElementName,
                    sequence,
                    sequenceSpecified}, callback, asyncState);
    }
    
    /// <remarks/>
    public GetMGCPResReturn EndgetMGCP(System.IAsyncResult asyncResult, out System.UInt64 sequence, out bool sequenceSpecified) {
        object[] results = this.EndInvoke(asyncResult);
        sequence = ((System.UInt64)(results[1]));
        sequenceSpecified = ((bool)(results[2]));
        return ((GetMGCPResReturn)(results[0]));
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.cisco.com/AXLPort/removeMGCP", RequestNamespace="http://www.cisco.com/AXL/API/1.0", ResponseNamespace="http://www.cisco.com/AXL/API/1.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string removeMGCP([System.Xml.Serialization.XmlElementAttribute("uuid", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlElementAttribute("domainName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")] string Item, [System.Xml.Serialization.XmlIgnoreAttribute()] ItemChoiceType166 ItemElementName, [System.Xml.Serialization.XmlAttributeAttribute()] ref System.UInt64 sequence, [System.Xml.Serialization.XmlAttributeAttribute()] [System.Xml.Serialization.XmlIgnoreAttribute()] ref bool sequenceSpecified) {
        object[] results = this.Invoke("removeMGCP", new object[] {
                    Item,
                    ItemElementName,
                    sequence,
                    sequenceSpecified});
        sequence = ((System.UInt64)(results[1]));
        sequenceSpecified = ((bool)(results[2]));
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginremoveMGCP(string Item, ItemChoiceType166 ItemElementName, System.UInt64 sequence, bool sequenceSpecified, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("removeMGCP", new object[] {
                    Item,
                    ItemElementName,
                    sequence,
                    sequenceSpecified}, callback, asyncState);
    }
    
    /// <remarks/>
    public string EndremoveMGCP(System.IAsyncResult asyncResult, out System.UInt64 sequence, out bool sequenceSpecified) {
        object[] results = this.EndInvoke(asyncResult);
        sequence = ((System.UInt64)(results[1]));
        sequenceSpecified = ((bool)(results[2]));
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.cisco.com/AXLPort/removeMGCPUnit", RequestNamespace="http://www.cisco.com/AXL/API/1.0", ResponseNamespace="http://www.cisco.com/AXL/API/1.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string removeMGCPUnit([System.Xml.Serialization.XmlElementAttribute("uuid", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlElementAttribute("domainName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")] string Item, [System.Xml.Serialization.XmlIgnoreAttribute()] ItemChoiceType167 ItemElementName, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] RemoveMGCPUnitReqUnit unit, [System.Xml.Serialization.XmlAttributeAttribute()] ref System.UInt64 sequence, [System.Xml.Serialization.XmlAttributeAttribute()] [System.Xml.Serialization.XmlIgnoreAttribute()] ref bool sequenceSpecified) {
        object[] results = this.Invoke("removeMGCPUnit", new object[] {
                    Item,
                    ItemElementName,
                    unit,
                    sequence,
                    sequenceSpecified});
        sequence = ((System.UInt64)(results[1]));
        sequenceSpecified = ((bool)(results[2]));
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginremoveMGCPUnit(string Item, ItemChoiceType167 ItemElementName, RemoveMGCPUnitReqUnit unit, System.UInt64 sequence, bool sequenceSpecified, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("removeMGCPUnit", new object[] {
                    Item,
                    ItemElementName,
                    unit,
                    sequence,
                    sequenceSpecified}, callback, asyncState);
    }
    
    /// <remarks/>
    public string EndremoveMGCPUnit(System.IAsyncResult asyncResult, out System.UInt64 sequence, out bool sequenceSpecified) {
        object[] results = this.EndInvoke(asyncResult);
        sequence = ((System.UInt64)(results[1]));
        sequenceSpecified = ((bool)(results[2]));
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.cisco.com/AXLPort/removeMGCPSubunit", RequestNamespace="http://www.cisco.com/AXL/API/1.0", ResponseNamespace="http://www.cisco.com/AXL/API/1.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string removeMGCPSubunit([System.Xml.Serialization.XmlElementAttribute("uuid", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlElementAttribute("domainName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")] string Item, [System.Xml.Serialization.XmlIgnoreAttribute()] ItemChoiceType168 ItemElementName, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] RemoveMGCPSubunitReqUnit unit, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] RemoveMGCPSubunitReqSubunit subunit, [System.Xml.Serialization.XmlAttributeAttribute()] ref System.UInt64 sequence, [System.Xml.Serialization.XmlAttributeAttribute()] [System.Xml.Serialization.XmlIgnoreAttribute()] ref bool sequenceSpecified) {
        object[] results = this.Invoke("removeMGCPSubunit", new object[] {
                    Item,
                    ItemElementName,
                    unit,
                    subunit,
                    sequence,
                    sequenceSpecified});
        sequence = ((System.UInt64)(results[1]));
        sequenceSpecified = ((bool)(results[2]));
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginremoveMGCPSubunit(string Item, ItemChoiceType168 ItemElementName, RemoveMGCPSubunitReqUnit unit, RemoveMGCPSubunitReqSubunit subunit, System.UInt64 sequence, bool sequenceSpecified, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("removeMGCPSubunit", new object[] {
                    Item,
                    ItemElementName,
                    unit,
                    subunit,
                    sequence,
                    sequenceSpecified}, callback, asyncState);
    }
    
    /// <remarks/>
    public string EndremoveMGCPSubunit(System.IAsyncResult asyncResult, out System.UInt64 sequence, out bool sequenceSpecified) {
        object[] results = this.EndInvoke(asyncResult);
        sequence = ((System.UInt64)(results[1]));
        sequenceSpecified = ((bool)(results[2]));
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.cisco.com/AXLPort/removeMGCPEndpoint", RequestNamespace="http://www.cisco.com/AXL/API/1.0", ResponseNamespace="http://www.cisco.com/AXL/API/1.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string removeMGCPEndpoint([System.Xml.Serialization.XmlElementAttribute("uuid", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlElementAttribute("domainName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")] string Item, [System.Xml.Serialization.XmlIgnoreAttribute()] ItemChoiceType169 ItemElementName, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] RemoveMGCPEndpointReqUnit unit, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] RemoveMGCPEndpointReqSubunit subunit, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] RemoveMGCPEndpointReqEndpoint endpoint, [System.Xml.Serialization.XmlAttributeAttribute()] ref System.UInt64 sequence, [System.Xml.Serialization.XmlAttributeAttribute()] [System.Xml.Serialization.XmlIgnoreAttribute()] ref bool sequenceSpecified) {
        object[] results = this.Invoke("removeMGCPEndpoint", new object[] {
                    Item,
                    ItemElementName,
                    unit,
                    subunit,
                    endpoint,
                    sequence,
                    sequenceSpecified});
        sequence = ((System.UInt64)(results[1]));
        sequenceSpecified = ((bool)(results[2]));
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginremoveMGCPEndpoint(string Item, ItemChoiceType169 ItemElementName, RemoveMGCPEndpointReqUnit unit, RemoveMGCPEndpointReqSubunit subunit, RemoveMGCPEndpointReqEndpoint endpoint, System.UInt64 sequence, bool sequenceSpecified, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("removeMGCPEndpoint", new object[] {
                    Item,
                    ItemElementName,
                    unit,
                    subunit,
                    endpoint,
                    sequence,
                    sequenceSpecified}, callback, asyncState);
    }
    
    /// <remarks/>
    public string EndremoveMGCPEndpoint(System.IAsyncResult asyncResult, out System.UInt64 sequence, out bool sequenceSpecified) {
        object[] results = this.EndInvoke(asyncResult);
        sequence = ((System.UInt64)(results[1]));
        sequenceSpecified = ((bool)(results[2]));
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.cisco.com/AXLPort/updateMGCP", RequestNamespace="http://www.cisco.com/AXL/API/1.0", ResponseNamespace="http://www.cisco.com/AXL/API/1.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string updateMGCP([System.Xml.Serialization.XmlElementAttribute("uuid", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlElementAttribute("domainName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")] string Item, [System.Xml.Serialization.XmlIgnoreAttribute()] ItemChoiceType170 ItemElementName, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string newDomainName, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string description, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] XProduct product, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool productSpecified, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] XModel model, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool modelSpecified, [System.Xml.Serialization.XmlElementAttribute("callManagerGroupName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlElementAttribute("callManagerGroup", typeof(XCallManagerGroup), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] object Item1, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="Name")] string scratch, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] System.Xml.XmlElement vendorConfig, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string versionStamp, 
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] XLoadInformation loadInformation, [System.Xml.Serialization.XmlAttributeAttribute()] ref System.UInt64 sequence, [System.Xml.Serialization.XmlAttributeAttribute()] [System.Xml.Serialization.XmlIgnoreAttribute()] ref bool sequenceSpecified) {
        object[] results = this.Invoke("updateMGCP", new object[] {
                    Item,
                    ItemElementName,
                    newDomainName,
                    description,
                    product,
                    productSpecified,
                    model,
                    modelSpecified,
                    Item1,
                    scratch,
                    vendorConfig,
                    versionStamp,
                    loadInformation,
                    sequence,
                    sequenceSpecified});
        sequence = ((System.UInt64)(results[1]));
        sequenceSpecified = ((bool)(results[2]));
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginupdateMGCP(
                string Item, 
                ItemChoiceType170 ItemElementName, 
                string newDomainName, 
                string description, 
                XProduct product, 
                bool productSpecified, 
                XModel model, 
                bool modelSpecified, 
                object Item1, 
                string scratch, 
                System.Xml.XmlElement vendorConfig, 
                string versionStamp, 
                XLoadInformation loadInformation, 
                System.UInt64 sequence, 
                bool sequenceSpecified, 
                System.AsyncCallback callback, 
                object asyncState) {
        return this.BeginInvoke("updateMGCP", new object[] {
                    Item,
                    ItemElementName,
                    newDomainName,
                    description,
                    product,
                    productSpecified,
                    model,
                    modelSpecified,
                    Item1,
                    scratch,
                    vendorConfig,
                    versionStamp,
                    loadInformation,
                    sequence,
                    sequenceSpecified}, callback, asyncState);
    }
    
    /// <remarks/>
    public string EndupdateMGCP(System.IAsyncResult asyncResult, out System.UInt64 sequence, out bool sequenceSpecified) {
        object[] results = this.EndInvoke(asyncResult);
        sequence = ((System.UInt64)(results[1]));
        sequenceSpecified = ((bool)(results[2]));
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.cisco.com/AXLPort/addCallManager", RequestNamespace="http://www.cisco.com/AXL/API/1.0", ResponseNamespace="http://www.cisco.com/AXL/API/1.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string addCallManager([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] XCallManager callManager, [System.Xml.Serialization.XmlAttributeAttribute()] ref System.UInt64 sequence, [System.Xml.Serialization.XmlAttributeAttribute()] [System.Xml.Serialization.XmlIgnoreAttribute()] ref bool sequenceSpecified) {
        object[] results = this.Invoke("addCallManager", new object[] {
                    callManager,
                    sequence,
                    sequenceSpecified});
        sequence = ((System.UInt64)(results[1]));
        sequenceSpecified = ((bool)(results[2]));
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginaddCallManager(XCallManager callManager, System.UInt64 sequence, bool sequenceSpecified, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("addCallManager", new object[] {
                    callManager,
                    sequence,
                    sequenceSpecified}, callback, asyncState);
    }
    
    /// <remarks/>
    public string EndaddCallManager(System.IAsyncResult asyncResult, out System.UInt64 sequence, out bool sequenceSpecified) {
        object[] results = this.EndInvoke(asyncResult);
        sequence = ((System.UInt64)(results[1]));
        sequenceSpecified = ((bool)(results[2]));
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.cisco.com/AXLPort/updateCallManager", RequestNamespace="http://www.cisco.com/AXL/API/1.0", ResponseNamespace="http://www.cisco.com/AXL/API/1.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string updateCallManager([System.Xml.Serialization.XmlElementAttribute("name", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlElementAttribute("uuid", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")] string Item, [System.Xml.Serialization.XmlIgnoreAttribute()] ItemChoiceType171 ItemElementName, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string newName, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string description, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] UpdateCallManagerReqAutoRegistration autoRegistration, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] UpdateCallManagerReqPorts ports, [System.Xml.Serialization.XmlAttributeAttribute()] ref System.UInt64 sequence, [System.Xml.Serialization.XmlAttributeAttribute()] [System.Xml.Serialization.XmlIgnoreAttribute()] ref bool sequenceSpecified) {
        object[] results = this.Invoke("updateCallManager", new object[] {
                    Item,
                    ItemElementName,
                    newName,
                    description,
                    autoRegistration,
                    ports,
                    sequence,
                    sequenceSpecified});
        sequence = ((System.UInt64)(results[1]));
        sequenceSpecified = ((bool)(results[2]));
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginupdateCallManager(string Item, ItemChoiceType171 ItemElementName, string newName, string description, UpdateCallManagerReqAutoRegistration autoRegistration, UpdateCallManagerReqPorts ports, System.UInt64 sequence, bool sequenceSpecified, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("updateCallManager", new object[] {
                    Item,
                    ItemElementName,
                    newName,
                    description,
                    autoRegistration,
                    ports,
                    sequence,
                    sequenceSpecified}, callback, asyncState);
    }
    
    /// <remarks/>
    public string EndupdateCallManager(System.IAsyncResult asyncResult, out System.UInt64 sequence, out bool sequenceSpecified) {
        object[] results = this.EndInvoke(asyncResult);
        sequence = ((System.UInt64)(results[1]));
        sequenceSpecified = ((bool)(results[2]));
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.cisco.com/AXLPort/getCallManager", RequestNamespace="http://www.cisco.com/AXL/API/1.0", ResponseNamespace="http://www.cisco.com/AXL/API/1.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public GetCallManagerResReturn getCallManager([System.Xml.Serialization.XmlElementAttribute("name", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlElementAttribute("uuid", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")] string Item, [System.Xml.Serialization.XmlIgnoreAttribute()] ItemChoiceType172 ItemElementName, [System.Xml.Serialization.XmlAttributeAttribute()] ref System.UInt64 sequence, [System.Xml.Serialization.XmlAttributeAttribute()] [System.Xml.Serialization.XmlIgnoreAttribute()] ref bool sequenceSpecified) {
        object[] results = this.Invoke("getCallManager", new object[] {
                    Item,
                    ItemElementName,
                    sequence,
                    sequenceSpecified});
        sequence = ((System.UInt64)(results[1]));
        sequenceSpecified = ((bool)(results[2]));
        return ((GetCallManagerResReturn)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BegingetCallManager(string Item, ItemChoiceType172 ItemElementName, System.UInt64 sequence, bool sequenceSpecified, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("getCallManager", new object[] {
                    Item,
                    ItemElementName,
                    sequence,
                    sequenceSpecified}, callback, asyncState);
    }
    
    /// <remarks/>
    public GetCallManagerResReturn EndgetCallManager(System.IAsyncResult asyncResult, out System.UInt64 sequence, out bool sequenceSpecified) {
        object[] results = this.EndInvoke(asyncResult);
        sequence = ((System.UInt64)(results[1]));
        sequenceSpecified = ((bool)(results[2]));
        return ((GetCallManagerResReturn)(results[0]));
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.cisco.com/AXLPort/removeCallManager", RequestNamespace="http://www.cisco.com/AXL/API/1.0", ResponseNamespace="http://www.cisco.com/AXL/API/1.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string removeCallManager([System.Xml.Serialization.XmlElementAttribute("name", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlElementAttribute("uuid", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")] string Item, [System.Xml.Serialization.XmlIgnoreAttribute()] ItemChoiceType173 ItemElementName, [System.Xml.Serialization.XmlAttributeAttribute()] ref System.UInt64 sequence, [System.Xml.Serialization.XmlAttributeAttribute()] [System.Xml.Serialization.XmlIgnoreAttribute()] ref bool sequenceSpecified) {
        object[] results = this.Invoke("removeCallManager", new object[] {
                    Item,
                    ItemElementName,
                    sequence,
                    sequenceSpecified});
        sequence = ((System.UInt64)(results[1]));
        sequenceSpecified = ((bool)(results[2]));
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginremoveCallManager(string Item, ItemChoiceType173 ItemElementName, System.UInt64 sequence, bool sequenceSpecified, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("removeCallManager", new object[] {
                    Item,
                    ItemElementName,
                    sequence,
                    sequenceSpecified}, callback, asyncState);
    }
    
    /// <remarks/>
    public string EndremoveCallManager(System.IAsyncResult asyncResult, out System.UInt64 sequence, out bool sequenceSpecified) {
        object[] results = this.EndInvoke(asyncResult);
        sequence = ((System.UInt64)(results[1]));
        sequenceSpecified = ((bool)(results[2]));
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.cisco.com/AXLPort/addProcessNode", RequestNamespace="http://www.cisco.com/AXL/API/1.0", ResponseNamespace="http://www.cisco.com/AXL/API/1.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string addProcessNode([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] XProcessNode processNode, [System.Xml.Serialization.XmlAttributeAttribute()] ref System.UInt64 sequence, [System.Xml.Serialization.XmlAttributeAttribute()] [System.Xml.Serialization.XmlIgnoreAttribute()] ref bool sequenceSpecified) {
        object[] results = this.Invoke("addProcessNode", new object[] {
                    processNode,
                    sequence,
                    sequenceSpecified});
        sequence = ((System.UInt64)(results[1]));
        sequenceSpecified = ((bool)(results[2]));
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginaddProcessNode(XProcessNode processNode, System.UInt64 sequence, bool sequenceSpecified, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("addProcessNode", new object[] {
                    processNode,
                    sequence,
                    sequenceSpecified}, callback, asyncState);
    }
    
    /// <remarks/>
    public string EndaddProcessNode(System.IAsyncResult asyncResult, out System.UInt64 sequence, out bool sequenceSpecified) {
        object[] results = this.EndInvoke(asyncResult);
        sequence = ((System.UInt64)(results[1]));
        sequenceSpecified = ((bool)(results[2]));
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.cisco.com/AXLPort/updateProcessNode", RequestNamespace="http://www.cisco.com/AXL/API/1.0", ResponseNamespace="http://www.cisco.com/AXL/API/1.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string updateProcessNode([System.Xml.Serialization.XmlElementAttribute("name", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlElementAttribute("uuid", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")] string Item, [System.Xml.Serialization.XmlIgnoreAttribute()] ItemChoiceType174 ItemElementName, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="Name")] string newName, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string description, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string mac, [System.Xml.Serialization.XmlAttributeAttribute()] ref System.UInt64 sequence, [System.Xml.Serialization.XmlAttributeAttribute()] [System.Xml.Serialization.XmlIgnoreAttribute()] ref bool sequenceSpecified) {
        object[] results = this.Invoke("updateProcessNode", new object[] {
                    Item,
                    ItemElementName,
                    newName,
                    description,
                    mac,
                    sequence,
                    sequenceSpecified});
        sequence = ((System.UInt64)(results[1]));
        sequenceSpecified = ((bool)(results[2]));
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginupdateProcessNode(string Item, ItemChoiceType174 ItemElementName, string newName, string description, string mac, System.UInt64 sequence, bool sequenceSpecified, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("updateProcessNode", new object[] {
                    Item,
                    ItemElementName,
                    newName,
                    description,
                    mac,
                    sequence,
                    sequenceSpecified}, callback, asyncState);
    }
    
    /// <remarks/>
    public string EndupdateProcessNode(System.IAsyncResult asyncResult, out System.UInt64 sequence, out bool sequenceSpecified) {
        object[] results = this.EndInvoke(asyncResult);
        sequence = ((System.UInt64)(results[1]));
        sequenceSpecified = ((bool)(results[2]));
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.cisco.com/AXLPort/getProcessNode", RequestNamespace="http://www.cisco.com/AXL/API/1.0", ResponseNamespace="http://www.cisco.com/AXL/API/1.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public GetProcessNodeResReturn getProcessNode([System.Xml.Serialization.XmlElementAttribute("name", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlElementAttribute("uuid", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")] string Item, [System.Xml.Serialization.XmlIgnoreAttribute()] ItemChoiceType175 ItemElementName, [System.Xml.Serialization.XmlAttributeAttribute()] ref System.UInt64 sequence, [System.Xml.Serialization.XmlAttributeAttribute()] [System.Xml.Serialization.XmlIgnoreAttribute()] ref bool sequenceSpecified) {
        object[] results = this.Invoke("getProcessNode", new object[] {
                    Item,
                    ItemElementName,
                    sequence,
                    sequenceSpecified});
        sequence = ((System.UInt64)(results[1]));
        sequenceSpecified = ((bool)(results[2]));
        return ((GetProcessNodeResReturn)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BegingetProcessNode(string Item, ItemChoiceType175 ItemElementName, System.UInt64 sequence, bool sequenceSpecified, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("getProcessNode", new object[] {
                    Item,
                    ItemElementName,
                    sequence,
                    sequenceSpecified}, callback, asyncState);
    }
    
    /// <remarks/>
    public GetProcessNodeResReturn EndgetProcessNode(System.IAsyncResult asyncResult, out System.UInt64 sequence, out bool sequenceSpecified) {
        object[] results = this.EndInvoke(asyncResult);
        sequence = ((System.UInt64)(results[1]));
        sequenceSpecified = ((bool)(results[2]));
        return ((GetProcessNodeResReturn)(results[0]));
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.cisco.com/AXLPort/removeProcessNode", RequestNamespace="http://www.cisco.com/AXL/API/1.0", ResponseNamespace="http://www.cisco.com/AXL/API/1.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string removeProcessNode([System.Xml.Serialization.XmlElementAttribute("name", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlElementAttribute("uuid", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")] string Item, [System.Xml.Serialization.XmlIgnoreAttribute()] ItemChoiceType176 ItemElementName, [System.Xml.Serialization.XmlAttributeAttribute()] ref System.UInt64 sequence, [System.Xml.Serialization.XmlAttributeAttribute()] [System.Xml.Serialization.XmlIgnoreAttribute()] ref bool sequenceSpecified) {
        object[] results = this.Invoke("removeProcessNode", new object[] {
                    Item,
                    ItemElementName,
                    sequence,
                    sequenceSpecified});
        sequence = ((System.UInt64)(results[1]));
        sequenceSpecified = ((bool)(results[2]));
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginremoveProcessNode(string Item, ItemChoiceType176 ItemElementName, System.UInt64 sequence, bool sequenceSpecified, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("removeProcessNode", new object[] {
                    Item,
                    ItemElementName,
                    sequence,
                    sequenceSpecified}, callback, asyncState);
    }
    
    /// <remarks/>
    public string EndremoveProcessNode(System.IAsyncResult asyncResult, out System.UInt64 sequence, out bool sequenceSpecified) {
        object[] results = this.EndInvoke(asyncResult);
        sequence = ((System.UInt64)(results[1]));
        sequenceSpecified = ((bool)(results[2]));
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.cisco.com/AXLPort/listAllProcessNodes", RequestNamespace="http://www.cisco.com/AXL/API/1.0", ResponseNamespace="http://www.cisco.com/AXL/API/1.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    [return: System.Xml.Serialization.XmlArrayAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [return: System.Xml.Serialization.XmlArrayItemAttribute("processNode", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
    public XProcessNode[] listAllProcessNodes([System.Xml.Serialization.XmlAttributeAttribute()] ref System.UInt64 sequence, [System.Xml.Serialization.XmlAttributeAttribute()] [System.Xml.Serialization.XmlIgnoreAttribute()] ref bool sequenceSpecified) {
        object[] results = this.Invoke("listAllProcessNodes", new object[] {
                    sequence,
                    sequenceSpecified});
        sequence = ((System.UInt64)(results[1]));
        sequenceSpecified = ((bool)(results[2]));
        return ((XProcessNode[])(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginlistAllProcessNodes(System.UInt64 sequence, bool sequenceSpecified, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("listAllProcessNodes", new object[] {
                    sequence,
                    sequenceSpecified}, callback, asyncState);
    }
    
    /// <remarks/>
    public XProcessNode[] EndlistAllProcessNodes(System.IAsyncResult asyncResult, out System.UInt64 sequence, out bool sequenceSpecified) {
        object[] results = this.EndInvoke(asyncResult);
        sequence = ((System.UInt64)(results[1]));
        sequenceSpecified = ((bool)(results[2]));
        return ((XProcessNode[])(results[0]));
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.cisco.com/AXLPort/listProcessNodesByService", RequestNamespace="http://www.cisco.com/AXL/API/1.0", ResponseNamespace="http://www.cisco.com/AXL/API/1.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    [return: System.Xml.Serialization.XmlArrayAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [return: System.Xml.Serialization.XmlArrayItemAttribute("processNode", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
    public XProcessNode[] listProcessNodesByService([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] XService service, [System.Xml.Serialization.XmlAttributeAttribute()] ref System.UInt64 sequence, [System.Xml.Serialization.XmlAttributeAttribute()] [System.Xml.Serialization.XmlIgnoreAttribute()] ref bool sequenceSpecified) {
        object[] results = this.Invoke("listProcessNodesByService", new object[] {
                    service,
                    sequence,
                    sequenceSpecified});
        sequence = ((System.UInt64)(results[1]));
        sequenceSpecified = ((bool)(results[2]));
        return ((XProcessNode[])(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginlistProcessNodesByService(XService service, System.UInt64 sequence, bool sequenceSpecified, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("listProcessNodesByService", new object[] {
                    service,
                    sequence,
                    sequenceSpecified}, callback, asyncState);
    }
    
    /// <remarks/>
    public XProcessNode[] EndlistProcessNodesByService(System.IAsyncResult asyncResult, out System.UInt64 sequence, out bool sequenceSpecified) {
        object[] results = this.EndInvoke(asyncResult);
        sequence = ((System.UInt64)(results[1]));
        sequenceSpecified = ((bool)(results[2]));
        return ((XProcessNode[])(results[0]));
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.cisco.com/AXLPort/getProcessNodeService", RequestNamespace="http://www.cisco.com/AXL/API/1.0", ResponseNamespace="http://www.cisco.com/AXL/API/1.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public GetProcessNodeServiceResReturn getProcessNodeService([System.Xml.Serialization.XmlElementAttribute("uuid", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlElementAttribute("processNodeId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlElementAttribute("processNodeName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlElementAttribute("service", typeof(XService), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")] object Item, [System.Xml.Serialization.XmlIgnoreAttribute()] ItemChoiceType177 ItemElementName, [System.Xml.Serialization.XmlAttributeAttribute()] ref System.UInt64 sequence, [System.Xml.Serialization.XmlAttributeAttribute()] [System.Xml.Serialization.XmlIgnoreAttribute()] ref bool sequenceSpecified) {
        object[] results = this.Invoke("getProcessNodeService", new object[] {
                    Item,
                    ItemElementName,
                    sequence,
                    sequenceSpecified});
        sequence = ((System.UInt64)(results[1]));
        sequenceSpecified = ((bool)(results[2]));
        return ((GetProcessNodeServiceResReturn)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BegingetProcessNodeService(object Item, ItemChoiceType177 ItemElementName, System.UInt64 sequence, bool sequenceSpecified, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("getProcessNodeService", new object[] {
                    Item,
                    ItemElementName,
                    sequence,
                    sequenceSpecified}, callback, asyncState);
    }
    
    /// <remarks/>
    public GetProcessNodeServiceResReturn EndgetProcessNodeService(System.IAsyncResult asyncResult, out System.UInt64 sequence, out bool sequenceSpecified) {
        object[] results = this.EndInvoke(asyncResult);
        sequence = ((System.UInt64)(results[1]));
        sequenceSpecified = ((bool)(results[2]));
        return ((GetProcessNodeServiceResReturn)(results[0]));
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.cisco.com/AXLPort/updateProcessNodeService", RequestNamespace="http://www.cisco.com/AXL/API/1.0", ResponseNamespace="http://www.cisco.com/AXL/API/1.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string updateProcessNodeService(
                [System.Xml.Serialization.XmlElementAttribute("uuid", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlElementAttribute("processNodeId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlElementAttribute("processNodeName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlElementAttribute("service", typeof(XService), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")] object Item, 
                [System.Xml.Serialization.XmlIgnoreAttribute()] ItemChoiceType178 ItemElementName, 
                [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] string fileName, 
                [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="nonNegativeInteger")] string traceLevel, 
                [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="nonNegativeInteger")] string userCategories, 
                [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] bool enable, 
                [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool enableSpecified, 
                [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="nonNegativeInteger")] string numFiles, 
                [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="nonNegativeInteger")] string numLines, 
                [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="nonNegativeInteger")] string numMinutes, 
                [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] bool includeNonDeviceTraces, 
                [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool includeNonDeviceTracesSpecified, 
                [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] bool useXML, 
                [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool useXMLSpecified, 
                [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] string serverName, 
                [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] bool deviceNameMonitorFlag, 
                [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool deviceNameMonitorFlagSpecified, 
                [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] bool deviceTypeMonitorFlag, 
                [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool deviceTypeMonitorFlagSpecified, 
                [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] bool fileTraceFlag, 
                [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool fileTraceFlagSpecified, 
                [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] bool outputDebugStringFlag, 
                [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool outputDebugStringFlagSpecified, 
                [System.Xml.Serialization.XmlAttributeAttribute()] ref System.UInt64 sequence, 
                [System.Xml.Serialization.XmlAttributeAttribute()] [System.Xml.Serialization.XmlIgnoreAttribute()] ref bool sequenceSpecified) {
        object[] results = this.Invoke("updateProcessNodeService", new object[] {
                    Item,
                    ItemElementName,
                    fileName,
                    traceLevel,
                    userCategories,
                    enable,
                    enableSpecified,
                    numFiles,
                    numLines,
                    numMinutes,
                    includeNonDeviceTraces,
                    includeNonDeviceTracesSpecified,
                    useXML,
                    useXMLSpecified,
                    serverName,
                    deviceNameMonitorFlag,
                    deviceNameMonitorFlagSpecified,
                    deviceTypeMonitorFlag,
                    deviceTypeMonitorFlagSpecified,
                    fileTraceFlag,
                    fileTraceFlagSpecified,
                    outputDebugStringFlag,
                    outputDebugStringFlagSpecified,
                    sequence,
                    sequenceSpecified});
        sequence = ((System.UInt64)(results[1]));
        sequenceSpecified = ((bool)(results[2]));
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginupdateProcessNodeService(
                object Item, 
                ItemChoiceType178 ItemElementName, 
                string fileName, 
                string traceLevel, 
                string userCategories, 
                bool enable, 
                bool enableSpecified, 
                string numFiles, 
                string numLines, 
                string numMinutes, 
                bool includeNonDeviceTraces, 
                bool includeNonDeviceTracesSpecified, 
                bool useXML, 
                bool useXMLSpecified, 
                string serverName, 
                bool deviceNameMonitorFlag, 
                bool deviceNameMonitorFlagSpecified, 
                bool deviceTypeMonitorFlag, 
                bool deviceTypeMonitorFlagSpecified, 
                bool fileTraceFlag, 
                bool fileTraceFlagSpecified, 
                bool outputDebugStringFlag, 
                bool outputDebugStringFlagSpecified, 
                System.UInt64 sequence, 
                bool sequenceSpecified, 
                System.AsyncCallback callback, 
                object asyncState) {
        return this.BeginInvoke("updateProcessNodeService", new object[] {
                    Item,
                    ItemElementName,
                    fileName,
                    traceLevel,
                    userCategories,
                    enable,
                    enableSpecified,
                    numFiles,
                    numLines,
                    numMinutes,
                    includeNonDeviceTraces,
                    includeNonDeviceTracesSpecified,
                    useXML,
                    useXMLSpecified,
                    serverName,
                    deviceNameMonitorFlag,
                    deviceNameMonitorFlagSpecified,
                    deviceTypeMonitorFlag,
                    deviceTypeMonitorFlagSpecified,
                    fileTraceFlag,
                    fileTraceFlagSpecified,
                    outputDebugStringFlag,
                    outputDebugStringFlagSpecified,
                    sequence,
                    sequenceSpecified}, callback, asyncState);
    }
    
    /// <remarks/>
    public string EndupdateProcessNodeService(System.IAsyncResult asyncResult, out System.UInt64 sequence, out bool sequenceSpecified) {
        object[] results = this.EndInvoke(asyncResult);
        sequence = ((System.UInt64)(results[1]));
        sequenceSpecified = ((bool)(results[2]));
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.cisco.com/AXLPort/listRoutePartitionByName", RequestNamespace="http://www.cisco.com/AXL/API/1.0", ResponseNamespace="http://www.cisco.com/AXL/API/1.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    [return: System.Xml.Serialization.XmlArrayAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [return: System.Xml.Serialization.XmlArrayItemAttribute("routePartition", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
    public XRoutePartition[] listRoutePartitionByName([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string searchString, [System.Xml.Serialization.XmlAttributeAttribute()] ref System.UInt64 sequence, [System.Xml.Serialization.XmlAttributeAttribute()] [System.Xml.Serialization.XmlIgnoreAttribute()] ref bool sequenceSpecified) {
        object[] results = this.Invoke("listRoutePartitionByName", new object[] {
                    searchString,
                    sequence,
                    sequenceSpecified});
        sequence = ((System.UInt64)(results[1]));
        sequenceSpecified = ((bool)(results[2]));
        return ((XRoutePartition[])(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginlistRoutePartitionByName(string searchString, System.UInt64 sequence, bool sequenceSpecified, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("listRoutePartitionByName", new object[] {
                    searchString,
                    sequence,
                    sequenceSpecified}, callback, asyncState);
    }
    
    /// <remarks/>
    public XRoutePartition[] EndlistRoutePartitionByName(System.IAsyncResult asyncResult, out System.UInt64 sequence, out bool sequenceSpecified) {
        object[] results = this.EndInvoke(asyncResult);
        sequence = ((System.UInt64)(results[1]));
        sequenceSpecified = ((bool)(results[2]));
        return ((XRoutePartition[])(results[0]));
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.cisco.com/AXLPort/listDevicePoolByName", RequestNamespace="http://www.cisco.com/AXL/API/1.0", ResponseNamespace="http://www.cisco.com/AXL/API/1.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    [return: System.Xml.Serialization.XmlArrayAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [return: System.Xml.Serialization.XmlArrayItemAttribute("devicePool", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
    public ListDevicePoolResDevicePool[] listDevicePoolByName([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string searchString, [System.Xml.Serialization.XmlAttributeAttribute()] ref System.UInt64 sequence, [System.Xml.Serialization.XmlAttributeAttribute()] [System.Xml.Serialization.XmlIgnoreAttribute()] ref bool sequenceSpecified) {
        object[] results = this.Invoke("listDevicePoolByName", new object[] {
                    searchString,
                    sequence,
                    sequenceSpecified});
        sequence = ((System.UInt64)(results[1]));
        sequenceSpecified = ((bool)(results[2]));
        return ((ListDevicePoolResDevicePool[])(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginlistDevicePoolByName(string searchString, System.UInt64 sequence, bool sequenceSpecified, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("listDevicePoolByName", new object[] {
                    searchString,
                    sequence,
                    sequenceSpecified}, callback, asyncState);
    }
    
    /// <remarks/>
    public ListDevicePoolResDevicePool[] EndlistDevicePoolByName(System.IAsyncResult asyncResult, out System.UInt64 sequence, out bool sequenceSpecified) {
        object[] results = this.EndInvoke(asyncResult);
        sequence = ((System.UInt64)(results[1]));
        sequenceSpecified = ((bool)(results[2]));
        return ((ListDevicePoolResDevicePool[])(results[0]));
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.cisco.com/AXLPort/listPhoneTemplateByName", RequestNamespace="http://www.cisco.com/AXL/API/1.0", ResponseNamespace="http://www.cisco.com/AXL/API/1.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    [return: System.Xml.Serialization.XmlArrayAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [return: System.Xml.Serialization.XmlArrayItemAttribute("phoneTemplate", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
    public ListPhoneTemplateResPhoneTemplate[] listPhoneTemplateByName([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string searchString, [System.Xml.Serialization.XmlAttributeAttribute()] System.UInt64 sequence, [System.Xml.Serialization.XmlAttributeAttribute()] [System.Xml.Serialization.XmlIgnoreAttribute()] bool sequenceSpecified) {
        object[] results = this.Invoke("listPhoneTemplateByName", new object[] {
                    searchString,
                    sequence,
                    sequenceSpecified});
        return ((ListPhoneTemplateResPhoneTemplate[])(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginlistPhoneTemplateByName(string searchString, System.UInt64 sequence, bool sequenceSpecified, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("listPhoneTemplateByName", new object[] {
                    searchString,
                    sequence,
                    sequenceSpecified}, callback, asyncState);
    }
    
    /// <remarks/>
    public ListPhoneTemplateResPhoneTemplate[] EndlistPhoneTemplateByName(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((ListPhoneTemplateResPhoneTemplate[])(results[0]));
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.cisco.com/AXLPort/listDeviceByNameAndClass", RequestNamespace="http://www.cisco.com/AXL/API/1.0", ResponseNamespace="http://www.cisco.com/AXL/API/1.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    [return: System.Xml.Serialization.XmlArrayAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [return: System.Xml.Serialization.XmlArrayItemAttribute("device", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
    public ListDeviceResDevice[] listDeviceByNameAndClass([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string searchString, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] XClass @class, [System.Xml.Serialization.XmlAttributeAttribute()] ref System.UInt64 sequence, [System.Xml.Serialization.XmlAttributeAttribute()] [System.Xml.Serialization.XmlIgnoreAttribute()] ref bool sequenceSpecified) {
        object[] results = this.Invoke("listDeviceByNameAndClass", new object[] {
                    searchString,
                    @class,
                    sequence,
                    sequenceSpecified});
        sequence = ((System.UInt64)(results[1]));
        sequenceSpecified = ((bool)(results[2]));
        return ((ListDeviceResDevice[])(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginlistDeviceByNameAndClass(string searchString, XClass @class, System.UInt64 sequence, bool sequenceSpecified, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("listDeviceByNameAndClass", new object[] {
                    searchString,
                    @class,
                    sequence,
                    sequenceSpecified}, callback, asyncState);
    }
    
    /// <remarks/>
    public ListDeviceResDevice[] EndlistDeviceByNameAndClass(System.IAsyncResult asyncResult, out System.UInt64 sequence, out bool sequenceSpecified) {
        object[] results = this.EndInvoke(asyncResult);
        sequence = ((System.UInt64)(results[1]));
        sequenceSpecified = ((bool)(results[2]));
        return ((ListDeviceResDevice[])(results[0]));
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.cisco.com/AXLPort/listMOHAudioSourceByName", RequestNamespace="http://www.cisco.com/AXL/API/1.0", ResponseNamespace="http://www.cisco.com/AXL/API/1.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    [return: System.Xml.Serialization.XmlArrayAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [return: System.Xml.Serialization.XmlArrayItemAttribute("mohAudioSource", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
    public ListMOHAudioSourceResMohAudioSource[] listMOHAudioSourceByName([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string searchString, [System.Xml.Serialization.XmlAttributeAttribute()] ref System.UInt64 sequence, [System.Xml.Serialization.XmlAttributeAttribute()] [System.Xml.Serialization.XmlIgnoreAttribute()] ref bool sequenceSpecified) {
        object[] results = this.Invoke("listMOHAudioSourceByName", new object[] {
                    searchString,
                    sequence,
                    sequenceSpecified});
        sequence = ((System.UInt64)(results[1]));
        sequenceSpecified = ((bool)(results[2]));
        return ((ListMOHAudioSourceResMohAudioSource[])(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginlistMOHAudioSourceByName(string searchString, System.UInt64 sequence, bool sequenceSpecified, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("listMOHAudioSourceByName", new object[] {
                    searchString,
                    sequence,
                    sequenceSpecified}, callback, asyncState);
    }
    
    /// <remarks/>
    public ListMOHAudioSourceResMohAudioSource[] EndlistMOHAudioSourceByName(System.IAsyncResult asyncResult, out System.UInt64 sequence, out bool sequenceSpecified) {
        object[] results = this.EndInvoke(asyncResult);
        sequence = ((System.UInt64)(results[1]));
        sequenceSpecified = ((bool)(results[2]));
        return ((ListMOHAudioSourceResMohAudioSource[])(results[0]));
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.cisco.com/AXLPort/updateMOHAudioSource", RequestNamespace="http://www.cisco.com/AXL/API/1.0", ResponseNamespace="http://www.cisco.com/AXL/API/1.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string updateMOHAudioSource([System.Xml.Serialization.XmlElementAttribute("sourceId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="nonNegativeInteger")] [System.Xml.Serialization.XmlElementAttribute("uuid", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")] string Item, [System.Xml.Serialization.XmlIgnoreAttribute()] ItemChoiceType179 ItemElementName, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string name, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string sourceFile, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] bool multicast, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool multicastSpecified, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] bool repeat, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool repeatSpecified, [System.Xml.Serialization.XmlAttributeAttribute()] ref System.UInt64 sequence, [System.Xml.Serialization.XmlAttributeAttribute()] [System.Xml.Serialization.XmlIgnoreAttribute()] ref bool sequenceSpecified) {
        object[] results = this.Invoke("updateMOHAudioSource", new object[] {
                    Item,
                    ItemElementName,
                    name,
                    sourceFile,
                    multicast,
                    multicastSpecified,
                    repeat,
                    repeatSpecified,
                    sequence,
                    sequenceSpecified});
        sequence = ((System.UInt64)(results[1]));
        sequenceSpecified = ((bool)(results[2]));
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginupdateMOHAudioSource(string Item, ItemChoiceType179 ItemElementName, string name, string sourceFile, bool multicast, bool multicastSpecified, bool repeat, bool repeatSpecified, System.UInt64 sequence, bool sequenceSpecified, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("updateMOHAudioSource", new object[] {
                    Item,
                    ItemElementName,
                    name,
                    sourceFile,
                    multicast,
                    multicastSpecified,
                    repeat,
                    repeatSpecified,
                    sequence,
                    sequenceSpecified}, callback, asyncState);
    }
    
    /// <remarks/>
    public string EndupdateMOHAudioSource(System.IAsyncResult asyncResult, out System.UInt64 sequence, out bool sequenceSpecified) {
        object[] results = this.EndInvoke(asyncResult);
        sequence = ((System.UInt64)(results[1]));
        sequenceSpecified = ((bool)(results[2]));
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.cisco.com/AXLPort/getMOHAudioSource", RequestNamespace="http://www.cisco.com/AXL/API/1.0", ResponseNamespace="http://www.cisco.com/AXL/API/1.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public GetMOHAudioSourceResReturn getMOHAudioSource([System.Xml.Serialization.XmlElementAttribute("sourceId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="nonNegativeInteger")] [System.Xml.Serialization.XmlElementAttribute("uuid", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")] string Item, [System.Xml.Serialization.XmlIgnoreAttribute()] ItemChoiceType180 ItemElementName, [System.Xml.Serialization.XmlAttributeAttribute()] ref System.UInt64 sequence, [System.Xml.Serialization.XmlAttributeAttribute()] [System.Xml.Serialization.XmlIgnoreAttribute()] ref bool sequenceSpecified) {
        object[] results = this.Invoke("getMOHAudioSource", new object[] {
                    Item,
                    ItemElementName,
                    sequence,
                    sequenceSpecified});
        sequence = ((System.UInt64)(results[1]));
        sequenceSpecified = ((bool)(results[2]));
        return ((GetMOHAudioSourceResReturn)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BegingetMOHAudioSource(string Item, ItemChoiceType180 ItemElementName, System.UInt64 sequence, bool sequenceSpecified, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("getMOHAudioSource", new object[] {
                    Item,
                    ItemElementName,
                    sequence,
                    sequenceSpecified}, callback, asyncState);
    }
    
    /// <remarks/>
    public GetMOHAudioSourceResReturn EndgetMOHAudioSource(System.IAsyncResult asyncResult, out System.UInt64 sequence, out bool sequenceSpecified) {
        object[] results = this.EndInvoke(asyncResult);
        sequence = ((System.UInt64)(results[1]));
        sequenceSpecified = ((bool)(results[2]));
        return ((GetMOHAudioSourceResReturn)(results[0]));
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.cisco.com/AXLPort/removeMOHAudioSource", RequestNamespace="http://www.cisco.com/AXL/API/1.0", ResponseNamespace="http://www.cisco.com/AXL/API/1.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string removeMOHAudioSource([System.Xml.Serialization.XmlElementAttribute("sourceId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="nonNegativeInteger")] [System.Xml.Serialization.XmlElementAttribute("uuid", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")] string Item, [System.Xml.Serialization.XmlIgnoreAttribute()] ItemChoiceType181 ItemElementName, [System.Xml.Serialization.XmlAttributeAttribute()] ref System.UInt64 sequence, [System.Xml.Serialization.XmlAttributeAttribute()] [System.Xml.Serialization.XmlIgnoreAttribute()] ref bool sequenceSpecified) {
        object[] results = this.Invoke("removeMOHAudioSource", new object[] {
                    Item,
                    ItemElementName,
                    sequence,
                    sequenceSpecified});
        sequence = ((System.UInt64)(results[1]));
        sequenceSpecified = ((bool)(results[2]));
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginremoveMOHAudioSource(string Item, ItemChoiceType181 ItemElementName, System.UInt64 sequence, bool sequenceSpecified, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("removeMOHAudioSource", new object[] {
                    Item,
                    ItemElementName,
                    sequence,
                    sequenceSpecified}, callback, asyncState);
    }
    
    /// <remarks/>
    public string EndremoveMOHAudioSource(System.IAsyncResult asyncResult, out System.UInt64 sequence, out bool sequenceSpecified) {
        object[] results = this.EndInvoke(asyncResult);
        sequence = ((System.UInt64)(results[1]));
        sequenceSpecified = ((bool)(results[2]));
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.cisco.com/AXLPort/listMediaResourceListByName", RequestNamespace="http://www.cisco.com/AXL/API/1.0", ResponseNamespace="http://www.cisco.com/AXL/API/1.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    [return: System.Xml.Serialization.XmlArrayAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [return: System.Xml.Serialization.XmlArrayItemAttribute("mediaResourceList", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
    public ListMediaResourceListResMediaResourceList[] listMediaResourceListByName([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string searchString, [System.Xml.Serialization.XmlAttributeAttribute()] ref System.UInt64 sequence, [System.Xml.Serialization.XmlAttributeAttribute()] [System.Xml.Serialization.XmlIgnoreAttribute()] ref bool sequenceSpecified) {
        object[] results = this.Invoke("listMediaResourceListByName", new object[] {
                    searchString,
                    sequence,
                    sequenceSpecified});
        sequence = ((System.UInt64)(results[1]));
        sequenceSpecified = ((bool)(results[2]));
        return ((ListMediaResourceListResMediaResourceList[])(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginlistMediaResourceListByName(string searchString, System.UInt64 sequence, bool sequenceSpecified, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("listMediaResourceListByName", new object[] {
                    searchString,
                    sequence,
                    sequenceSpecified}, callback, asyncState);
    }
    
    /// <remarks/>
    public ListMediaResourceListResMediaResourceList[] EndlistMediaResourceListByName(System.IAsyncResult asyncResult, out System.UInt64 sequence, out bool sequenceSpecified) {
        object[] results = this.EndInvoke(asyncResult);
        sequence = ((System.UInt64)(results[1]));
        sequenceSpecified = ((bool)(results[2]));
        return ((ListMediaResourceListResMediaResourceList[])(results[0]));
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.cisco.com/AXLPort/addMediaResourceList", RequestNamespace="http://www.cisco.com/AXL/API/1.0", ResponseNamespace="http://www.cisco.com/AXL/API/1.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string addMediaResourceList([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] XMediaResourceList mediaResourceList, [System.Xml.Serialization.XmlAttributeAttribute()] ref System.UInt64 sequence, [System.Xml.Serialization.XmlAttributeAttribute()] [System.Xml.Serialization.XmlIgnoreAttribute()] ref bool sequenceSpecified) {
        object[] results = this.Invoke("addMediaResourceList", new object[] {
                    mediaResourceList,
                    sequence,
                    sequenceSpecified});
        sequence = ((System.UInt64)(results[1]));
        sequenceSpecified = ((bool)(results[2]));
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginaddMediaResourceList(XMediaResourceList mediaResourceList, System.UInt64 sequence, bool sequenceSpecified, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("addMediaResourceList", new object[] {
                    mediaResourceList,
                    sequence,
                    sequenceSpecified}, callback, asyncState);
    }
    
    /// <remarks/>
    public string EndaddMediaResourceList(System.IAsyncResult asyncResult, out System.UInt64 sequence, out bool sequenceSpecified) {
        object[] results = this.EndInvoke(asyncResult);
        sequence = ((System.UInt64)(results[1]));
        sequenceSpecified = ((bool)(results[2]));
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.cisco.com/AXLPort/getMediaResourceList", RequestNamespace="http://www.cisco.com/AXL/API/1.0", ResponseNamespace="http://www.cisco.com/AXL/API/1.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public GetMediaResourceListResReturn getMediaResourceList([System.Xml.Serialization.XmlElementAttribute("name", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlElementAttribute("uuid", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")] string Item, [System.Xml.Serialization.XmlIgnoreAttribute()] ItemChoiceType182 ItemElementName, [System.Xml.Serialization.XmlAttributeAttribute()] ref System.UInt64 sequence, [System.Xml.Serialization.XmlAttributeAttribute()] [System.Xml.Serialization.XmlIgnoreAttribute()] ref bool sequenceSpecified) {
        object[] results = this.Invoke("getMediaResourceList", new object[] {
                    Item,
                    ItemElementName,
                    sequence,
                    sequenceSpecified});
        sequence = ((System.UInt64)(results[1]));
        sequenceSpecified = ((bool)(results[2]));
        return ((GetMediaResourceListResReturn)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BegingetMediaResourceList(string Item, ItemChoiceType182 ItemElementName, System.UInt64 sequence, bool sequenceSpecified, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("getMediaResourceList", new object[] {
                    Item,
                    ItemElementName,
                    sequence,
                    sequenceSpecified}, callback, asyncState);
    }
    
    /// <remarks/>
    public GetMediaResourceListResReturn EndgetMediaResourceList(System.IAsyncResult asyncResult, out System.UInt64 sequence, out bool sequenceSpecified) {
        object[] results = this.EndInvoke(asyncResult);
        sequence = ((System.UInt64)(results[1]));
        sequenceSpecified = ((bool)(results[2]));
        return ((GetMediaResourceListResReturn)(results[0]));
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.cisco.com/AXLPort/removeMediaResourceList", RequestNamespace="http://www.cisco.com/AXL/API/1.0", ResponseNamespace="http://www.cisco.com/AXL/API/1.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string removeMediaResourceList([System.Xml.Serialization.XmlElementAttribute("name", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlElementAttribute("uuid", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")] string Item, [System.Xml.Serialization.XmlIgnoreAttribute()] ItemChoiceType183 ItemElementName, [System.Xml.Serialization.XmlAttributeAttribute()] ref System.UInt64 sequence, [System.Xml.Serialization.XmlAttributeAttribute()] [System.Xml.Serialization.XmlIgnoreAttribute()] ref bool sequenceSpecified) {
        object[] results = this.Invoke("removeMediaResourceList", new object[] {
                    Item,
                    ItemElementName,
                    sequence,
                    sequenceSpecified});
        sequence = ((System.UInt64)(results[1]));
        sequenceSpecified = ((bool)(results[2]));
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginremoveMediaResourceList(string Item, ItemChoiceType183 ItemElementName, System.UInt64 sequence, bool sequenceSpecified, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("removeMediaResourceList", new object[] {
                    Item,
                    ItemElementName,
                    sequence,
                    sequenceSpecified}, callback, asyncState);
    }
    
    /// <remarks/>
    public string EndremoveMediaResourceList(System.IAsyncResult asyncResult, out System.UInt64 sequence, out bool sequenceSpecified) {
        object[] results = this.EndInvoke(asyncResult);
        sequence = ((System.UInt64)(results[1]));
        sequenceSpecified = ((bool)(results[2]));
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.cisco.com/AXLPort/updateMediaResourceList", RequestNamespace="http://www.cisco.com/AXL/API/1.0", ResponseNamespace="http://www.cisco.com/AXL/API/1.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string updateMediaResourceList([System.Xml.Serialization.XmlElementAttribute("name", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlElementAttribute("uuid", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")] string Item, [System.Xml.Serialization.XmlIgnoreAttribute()] ItemChoiceType184 ItemElementName, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string newName, [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlArrayItemAttribute("member", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)] XMediaResourceListMember[] members, [System.Xml.Serialization.XmlAttributeAttribute()] ref System.UInt64 sequence, [System.Xml.Serialization.XmlAttributeAttribute()] [System.Xml.Serialization.XmlIgnoreAttribute()] ref bool sequenceSpecified) {
        object[] results = this.Invoke("updateMediaResourceList", new object[] {
                    Item,
                    ItemElementName,
                    newName,
                    members,
                    sequence,
                    sequenceSpecified});
        sequence = ((System.UInt64)(results[1]));
        sequenceSpecified = ((bool)(results[2]));
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginupdateMediaResourceList(string Item, ItemChoiceType184 ItemElementName, string newName, XMediaResourceListMember[] members, System.UInt64 sequence, bool sequenceSpecified, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("updateMediaResourceList", new object[] {
                    Item,
                    ItemElementName,
                    newName,
                    members,
                    sequence,
                    sequenceSpecified}, callback, asyncState);
    }
    
    /// <remarks/>
    public string EndupdateMediaResourceList(System.IAsyncResult asyncResult, out System.UInt64 sequence, out bool sequenceSpecified) {
        object[] results = this.EndInvoke(asyncResult);
        sequence = ((System.UInt64)(results[1]));
        sequenceSpecified = ((bool)(results[2]));
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.cisco.com/AXLPort/listMediaResourceGroupByName", RequestNamespace="http://www.cisco.com/AXL/API/1.0", ResponseNamespace="http://www.cisco.com/AXL/API/1.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    [return: System.Xml.Serialization.XmlArrayAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [return: System.Xml.Serialization.XmlArrayItemAttribute("mediaResourceGroup", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
    public ListMediaResourceGroupResMediaResourceGroup[] listMediaResourceGroupByName([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string searchString, [System.Xml.Serialization.XmlAttributeAttribute()] ref System.UInt64 sequence, [System.Xml.Serialization.XmlAttributeAttribute()] [System.Xml.Serialization.XmlIgnoreAttribute()] ref bool sequenceSpecified) {
        object[] results = this.Invoke("listMediaResourceGroupByName", new object[] {
                    searchString,
                    sequence,
                    sequenceSpecified});
        sequence = ((System.UInt64)(results[1]));
        sequenceSpecified = ((bool)(results[2]));
        return ((ListMediaResourceGroupResMediaResourceGroup[])(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginlistMediaResourceGroupByName(string searchString, System.UInt64 sequence, bool sequenceSpecified, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("listMediaResourceGroupByName", new object[] {
                    searchString,
                    sequence,
                    sequenceSpecified}, callback, asyncState);
    }
    
    /// <remarks/>
    public ListMediaResourceGroupResMediaResourceGroup[] EndlistMediaResourceGroupByName(System.IAsyncResult asyncResult, out System.UInt64 sequence, out bool sequenceSpecified) {
        object[] results = this.EndInvoke(asyncResult);
        sequence = ((System.UInt64)(results[1]));
        sequenceSpecified = ((bool)(results[2]));
        return ((ListMediaResourceGroupResMediaResourceGroup[])(results[0]));
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.cisco.com/AXLPort/addMediaResourceGroup", RequestNamespace="http://www.cisco.com/AXL/API/1.0", ResponseNamespace="http://www.cisco.com/AXL/API/1.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string addMediaResourceGroup([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] XMediaResourceGroup mediaResourceGroup, [System.Xml.Serialization.XmlAttributeAttribute()] ref System.UInt64 sequence, [System.Xml.Serialization.XmlAttributeAttribute()] [System.Xml.Serialization.XmlIgnoreAttribute()] ref bool sequenceSpecified) {
        object[] results = this.Invoke("addMediaResourceGroup", new object[] {
                    mediaResourceGroup,
                    sequence,
                    sequenceSpecified});
        sequence = ((System.UInt64)(results[1]));
        sequenceSpecified = ((bool)(results[2]));
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginaddMediaResourceGroup(XMediaResourceGroup mediaResourceGroup, System.UInt64 sequence, bool sequenceSpecified, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("addMediaResourceGroup", new object[] {
                    mediaResourceGroup,
                    sequence,
                    sequenceSpecified}, callback, asyncState);
    }
    
    /// <remarks/>
    public string EndaddMediaResourceGroup(System.IAsyncResult asyncResult, out System.UInt64 sequence, out bool sequenceSpecified) {
        object[] results = this.EndInvoke(asyncResult);
        sequence = ((System.UInt64)(results[1]));
        sequenceSpecified = ((bool)(results[2]));
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.cisco.com/AXLPort/getMediaResourceGroup", RequestNamespace="http://www.cisco.com/AXL/API/1.0", ResponseNamespace="http://www.cisco.com/AXL/API/1.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public GetMediaResourceGroupResReturn getMediaResourceGroup([System.Xml.Serialization.XmlElementAttribute("name", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlElementAttribute("uuid", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")] string Item, [System.Xml.Serialization.XmlIgnoreAttribute()] ItemChoiceType185 ItemElementName, [System.Xml.Serialization.XmlAttributeAttribute()] ref System.UInt64 sequence, [System.Xml.Serialization.XmlAttributeAttribute()] [System.Xml.Serialization.XmlIgnoreAttribute()] ref bool sequenceSpecified) {
        object[] results = this.Invoke("getMediaResourceGroup", new object[] {
                    Item,
                    ItemElementName,
                    sequence,
                    sequenceSpecified});
        sequence = ((System.UInt64)(results[1]));
        sequenceSpecified = ((bool)(results[2]));
        return ((GetMediaResourceGroupResReturn)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BegingetMediaResourceGroup(string Item, ItemChoiceType185 ItemElementName, System.UInt64 sequence, bool sequenceSpecified, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("getMediaResourceGroup", new object[] {
                    Item,
                    ItemElementName,
                    sequence,
                    sequenceSpecified}, callback, asyncState);
    }
    
    /// <remarks/>
    public GetMediaResourceGroupResReturn EndgetMediaResourceGroup(System.IAsyncResult asyncResult, out System.UInt64 sequence, out bool sequenceSpecified) {
        object[] results = this.EndInvoke(asyncResult);
        sequence = ((System.UInt64)(results[1]));
        sequenceSpecified = ((bool)(results[2]));
        return ((GetMediaResourceGroupResReturn)(results[0]));
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.cisco.com/AXLPort/removeMediaResourceGroup", RequestNamespace="http://www.cisco.com/AXL/API/1.0", ResponseNamespace="http://www.cisco.com/AXL/API/1.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string removeMediaResourceGroup([System.Xml.Serialization.XmlElementAttribute("name", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlElementAttribute("uuid", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")] string Item, [System.Xml.Serialization.XmlIgnoreAttribute()] ItemChoiceType186 ItemElementName, [System.Xml.Serialization.XmlAttributeAttribute()] ref System.UInt64 sequence, [System.Xml.Serialization.XmlAttributeAttribute()] [System.Xml.Serialization.XmlIgnoreAttribute()] ref bool sequenceSpecified) {
        object[] results = this.Invoke("removeMediaResourceGroup", new object[] {
                    Item,
                    ItemElementName,
                    sequence,
                    sequenceSpecified});
        sequence = ((System.UInt64)(results[1]));
        sequenceSpecified = ((bool)(results[2]));
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginremoveMediaResourceGroup(string Item, ItemChoiceType186 ItemElementName, System.UInt64 sequence, bool sequenceSpecified, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("removeMediaResourceGroup", new object[] {
                    Item,
                    ItemElementName,
                    sequence,
                    sequenceSpecified}, callback, asyncState);
    }
    
    /// <remarks/>
    public string EndremoveMediaResourceGroup(System.IAsyncResult asyncResult, out System.UInt64 sequence, out bool sequenceSpecified) {
        object[] results = this.EndInvoke(asyncResult);
        sequence = ((System.UInt64)(results[1]));
        sequenceSpecified = ((bool)(results[2]));
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.cisco.com/AXLPort/updateMediaResourceGroup", RequestNamespace="http://www.cisco.com/AXL/API/1.0", ResponseNamespace="http://www.cisco.com/AXL/API/1.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string updateMediaResourceGroup([System.Xml.Serialization.XmlElementAttribute("name", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlElementAttribute("uuid", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")] string Item, [System.Xml.Serialization.XmlIgnoreAttribute()] ItemChoiceType187 ItemElementName, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string newName, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string description, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] bool multicast, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool multicastSpecified, [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlArrayItemAttribute("member", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)] XMediaResourceGroupMember[] members, [System.Xml.Serialization.XmlAttributeAttribute()] ref System.UInt64 sequence, [System.Xml.Serialization.XmlAttributeAttribute()] [System.Xml.Serialization.XmlIgnoreAttribute()] ref bool sequenceSpecified) {
        object[] results = this.Invoke("updateMediaResourceGroup", new object[] {
                    Item,
                    ItemElementName,
                    newName,
                    description,
                    multicast,
                    multicastSpecified,
                    members,
                    sequence,
                    sequenceSpecified});
        sequence = ((System.UInt64)(results[1]));
        sequenceSpecified = ((bool)(results[2]));
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginupdateMediaResourceGroup(string Item, ItemChoiceType187 ItemElementName, string newName, string description, bool multicast, bool multicastSpecified, XMediaResourceGroupMember[] members, System.UInt64 sequence, bool sequenceSpecified, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("updateMediaResourceGroup", new object[] {
                    Item,
                    ItemElementName,
                    newName,
                    description,
                    multicast,
                    multicastSpecified,
                    members,
                    sequence,
                    sequenceSpecified}, callback, asyncState);
    }
    
    /// <remarks/>
    public string EndupdateMediaResourceGroup(System.IAsyncResult asyncResult, out System.UInt64 sequence, out bool sequenceSpecified) {
        object[] results = this.EndInvoke(asyncResult);
        sequence = ((System.UInt64)(results[1]));
        sequenceSpecified = ((bool)(results[2]));
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.cisco.com/AXLPort/listLocationByName", RequestNamespace="http://www.cisco.com/AXL/API/1.0", ResponseNamespace="http://www.cisco.com/AXL/API/1.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    [return: System.Xml.Serialization.XmlArrayAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [return: System.Xml.Serialization.XmlArrayItemAttribute("location", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
    public XLocation[] listLocationByName([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string searchString, [System.Xml.Serialization.XmlAttributeAttribute()] ref System.UInt64 sequence, [System.Xml.Serialization.XmlAttributeAttribute()] [System.Xml.Serialization.XmlIgnoreAttribute()] ref bool sequenceSpecified) {
        object[] results = this.Invoke("listLocationByName", new object[] {
                    searchString,
                    sequence,
                    sequenceSpecified});
        sequence = ((System.UInt64)(results[1]));
        sequenceSpecified = ((bool)(results[2]));
        return ((XLocation[])(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginlistLocationByName(string searchString, System.UInt64 sequence, bool sequenceSpecified, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("listLocationByName", new object[] {
                    searchString,
                    sequence,
                    sequenceSpecified}, callback, asyncState);
    }
    
    /// <remarks/>
    public XLocation[] EndlistLocationByName(System.IAsyncResult asyncResult, out System.UInt64 sequence, out bool sequenceSpecified) {
        object[] results = this.EndInvoke(asyncResult);
        sequence = ((System.UInt64)(results[1]));
        sequenceSpecified = ((bool)(results[2]));
        return ((XLocation[])(results[0]));
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.cisco.com/AXLPort/listAARGroupByName", RequestNamespace="http://www.cisco.com/AXL/API/1.0", ResponseNamespace="http://www.cisco.com/AXL/API/1.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    [return: System.Xml.Serialization.XmlArrayAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [return: System.Xml.Serialization.XmlArrayItemAttribute("aarGroup", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
    public XAARNeighborhood[] listAARGroupByName([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string searchString, [System.Xml.Serialization.XmlAttributeAttribute()] ref System.UInt64 sequence, [System.Xml.Serialization.XmlAttributeAttribute()] [System.Xml.Serialization.XmlIgnoreAttribute()] ref bool sequenceSpecified) {
        object[] results = this.Invoke("listAARGroupByName", new object[] {
                    searchString,
                    sequence,
                    sequenceSpecified});
        sequence = ((System.UInt64)(results[1]));
        sequenceSpecified = ((bool)(results[2]));
        return ((XAARNeighborhood[])(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginlistAARGroupByName(string searchString, System.UInt64 sequence, bool sequenceSpecified, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("listAARGroupByName", new object[] {
                    searchString,
                    sequence,
                    sequenceSpecified}, callback, asyncState);
    }
    
    /// <remarks/>
    public XAARNeighborhood[] EndlistAARGroupByName(System.IAsyncResult asyncResult, out System.UInt64 sequence, out bool sequenceSpecified) {
        object[] results = this.EndInvoke(asyncResult);
        sequence = ((System.UInt64)(results[1]));
        sequenceSpecified = ((bool)(results[2]));
        return ((XAARNeighborhood[])(results[0]));
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.cisco.com/AXLPort/listVoiceMailProfileByName", RequestNamespace="http://www.cisco.com/AXL/API/1.0", ResponseNamespace="http://www.cisco.com/AXL/API/1.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    [return: System.Xml.Serialization.XmlArrayAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [return: System.Xml.Serialization.XmlArrayItemAttribute("voiceMailProfile", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
    public XVoiceMailProfile[] listVoiceMailProfileByName([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string searchString, [System.Xml.Serialization.XmlAttributeAttribute()] ref System.UInt64 sequence, [System.Xml.Serialization.XmlAttributeAttribute()] [System.Xml.Serialization.XmlIgnoreAttribute()] ref bool sequenceSpecified) {
        object[] results = this.Invoke("listVoiceMailProfileByName", new object[] {
                    searchString,
                    sequence,
                    sequenceSpecified});
        sequence = ((System.UInt64)(results[1]));
        sequenceSpecified = ((bool)(results[2]));
        return ((XVoiceMailProfile[])(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginlistVoiceMailProfileByName(string searchString, System.UInt64 sequence, bool sequenceSpecified, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("listVoiceMailProfileByName", new object[] {
                    searchString,
                    sequence,
                    sequenceSpecified}, callback, asyncState);
    }
    
    /// <remarks/>
    public XVoiceMailProfile[] EndlistVoiceMailProfileByName(System.IAsyncResult asyncResult, out System.UInt64 sequence, out bool sequenceSpecified) {
        object[] results = this.EndInvoke(asyncResult);
        sequence = ((System.UInt64)(results[1]));
        sequenceSpecified = ((bool)(results[2]));
        return ((XVoiceMailProfile[])(results[0]));
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.cisco.com/AXLPort/listGatekeeperByName", RequestNamespace="http://www.cisco.com/AXL/API/1.0", ResponseNamespace="http://www.cisco.com/AXL/API/1.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    [return: System.Xml.Serialization.XmlArrayAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [return: System.Xml.Serialization.XmlArrayItemAttribute("gatekeeper", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
    public ListGatekeeperResGatekeeper[] listGatekeeperByName([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string searchString, [System.Xml.Serialization.XmlAttributeAttribute()] ref System.UInt64 sequence, [System.Xml.Serialization.XmlAttributeAttribute()] [System.Xml.Serialization.XmlIgnoreAttribute()] ref bool sequenceSpecified) {
        object[] results = this.Invoke("listGatekeeperByName", new object[] {
                    searchString,
                    sequence,
                    sequenceSpecified});
        sequence = ((System.UInt64)(results[1]));
        sequenceSpecified = ((bool)(results[2]));
        return ((ListGatekeeperResGatekeeper[])(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginlistGatekeeperByName(string searchString, System.UInt64 sequence, bool sequenceSpecified, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("listGatekeeperByName", new object[] {
                    searchString,
                    sequence,
                    sequenceSpecified}, callback, asyncState);
    }
    
    /// <remarks/>
    public ListGatekeeperResGatekeeper[] EndlistGatekeeperByName(System.IAsyncResult asyncResult, out System.UInt64 sequence, out bool sequenceSpecified) {
        object[] results = this.EndInvoke(asyncResult);
        sequence = ((System.UInt64)(results[1]));
        sequenceSpecified = ((bool)(results[2]));
        return ((ListGatekeeperResGatekeeper[])(results[0]));
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.cisco.com/AXLPort/addGatekeeper", RequestNamespace="http://www.cisco.com/AXL/API/1.0", ResponseNamespace="http://www.cisco.com/AXL/API/1.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string addGatekeeper([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] XGatekeeper gatekeeper, [System.Xml.Serialization.XmlAttributeAttribute()] ref System.UInt64 sequence, [System.Xml.Serialization.XmlAttributeAttribute()] [System.Xml.Serialization.XmlIgnoreAttribute()] ref bool sequenceSpecified) {
        object[] results = this.Invoke("addGatekeeper", new object[] {
                    gatekeeper,
                    sequence,
                    sequenceSpecified});
        sequence = ((System.UInt64)(results[1]));
        sequenceSpecified = ((bool)(results[2]));
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginaddGatekeeper(XGatekeeper gatekeeper, System.UInt64 sequence, bool sequenceSpecified, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("addGatekeeper", new object[] {
                    gatekeeper,
                    sequence,
                    sequenceSpecified}, callback, asyncState);
    }
    
    /// <remarks/>
    public string EndaddGatekeeper(System.IAsyncResult asyncResult, out System.UInt64 sequence, out bool sequenceSpecified) {
        object[] results = this.EndInvoke(asyncResult);
        sequence = ((System.UInt64)(results[1]));
        sequenceSpecified = ((bool)(results[2]));
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.cisco.com/AXLPort/getGatekeeper", RequestNamespace="http://www.cisco.com/AXL/API/1.0", ResponseNamespace="http://www.cisco.com/AXL/API/1.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public GetGatekeeperResReturn getGatekeeper([System.Xml.Serialization.XmlElementAttribute("name", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlElementAttribute("uuid", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")] string Item, [System.Xml.Serialization.XmlIgnoreAttribute()] ItemChoiceType188 ItemElementName, [System.Xml.Serialization.XmlAttributeAttribute()] ref System.UInt64 sequence, [System.Xml.Serialization.XmlAttributeAttribute()] [System.Xml.Serialization.XmlIgnoreAttribute()] ref bool sequenceSpecified) {
        object[] results = this.Invoke("getGatekeeper", new object[] {
                    Item,
                    ItemElementName,
                    sequence,
                    sequenceSpecified});
        sequence = ((System.UInt64)(results[1]));
        sequenceSpecified = ((bool)(results[2]));
        return ((GetGatekeeperResReturn)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BegingetGatekeeper(string Item, ItemChoiceType188 ItemElementName, System.UInt64 sequence, bool sequenceSpecified, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("getGatekeeper", new object[] {
                    Item,
                    ItemElementName,
                    sequence,
                    sequenceSpecified}, callback, asyncState);
    }
    
    /// <remarks/>
    public GetGatekeeperResReturn EndgetGatekeeper(System.IAsyncResult asyncResult, out System.UInt64 sequence, out bool sequenceSpecified) {
        object[] results = this.EndInvoke(asyncResult);
        sequence = ((System.UInt64)(results[1]));
        sequenceSpecified = ((bool)(results[2]));
        return ((GetGatekeeperResReturn)(results[0]));
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.cisco.com/AXLPort/removeGatekeeper", RequestNamespace="http://www.cisco.com/AXL/API/1.0", ResponseNamespace="http://www.cisco.com/AXL/API/1.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string removeGatekeeper([System.Xml.Serialization.XmlElementAttribute("name", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlElementAttribute("uuid", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")] string Item, [System.Xml.Serialization.XmlIgnoreAttribute()] ItemChoiceType189 ItemElementName, [System.Xml.Serialization.XmlAttributeAttribute()] ref System.UInt64 sequence, [System.Xml.Serialization.XmlAttributeAttribute()] [System.Xml.Serialization.XmlIgnoreAttribute()] ref bool sequenceSpecified) {
        object[] results = this.Invoke("removeGatekeeper", new object[] {
                    Item,
                    ItemElementName,
                    sequence,
                    sequenceSpecified});
        sequence = ((System.UInt64)(results[1]));
        sequenceSpecified = ((bool)(results[2]));
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginremoveGatekeeper(string Item, ItemChoiceType189 ItemElementName, System.UInt64 sequence, bool sequenceSpecified, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("removeGatekeeper", new object[] {
                    Item,
                    ItemElementName,
                    sequence,
                    sequenceSpecified}, callback, asyncState);
    }
    
    /// <remarks/>
    public string EndremoveGatekeeper(System.IAsyncResult asyncResult, out System.UInt64 sequence, out bool sequenceSpecified) {
        object[] results = this.EndInvoke(asyncResult);
        sequence = ((System.UInt64)(results[1]));
        sequenceSpecified = ((bool)(results[2]));
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.cisco.com/AXLPort/updateGatekeeper", RequestNamespace="http://www.cisco.com/AXL/API/1.0", ResponseNamespace="http://www.cisco.com/AXL/API/1.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string updateGatekeeper([System.Xml.Serialization.XmlElementAttribute("name", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlElementAttribute("uuid", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")] string Item, [System.Xml.Serialization.XmlIgnoreAttribute()] ItemChoiceType190 ItemElementName, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string newName, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string description, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="nonNegativeInteger")] string rrqTimeToLive, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] bool retryTimeout, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool retryTimeoutSpecified, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] bool enableDevice, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool enableDeviceSpecified, [System.Xml.Serialization.XmlAttributeAttribute()] ref System.UInt64 sequence, [System.Xml.Serialization.XmlAttributeAttribute()] [System.Xml.Serialization.XmlIgnoreAttribute()] ref bool sequenceSpecified) {
        object[] results = this.Invoke("updateGatekeeper", new object[] {
                    Item,
                    ItemElementName,
                    newName,
                    description,
                    rrqTimeToLive,
                    retryTimeout,
                    retryTimeoutSpecified,
                    enableDevice,
                    enableDeviceSpecified,
                    sequence,
                    sequenceSpecified});
        sequence = ((System.UInt64)(results[1]));
        sequenceSpecified = ((bool)(results[2]));
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginupdateGatekeeper(string Item, ItemChoiceType190 ItemElementName, string newName, string description, string rrqTimeToLive, bool retryTimeout, bool retryTimeoutSpecified, bool enableDevice, bool enableDeviceSpecified, System.UInt64 sequence, bool sequenceSpecified, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("updateGatekeeper", new object[] {
                    Item,
                    ItemElementName,
                    newName,
                    description,
                    rrqTimeToLive,
                    retryTimeout,
                    retryTimeoutSpecified,
                    enableDevice,
                    enableDeviceSpecified,
                    sequence,
                    sequenceSpecified}, callback, asyncState);
    }
    
    /// <remarks/>
    public string EndupdateGatekeeper(System.IAsyncResult asyncResult, out System.UInt64 sequence, out bool sequenceSpecified) {
        object[] results = this.EndInvoke(asyncResult);
        sequence = ((System.UInt64)(results[1]));
        sequenceSpecified = ((bool)(results[2]));
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.cisco.com/AXLPort/addH323Phone", RequestNamespace="http://www.cisco.com/AXL/API/1.0", ResponseNamespace="http://www.cisco.com/AXL/API/1.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string addH323Phone([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] XH323Phone phone, [System.Xml.Serialization.XmlAttributeAttribute()] ref System.UInt64 sequence, [System.Xml.Serialization.XmlAttributeAttribute()] [System.Xml.Serialization.XmlIgnoreAttribute()] ref bool sequenceSpecified) {
        object[] results = this.Invoke("addH323Phone", new object[] {
                    phone,
                    sequence,
                    sequenceSpecified});
        sequence = ((System.UInt64)(results[1]));
        sequenceSpecified = ((bool)(results[2]));
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginaddH323Phone(XH323Phone phone, System.UInt64 sequence, bool sequenceSpecified, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("addH323Phone", new object[] {
                    phone,
                    sequence,
                    sequenceSpecified}, callback, asyncState);
    }
    
    /// <remarks/>
    public string EndaddH323Phone(System.IAsyncResult asyncResult, out System.UInt64 sequence, out bool sequenceSpecified) {
        object[] results = this.EndInvoke(asyncResult);
        sequence = ((System.UInt64)(results[1]));
        sequenceSpecified = ((bool)(results[2]));
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.cisco.com/AXLPort/addH323Gateway", RequestNamespace="http://www.cisco.com/AXL/API/1.0", ResponseNamespace="http://www.cisco.com/AXL/API/1.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string addH323Gateway([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] XH323Gateway gateway, [System.Xml.Serialization.XmlAttributeAttribute()] ref System.UInt64 sequence, [System.Xml.Serialization.XmlAttributeAttribute()] [System.Xml.Serialization.XmlIgnoreAttribute()] ref bool sequenceSpecified) {
        object[] results = this.Invoke("addH323Gateway", new object[] {
                    gateway,
                    sequence,
                    sequenceSpecified});
        sequence = ((System.UInt64)(results[1]));
        sequenceSpecified = ((bool)(results[2]));
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginaddH323Gateway(XH323Gateway gateway, System.UInt64 sequence, bool sequenceSpecified, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("addH323Gateway", new object[] {
                    gateway,
                    sequence,
                    sequenceSpecified}, callback, asyncState);
    }
    
    /// <remarks/>
    public string EndaddH323Gateway(System.IAsyncResult asyncResult, out System.UInt64 sequence, out bool sequenceSpecified) {
        object[] results = this.EndInvoke(asyncResult);
        sequence = ((System.UInt64)(results[1]));
        sequenceSpecified = ((bool)(results[2]));
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.cisco.com/AXLPort/getH323Phone", RequestNamespace="http://www.cisco.com/AXL/API/1.0", ResponseNamespace="http://www.cisco.com/AXL/API/1.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public GetH323PhoneResReturn getH323Phone([System.Xml.Serialization.XmlElementAttribute("name", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlElementAttribute("uuid", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")] string Item, [System.Xml.Serialization.XmlIgnoreAttribute()] ItemChoiceType191 ItemElementName, [System.Xml.Serialization.XmlAttributeAttribute()] ref System.UInt64 sequence, [System.Xml.Serialization.XmlAttributeAttribute()] [System.Xml.Serialization.XmlIgnoreAttribute()] ref bool sequenceSpecified) {
        object[] results = this.Invoke("getH323Phone", new object[] {
                    Item,
                    ItemElementName,
                    sequence,
                    sequenceSpecified});
        sequence = ((System.UInt64)(results[1]));
        sequenceSpecified = ((bool)(results[2]));
        return ((GetH323PhoneResReturn)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BegingetH323Phone(string Item, ItemChoiceType191 ItemElementName, System.UInt64 sequence, bool sequenceSpecified, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("getH323Phone", new object[] {
                    Item,
                    ItemElementName,
                    sequence,
                    sequenceSpecified}, callback, asyncState);
    }
    
    /// <remarks/>
    public GetH323PhoneResReturn EndgetH323Phone(System.IAsyncResult asyncResult, out System.UInt64 sequence, out bool sequenceSpecified) {
        object[] results = this.EndInvoke(asyncResult);
        sequence = ((System.UInt64)(results[1]));
        sequenceSpecified = ((bool)(results[2]));
        return ((GetH323PhoneResReturn)(results[0]));
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.cisco.com/AXLPort/getH323Gateway", RequestNamespace="http://www.cisco.com/AXL/API/1.0", ResponseNamespace="http://www.cisco.com/AXL/API/1.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public GetH323GatewayResReturn getH323Gateway([System.Xml.Serialization.XmlElementAttribute("name", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlElementAttribute("uuid", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")] string Item, [System.Xml.Serialization.XmlIgnoreAttribute()] ItemChoiceType192 ItemElementName, [System.Xml.Serialization.XmlAttributeAttribute()] ref System.UInt64 sequence, [System.Xml.Serialization.XmlAttributeAttribute()] [System.Xml.Serialization.XmlIgnoreAttribute()] ref bool sequenceSpecified) {
        object[] results = this.Invoke("getH323Gateway", new object[] {
                    Item,
                    ItemElementName,
                    sequence,
                    sequenceSpecified});
        sequence = ((System.UInt64)(results[1]));
        sequenceSpecified = ((bool)(results[2]));
        return ((GetH323GatewayResReturn)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BegingetH323Gateway(string Item, ItemChoiceType192 ItemElementName, System.UInt64 sequence, bool sequenceSpecified, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("getH323Gateway", new object[] {
                    Item,
                    ItemElementName,
                    sequence,
                    sequenceSpecified}, callback, asyncState);
    }
    
    /// <remarks/>
    public GetH323GatewayResReturn EndgetH323Gateway(System.IAsyncResult asyncResult, out System.UInt64 sequence, out bool sequenceSpecified) {
        object[] results = this.EndInvoke(asyncResult);
        sequence = ((System.UInt64)(results[1]));
        sequenceSpecified = ((bool)(results[2]));
        return ((GetH323GatewayResReturn)(results[0]));
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.cisco.com/AXLPort/getH323Trunk", RequestNamespace="http://www.cisco.com/AXL/API/1.0", ResponseNamespace="http://www.cisco.com/AXL/API/1.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public GetH323TrunkReturn getH323Trunk([System.Xml.Serialization.XmlElementAttribute("name", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlElementAttribute("uuid", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")] string Item, [System.Xml.Serialization.XmlIgnoreAttribute()] ItemChoiceType193 ItemElementName, [System.Xml.Serialization.XmlAttributeAttribute()] ref System.UInt64 sequence, [System.Xml.Serialization.XmlAttributeAttribute()] [System.Xml.Serialization.XmlIgnoreAttribute()] ref bool sequenceSpecified) {
        object[] results = this.Invoke("getH323Trunk", new object[] {
                    Item,
                    ItemElementName,
                    sequence,
                    sequenceSpecified});
        sequence = ((System.UInt64)(results[1]));
        sequenceSpecified = ((bool)(results[2]));
        return ((GetH323TrunkReturn)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BegingetH323Trunk(string Item, ItemChoiceType193 ItemElementName, System.UInt64 sequence, bool sequenceSpecified, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("getH323Trunk", new object[] {
                    Item,
                    ItemElementName,
                    sequence,
                    sequenceSpecified}, callback, asyncState);
    }
    
    /// <remarks/>
    public GetH323TrunkReturn EndgetH323Trunk(System.IAsyncResult asyncResult, out System.UInt64 sequence, out bool sequenceSpecified) {
        object[] results = this.EndInvoke(asyncResult);
        sequence = ((System.UInt64)(results[1]));
        sequenceSpecified = ((bool)(results[2]));
        return ((GetH323TrunkReturn)(results[0]));
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.cisco.com/AXLPort/removeH323Phone", RequestNamespace="http://www.cisco.com/AXL/API/1.0", ResponseNamespace="http://www.cisco.com/AXL/API/1.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string removeH323Phone([System.Xml.Serialization.XmlElementAttribute("name", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlElementAttribute("uuid", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")] string Item, [System.Xml.Serialization.XmlIgnoreAttribute()] ItemChoiceType194 ItemElementName, [System.Xml.Serialization.XmlAttributeAttribute()] ref System.UInt64 sequence, [System.Xml.Serialization.XmlAttributeAttribute()] [System.Xml.Serialization.XmlIgnoreAttribute()] ref bool sequenceSpecified) {
        object[] results = this.Invoke("removeH323Phone", new object[] {
                    Item,
                    ItemElementName,
                    sequence,
                    sequenceSpecified});
        sequence = ((System.UInt64)(results[1]));
        sequenceSpecified = ((bool)(results[2]));
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginremoveH323Phone(string Item, ItemChoiceType194 ItemElementName, System.UInt64 sequence, bool sequenceSpecified, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("removeH323Phone", new object[] {
                    Item,
                    ItemElementName,
                    sequence,
                    sequenceSpecified}, callback, asyncState);
    }
    
    /// <remarks/>
    public string EndremoveH323Phone(System.IAsyncResult asyncResult, out System.UInt64 sequence, out bool sequenceSpecified) {
        object[] results = this.EndInvoke(asyncResult);
        sequence = ((System.UInt64)(results[1]));
        sequenceSpecified = ((bool)(results[2]));
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.cisco.com/AXLPort/removeH323Gateway", RequestNamespace="http://www.cisco.com/AXL/API/1.0", ResponseNamespace="http://www.cisco.com/AXL/API/1.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string removeH323Gateway([System.Xml.Serialization.XmlElementAttribute("name", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlElementAttribute("uuid", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")] string Item, [System.Xml.Serialization.XmlIgnoreAttribute()] ItemChoiceType195 ItemElementName, [System.Xml.Serialization.XmlAttributeAttribute()] ref System.UInt64 sequence, [System.Xml.Serialization.XmlAttributeAttribute()] [System.Xml.Serialization.XmlIgnoreAttribute()] ref bool sequenceSpecified) {
        object[] results = this.Invoke("removeH323Gateway", new object[] {
                    Item,
                    ItemElementName,
                    sequence,
                    sequenceSpecified});
        sequence = ((System.UInt64)(results[1]));
        sequenceSpecified = ((bool)(results[2]));
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginremoveH323Gateway(string Item, ItemChoiceType195 ItemElementName, System.UInt64 sequence, bool sequenceSpecified, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("removeH323Gateway", new object[] {
                    Item,
                    ItemElementName,
                    sequence,
                    sequenceSpecified}, callback, asyncState);
    }
    
    /// <remarks/>
    public string EndremoveH323Gateway(System.IAsyncResult asyncResult, out System.UInt64 sequence, out bool sequenceSpecified) {
        object[] results = this.EndInvoke(asyncResult);
        sequence = ((System.UInt64)(results[1]));
        sequenceSpecified = ((bool)(results[2]));
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.cisco.com/AXLPort/removeH323Trunk", RequestNamespace="http://www.cisco.com/AXL/API/1.0", ResponseNamespace="http://www.cisco.com/AXL/API/1.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string removeH323Trunk([System.Xml.Serialization.XmlElementAttribute("name", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlElementAttribute("uuid", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")] string Item, [System.Xml.Serialization.XmlIgnoreAttribute()] ItemChoiceType196 ItemElementName, [System.Xml.Serialization.XmlAttributeAttribute()] ref System.UInt64 sequence, [System.Xml.Serialization.XmlAttributeAttribute()] [System.Xml.Serialization.XmlIgnoreAttribute()] ref bool sequenceSpecified) {
        object[] results = this.Invoke("removeH323Trunk", new object[] {
                    Item,
                    ItemElementName,
                    sequence,
                    sequenceSpecified});
        sequence = ((System.UInt64)(results[1]));
        sequenceSpecified = ((bool)(results[2]));
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginremoveH323Trunk(string Item, ItemChoiceType196 ItemElementName, System.UInt64 sequence, bool sequenceSpecified, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("removeH323Trunk", new object[] {
                    Item,
                    ItemElementName,
                    sequence,
                    sequenceSpecified}, callback, asyncState);
    }
    
    /// <remarks/>
    public string EndremoveH323Trunk(System.IAsyncResult asyncResult, out System.UInt64 sequence, out bool sequenceSpecified) {
        object[] results = this.EndInvoke(asyncResult);
        sequence = ((System.UInt64)(results[1]));
        sequenceSpecified = ((bool)(results[2]));
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.cisco.com/AXLPort/updateH323Phone", RequestNamespace="http://www.cisco.com/AXL/API/1.0", ResponseNamespace="http://www.cisco.com/AXL/API/1.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string updateH323Phone(
                [System.Xml.Serialization.XmlElementAttribute("name", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlElementAttribute("uuid", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")] string Item, 
                [System.Xml.Serialization.XmlIgnoreAttribute()] ItemChoiceType197 ItemElementName, 
                [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string newName, 
                [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string description, 
                [System.Xml.Serialization.XmlElementAttribute("callingSearchSpaceId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlElementAttribute("callingSearchSpaceName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlChoiceIdentifierAttribute("Item1ElementName")] string Item1, 
                [System.Xml.Serialization.XmlIgnoreAttribute()] Item1ChoiceType36 Item1ElementName, 
                [System.Xml.Serialization.XmlElementAttribute("devicePoolName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlElementAttribute("devicePoolId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlChoiceIdentifierAttribute("Item2ElementName")] string Item2, 
                [System.Xml.Serialization.XmlIgnoreAttribute()] Item2ChoiceType25 Item2ElementName, 
                [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] XNetworkLocation networkLocation, 
                [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool networkLocationSpecified, 
                [System.Xml.Serialization.XmlElementAttribute("locationName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlElementAttribute("locationId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlChoiceIdentifierAttribute("Item3ElementName")] string Item3, 
                [System.Xml.Serialization.XmlIgnoreAttribute()] Item3ChoiceType21 Item3ElementName, 
                [System.Xml.Serialization.XmlElementAttribute("mediaResourceListId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlElementAttribute("mediaResourceListName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlChoiceIdentifierAttribute("Item4ElementName")] string Item4, 
                [System.Xml.Serialization.XmlIgnoreAttribute()] Item4ChoiceType19 Item4ElementName, 
                [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="nonNegativeInteger")] string networkHoldMOHAudioSourceId, 
                [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="nonNegativeInteger")] string userHoldMOHAudioSourceId, 
                [System.Xml.Serialization.XmlElementAttribute("automatedAlternateRoutingCSSId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlElementAttribute("automatedAlternateRoutingCSSName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlChoiceIdentifierAttribute("Item5ElementName")] string Item5, 
                [System.Xml.Serialization.XmlIgnoreAttribute()] Item5ChoiceType16 Item5ElementName, 
                [System.Xml.Serialization.XmlElementAttribute("aarNeighborhoodName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlElementAttribute("aarNeighborhoodId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlChoiceIdentifierAttribute("Item6ElementName")] string Item6, 
                [System.Xml.Serialization.XmlIgnoreAttribute()] Item6ChoiceType12 Item6ElementName, 
                [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] bool retryVideoCallAsAudio, 
                [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool retryVideoCallAsAudioSpecified, 
                [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] bool waitForFarEndH245TerminalSet, 
                [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool waitForFarEndH245TerminalSetSpecified, 
                [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] bool mtpRequired, 
                [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool mtpRequiredSpecified, 
                [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string callerIdDN, 
                [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] XCallingPartySelection callingPartySelection, 
                [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool callingPartySelectionSpecified, 
                [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] XPresentationBit callingLineIdPresentation, 
                [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool callingLineIdPresentationSpecified, 
                [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] bool displayIEDelivery, 
                [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool displayIEDeliverySpecified, 
                [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] bool redirectOutboundNumberIE, 
                [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool redirectOutboundNumberIESpecified, 
                [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] bool redirectInboundNumberIE, 
                [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool redirectInboundNumberIESpecified, 
                [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] bool enableInboundFaststart, 
                [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool enableInboundFaststartSpecified, 
                [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] bool enableOutboundFaststart, 
                [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool enableOutboundFaststartSpecified, 
                [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string ownerUserId, 
                [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="nonNegativeInteger")] string signalingPort, 
                [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] UpdateH323PhoneReqGatekeeperInfo gatekeeperInfo, 
                [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlArrayItemAttribute("line", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)] XLine[] lines, 
                [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.ComponentModel.DefaultValueAttribute(false)] bool ignorePresentationIndicators, 
                [System.Xml.Serialization.XmlAttributeAttribute()] ref System.UInt64 sequence, 
                [System.Xml.Serialization.XmlAttributeAttribute()] [System.Xml.Serialization.XmlIgnoreAttribute()] ref bool sequenceSpecified) {
        object[] results = this.Invoke("updateH323Phone", new object[] {
                    Item,
                    ItemElementName,
                    newName,
                    description,
                    Item1,
                    Item1ElementName,
                    Item2,
                    Item2ElementName,
                    networkLocation,
                    networkLocationSpecified,
                    Item3,
                    Item3ElementName,
                    Item4,
                    Item4ElementName,
                    networkHoldMOHAudioSourceId,
                    userHoldMOHAudioSourceId,
                    Item5,
                    Item5ElementName,
                    Item6,
                    Item6ElementName,
                    retryVideoCallAsAudio,
                    retryVideoCallAsAudioSpecified,
                    waitForFarEndH245TerminalSet,
                    waitForFarEndH245TerminalSetSpecified,
                    mtpRequired,
                    mtpRequiredSpecified,
                    callerIdDN,
                    callingPartySelection,
                    callingPartySelectionSpecified,
                    callingLineIdPresentation,
                    callingLineIdPresentationSpecified,
                    displayIEDelivery,
                    displayIEDeliverySpecified,
                    redirectOutboundNumberIE,
                    redirectOutboundNumberIESpecified,
                    redirectInboundNumberIE,
                    redirectInboundNumberIESpecified,
                    enableInboundFaststart,
                    enableInboundFaststartSpecified,
                    enableOutboundFaststart,
                    enableOutboundFaststartSpecified,
                    ownerUserId,
                    signalingPort,
                    gatekeeperInfo,
                    lines,
                    ignorePresentationIndicators,
                    sequence,
                    sequenceSpecified});
        sequence = ((System.UInt64)(results[1]));
        sequenceSpecified = ((bool)(results[2]));
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginupdateH323Phone(
                string Item, 
                ItemChoiceType197 ItemElementName, 
                string newName, 
                string description, 
                string Item1, 
                Item1ChoiceType36 Item1ElementName, 
                string Item2, 
                Item2ChoiceType25 Item2ElementName, 
                XNetworkLocation networkLocation, 
                bool networkLocationSpecified, 
                string Item3, 
                Item3ChoiceType21 Item3ElementName, 
                string Item4, 
                Item4ChoiceType19 Item4ElementName, 
                string networkHoldMOHAudioSourceId, 
                string userHoldMOHAudioSourceId, 
                string Item5, 
                Item5ChoiceType16 Item5ElementName, 
                string Item6, 
                Item6ChoiceType12 Item6ElementName, 
                bool retryVideoCallAsAudio, 
                bool retryVideoCallAsAudioSpecified, 
                bool waitForFarEndH245TerminalSet, 
                bool waitForFarEndH245TerminalSetSpecified, 
                bool mtpRequired, 
                bool mtpRequiredSpecified, 
                string callerIdDN, 
                XCallingPartySelection callingPartySelection, 
                bool callingPartySelectionSpecified, 
                XPresentationBit callingLineIdPresentation, 
                bool callingLineIdPresentationSpecified, 
                bool displayIEDelivery, 
                bool displayIEDeliverySpecified, 
                bool redirectOutboundNumberIE, 
                bool redirectOutboundNumberIESpecified, 
                bool redirectInboundNumberIE, 
                bool redirectInboundNumberIESpecified, 
                bool enableInboundFaststart, 
                bool enableInboundFaststartSpecified, 
                bool enableOutboundFaststart, 
                bool enableOutboundFaststartSpecified, 
                string ownerUserId, 
                string signalingPort, 
                UpdateH323PhoneReqGatekeeperInfo gatekeeperInfo, 
                XLine[] lines, 
                bool ignorePresentationIndicators, 
                System.UInt64 sequence, 
                bool sequenceSpecified, 
                System.AsyncCallback callback, 
                object asyncState) {
        return this.BeginInvoke("updateH323Phone", new object[] {
                    Item,
                    ItemElementName,
                    newName,
                    description,
                    Item1,
                    Item1ElementName,
                    Item2,
                    Item2ElementName,
                    networkLocation,
                    networkLocationSpecified,
                    Item3,
                    Item3ElementName,
                    Item4,
                    Item4ElementName,
                    networkHoldMOHAudioSourceId,
                    userHoldMOHAudioSourceId,
                    Item5,
                    Item5ElementName,
                    Item6,
                    Item6ElementName,
                    retryVideoCallAsAudio,
                    retryVideoCallAsAudioSpecified,
                    waitForFarEndH245TerminalSet,
                    waitForFarEndH245TerminalSetSpecified,
                    mtpRequired,
                    mtpRequiredSpecified,
                    callerIdDN,
                    callingPartySelection,
                    callingPartySelectionSpecified,
                    callingLineIdPresentation,
                    callingLineIdPresentationSpecified,
                    displayIEDelivery,
                    displayIEDeliverySpecified,
                    redirectOutboundNumberIE,
                    redirectOutboundNumberIESpecified,
                    redirectInboundNumberIE,
                    redirectInboundNumberIESpecified,
                    enableInboundFaststart,
                    enableInboundFaststartSpecified,
                    enableOutboundFaststart,
                    enableOutboundFaststartSpecified,
                    ownerUserId,
                    signalingPort,
                    gatekeeperInfo,
                    lines,
                    ignorePresentationIndicators,
                    sequence,
                    sequenceSpecified}, callback, asyncState);
    }
    
    /// <remarks/>
    public string EndupdateH323Phone(System.IAsyncResult asyncResult, out System.UInt64 sequence, out bool sequenceSpecified) {
        object[] results = this.EndInvoke(asyncResult);
        sequence = ((System.UInt64)(results[1]));
        sequenceSpecified = ((bool)(results[2]));
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.cisco.com/AXLPort/updateH323Gateway", RequestNamespace="http://www.cisco.com/AXL/API/1.0", ResponseNamespace="http://www.cisco.com/AXL/API/1.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string updateH323Gateway(
                [System.Xml.Serialization.XmlElementAttribute("name", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlElementAttribute("uuid", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")] string Item, 
                [System.Xml.Serialization.XmlIgnoreAttribute()] ItemChoiceType198 ItemElementName, 
                [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string newName, 
                [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string description, 
                [System.Xml.Serialization.XmlElementAttribute("callingSearchSpaceId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlElementAttribute("callingSearchSpaceName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlChoiceIdentifierAttribute("Item1ElementName")] string Item1, 
                [System.Xml.Serialization.XmlIgnoreAttribute()] Item1ChoiceType37 Item1ElementName, 
                [System.Xml.Serialization.XmlElementAttribute("devicePoolName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlElementAttribute("devicePoolId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlChoiceIdentifierAttribute("Item2ElementName")] string Item2, 
                [System.Xml.Serialization.XmlIgnoreAttribute()] Item2ChoiceType26 Item2ElementName, 
                [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] XNetworkLocation networkLocation, 
                [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool networkLocationSpecified, 
                [System.Xml.Serialization.XmlElementAttribute("locationName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlElementAttribute("locationId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlChoiceIdentifierAttribute("Item3ElementName")] string Item3, 
                [System.Xml.Serialization.XmlIgnoreAttribute()] Item3ChoiceType22 Item3ElementName, 
                [System.Xml.Serialization.XmlElementAttribute("mediaResourceListId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlElementAttribute("mediaResourceListName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlChoiceIdentifierAttribute("Item4ElementName")] string Item4, 
                [System.Xml.Serialization.XmlIgnoreAttribute()] Item4ChoiceType20 Item4ElementName, 
                [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="nonNegativeInteger")] string networkHoldMOHAudioSourceId, 
                [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="nonNegativeInteger")] string userHoldMOHAudioSourceId, 
                [System.Xml.Serialization.XmlElementAttribute("automatedAlternateRoutingCSSId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlElementAttribute("automatedAlternateRoutingCSSName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlChoiceIdentifierAttribute("Item5ElementName")] string Item5, 
                [System.Xml.Serialization.XmlIgnoreAttribute()] Item5ChoiceType17 Item5ElementName, 
                [System.Xml.Serialization.XmlElementAttribute("aarNeighborhoodName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlElementAttribute("aarNeighborhoodId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlChoiceIdentifierAttribute("Item6ElementName")] string Item6, 
                [System.Xml.Serialization.XmlIgnoreAttribute()] Item6ChoiceType13 Item6ElementName, 
                [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] bool retryVideoCallAsAudio, 
                [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool retryVideoCallAsAudioSpecified, 
                [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] bool waitForFarEndH245TerminalSet, 
                [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool waitForFarEndH245TerminalSetSpecified, 
                [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] bool mtpRequired, 
                [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool mtpRequiredSpecified, 
                [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string callerIdDN, 
                [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] XCallingPartySelection callingPartySelection, 
                [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool callingPartySelectionSpecified, 
                [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] XPresentationBit callingLineIdPresentation, 
                [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool callingLineIdPresentationSpecified, 
                [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] bool displayIEDelivery, 
                [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool displayIEDeliverySpecified, 
                [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] bool redirectOutboundNumberIE, 
                [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool redirectOutboundNumberIESpecified, 
                [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] bool redirectInboundNumberIE, 
                [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool redirectInboundNumberIESpecified, 
                [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] bool enableInboundFaststart, 
                [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool enableInboundFaststartSpecified, 
                [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] bool enableOutboundFaststart, 
                [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool enableOutboundFaststartSpecified, 
                [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] UpdateH323GatewayReqSignificantDigits significantDigits, 
                [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string prefixDN, 
                [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] XPriOfNumber calledPartyIENumberType, 
                [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool calledPartyIENumberTypeSpecified, 
                [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] XPriOfNumber callingPartyIENumberType, 
                [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool callingPartyIENumberTypeSpecified, 
                [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] XNumberingPlan calledNumberingPlan, 
                [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool calledNumberingPlanSpecified, 
                [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] XNumberingPlan callingNumberingPlan, 
                [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool callingNumberingPlanSpecified, 
                [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] XTunneledProtocol tunneledProtocol, 
                [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.ComponentModel.DefaultValueAttribute(false)] bool pathReplacementSupport, 
                [System.Xml.Serialization.XmlAttributeAttribute()] ref System.UInt64 sequence, 
                [System.Xml.Serialization.XmlAttributeAttribute()] [System.Xml.Serialization.XmlIgnoreAttribute()] ref bool sequenceSpecified) {
        object[] results = this.Invoke("updateH323Gateway", new object[] {
                    Item,
                    ItemElementName,
                    newName,
                    description,
                    Item1,
                    Item1ElementName,
                    Item2,
                    Item2ElementName,
                    networkLocation,
                    networkLocationSpecified,
                    Item3,
                    Item3ElementName,
                    Item4,
                    Item4ElementName,
                    networkHoldMOHAudioSourceId,
                    userHoldMOHAudioSourceId,
                    Item5,
                    Item5ElementName,
                    Item6,
                    Item6ElementName,
                    retryVideoCallAsAudio,
                    retryVideoCallAsAudioSpecified,
                    waitForFarEndH245TerminalSet,
                    waitForFarEndH245TerminalSetSpecified,
                    mtpRequired,
                    mtpRequiredSpecified,
                    callerIdDN,
                    callingPartySelection,
                    callingPartySelectionSpecified,
                    callingLineIdPresentation,
                    callingLineIdPresentationSpecified,
                    displayIEDelivery,
                    displayIEDeliverySpecified,
                    redirectOutboundNumberIE,
                    redirectOutboundNumberIESpecified,
                    redirectInboundNumberIE,
                    redirectInboundNumberIESpecified,
                    enableInboundFaststart,
                    enableInboundFaststartSpecified,
                    enableOutboundFaststart,
                    enableOutboundFaststartSpecified,
                    significantDigits,
                    prefixDN,
                    calledPartyIENumberType,
                    calledPartyIENumberTypeSpecified,
                    callingPartyIENumberType,
                    callingPartyIENumberTypeSpecified,
                    calledNumberingPlan,
                    calledNumberingPlanSpecified,
                    callingNumberingPlan,
                    callingNumberingPlanSpecified,
                    tunneledProtocol,
                    pathReplacementSupport,
                    sequence,
                    sequenceSpecified});
        sequence = ((System.UInt64)(results[1]));
        sequenceSpecified = ((bool)(results[2]));
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginupdateH323Gateway(
                string Item, 
                ItemChoiceType198 ItemElementName, 
                string newName, 
                string description, 
                string Item1, 
                Item1ChoiceType37 Item1ElementName, 
                string Item2, 
                Item2ChoiceType26 Item2ElementName, 
                XNetworkLocation networkLocation, 
                bool networkLocationSpecified, 
                string Item3, 
                Item3ChoiceType22 Item3ElementName, 
                string Item4, 
                Item4ChoiceType20 Item4ElementName, 
                string networkHoldMOHAudioSourceId, 
                string userHoldMOHAudioSourceId, 
                string Item5, 
                Item5ChoiceType17 Item5ElementName, 
                string Item6, 
                Item6ChoiceType13 Item6ElementName, 
                bool retryVideoCallAsAudio, 
                bool retryVideoCallAsAudioSpecified, 
                bool waitForFarEndH245TerminalSet, 
                bool waitForFarEndH245TerminalSetSpecified, 
                bool mtpRequired, 
                bool mtpRequiredSpecified, 
                string callerIdDN, 
                XCallingPartySelection callingPartySelection, 
                bool callingPartySelectionSpecified, 
                XPresentationBit callingLineIdPresentation, 
                bool callingLineIdPresentationSpecified, 
                bool displayIEDelivery, 
                bool displayIEDeliverySpecified, 
                bool redirectOutboundNumberIE, 
                bool redirectOutboundNumberIESpecified, 
                bool redirectInboundNumberIE, 
                bool redirectInboundNumberIESpecified, 
                bool enableInboundFaststart, 
                bool enableInboundFaststartSpecified, 
                bool enableOutboundFaststart, 
                bool enableOutboundFaststartSpecified, 
                UpdateH323GatewayReqSignificantDigits significantDigits, 
                string prefixDN, 
                XPriOfNumber calledPartyIENumberType, 
                bool calledPartyIENumberTypeSpecified, 
                XPriOfNumber callingPartyIENumberType, 
                bool callingPartyIENumberTypeSpecified, 
                XNumberingPlan calledNumberingPlan, 
                bool calledNumberingPlanSpecified, 
                XNumberingPlan callingNumberingPlan, 
                bool callingNumberingPlanSpecified, 
                XTunneledProtocol tunneledProtocol, 
                bool pathReplacementSupport, 
                System.UInt64 sequence, 
                bool sequenceSpecified, 
                System.AsyncCallback callback, 
                object asyncState) {
        return this.BeginInvoke("updateH323Gateway", new object[] {
                    Item,
                    ItemElementName,
                    newName,
                    description,
                    Item1,
                    Item1ElementName,
                    Item2,
                    Item2ElementName,
                    networkLocation,
                    networkLocationSpecified,
                    Item3,
                    Item3ElementName,
                    Item4,
                    Item4ElementName,
                    networkHoldMOHAudioSourceId,
                    userHoldMOHAudioSourceId,
                    Item5,
                    Item5ElementName,
                    Item6,
                    Item6ElementName,
                    retryVideoCallAsAudio,
                    retryVideoCallAsAudioSpecified,
                    waitForFarEndH245TerminalSet,
                    waitForFarEndH245TerminalSetSpecified,
                    mtpRequired,
                    mtpRequiredSpecified,
                    callerIdDN,
                    callingPartySelection,
                    callingPartySelectionSpecified,
                    callingLineIdPresentation,
                    callingLineIdPresentationSpecified,
                    displayIEDelivery,
                    displayIEDeliverySpecified,
                    redirectOutboundNumberIE,
                    redirectOutboundNumberIESpecified,
                    redirectInboundNumberIE,
                    redirectInboundNumberIESpecified,
                    enableInboundFaststart,
                    enableInboundFaststartSpecified,
                    enableOutboundFaststart,
                    enableOutboundFaststartSpecified,
                    significantDigits,
                    prefixDN,
                    calledPartyIENumberType,
                    calledPartyIENumberTypeSpecified,
                    callingPartyIENumberType,
                    callingPartyIENumberTypeSpecified,
                    calledNumberingPlan,
                    calledNumberingPlanSpecified,
                    callingNumberingPlan,
                    callingNumberingPlanSpecified,
                    tunneledProtocol,
                    pathReplacementSupport,
                    sequence,
                    sequenceSpecified}, callback, asyncState);
    }
    
    /// <remarks/>
    public string EndupdateH323Gateway(System.IAsyncResult asyncResult, out System.UInt64 sequence, out bool sequenceSpecified) {
        object[] results = this.EndInvoke(asyncResult);
        sequence = ((System.UInt64)(results[1]));
        sequenceSpecified = ((bool)(results[2]));
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.cisco.com/AXLPort/executeSQLQuery", RequestNamespace="http://www.cisco.com/AXL/API/1.0", ResponseNamespace="http://www.cisco.com/AXL/API/1.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    [return: System.Xml.Serialization.XmlArrayAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [return: System.Xml.Serialization.XmlArrayItemAttribute("row", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
    public object[] executeSQLQuery([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string sql, [System.Xml.Serialization.XmlAttributeAttribute()] ref System.UInt64 sequence, [System.Xml.Serialization.XmlAttributeAttribute()] [System.Xml.Serialization.XmlIgnoreAttribute()] ref bool sequenceSpecified) {
        object[] results = this.Invoke("executeSQLQuery", new object[] {
                    sql,
                    sequence,
                    sequenceSpecified});
        sequence = ((System.UInt64)(results[1]));
        sequenceSpecified = ((bool)(results[2]));
        return ((object[])(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginexecuteSQLQuery(string sql, System.UInt64 sequence, bool sequenceSpecified, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("executeSQLQuery", new object[] {
                    sql,
                    sequence,
                    sequenceSpecified}, callback, asyncState);
    }
    
    /// <remarks/>
    public object[] EndexecuteSQLQuery(System.IAsyncResult asyncResult, out System.UInt64 sequence, out bool sequenceSpecified) {
        object[] results = this.EndInvoke(asyncResult);
        sequence = ((System.UInt64)(results[1]));
        sequenceSpecified = ((bool)(results[2]));
        return ((object[])(results[0]));
    }
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(XPhoneProfile))]
public class XIPPhone : XPhone {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
    [System.Xml.Serialization.XmlArrayItemAttribute("addOnModule", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
    public XAddOnModule[] addOnModules;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public XUserLocale userLocale;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool userLocaleSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public XCountry networkLocale;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool networkLocaleSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public XDeviceSecurityMode deviceSecurityMode;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool deviceSecurityModeSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="nonNegativeInteger", IsNullable=true)]
    public string idleTimeout;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="anyURI", IsNullable=true)]
    public string authenticationURL;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="anyURI", IsNullable=true)]
    public string directoryURL;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="anyURI", IsNullable=true)]
    public string idleURL;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="anyURI", IsNullable=true)]
    public string informationURL;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="anyURI", IsNullable=true)]
    public string messagesURL;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="anyURI", IsNullable=true)]
    public string proxyServerURL;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="anyURI", IsNullable=true)]
    public string servicesURL;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlArrayItemAttribute("service", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
    public XSubscribedService[] services;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("softkeyTemplate", typeof(XSoftkeyTemplate), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlElementAttribute("softkeyTemplateName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public object Item9;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string loginUserId;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("defaultProfileName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlElementAttribute("defaultProfile", typeof(XProfile), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public object Item10;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public bool enableExtensionMobility;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("currentProfile", typeof(XProfile), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlElementAttribute("currentProfileName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public object Item11;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="nonNegativeInteger")]
    public string loginTime;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="nonNegativeInteger")]
    public string loginDuration;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public XStatus builtInBridgeStatus;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool builtInBridgeStatusSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public XStatus callInfoPrivacyStatus;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool callInfoPrivacyStatusSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
    public string ownerUserId;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.ComponentModel.DefaultValueAttribute(false)]
    public bool ignorePresentationIndicators = false;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public XPacketCaptureMode packetCaptureMode;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool packetCaptureModeSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="positiveInteger")]
    public string packetCaptureDuration;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public XCertificateOperation certificateOperation;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool certificateOperationSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public XAuthenticationMode authenticationMode;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool authenticationModeSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="Name")]
    public string authenticationString;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public XCertificateStatus certificateStatus;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool certificateStatusSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public XKeySize keySize;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool keySizeSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="Name")]
    public string upgradeFinishTime;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public XCertificate certificate;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool certificateSpecified;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
public class XAddOnModule {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public XLoadInformation loadInformation;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public XModel model;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string uuid;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute(DataType="nonNegativeInteger")]
    public string index;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
public class XLoadInformation {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public bool special;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool specialSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTextAttribute()]
    public string Value;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
public class XTrunkInfoPad {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public XTrunkPad rx;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public XTrunkPad tx;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
public enum XTrunkPad {
    
    /// <remarks/>
    Minus32db,
    
    /// <remarks/>
    Minus31db,
    
    /// <remarks/>
    Minus30db,
    
    /// <remarks/>
    Minus29db,
    
    /// <remarks/>
    Minus28db,
    
    /// <remarks/>
    Minus27db,
    
    /// <remarks/>
    Minus26db,
    
    /// <remarks/>
    Minus25db,
    
    /// <remarks/>
    Minus24db,
    
    /// <remarks/>
    Minus23db,
    
    /// <remarks/>
    Minus22db,
    
    /// <remarks/>
    Minus21db,
    
    /// <remarks/>
    Minus20db,
    
    /// <remarks/>
    Minus19db,
    
    /// <remarks/>
    Minus18db,
    
    /// <remarks/>
    Minus17db,
    
    /// <remarks/>
    Minus16db,
    
    /// <remarks/>
    Minus15db,
    
    /// <remarks/>
    Minus14db,
    
    /// <remarks/>
    Minus13db,
    
    /// <remarks/>
    Minus12db,
    
    /// <remarks/>
    Minus11db,
    
    /// <remarks/>
    Minus10db,
    
    /// <remarks/>
    Minus9db,
    
    /// <remarks/>
    Minus8db,
    
    /// <remarks/>
    Minus7db,
    
    /// <remarks/>
    Minus6db,
    
    /// <remarks/>
    Minus5db,
    
    /// <remarks/>
    Minus4db,
    
    /// <remarks/>
    Minus3db,
    
    /// <remarks/>
    Minus2db,
    
    /// <remarks/>
    Minus1db,
    
    /// <remarks/>
    NoDbPadding,
    
    /// <remarks/>
    Plus1db,
    
    /// <remarks/>
    Plus2db,
    
    /// <remarks/>
    Plus3db,
    
    /// <remarks/>
    Plus4db,
    
    /// <remarks/>
    Plus5db,
    
    /// <remarks/>
    Plus6db,
    
    /// <remarks/>
    Plus7db,
    
    /// <remarks/>
    Plus8db,
    
    /// <remarks/>
    Plus9db,
    
    /// <remarks/>
    Plus10db,
    
    /// <remarks/>
    Plus11db,
    
    /// <remarks/>
    Plus12db,
    
    /// <remarks/>
    Plus13db,
    
    /// <remarks/>
    Plus14db,
    
    /// <remarks/>
    Plus15db,
    
    /// <remarks/>
    Plus16db,
    
    /// <remarks/>
    Plus17db,
    
    /// <remarks/>
    Plus18db,
    
    /// <remarks/>
    Plus19db,
    
    /// <remarks/>
    Plus20db,
    
    /// <remarks/>
    Plus21db,
    
    /// <remarks/>
    Plus22db,
    
    /// <remarks/>
    Plus23db,
    
    /// <remarks/>
    Plus24db,
    
    /// <remarks/>
    Plus25db,
    
    /// <remarks/>
    Plus26db,
    
    /// <remarks/>
    Plus27db,
    
    /// <remarks/>
    Plus28db,
    
    /// <remarks/>
    Plus29db,
    
    /// <remarks/>
    Plus30db,
    
    /// <remarks/>
    Plus31db,
    
    /// <remarks/>
    Plus32db,
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
public class XTrunkInfo {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public XTrunk kind;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public XTrunkDirection level;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public XTrunkDirection direction;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public XTrunkInfoPad pad;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
public enum XTrunk {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Ground Start")]
    GroundStart,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Loop Start")]
    LoopStart,
    
    /// <remarks/>
    DID,
    
    /// <remarks/>
    POTS,
    
    /// <remarks/>
    EANDM,
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
public enum XTrunkDirection {
    
    /// <remarks/>
    Inbound,
    
    /// <remarks/>
    Outbound,
    
    /// <remarks/>
    Bothways,
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
public class XRuleError {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string invalidValue;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="Name")]
    public string ruleBroken;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="integer")]
    [System.ComponentModel.DefaultValueAttribute("0")]
    public string errorCode = "0";
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string errorText;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
public class XServiceDependency {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="anyURI")]
    public string name;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlArrayItemAttribute("dependency", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="nonNegativeInteger", IsNullable=false)]
    public string[] dependencies;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string help;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string warning;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute(DataType="nonNegativeInteger")]
    public string service;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
public class XDynamicListRuleKeyFieldName {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("stringFieldName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="Name")]
    [System.Xml.Serialization.XmlElementAttribute("integerFieldName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="Name")]
    [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")]
    public string Item;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public ItemChoiceType109 ItemElementName;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0", IncludeInSchema=false)]
public enum ItemChoiceType109 {
    
    /// <remarks/>
    stringFieldName,
    
    /// <remarks/>
    integerFieldName,
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
public class XDynamicListRule {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string defaultKey;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="Name")]
    public string tableName;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public XDynamicListRuleKeyFieldName keyFieldName;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="Name")]
    public string descFieldName;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public bool Multikey;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string filter;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
public class XURIRule {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="anyURI")]
    public string @default;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
public class XScriptRule {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string comment;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string script;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
public class XListRuleOption {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string key;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string text;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
public class XListRule {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string defaultKey;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.ComponentModel.DefaultValueAttribute(false)]
    public bool multiKey = false;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlArrayItemAttribute("option", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
    public XListRuleOption[] options;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
public class XFloatRule {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public System.Single @default;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool defaultSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public System.Single min;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool minSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public System.Single max;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool maxSpecified;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
public class XDateRule {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.ComponentModel.DefaultValueAttribute(XDateRuleDateFormat.ShortUS)]
    public XDateRuleDateFormat dateFormat = XDateRuleDateFormat.ShortUS;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("defaultNow", typeof(bool), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlElementAttribute("default", typeof(System.DateTime), Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="date")]
    public object Item;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="date")]
    public System.DateTime min;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool minSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="date")]
    public System.DateTime max;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool maxSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public XDateRuleRestrictTo restrictTo;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool restrictToSpecified;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
public enum XDateRuleDateFormat {
    
    /// <remarks/>
    Any,
    
    /// <remarks/>
    Long,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Short-US")]
    ShortUS,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Short-EU")]
    ShortEU,
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
public enum XDateRuleRestrictTo {
    
    /// <remarks/>
    Past,
    
    /// <remarks/>
    Future,
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
public class XBooleanRule {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public bool @default;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
public class XRule {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string name;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string description;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string author;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("string", typeof(XStringRule), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlElementAttribute("date", typeof(XDateRule), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlElementAttribute("float", typeof(XFloatRule), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlElementAttribute("boolean", typeof(XBooleanRule), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlElementAttribute("integer", typeof(XIntegerRule), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlElementAttribute("uri", typeof(XURIRule), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlElementAttribute("script", typeof(XScriptRule), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlElementAttribute("list", typeof(XListRule), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlElementAttribute("dynamicList", typeof(XDynamicListRule), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public object Item;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public bool nullable;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool nullableSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public XRule subrule;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string enterpriseDefaultName;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
public class XStringRule {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string @default;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string regexp;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="integer")]
    public string length;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public bool trimWhiteSpace;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool trimWhiteSpaceSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string onValidationErrorShowMessage;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
public class XIntegerRule {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string @default;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string min;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string max;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
public class XRuleInstance {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string name;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string description;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="Name")]
    public string author;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlArrayItemAttribute("rule", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
    public XRule[] rules;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
public class XDisplayInstanceParameter {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string name;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string description;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string moduleComponentName;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string nonClusterWideJustification;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="normalizedString")]
    public string displayName;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string onChangeShowMessage;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string unit;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public bool hidden;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool hiddenSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="nonNegativeInteger")]
    [System.ComponentModel.DefaultValueAttribute("0")]
    public string index = "0";
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public bool readOnly;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool readOnlySpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("rules", typeof(string[]), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlElementAttribute("paramGroup", typeof(XDisplayInstanceParameter[]), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlElementAttribute("label", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public object Item;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
public class XDisplayInstance {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string name;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string version;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string author;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string description;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("parameters", typeof(XDisplayInstanceParameter[]), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlElementAttribute("uses", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="anyURI")]
    public object Item;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
public class GetRoutePatternReq {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("routePartitionId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlElementAttribute("routePartitionName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlElementAttribute("uuid", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlElementAttribute("pattern", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlElementAttribute("routeFilterId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlElementAttribute("routeFilterName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")]
    public string Item;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public ItemChoiceType108 ItemElementName;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public System.UInt64 sequence;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool sequenceSpecified;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
public enum ItemChoiceType108 {
    
    /// <remarks/>
    routePartitionId,
    
    /// <remarks/>
    routePartitionName,
    
    /// <remarks/>
    uuid,
    
    /// <remarks/>
    pattern,
    
    /// <remarks/>
    routeFilterId,
    
    /// <remarks/>
    routeFilterName,
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
public class ListRoutePlanByTypeResRoutePlan {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string directoryNumber;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string routePartitionName;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public XPatternUsage usage;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string routeFilterName;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string uuid;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
public enum XPatternUsage {
    
    /// <remarks/>
    CallPark,
    
    /// <remarks/>
    Conference,
    
    /// <remarks/>
    Device,
    
    /// <remarks/>
    Translation,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Call Pick Up Group")]
    CallPickUpGroup,
    
    /// <remarks/>
    Route,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Message Waiting")]
    MessageWaiting,
    
    /// <remarks/>
    Hunt,
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
public class ListRoutePlanByTypeRes {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlArrayItemAttribute("routePlan", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
    public ListRoutePlanByTypeResRoutePlan[] @return;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public System.UInt64 sequence;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool sequenceSpecified;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
public class GetRoutePatternResReturn {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public XNPRoutePattern pattern;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
public class XNPRoutePattern : XNPPattern {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public XNPRoutePatternDestination destination;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public bool authorizationCodeRequired;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool authorizationCodeRequiredSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="nonNegativeInteger")]
    public string authorizationLevelRequired;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public bool clientCodeRequired;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool clientCodeRequiredSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string withTag;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string withValueClause;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
public class XNPRoutePatternDestination {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("routeList", typeof(XRouteList), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlElementAttribute("gateway", typeof(XDevice), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlElementAttribute("routeListName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlElementAttribute("gatewayName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")]
    public object Item;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public ItemChoiceType60 ItemElementName;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
public class XRouteList {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="Name")]
    public string name;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string description;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("callManagerGroupName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlElementAttribute("callManagerGroup", typeof(XCallManagerGroup), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public object Item;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public bool routeListEnabled;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool routeListEnabledSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlArrayItemAttribute("member", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
    public XRouteListMember[] members;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string uuid;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
public class XCallManagerGroup {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string name;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public bool tftpDefault;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool tftpDefaultSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlArrayItemAttribute("member", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
    public XCallManagerMember[] members;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string uuid;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
public class XCallManagerMember {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("callManager", typeof(XCallManager), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlElementAttribute("callManagerName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public object Item;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute(DataType="nonNegativeInteger")]
    public string priority;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
public class XCallManager {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string name;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string description;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public XCallManagerAutoRegistration autoRegistration;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public XCallManagerPorts ports;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("processNodeName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlElementAttribute("processNode", typeof(XProcessNode), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public object Item;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string uuid;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute(DataType="nonNegativeInteger")]
    public string ctiid;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
public class XCallManagerAutoRegistration {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string startDN;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string endDN;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string nextDN;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("routePartition", typeof(XRoutePartition), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlElementAttribute("routePartitionName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public object Item;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string e164Mask;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
public class XRoutePartition {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string name;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string description;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="nonNegativeInteger")]
    public string dialPlanWizardGenId;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("timeScheduleName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlElementAttribute("timeScheduleId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")]
    public string Item;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public ItemChoiceType ItemElementName;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public bool useOriginatingDeviceTimeZone;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool useOriginatingDeviceTimeZoneSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public XTimeZone timeZone;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool timeZoneSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string uuid;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0", IncludeInSchema=false)]
public enum ItemChoiceType {
    
    /// <remarks/>
    timeScheduleName,
    
    /// <remarks/>
    timeScheduleId,
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
public enum XTimeZone {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Dateline Standard Time")]
    DatelineStandardTime,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Samoa Standard Time")]
    SamoaStandardTime,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Hawaiian Standard Time")]
    HawaiianStandardTime,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Alaskan Standard/Daylight Time")]
    AlaskanStandardDaylightTime,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Pacific Standard/Daylight Time")]
    PacificStandardDaylightTime,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("US Mountain Standard Time")]
    USMountainStandardTime,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Mountain Standard/Daylight Time")]
    MountainStandardDaylightTime,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Central Standard/Daylight Time")]
    CentralStandardDaylightTime,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Mexico Standard/Daylight Time")]
    MexicoStandardDaylightTime,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Canada Central Standard Time")]
    CanadaCentralStandardTime,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("SA Pacific Standard Time")]
    SAPacificStandardTime,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Eastern Standard/Daylight Time")]
    EasternStandardDaylightTime,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("US Eastern Standard Time")]
    USEasternStandardTime,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Atlantic Standard/Daylight Time")]
    AtlanticStandardDaylightTime,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("SA Western Standard Time")]
    SAWesternStandardTime,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Newfoundland Standard/Daylight Time")]
    NewfoundlandStandardDaylightTime,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("E. South America Standard/Daylight Time")]
    ESouthAmericaStandardDaylightTime,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("SA Eastern Standard Time")]
    SAEasternStandardTime,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Mid-Atlantic Standard/Daylight Time")]
    MidAtlanticStandardDaylightTime,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Azores Standard/Daylight Time")]
    AzoresStandardDaylightTime,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("GMT Standard/Daylight Time")]
    GMTStandardDaylightTime,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Greenwich Standard Time")]
    GreenwichStandardTime,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("W. Europe Standard/Daylight Time")]
    WEuropeStandardDaylightTime,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("GTB Standard/Daylight Time")]
    GTBStandardDaylightTime,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Egypt Standard/Daylight Time")]
    EgyptStandardDaylightTime,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("E. Europe Standard/Daylight Time")]
    EEuropeStandardDaylightTime,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Romance Standard/Daylight Time")]
    RomanceStandardDaylightTime,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Central Europe Standard/Daylight Time")]
    CentralEuropeStandardDaylightTime,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("South Africa Standard Time")]
    SouthAfricaStandardTime,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Jerusalem Standard/Daylight Time")]
    JerusalemStandardDaylightTime,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Saudi Arabia Standard Time")]
    SaudiArabiaStandardTime,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Russian Standard/Daylight Time")]
    RussianStandardDaylightTime,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Iran Standard/Daylight Time")]
    IranStandardDaylightTime,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Caucasus Standard/Daylight Time")]
    CaucasusStandardDaylightTime,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Afghanistan Standard Time")]
    AfghanistanStandardTime,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("West Asia Standard Time")]
    WestAsiaStandardTime,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("India Standard Time")]
    IndiaStandardTime,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Central Asia Standard Time")]
    CentralAsiaStandardTime,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("SE Asia Standard Time")]
    SEAsiaStandardTime,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("China Standard/Daylight Time")]
    ChinaStandardDaylightTime,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Taipei Standard Time")]
    TaipeiStandardTime,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Tokyo Standard Time")]
    TokyoStandardTime,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Cen. Australia Standard/Daylight Time")]
    CenAustraliaStandardDaylightTime,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("AUS Central Standard Time")]
    AUSCentralStandardTime,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("E. Australia Standard Time")]
    EAustraliaStandardTime,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("AUS Eastern Standard/Daylight Time")]
    AUSEasternStandardDaylightTime,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("West Pacific Standard Time")]
    WestPacificStandardTime,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Tasmania Standard/Daylight Time")]
    TasmaniaStandardDaylightTime,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Central Pacific Standard Time")]
    CentralPacificStandardTime,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Fiji Standard Time")]
    FijiStandardTime,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("New Zealand Standard/Daylight Time")]
    NewZealandStandardDaylightTime,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Arabian Standard Time")]
    ArabianStandardTime,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Ekaterinburg Standard Time")]
    EkaterinburgStandardTime,
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
public class XCallManagerPorts {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="nonNegativeInteger")]
    public string analogAccessPort;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="nonNegativeInteger")]
    public string digitalAccessPort;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="nonNegativeInteger")]
    public string ethernetPhonePort;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public XCallManagerPortsMgcpPorts mgcpPorts;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
public class XCallManagerPortsMgcpPorts {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="nonNegativeInteger")]
    public string listen;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="nonNegativeInteger")]
    public string keepAlive;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
public class XProcessNode {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string name;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string description;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string mac;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string uuid;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
public class XRouteListMember {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("routeGroupName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlElementAttribute("routeGroup", typeof(XRouteGroup), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public object Item;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="nonNegativeInteger")]
    public string selectionOrder;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string calledPartyTransformationMask;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string callingPartyTransformationMask;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("callingSearchSpace", typeof(XCallingSearchSpace), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlElementAttribute("callingSearchSpaceName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="Name")]
    public object Item1;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="nonNegativeInteger")]
    public string dialPlanWizardGenId;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("digitDiscardInstructionName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="Name")]
    [System.Xml.Serialization.XmlElementAttribute("digitDiscardInstruction", typeof(XDigitDiscardInstruction), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public object Item2;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string prefixDigitsOut;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string callingPartyPrefixDigits;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public XStatus useFullyQualifiedCallingPartyNumber;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string uuid;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
public class XRouteGroup {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="Name")]
    public string name;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="nonNegativeInteger")]
    public string dialPlanWizardGenId;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlArrayItemAttribute("member", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
    public XRouteGroupMember[] members;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string uuid;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
public class XRouteGroupMember {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="nonNegativeInteger")]
    public string deviceSelectionOrder;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="nonNegativeInteger")]
    public string dialPlanWizardGenId;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("deviceId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlElementAttribute("deviceName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlElementAttribute("device", typeof(XDevice), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")]
    public object Item;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public ItemChoiceType25 ItemElementName;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string uuid;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute(DataType="nonNegativeInteger")]
    public string port;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(XSIPTrunk))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(XMGCPEndpoint))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(AddMGCPEndpointReqEndpoint))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(XVoiceMailPort))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(XServerDevice))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(XH323Device))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(XH323Phone))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(XH323Gateway))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(XH323Trunk))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(XProfile))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(XPhone))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(XIPPhone))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(XPhoneProfile))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(XCTIRoutePoint))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(XGateway))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(XAnalogGateway))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(XDigitalGateway))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(XPRIGateway))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(XT1Gateway))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(XBRIGateway))]
public class XDevice {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="Name")]
    public string name;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string description;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("productInfo", typeof(XProductInfo), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlElementAttribute("product", typeof(XProduct), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public object Item;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("modelInfo", typeof(XModelInfo), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlElementAttribute("model", typeof(XModel), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public object Item1;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public XClass @class;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public XDeviceProtocol protocol;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public XProtocolSide protocolSide;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("callingSearchSpace", typeof(XCallingSearchSpace), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlElementAttribute("callingSearchSpaceName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="Name")]
    public object Item2;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("devicePoolName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlElementAttribute("devicePool", typeof(XDevicePool), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public object Item3;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public XNetworkLocation networkLocation;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool networkLocationSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("location", typeof(XLocation), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlElementAttribute("locationName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public object Item4;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("mediaResourceList", typeof(XMediaResourceList), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlElementAttribute("mediaResourceListName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public object Item5;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="nonNegativeInteger")]
    public string networkHoldMOHAudioSourceId;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="nonNegativeInteger")]
    public string userHoldMOHAudioSourceId;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("automatedAlternateRoutingCSSName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlElementAttribute("automatedAlternateRoutingCSS", typeof(XCallingSearchSpace), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public object Item6;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("aarNeighborhoodName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlElementAttribute("aarNeighborhood", typeof(XAARNeighborhood), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public object Item7;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public XLoadInformation loadInformation;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public System.Xml.XmlElement vendorConfig;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string versionStamp;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public bool traceFlag;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool traceFlagSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public int mlppDomainId;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool mlppDomainIdSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public XStatus mlppIndicationStatus;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool mlppIndicationStatusSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public XPreemption preemption;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool preemptionSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.ComponentModel.DefaultValueAttribute(true)]
    public bool retryVideoCallAsAudio = true;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute(DataType="positiveInteger")]
    public string ctiid;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string uuid;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
public class XProductInfo {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public XModel model;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="nonNegativeInteger")]
    public string maxPorts;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public bool showInDropDown;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool showInDropDownSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public XProduct name;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool nameSpecified;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
public enum XModel {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Cisco 30 SP+")]
    Cisco30SP,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Cisco 12 SP+")]
    Cisco12SP,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Cisco 12 SP")]
    Cisco12SP1,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Cisco 12 S")]
    Cisco12S,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Cisco 30 VIP")]
    Cisco30VIP,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Cisco 7910")]
    Cisco7910,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Cisco 7960")]
    Cisco7960,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Cisco 7940")]
    Cisco7940,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Cisco 7935")]
    Cisco7935,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Cisco VGC Phone")]
    CiscoVGCPhone,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Cisco VGC Virtual Phone")]
    CiscoVGCVirtualPhone,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Cisco ATA 186")]
    CiscoATA186,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Selsius Soft Phone")]
    SelsiusSoftPhone,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Analog Access")]
    AnalogAccess,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Digital Access")]
    DigitalAccess,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Digital Access+")]
    DigitalAccess1,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Digital Access WS-X6608")]
    DigitalAccessWSX6608,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Analog Access WS-X6624")]
    AnalogAccessWSX6624,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("VGC Gateway")]
    VGCGateway,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Conference Bridge")]
    ConferenceBridge,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Conference Bridge Hardware")]
    ConferenceBridgeHardware,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Cisco IOS Conference Bridge (HDV2)")]
    CiscoIOSConferenceBridgeHDV2,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Cisco Conference Bridge (WS-SVC-CMM)")]
    CiscoConferenceBridgeWSSVCCMM,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("H.323 Phone")]
    H323Phone,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("H.323 Gateway")]
    H323Gateway,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Music On Hold")]
    MusicOnHold,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Device Pilot")]
    DevicePilot,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("CTI Port")]
    CTIPort,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("CTI Route Point")]
    CTIRoutePoint,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Voice Mail Port")]
    VoiceMailPort,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Cisco IOS Software Media Termination Point (HDV2)")]
    CiscoIOSSoftwareMediaTerminationPointHDV2,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Cisco Video Conference Bridge (IPVC-35xx)")]
    CiscoVideoConferenceBridgeIPVC35xx,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Route List")]
    RouteList,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Load Simulator")]
    LoadSimulator,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Media Termination Point")]
    MediaTerminationPoint,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Media Termination Point Hardware")]
    MediaTerminationPointHardware,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Cisco IOS Media Termination Point (HDV2)")]
    CiscoIOSMediaTerminationPointHDV2,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Cisco Media Termination Point (WS-SVC-CMM)")]
    CiscoMediaTerminationPointWSSVCCMM,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("MGCP Station")]
    MGCPStation,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("MGCP Trunk")]
    MGCPTrunk,
    
    /// <remarks/>
    GateKeeper,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("7914 14-Button Line Expansion Module")]
    Item791414ButtonLineExpansionModule,
    
    /// <remarks/>
    Trunk,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Tone Announcement Player")]
    ToneAnnouncementPlayer,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("SIP Trunk")]
    SIPTrunk,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("SIP Gateway")]
    SIPGateway,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Unknown MGCP Gateway")]
    UnknownMGCPGateway,
    
    /// <remarks/>
    Unknown,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Cisco 7905")]
    Cisco7905,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Cisco 7920")]
    Cisco7920,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Ubiquity I")]
    UbiquityI,
    
    /// <remarks/>
    IP250D,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Cisco 7970")]
    Cisco7970,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Cisco 7912")]
    Cisco7912,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Cisco 7902")]
    Cisco7902,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Cisco SoftPhone SE-S")]
    CiscoSoftPhoneSES,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Cisco IP Communicator")]
    CiscoIPCommunicator,
    
    /// <remarks/>
    SamplePhone,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Cisco 7965")]
    Cisco7965,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Cisco 7936")]
    Cisco7936,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Analog Phone")]
    AnalogPhone,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("ISDN BRI Phone")]
    ISDNBRIPhone,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("SCCP gateway virtual phone")]
    SCCPgatewayvirtualphone,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("IP-STE")]
    IPSTE,
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
public enum XProduct {
    
    /// <remarks/>
    Pilot,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Cisco Catalyst 6000 T1 VoIP Gateway")]
    CiscoCatalyst6000T1VoIPGateway,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Cisco Catalyst 6000 E1 VoIP Gateway")]
    CiscoCatalyst6000E1VoIPGateway,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Cisco Catalyst 6000 24 port FXS Gateway")]
    CiscoCatalyst600024portFXSGateway,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Cisco Catalyst 6000 12 port FXO Gateway")]
    CiscoCatalyst600012portFXOGateway,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Cisco DT-24+ Gateway")]
    CiscoDT24Gateway,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Cisco DE-30+ Gateway")]
    CiscoDE30Gateway,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Cisco AT-2 Gateway")]
    CiscoAT2Gateway,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Cisco AT-4 Gateway")]
    CiscoAT4Gateway,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Cisco AT-8 Gateway")]
    CiscoAT8Gateway,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Cisco AS-2 Gateway")]
    CiscoAS2Gateway,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Cisco AS-4 Gateway")]
    CiscoAS4Gateway,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Cisco AS-8 Gateway")]
    CiscoAS8Gateway,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("H.323 Client")]
    H323Client,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("H.323 Gateway")]
    H323Gateway,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Cisco MGCP FXO Port")]
    CiscoMGCPFXOPort,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Cisco MGCP FXS Port")]
    CiscoMGCPFXSPort,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Cisco 12 SP+")]
    Cisco12SP,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Cisco 12 SP")]
    Cisco12SP1,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Cisco 12 S")]
    Cisco12S,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Cisco 30 SP+")]
    Cisco30SP,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Cisco 30 VIP")]
    Cisco30VIP,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("CTI Port")]
    CTIPort,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Cisco Web Attendant Pilot")]
    CiscoWebAttendantPilot,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Cisco Voice Mail Port")]
    CiscoVoiceMailPort,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Cisco Conference Bridge Software")]
    CiscoConferenceBridgeSoftware,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Cisco Conference Bridge Hardware")]
    CiscoConferenceBridgeHardware,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Cisco Media Termination Point Software")]
    CiscoMediaTerminationPointSoftware,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Cisco Media Termination Point Hardware")]
    CiscoMediaTerminationPointHardware,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Cisco 7935")]
    Cisco7935,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Selsius Soft Phone")]
    SelsiusSoftPhone,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Cisco 7910")]
    Cisco7910,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Cisco 7960")]
    Cisco7960,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Cisco 7940")]
    Cisco7940,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Route List")]
    RouteList,
    
    /// <remarks/>
    Unknown,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Load Simulator")]
    LoadSimulator,
    
    /// <remarks/>
    Gatekeeper,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("NM-1V")]
    NM1V,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("NM-2V")]
    NM2V,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Cisco VG200")]
    CiscoVG200,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Cisco 26XX")]
    Cisco26XX,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Cisco 362X")]
    Cisco362X,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Cisco 364X")]
    Cisco364X,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Cisco 366X")]
    Cisco366X,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("CTI Route Point")]
    CTIRoutePoint,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Music On Hold")]
    MusicOnHold,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Cisco MGCP T1 Port")]
    CiscoMGCPT1Port,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("NM-HDV")]
    NMHDV,
    
    /// <remarks/>
    VIC_SLOT,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Cisco MGCP E1 Port")]
    CiscoMGCPE1Port,
    
    /// <remarks/>
    VWIC_SLOT,
    
    /// <remarks/>
    FLEX_SLOT,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Cisco Catalyst 4224 Voice Gateway Switch")]
    CiscoCatalyst4224VoiceGatewaySwitch,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Cisco Catalyst 4000 Access Gateway  Module")]
    CiscoCatalyst4000AccessGatewayModule,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Cisco IOS Conference Bridge")]
    CiscoIOSConferenceBridge,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Cisco IOS Media Termination Point")]
    CiscoIOSMediaTerminationPoint,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Cisco IAD 2420 (end of sale product)")]
    CiscoIAD2420endofsaleproduct,
    
    /// <remarks/>
    IAD2400_ANALOG,
    
    /// <remarks/>
    IAD2400_DIGITAL,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Cisco VGC Phone")]
    CiscoVGCPhone,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Cisco VG248 Gateway")]
    CiscoVG248Gateway,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("VGC Port")]
    VGCPort,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Cisco VGC Virtual Phone")]
    CiscoVGCVirtualPhone,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Cisco ATA 186")]
    CiscoATA186,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Cisco ICS77XX-MRP2xx")]
    CiscoICS77XXMRP2xx,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Cisco ICS77XX-ASI81")]
    CiscoICS77XXASI81,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Cisco ICS77XX-ASI160")]
    CiscoICS77XXASI160,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("H.225 Trunk (Gatekeeper Controlled)")]
    H225TrunkGatekeeperControlled,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Inter-Cluster Trunk (Gatekeeper Controlled)")]
    InterClusterTrunkGatekeeperControlled,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Inter-Cluster Trunk (Non-Gatekeeper Controlled)")]
    InterClusterTrunkNonGatekeeperControlled,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Communication Media Module")]
    CommunicationMediaModule,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("WS-X6600")]
    WSX6600,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("AIM-VOICE-30")]
    AIMVOICE30,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("NM-HDA")]
    NMHDA,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("PA-VXA")]
    PAVXA,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("PA-VXB")]
    PAVXB,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("PA-VXC")]
    PAVXC,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("PA-MCX")]
    PAMCX,
    
    /// <remarks/>
    Annunciator,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Cisco MGCP BRI Port")]
    CiscoMGCPBRIPort,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("NM-HD-1V")]
    NMHD1V,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("NM-HD-2V")]
    NMHD2V,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("NM-HD-2VE")]
    NMHD2VE,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("SIP Trunk")]
    SIPTrunk,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Cisco Conference Bridge (WS-SVC-CMM)")]
    CiscoConferenceBridgeWSSVCCMM,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Cisco Media Termination Point (WS-SVC-CMM)")]
    CiscoMediaTerminationPointWSSVCCMM,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Cisco IOS Enhanced Software Media Termination Point")]
    CiscoIOSEnhancedSoftwareMediaTerminationPoint,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("7914 14-Button Line Expansion Module")]
    Item791414ButtonLineExpansionModule,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Cisco IOS Enhanced Conference Bridge")]
    CiscoIOSEnhancedConferenceBridge,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Cisco IOS Enhanced Media Termination Point")]
    CiscoIOSEnhancedMediaTerminationPoint,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Cisco Video Conference Bridge(IPVC-35xx)")]
    CiscoVideoConferenceBridgeIPVC35xx,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Hunt List")]
    HuntList,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("WS-SVC-CMM-MS")]
    WSSVCCMMMS,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("NM-4VWIC-MBRD")]
    NM4VWICMBRD,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("VNM-HDA")]
    VNMHDA,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("NM-HDV2-0PORT")]
    NMHDV20PORT,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("NM-HDV2-1PORT")]
    NMHDV21PORT,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("NM-HDV2-2PORT")]
    NMHDV22PORT,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Cisco 3745")]
    Cisco3745,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Cisco 3725")]
    Cisco3725,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Cisco 7905")]
    Cisco7905,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Cisco 7920")]
    Cisco7920,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Cisco ICS77XX-MRP3xx")]
    CiscoICS77XXMRP3xx,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Cisco ICS77XX-MRP3-8FXS")]
    CiscoICS77XXMRP38FXS,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Cisco ICS77XX-MRP3-16FXS")]
    CiscoICS77XXMRP316FXS,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Cisco ICS77XX-MRP3-8FXO-M1")]
    CiscoICS77XXMRP38FXOM1,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Ubiquity I")]
    UbiquityI,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Cisco 269X")]
    Cisco269X,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Cisco 72XX")]
    Cisco72XX,
    
    /// <remarks/>
    IP250D,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Cisco 7970")]
    Cisco7970,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Cisco 1760")]
    Cisco1760,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Cisco 1751")]
    Cisco1751,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Cisco 7912")]
    Cisco7912,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Cisco 7902")]
    Cisco7902,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("WS-X6600-6E1")]
    WSX66006E1,
    
    /// <remarks/>
    VG224,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Cisco SoftPhone SE-S")]
    CiscoSoftPhoneSES,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Cisco 2821")]
    Cisco2821,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Cisco IP Communicator")]
    CiscoIPCommunicator,
    
    /// <remarks/>
    SampleGW,
    
    /// <remarks/>
    SamplePhone,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Cisco 7965")]
    Cisco7965,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("366xA")]
    Item366xA,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("366xB")]
    Item366xB,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("3745")]
    Item3745,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("3745A")]
    Item3745A,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Cisco 7936")]
    Cisco7936,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Cisco 3825")]
    Cisco3825,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Cisco 3845")]
    Cisco3845,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Cisco 2811")]
    Cisco2811,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Cisco 2851")]
    Cisco2851,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Analog Phone")]
    AnalogPhone,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("ISDN BRI Phone")]
    ISDNBRIPhone,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("SCCP gateway virtual phone")]
    SCCPgatewayvirtualphone,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("IP-STE")]
    IPSTE,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Cisco 2801")]
    Cisco2801,
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
public class XModelInfo {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public XClass @class;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="nonNegativeInteger")]
    public string defaultDTMFCapability;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlArrayItemAttribute("feature", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
    public XFeature[] features;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public bool hasFirmwardLoad;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool hasFirmwardLoadSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public bool hasPhoneTemplate;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool hasPhoneTemplateSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="nonNegativeInteger")]
    public string numberOfButtons;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public bool phoneTemplateIsUserModifiable;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool phoneTemplateIsUserModifiableSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public bool showInDeviceDefaults;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool showInDeviceDefaultsSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public XModel name;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool nameSpecified;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
public enum XClass {
    
    /// <remarks/>
    Phone,
    
    /// <remarks/>
    Gateway,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Conference Bridge")]
    ConferenceBridge,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Media Termination Point")]
    MediaTerminationPoint,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Route List")]
    RouteList,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Voice Mail")]
    VoiceMail,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("CTI Route Point")]
    CTIRoutePoint,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Music On Hold")]
    MusicOnHold,
    
    /// <remarks/>
    Simulation,
    
    /// <remarks/>
    Pilot,
    
    /// <remarks/>
    GateKeeper,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Add-on modules")]
    Addonmodules,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Hidden Phone")]
    HiddenPhone,
    
    /// <remarks/>
    Trunk,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Tone Announcement Player")]
    ToneAnnouncementPlayer,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Device Profile")]
    DeviceProfile,
    
    /// <remarks/>
    Invalid,
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
public enum XFeature {
    
    /// <remarks/>
    Redial,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Speed Dial")]
    SpeedDial,
    
    /// <remarks/>
    Hold,
    
    /// <remarks/>
    Transfer,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Forward All")]
    ForwardAll,
    
    /// <remarks/>
    Display,
    
    /// <remarks/>
    Line,
    
    /// <remarks/>
    Chat,
    
    /// <remarks/>
    Whiteboard,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Application Sharing")]
    ApplicationSharing,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("File Transfer")]
    FileTransfer,
    
    /// <remarks/>
    Video,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Message Waiting")]
    MessageWaiting,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Answer/Release")]
    AnswerRelease,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Auto Answer")]
    AutoAnswer,
    
    /// <remarks/>
    Settings,
    
    /// <remarks/>
    Privacy,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Service URL")]
    ServiceURL,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Malicious Call Identification")]
    MaliciousCallIdentification,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Meet Me Conference")]
    MeetMeConference,
    
    /// <remarks/>
    Conference,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Call Park")]
    CallPark,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Call Pickup")]
    CallPickup,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Group Call Pickup")]
    GroupCallPickup,
    
    /// <remarks/>
    AEC,
    
    /// <remarks/>
    None,
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
public enum XDeviceProtocol {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Cisco-station")]
    Ciscostation,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Digital Access PRI")]
    DigitalAccessPRI,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("H.225")]
    H225,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Analog Access")]
    AnalogAccess,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Digital Access T1")]
    DigitalAccessT1,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Route Point")]
    RoutePoint,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Unicast Bridge")]
    UnicastBridge,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Multicast Point")]
    MulticastPoint,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Inter-Cluster Trunk")]
    InterClusterTrunk,
    
    /// <remarks/>
    RAS,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Digital Access BRI")]
    DigitalAccessBRI,
    
    /// <remarks/>
    SIP,
    
    /// <remarks/>
    MGCP,
    
    /// <remarks/>
    SCCP,
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
public enum XProtocolSide {
    
    /// <remarks/>
    Network,
    
    /// <remarks/>
    User,
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(XNPDirectoryNumberShareLineAppearanceCSS))]
public class XCallingSearchSpace {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="Name")]
    public string name;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string description;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string clause;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="nonNegativeInteger")]
    public string dialPlanWizardGenId;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlArrayItemAttribute("member", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
    public XCallingSearchSpaceMember[] members;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string uuid;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
public class XCallingSearchSpaceMember {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("routePartition", typeof(XRoutePartition), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlElementAttribute("routePartitionId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlElementAttribute("routePartitionName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")]
    public object Item;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public ItemChoiceType1 ItemElementName;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute(DataType="positiveInteger")]
    public string index;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0", IncludeInSchema=false)]
public enum ItemChoiceType1 {
    
    /// <remarks/>
    routePartition,
    
    /// <remarks/>
    routePartitionId,
    
    /// <remarks/>
    routePartitionName,
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
public class XNPDirectoryNumberShareLineAppearanceCSS : XCallingSearchSpace {
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
public class XDevicePool {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string name;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("autoSearchSpaceName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlElementAttribute("autoSearchSpace", typeof(XCallingSearchSpace), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public object Item;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("dateTimeSetting", typeof(XDateTimeSetting), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlElementAttribute("dateTimeSettingName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public object Item1;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("callManagerGroupName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlElementAttribute("callManagerGroup", typeof(XCallManagerGroup), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public object Item2;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("mediaResourceList", typeof(XMediaResourceList), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlElementAttribute("mediaResourceListName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public object Item3;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("region", typeof(XRegion), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlElementAttribute("regionName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public object Item4;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("softkeyTemplate", typeof(XSoftkeyTemplate), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlElementAttribute("softkeyTemplateName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public object Item5;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public XCountry networkLocale;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool networkLocaleSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public XUserLocale userLocale;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool userLocaleSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="nonNegativeInteger")]
    public string networkHoldMOHAudioSourceId;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="nonNegativeInteger")]
    public string userHoldMOHAudioSourceId;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("srstName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlElementAttribute("srstInfo", typeof(XSRSTInfo), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public object Item6;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public int mlppDomainId;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool mlppDomainIdSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public XStatus mlppIndicationStatus;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool mlppIndicationStatusSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public XPreemption preemption;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool preemptionSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public int connectionMonitorDuration;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool connectionMonitorDurationSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string uuid;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
public class XDateTimeSetting {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string name;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string dateTemplate;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public XTimeZone timeZone;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string uuid;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
public class XMediaResourceList {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string name;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string clause;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlArrayItemAttribute("member", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
    public XMediaResourceListMember[] members;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string uuid;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
public class XMediaResourceListMember {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("mediaResourceGroupName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlElementAttribute("mediaResourceGroup", typeof(XMediaResourceGroup), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public object Item;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string uuid;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute(DataType="nonNegativeInteger")]
    public string order;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
public class XMediaResourceGroup {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string name;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string description;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public bool multicast;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlArrayItemAttribute("member", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
    public XMediaResourceGroupMember[] members;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string uuid;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
public class XMediaResourceGroupMember {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("deviceName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlElementAttribute("device", typeof(XDevice), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public object Item;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string uuid;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
public class XRegion {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string name;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlArrayItemAttribute("relatedRegion", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
    public XRegionRelationship[] relatedRegions;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string uuid;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
public class XRegionRelationship {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("region", typeof(XRegion), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlElementAttribute("name", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public object Item;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.ComponentModel.DefaultValueAttribute(XBandwidth.G711)]
    public XBandwidth bandwidth = XBandwidth.G711;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="nonNegativeInteger")]
    public string videoBandwidth;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string uuid;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
public enum XBandwidth {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("G.723")]
    G723,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("G.729")]
    G729,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("G.722")]
    G722,
    
    /// <remarks/>
    GSM,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("G.728")]
    G728,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("G.711")]
    G711,
    
    /// <remarks/>
    Wideband,
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
public class XSoftkeyTemplate {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string name;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string description;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.ComponentModel.DefaultValueAttribute(true)]
    public bool isStandard = true;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
    public string softkeyClause;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
    public string softkeySetClause;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string uuid;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
public enum XCountry {
    
    /// <remarks/>
    Argentina,
    
    /// <remarks/>
    Australia,
    
    /// <remarks/>
    Austria,
    
    /// <remarks/>
    Belgium,
    
    /// <remarks/>
    Brazil,
    
    /// <remarks/>
    Canada,
    
    /// <remarks/>
    China,
    
    /// <remarks/>
    Colombia,
    
    /// <remarks/>
    Cyprus,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Czech Republic")]
    CzechRepublic,
    
    /// <remarks/>
    Denmark,
    
    /// <remarks/>
    Egypt,
    
    /// <remarks/>
    Finland,
    
    /// <remarks/>
    France,
    
    /// <remarks/>
    Germany,
    
    /// <remarks/>
    Ghana,
    
    /// <remarks/>
    Greece,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Hong Kong")]
    HongKong,
    
    /// <remarks/>
    Hungary,
    
    /// <remarks/>
    Iceland,
    
    /// <remarks/>
    India,
    
    /// <remarks/>
    Indonesia,
    
    /// <remarks/>
    Ireland,
    
    /// <remarks/>
    Israel,
    
    /// <remarks/>
    Italy,
    
    /// <remarks/>
    Japan,
    
    /// <remarks/>
    Jordan,
    
    /// <remarks/>
    Kenya,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Korea Republic")]
    KoreaRepublic,
    
    /// <remarks/>
    Lebanon,
    
    /// <remarks/>
    Luxembourg,
    
    /// <remarks/>
    Malaysia,
    
    /// <remarks/>
    Mexico,
    
    /// <remarks/>
    Nepal,
    
    /// <remarks/>
    Netherlands,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("New Zealand")]
    NewZealand,
    
    /// <remarks/>
    Nigeria,
    
    /// <remarks/>
    Norway,
    
    /// <remarks/>
    Pakistan,
    
    /// <remarks/>
    Panama,
    
    /// <remarks/>
    Peru,
    
    /// <remarks/>
    Philippines,
    
    /// <remarks/>
    Poland,
    
    /// <remarks/>
    Portugal,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Russian Federation")]
    RussianFederation,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Saudi Arabia")]
    SaudiArabia,
    
    /// <remarks/>
    Singapore,
    
    /// <remarks/>
    Slovakia,
    
    /// <remarks/>
    Slovenia,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("South Africa")]
    SouthAfrica,
    
    /// <remarks/>
    Spain,
    
    /// <remarks/>
    Sweden,
    
    /// <remarks/>
    Switzerland,
    
    /// <remarks/>
    Taiwan,
    
    /// <remarks/>
    Thailand,
    
    /// <remarks/>
    Turkey,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("United Kingdom")]
    UnitedKingdom,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("United States")]
    UnitedStates,
    
    /// <remarks/>
    Venezuela,
    
    /// <remarks/>
    Zimbabwe,
    
    /// <remarks/>
    Itu,
    
    /// <remarks/>
    Chile,
    
    /// <remarks/>
    Bulgaria,
    
    /// <remarks/>
    Croatia,
    
    /// <remarks/>
    Romania,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Serbia and Montenegro")]
    SerbiaandMontenegro,
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
public enum XUserLocale {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("English United States")]
    EnglishUnitedStates,
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
public class XSRSTInfo {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="Name")]
    public string name;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.ComponentModel.DefaultValueAttribute(XSRSTOption.UserSpecific)]
    public XSRSTOption srstOption = XSRSTOption.UserSpecific;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.ComponentModel.DefaultValueAttribute(true)]
    public bool userModifiable = true;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string ipAddr1;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="nonNegativeInteger")]
    [System.ComponentModel.DefaultValueAttribute("2000")]
    public string port1 = "2000";
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string ipAddr2;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="nonNegativeInteger")]
    [System.ComponentModel.DefaultValueAttribute("2000")]
    public string port2 = "2000";
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string ipAddr3;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="nonNegativeInteger")]
    [System.ComponentModel.DefaultValueAttribute("2000")]
    public string port3 = "2000";
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string certificate;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.ComponentModel.DefaultValueAttribute(false)]
    public bool isSecure = false;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string uuid;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
public enum XSRSTOption {
    
    /// <remarks/>
    Disable,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Use Default Gateway")]
    UseDefaultGateway,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Legacy Configuration")]
    LegacyConfiguration,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("User Specific")]
    UserSpecific,
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
public enum XStatus {
    
    /// <remarks/>
    Off,
    
    /// <remarks/>
    On,
    
    /// <remarks/>
    Default,
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
public enum XPreemption {
    
    /// <remarks/>
    Disabled,
    
    /// <remarks/>
    Forceful,
    
    /// <remarks/>
    Default,
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
public enum XNetworkLocation {
    
    /// <remarks/>
    OnNet,
    
    /// <remarks/>
    OffNet,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Use System Default")]
    UseSystemDefault,
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
public class XLocation {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string name;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="nonNegativeInteger")]
    public string id;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="nonNegativeInteger")]
    public string kbits;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="nonNegativeInteger")]
    public string videoKbits;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string uuid;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
public class XAARNeighborhood {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string name;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string uuid;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
public class XSIPTrunk : XDevice {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public bool mtpRequired;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool mtpRequiredSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string destinationaddress;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.ComponentModel.DefaultValueAttribute(false)]
    public bool destAddrIsSRV = false;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="integer")]
    [System.ComponentModel.DefaultValueAttribute("0")]
    public string destinationport = "0";
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="integer")]
    public string incomingport;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public XSIPCodec tkSipCodec;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool tkSipCodecSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public XTransport OutgoingTransportType;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool OutgoingTransportTypeSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public XSIPTrunkSigDigits sigDigits;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public XPresentationBit connectedNamePresentation;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool connectedNamePresentationSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public XPresentationBit connectedPartyIdPresentation;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool connectedPartyIdPresentationSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public XCallingPartySelection callingPartySelection;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool callingPartySelectionSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public XPresentationBit callingname;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool callingnameSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public XPresentationBit callingLineIdPresentation;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool callingLineIdPresentationSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string prefixDN;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string callerName;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string callerIdDN;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public bool acceptInboundRDNIS;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool acceptInboundRDNISSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public bool acceptOutboundRDNIS;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool acceptOutboundRDNISSpecified;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
public enum XSIPCodec {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("711ulaw")]
    Item711ulaw,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("711alaw")]
    Item711alaw,
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
public enum XTransport {
    
    /// <remarks/>
    TCP,
    
    /// <remarks/>
    UDP,
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
public class XSIPTrunkSigDigits {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public bool enable;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTextAttribute(DataType="nonNegativeInteger")]
    public string Value;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
public enum XPresentationBit {
    
    /// <remarks/>
    Default,
    
    /// <remarks/>
    Allowed,
    
    /// <remarks/>
    Restricted,
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
public enum XCallingPartySelection {
    
    /// <remarks/>
    Originator,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("First Redirect Number")]
    FirstRedirectNumber,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Last Redirect Number")]
    LastRedirectNumber,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("First Redirect Number (External)")]
    FirstRedirectNumberExternal,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Last Redirect Number (External)")]
    LastRedirectNumberExternal,
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(AddMGCPEndpointReqEndpoint))]
public class XMGCPEndpoint : XDevice {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.ComponentModel.DefaultValueAttribute(XPacketCaptureMode.None)]
    public XPacketCaptureMode packetCaptureMode = XPacketCaptureMode.None;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="positiveInteger")]
    [System.ComponentModel.DefaultValueAttribute("60")]
    public string packetCaptureDuration = "60";
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
public enum XPacketCaptureMode {
    
    /// <remarks/>
    None,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Real-time Mode")]
    RealtimeMode,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Batch Processing Mode")]
    BatchProcessingMode,
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
public class AddMGCPEndpointReqEndpoint : XMGCPEndpoint {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute(DataType="nonNegativeInteger")]
    public string index;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
public class XVoiceMailPort : XDevice {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public XLine line;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
public class XLine {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
    public string label;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
    public string display;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("dirn", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public XNPDirectoryNumber Item;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.ComponentModel.DefaultValueAttribute(XRingSetting.Ring)]
    public XRingSetting ringSetting = XRingSetting.Ring;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.ComponentModel.DefaultValueAttribute(XRingSetting.UseSystemDefault)]
    public XRingSetting consecutiveRingSetting = XRingSetting.UseSystemDefault;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
    public string e164Mask;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="nonNegativeInteger")]
    public string dialPlanWizardId;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public XMWLPolicy mwlPolicy;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool mwlPolicySpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="nonNegativeInteger")]
    public string maxNumCalls;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="nonNegativeInteger")]
    public string busyTrigger;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public XLineCallInfoDisplay callInfoDisplay;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string uuid;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute(DataType="positiveInteger")]
    public string index;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute(DataType="nonNegativeInteger")]
    public string ctiid;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(XNPMessageWaiting))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(XNPCTIDirectoryNumber))]
public class XNPDirectoryNumber : XNumPlan {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("aarNeighborhoodName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlElementAttribute("aarNeighborhood", typeof(XAARNeighborhood), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public object Item1;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public XCallForwardInfo callForwardAll;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public XCallForwardInfo callForwardBusy;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public XCallForwardInfo callForwardBusyInt;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public XCallForwardInfo callForwardNoAnswer;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public XCallForwardInfo callForwardNoAnswerInt;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public XCallForwardInfo callForwardNoCoverage;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public XCallForwardInfo callForwardNoCoverageInt;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public XCallForwardInfo callForwardOnFailure;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public XCallForwardInfo callForwardAlternateParty;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("callPickupGroup", typeof(XNPCallPickupGroup), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlElementAttribute("callPickupGroupName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public object Item2;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public XAutoAnswer autoAnswer;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool autoAnswerSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="nonNegativeInteger", IsNullable=true)]
    public string networkHoldMOHAudioSourceId;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="nonNegativeInteger", IsNullable=true)]
    public string userHoldMOHAudioSourceId;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string cfaCSSClause;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
    public string alertingName;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("shareLineAppearanceCSS", typeof(XNPDirectoryNumberShareLineAppearanceCSS), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlElementAttribute("shareLineAppearanceCSSName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public object Item3;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("voiceMailProfile", typeof(XVoiceMailProfile), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlElementAttribute("voiceMailProfileName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public object Item4;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public XPatternPrecedence patternPrecedence;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool patternPrecedenceSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public XReleaseCauseValue releaseCause;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool releaseCauseSpecified;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
public class XCallForwardInfo {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.ComponentModel.DefaultValueAttribute(false)]
    public bool forwardToVoiceMail = false;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("callingSearchSpace", typeof(XCallingSearchSpace), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlElementAttribute("callingSearchSpaceName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public object Item;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string destination;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="nonNegativeInteger")]
    public string duration;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
public class XNPCallPickupGroup : XNumPlan {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="Name")]
    public string name;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlArrayItemAttribute("member", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
    public XPickupGroupMember[] members;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
public class XPickupGroupMember {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="nonNegativeInteger")]
    public string priority;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("pickupGroupName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlElementAttribute("pickupGroup", typeof(XPickupGroupMemberPickupGroup), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlElementAttribute("pickupDNAndPartition", typeof(XPickupGroupMemberPickupDNAndPartition), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public object Item;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string uuid;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
public class XPickupGroupMemberPickupGroup {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string uuid;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTextAttribute()]
    public string Value;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
public class XPickupGroupMemberPickupDNAndPartition {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string dnPattern;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("routePartition", typeof(XRoutePartition), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlElementAttribute("routePartitionId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlElementAttribute("routePartitionName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")]
    public object Item;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public ItemChoiceType2 ItemElementName;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0", IncludeInSchema=false)]
public enum ItemChoiceType2 {
    
    /// <remarks/>
    routePartition,
    
    /// <remarks/>
    routePartitionId,
    
    /// <remarks/>
    routePartitionName,
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(XNPCallPark))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(XNPConference))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(XNPCallPickupGroup))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(XNPDirectoryNumber))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(XNPMessageWaiting))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(XNPCTIDirectoryNumber))]
public abstract class XNumPlan {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string pattern;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string description;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public XPatternUsage usage;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("routePartition", typeof(XRoutePartition), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlElementAttribute("routePartitionName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public object Item;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string uuid;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
public class XNPCallPark : XNumPlan {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("callManagerName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlElementAttribute("callManagerId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlChoiceIdentifierAttribute("Item1ElementName")]
    public string Item1;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public Item1ChoiceType Item1ElementName;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0", IncludeInSchema=false)]
public enum Item1ChoiceType {
    
    /// <remarks/>
    callManagerName,
    
    /// <remarks/>
    callManagerId,
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
public class XNPConference : XNumPlan {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public XMixer mixer;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
public enum XMixer {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Not Selected")]
    NotSelected,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Multicast Point")]
    MulticastPoint,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Unicast Bridge")]
    UnicastBridge,
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
public enum XAutoAnswer {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Auto Answer Off")]
    AutoAnswerOff,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Auto Answer with Headset")]
    AutoAnswerwithHeadset,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Auto Answer with Speakerphone")]
    AutoAnswerwithSpeakerphone,
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
public class XVoiceMailProfile {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string name;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string description;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.ComponentModel.DefaultValueAttribute(false)]
    public bool isDefault = false;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string voiceMailboxMask;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public XVoiceMailPilot voiceMailPilot;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string uuid;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
public class XVoiceMailPilot {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string dirn;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string description;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("CSS", typeof(XCallingSearchSpace), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlElementAttribute("CSSName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public object Item;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.ComponentModel.DefaultValueAttribute(false)]
    public bool isDefault = false;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string uuid;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
public enum XPatternPrecedence {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Flash Override")]
    FlashOverride,
    
    /// <remarks/>
    Flash,
    
    /// <remarks/>
    Immediate,
    
    /// <remarks/>
    Priority,
    
    /// <remarks/>
    Routine,
    
    /// <remarks/>
    Default,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Executive Override")]
    ExecutiveOverride,
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
public enum XReleaseCauseValue {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("No Error")]
    NoError,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Unallocated Number")]
    UnallocatedNumber,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Call Rejected")]
    CallRejected,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Number Changed")]
    NumberChanged,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Invalid Number Format")]
    InvalidNumberFormat,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Precedence Level Exceeded")]
    PrecedenceLevelExceeded,
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
public class XNPMessageWaiting : XNPDirectoryNumber {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public bool isMessageWaitingOn;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public XCallingSearchSpace mwiCSS;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
public class XNPCTIDirectoryNumber : XNPDirectoryNumber {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public XCallForwardInfo callForwardCTIFailure;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
public enum XRingSetting {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Use System Default")]
    UseSystemDefault,
    
    /// <remarks/>
    Disable,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Flash Only")]
    FlashOnly,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Ring Once")]
    RingOnce,
    
    /// <remarks/>
    Ring,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Beep Only")]
    BeepOnly,
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
public enum XMWLPolicy {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Use System Policy")]
    UseSystemPolicy,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Light and Prompt")]
    LightandPrompt,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Prompt Only")]
    PromptOnly,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Light Only")]
    LightOnly,
    
    /// <remarks/>
    None,
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
public class XLineCallInfoDisplay {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public bool callerName;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public bool callerNumber;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public bool redirectedNumber;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public bool dialedNumber;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
public class XServerDevice : XDevice {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("processNodeName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="Name")]
    [System.Xml.Serialization.XmlElementAttribute("processNodeId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlElementAttribute("processNode", typeof(XProcessNode), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlChoiceIdentifierAttribute("Item8ElementName")]
    public object Item8;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public Item8ChoiceType Item8ElementName;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0", IncludeInSchema=false)]
public enum Item8ChoiceType {
    
    /// <remarks/>
    processNodeName,
    
    /// <remarks/>
    processNodeId,
    
    /// <remarks/>
    processNode,
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(XH323Phone))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(XH323Gateway))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(XH323Trunk))]
public class XH323Device : XDevice {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public bool waitForFarEndH245TerminalSet;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool waitForFarEndH245TerminalSetSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public bool mtpRequired;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool mtpRequiredSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string callerIdDN;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public XCallingPartySelection callingPartySelection;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool callingPartySelectionSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public XPresentationBit callingLineIdPresentation;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool callingLineIdPresentationSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public bool displayIEDelivery;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool displayIEDeliverySpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public bool redirectOutboundNumberIE;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool redirectOutboundNumberIESpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public bool redirectInboundNumberIE;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool redirectInboundNumberIESpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public bool enableInboundFaststart;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool enableInboundFaststartSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public bool enableOutboundFaststart;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool enableOutboundFaststartSpecified;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
public class XH323Phone : XH323Device {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
    public string ownerUserId;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="nonNegativeInteger")]
    public string signalingPort;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public XH323PhoneGatekeeperInfo gatekeeperInfo;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlArrayItemAttribute("line", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
    public XLine[] lines;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.ComponentModel.DefaultValueAttribute(false)]
    public bool ignorePresentationIndicators = false;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
public class XH323PhoneGatekeeperInfo {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("gatekeeperName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlElementAttribute("gatekeeper", typeof(XGatekeeper), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public object Item;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string e164;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string technologyPrefix;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string zone;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
public class XGatekeeper {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string name;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string description;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="nonNegativeInteger")]
    public string rrqTimeToLive;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="nonNegativeInteger")]
    public string retryTimeout;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public bool enableDevice;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool enableDeviceSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string uuid;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(XH323Trunk))]
public class XH323Gateway : XH323Device {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public XH323GatewaySignificantDigits significantDigits;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string prefixDN;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public XPriOfNumber calledPartyIENumberType;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool calledPartyIENumberTypeSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public XPriOfNumber callingPartyIENumberType;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool callingPartyIENumberTypeSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public XNumberingPlan calledNumberingPlan;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool calledNumberingPlanSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public XNumberingPlan callingNumberingPlan;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool callingNumberingPlanSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public XTunneledProtocol tunneledProtocol;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.ComponentModel.DefaultValueAttribute(false)]
    public bool pathReplacementSupport = false;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
public class XH323GatewaySignificantDigits {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public bool enable;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTextAttribute(DataType="nonNegativeInteger")]
    public string Value;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
public enum XPriOfNumber {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Cisco CallManager")]
    CiscoCallManager,
    
    /// <remarks/>
    Unknown,
    
    /// <remarks/>
    National,
    
    /// <remarks/>
    International,
    
    /// <remarks/>
    Subscriber,
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
public enum XNumberingPlan {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Cisco CallManager")]
    CiscoCallManager,
    
    /// <remarks/>
    ISDN,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("National Standard")]
    NationalStandard,
    
    /// <remarks/>
    Private,
    
    /// <remarks/>
    Unknown,
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
public enum XTunneledProtocol {
    
    /// <remarks/>
    None,
    
    /// <remarks/>
    QSIG,
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
public class XH323Trunk : XH323Gateway {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("remoteServerInfo", typeof(XH323TrunkRemoteServerInfo), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlElementAttribute("gatekeeperInfo", typeof(XH323TrunkGatekeeperInfo), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public object Item8;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
public class XH323TrunkRemoteServerInfo {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string server1;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string server2;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string server3;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
public class XH323TrunkGatekeeperInfo {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("gatekeeperName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlElementAttribute("gatekeeper", typeof(XGatekeeper), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public object Item;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public XTerminal terminal;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string technologyPrefix;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string zone;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
public enum XTerminal {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("-- Not Selected --")]
    NotSelected,
    
    /// <remarks/>
    Terminal,
    
    /// <remarks/>
    Gateway,
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
public class XProfile : XDevice {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public XDeviceProfile deviceProfile;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string loginUserid;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="time")]
    public System.DateTime loginTime;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="nonNegativeInteger")]
    public string loginDuration;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public bool allowHoteling;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string defaultProfileId;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.ComponentModel.DefaultValueAttribute(false)]
    public bool ignorePresentationIndicators = false;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
public enum XDeviceProfile {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Real Device")]
    RealDevice,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("User Profile")]
    UserProfile,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Autogenerated Profile")]
    AutogeneratedProfile,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Model Profile")]
    ModelProfile,
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(XIPPhone))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(XPhoneProfile))]
public class XPhone : XDevice {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string associatedPC;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public XPhoneLines lines;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="positiveInteger")]
    public string numberOfButtons;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("phoneTemplateName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlElementAttribute("phoneTemplate", typeof(XPhoneTemplate), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public object Item8;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlArrayItemAttribute("speeddial", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
    public XSpeeddial[] speeddials;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
public class XPhoneLines {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("lineId", typeof(XLineId), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlElementAttribute("line", typeof(XLine), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlElementAttribute("lineLabel", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlElementAttribute("lineIdentifier", typeof(XNumplanIdentifier), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public object[] Items;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
public class XLineId {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute(DataType="nonNegativeInteger")]
    public string index;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute(DataType="nonNegativeInteger")]
    public string ctiid;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTextAttribute()]
    public string Value;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
public class XNumplanIdentifier {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string directoryNumber;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string routePartitionName;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
public class XPhoneTemplate {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string name;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlArrayItemAttribute("button", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
    public XButton[] buttons;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public XPhoneTemplateUsage usage;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string uuid;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public bool userModifiable;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool userModifiableSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public bool removeAtMigration;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool removeAtMigrationSpecified;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
public class XButton {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public XFeature feature;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string label;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="integer")]
    public string paramN1;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="integer")]
    public string paramN2;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string paramT1;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string paramT2;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string uuid;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute(DataType="positiveInteger")]
    public string index;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
public enum XPhoneTemplateUsage {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Traditional Phone Template")]
    TraditionalPhoneTemplate,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Side Car 14-Buttons")]
    SideCar14Buttons,
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
public class XSpeeddial {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string dirn;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string label;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute(DataType="positiveInteger")]
    public string index;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
public class XCTIRoutePoint : XDevice {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public XCTIRoutePointLines lines;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
public class XCTIRoutePointLines {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("lineId", typeof(XLineId), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlElementAttribute("line", typeof(XLine), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlElementAttribute("lineIdentifier", typeof(XNumplanIdentifier), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public object[] Items;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(XAnalogGateway))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(XDigitalGateway))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(XPRIGateway))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(XT1Gateway))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(XBRIGateway))]
public class XGateway : XDevice {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.ComponentModel.DefaultValueAttribute(XPacketCaptureMode.None)]
    public XPacketCaptureMode packetCaptureMode = XPacketCaptureMode.None;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="positiveInteger")]
    [System.ComponentModel.DefaultValueAttribute("60")]
    public string packetCaptureDuration = "60";
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
public class XAnalogGateway : XGateway {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public XCountry country;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool countrySpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="positiveInteger")]
    public string maxPorts;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlArrayItemAttribute("port", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
    public XAnalogPort[] ports;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public XTrunkSelectionOrder trunkSelectionOrder;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="anyURI")]
    public string helpURL;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(XT1Port))]
public class XAnalogPort {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string attendantDN;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string callerIdDN;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public bool callerIdEnable;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public XCallingPartySelection callingPartySelection;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public XDigitSending digitSending;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="nonNegativeInteger")]
    public string expectedDigits;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public XAnalogPortFinalDigits finalDigits;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("lineId", typeof(XLineId), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlElementAttribute("line", typeof(XLine), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public object Item;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string prefixDN;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public XPresentationBit presentationBit;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public XSilenceSuppressionThreshold silenceSuppressionThreshold;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="nonNegativeInteger")]
    public string smdiPortNumber;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public XStartDialProtocol startDialProtocol;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlArrayItemAttribute("timer", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="nonNegativeInteger", IsNullable=false)]
    public string[] timers;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public XTrunk trunk;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public XTrunkDirection trunkDirection;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public XTrunkLevel trunkLevel;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public XTrunkPad trunkPadRx;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public XTrunkPad trunkPadTx;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public System.Xml.XmlElement vendorConfig;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string uuid;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute(DataType="positiveInteger")]
    public string portNumber;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
public enum XDigitSending {
    
    /// <remarks/>
    DTMF,
    
    /// <remarks/>
    MF,
    
    /// <remarks/>
    PULSE,
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
public class XAnalogPortFinalDigits {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public bool significant;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTextAttribute(DataType="nonNegativeInteger")]
    public string Value;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
public enum XSilenceSuppressionThreshold {
    
    /// <remarks/>
    Disable,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("-48dbm0")]
    Item48dbm0,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("-45dbm0")]
    Item45dbm0,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("-42dbm0")]
    Item42dbm0,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("-39dbm0")]
    Item39dbm0,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("-36dbm0")]
    Item36dbm0,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("-33dbm0")]
    Item33dbm0,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("-30dbm0")]
    Item30dbm0,
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
public enum XStartDialProtocol {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Not Set")]
    NotSet,
    
    /// <remarks/>
    Immediate,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Wink Start Feature Group B")]
    WinkStartFeatureGroupB,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Delay Dial")]
    DelayDial,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Wink Start Feature Group D")]
    WinkStartFeatureGroupD,
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
public enum XTrunkLevel {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("AAL(A)")]
    AALA,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("AAL(D)")]
    AALD,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("A/TT")]
    ATT,
    
    /// <remarks/>
    DAL,
    
    /// <remarks/>
    ICS,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("ISD/TT")]
    ISDTT,
    
    /// <remarks/>
    IST,
    
    /// <remarks/>
    ONS,
    
    /// <remarks/>
    OPS,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("S/ATT")]
    SATT,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("S/DTT")]
    SDTT,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("A/TO")]
    ATO,
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
public class XT1Port : XAnalogPort {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public XCallerID callerId;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string endpointId;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
public enum XCallerID {
    
    /// <remarks/>
    ANI,
    
    /// <remarks/>
    DNIS,
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
public enum XTrunkSelectionOrder {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Bottom Up")]
    BottomUp,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Top Down")]
    TopDown,
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(XPRIGateway))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(XT1Gateway))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(XBRIGateway))]
public abstract class XDigitalGateway : XGateway {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public XCountry country;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool countrySpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public XTrunkSelectionOrder trunkSelectionOrder;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool trunkSelectionOrderSpecified;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
public class XPRIGateway : XDigitalGateway {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public bool acceptInboundRDNIS;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public XNumberingPlan calledPlan;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public XPriOfNumber calledPri;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string callerIDDN;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public XCallingPartySelection callingPartySelection;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public XNumberingPlan callingPlan;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public XPriOfNumber callingPri;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="nonNegativeInteger")]
    public string chanIE;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public XClockReference clockReference;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public XCSUParam csuParam;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public bool dChannelEnable;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public bool direction;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public bool displayIE;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public XEncode encode;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public XFDLChannel fdlChannel;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="nonNegativeInteger")]
    public string firstDelay;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public XPRIGatewayInterfaceId interfaceId;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="nonNegativeInteger")]
    public string intraDelay;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public bool mcdnEnable;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public bool numberIE;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="nonNegativeInteger")]
    public string numDigits;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public bool passingPrecedenceLevelThroughUUIE;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool passingPrecedenceLevelThroughUUIESpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string prefix;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public XPresentationBit callingLinePresentationBit;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public XPresentationBit connectedLinePresentationBit;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public XConnectedPBX connectedPBX;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public XPriProtocol priProtocol;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="nonNegativeInteger")]
    public string securityAccessLevel;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public bool sendCallingNameInFacilityIE;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public bool sendEXLeadingCharInDispIE;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public bool sendRestart;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public bool setupNonISDNPI;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public bool sigDigits;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="nonNegativeInteger")]
    public string span;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public bool statusPoll;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="nonNegativeInteger")]
    public string stripCountOut;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public XTrunkPad trunkPadRx;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public XTrunkPad trunkPadTx;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public XTrunkLevel trunkLevel;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public XYellowAlarm yellowAlarm;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public XZeroSuppression zeroSuppression;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="positiveInteger")]
    public string sMDIBasePort;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public bool protocolProfile91NameOnly;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="anyURI")]
    public string helpURL;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
public enum XClockReference {
    
    /// <remarks/>
    Network,
    
    /// <remarks/>
    Internal,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Span 1")]
    Span1,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Span 2")]
    Span2,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Span 3")]
    Span3,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Span 4")]
    Span4,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Span 5")]
    Span5,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Span 6")]
    Span6,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Span 7")]
    Span7,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Span 8")]
    Span8,
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
public enum XCSUParam {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("0dB")]
    Item0dB,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("-7.5dB")]
    Item75dB,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("-15dB")]
    Item15dB,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("-22.5dB")]
    Item225dB,
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
public enum XEncode {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("A-law")]
    Alaw,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("u-law")]
    ulaw,
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
public enum XFDLChannel {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("ATT 54016")]
    ATT54016,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("ANSI T1.403 NI")]
    ANSIT1403NI,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("ANSI T1.403.CI")]
    ANSIT1403CI,
    
    /// <remarks/>
    None,
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
public class XPRIGatewayInterfaceId {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public bool present;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool presentSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTextAttribute(DataType="nonNegativeInteger")]
    public string Value;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
public enum XConnectedPBX {
    
    /// <remarks/>
    None,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Siemens Hicom")]
    SiemensHicom,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Ericsson MD-110")]
    EricssonMD110,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Alcatel PBX")]
    AlcatelPBX,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Meridian Option 11C")]
    MeridianOption11C,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Lucent Definity G3")]
    LucentDefinityG3,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("IPC MX")]
    IPCMX,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Cisco CCM")]
    CiscoCCM,
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
public enum XPriProtocol {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("PRI 4ESS")]
    PRI4ESS,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("PRI 5E8")]
    PRI5E8,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("PRI 5E8 TELEOS")]
    PRI5E8TELEOS,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("PRI 5E8 INTECOME")]
    PRI5E8INTECOME,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("PRI 5E9")]
    PRI5E9,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("PRI DMS-100")]
    PRIDMS100,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("PRI DMS-250")]
    PRIDMS250,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("PRI EURO")]
    PRIEURO,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("PRI NI2")]
    PRINI2,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("PRI AUSTRALIAN")]
    PRIAUSTRALIAN,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("PRI 5E8 CUSTOM")]
    PRI5E8CUSTOM,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("PRI ETSI SC")]
    PRIETSISC,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("PRI NTT")]
    PRINTT,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("PRI ISO QSIG T1")]
    PRIISOQSIGT1,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("PRI ISO QSIG E1")]
    PRIISOQSIGE1,
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
public enum XYellowAlarm {
    
    /// <remarks/>
    Bit2,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("F-Bit")]
    FBit,
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
public enum XZeroSuppression {
    
    /// <remarks/>
    B8ZS,
    
    /// <remarks/>
    AMI,
    
    /// <remarks/>
    HDB3,
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
public class XT1Gateway : XDigitalGateway {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public XClockReference clockReference;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public XCSUParam csuParam;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public XDigitSending digitSending;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public XEncode encode;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public XFDLChannel fdlChannel;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="positiveInteger")]
    public string maxPorts;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlArrayItemAttribute("port", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
    public XT1Port[] ports;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public XYellowAlarm yellowAlarm;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public XZeroSuppression zeroSuppression;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="positiveInteger")]
    public string sMDIBasePort;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="anyURI")]
    public string helpURL;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
public class XBRIGateway : XDigitalGateway {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public bool acceptInboundRDNIS;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public XBriProtocol briProtocol;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public XNumberingPlan calledPlan;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool calledPlanSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public XPriOfNumber calledPri;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string callerIDDN;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public XCallingPartySelection callingPartySelection;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public XNumberingPlan callingPlan;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool callingPlanSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public XPriOfNumber callingPri;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="nonNegativeInteger")]
    public string chanIE;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public XClockReference clockReference;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public XCSUParam csuParam;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public bool dChannelEnable;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public bool direction;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public bool displayIE;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public XEncode encode;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public XFDLChannel fdlChannel;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="nonNegativeInteger")]
    public string firstDelay;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public XFraming framing;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="nonNegativeInteger")]
    public string intraDelay;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public bool numberIE;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="nonNegativeInteger")]
    public string numDigits;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string prefix;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public XPresentationBit presentationBit;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public bool sendRestart;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public bool setupNonISDNPI;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public bool sigDigits;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public bool stableIn4;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public bool statusPoll;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="nonNegativeInteger")]
    public string stripCountOut;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public XTrunkPad trunkPadRx;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public XTrunkPad trunkPadTx;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public XTrunkLevel trunkLevel;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public XYellowAlarm yellowAlarm;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public XZeroSuppression zeroSuppression;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
public enum XBriProtocol {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("BRI NET3")]
    BRINET3,
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
public enum XFraming {
    
    /// <remarks/>
    D4,
    
    /// <remarks/>
    ESF,
    
    /// <remarks/>
    CRC4,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Non CRC4")]
    NonCRC4,
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0", IncludeInSchema=false)]
public enum ItemChoiceType25 {
    
    /// <remarks/>
    deviceId,
    
    /// <remarks/>
    deviceName,
    
    /// <remarks/>
    device,
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
public class XDigitDiscardInstruction {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string name;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string clause;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("dialPlan", typeof(XDialPlan), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlElementAttribute("dialPlanName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public object Item;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="nonNegativeInteger")]
    public string digitAnalysisId;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlArrayItemAttribute("member", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
    public XDigitDiscardInstructionMember[] members;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string uuid;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
public class XDialPlan {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string name;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string description;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string uuid;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
public class XDigitDiscardInstructionMember {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("dialPlanTag", typeof(XDialPlanTag), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlElementAttribute("dialPlanTagName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public object Item;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string uuid;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
public class XDialPlanTag {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string name;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("dialPlan", typeof(XDialPlan), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlElementAttribute("dialPlanName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public object Item;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public XOperator @operator;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public bool suppressFromRouteFilter;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool suppressFromRouteFilterSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string uuid;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
public enum XOperator {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("NOT-SELECTED")]
    NOTSELECTED,
    
    /// <remarks/>
    EXISTS,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("DOES-NOT-EXIST")]
    DOESNOTEXIST,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("==")]
    Item,
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0", IncludeInSchema=false)]
public enum ItemChoiceType60 {
    
    /// <remarks/>
    routeList,
    
    /// <remarks/>
    gateway,
    
    /// <remarks/>
    routeListName,
    
    /// <remarks/>
    gatewayName,
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(XNPTranslationPattern))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(XNPRoutePattern))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(XNPHuntPilot))]
public abstract class XNPPattern {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string pattern;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string description;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public XPatternUsage usage;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("routePartition", typeof(XRoutePartition), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlElementAttribute("routePartitionName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public object Item;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public bool blockEnable;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string calledPartyTransformationMask;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string callingPartyTransformationMask;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public XStatus useCallingPartyPhoneMask;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string callingPartyPrefixDigits;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("dialPlan", typeof(XDialPlan), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlElementAttribute("dialPlanName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public object Item1;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="nonNegativeInteger")]
    public string dialPlanWizardGenId;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("digitDiscardInstructionName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlElementAttribute("digitDiscardInstruction", typeof(XDigitDiscardInstruction), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public object Item2;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public XLampBlinkRate messageWaiting;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public XNetworkLocation networkLocation;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public bool patternUrgency;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string prefixDigitsOut;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("routeFilter", typeof(XRouteFilter), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlElementAttribute("routeFilterName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public object Item3;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public XPresentationBit callingLinePresentationBit;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool callingLinePresentationBitSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public XPresentationBit callingNamePresentationBit;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool callingNamePresentationBitSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public XPresentationBit connectedLinePresentationBit;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool connectedLinePresentationBitSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public XPresentationBit connectedNamePresentationBit;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool connectedNamePresentationBitSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public bool supportOverlapSending;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool supportOverlapSendingSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public XPatternPrecedence patternPrecedence;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool patternPrecedenceSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public XReleaseCauseValue releaseCause;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool releaseCauseSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public object allowDeviceOverride;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public object provideOutsideDialtone;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string uuid;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
public enum XLampBlinkRate {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Lamp Off")]
    LampOff,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Lamp On")]
    LampOn,
    
    /// <remarks/>
    Wink,
    
    /// <remarks/>
    Flash,
    
    /// <remarks/>
    Blink,
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
public class XRouteFilter {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string name;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string clause;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("dialPlan", typeof(XDialPlan), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlElementAttribute("dialPlanName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public object Item;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="nonNegativeInteger")]
    public string dialPlanWizardGenId;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlArrayItemAttribute("member", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
    public XRouteFilterMember[] members;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string uuid;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
public class XRouteFilterMember {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("dialPlanTag", typeof(XDialPlanTag), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlElementAttribute("dialPlanTagName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public object Item;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="nonNegativeInteger")]
    public string digits;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public XOperator @operator;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string uuid;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute(DataType="nonNegativeInteger")]
    public string priority;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
public class XNPTranslationPattern : XNPPattern {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("callingSearchSpace", typeof(XCallingSearchSpace), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlElementAttribute("callingSearchSpaceName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public object Item;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
public class XNPHuntPilot : XNPPattern {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public XNPHuntPilotDestination destination;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public XHuntForwardInfo ForwardHuntBusy;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public XHuntForwardInfo ForwardHuntNoAnswer;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
public class XNPHuntPilotDestination {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("huntListName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlElementAttribute("huntList", typeof(XHuntList), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public object Item;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
public class XHuntList {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="Name")]
    public string name;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string description;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("callManagerGroupName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlElementAttribute("callManagerGroup", typeof(XCallManagerGroup), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public object Item;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public bool routeListEnabled;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool routeListEnabledSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlArrayItemAttribute("member", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
    public XHuntListMember[] members;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string uuid;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
public class XHuntListMember {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("lineGroup", typeof(XLineGroup), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlElementAttribute("lineGroupName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public object Item;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="nonNegativeInteger")]
    public string selectionOrder;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string calledPartyTransformationMask;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string callingPartyTransformationMask;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("callingSearchSpace", typeof(XCallingSearchSpace), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlElementAttribute("callingSearchSpaceName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="Name")]
    public object Item1;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="nonNegativeInteger")]
    public string dialPlanWizardGenId;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("digitDiscardInstructionName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="Name")]
    [System.Xml.Serialization.XmlElementAttribute("digitDiscardInstruction", typeof(XDigitDiscardInstruction), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public object Item2;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string prefixDigitsOut;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string callingPartyPrefixDigits;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public XStatus useFullyQualifiedCallingPartyNumber;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string uuid;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
public class XLineGroup {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="Name")]
    public string name;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public XDistributeAlgorithm distributionAlgorithm;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="nonNegativeInteger")]
    [System.ComponentModel.DefaultValueAttribute("10")]
    public string rnaReversionTimeout = "10";
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public XHuntAlgorithm huntAlgorithmNoAnswer;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public XHuntAlgorithm huntAlgorithmBusy;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public XHuntAlgorithm huntAlgorithmNotAvailable;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlArrayItemAttribute("member", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
    public XLineGroupMember[] members;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string uuid;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
public enum XDistributeAlgorithm {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Top Down")]
    TopDown,
    
    /// <remarks/>
    Circular,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Longest Idle Time")]
    LongestIdleTime,
    
    /// <remarks/>
    Broadcast,
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
public enum XHuntAlgorithm {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Try next member; then, try next group in Hunt List")]
    TrynextmemberthentrynextgroupinHuntList,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Try next member, but do not go to next group")]
    Trynextmemberbutdonotgotonextgroup,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Skip remaining members, and go directly to next group")]
    Skipremainingmembersandgodirectlytonextgroup,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Stop hunting")]
    Stophunting,
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
public class XLineGroupMember {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="nonNegativeInteger")]
    public string lineSelectionOrder;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("dnPatternAndPartition", typeof(XLineGroupMemberDnPatternAndPartition), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlElementAttribute("directoryNumber", typeof(XNPDirectoryNumber), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlElementAttribute("directoryNumberId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public object Item;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string uuid;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
public class XLineGroupMemberDnPatternAndPartition {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string dnPattern;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("routePartition", typeof(XRoutePartition), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlElementAttribute("routePartitionId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlElementAttribute("routePartitionName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")]
    public object Item;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public ItemChoiceType23 ItemElementName;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0", IncludeInSchema=false)]
public enum ItemChoiceType23 {
    
    /// <remarks/>
    routePartition,
    
    /// <remarks/>
    routePartitionId,
    
    /// <remarks/>
    routePartitionName,
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
public class XHuntForwardInfo {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.ComponentModel.DefaultValueAttribute(false)]
    public bool usePersonalPreferences = false;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("callingSearchSpace", typeof(XCallingSearchSpace), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlElementAttribute("callingSearchSpaceName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public object Item;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string destination;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="nonNegativeInteger")]
    public string maxHuntduration;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
public class GetRoutePatternRes {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public GetRoutePatternResReturn @return;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public System.UInt64 sequence;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool sequenceSpecified;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
public class RemoveDeviceProfileReq {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("profileName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlElementAttribute("profileId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")]
    public string Item;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public ItemChoiceType107 ItemElementName;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public System.UInt64 sequence;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool sequenceSpecified;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
public enum ItemChoiceType107 {
    
    /// <remarks/>
    profileName,
    
    /// <remarks/>
    profileId,
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
public class AddTimeScheduleReq {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public XTimeSchedule timeSchedule;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public System.UInt64 sequence;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool sequenceSpecified;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
public class XTimeSchedule {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string name;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlArrayItemAttribute("member", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
    public XTimeScheduleTimePeriod[] members;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string uuid;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
public class XTimeScheduleTimePeriod {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("timePeriodName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlElementAttribute("timePeriod", typeof(XTimeScheduleTimePeriodTimePeriod), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public object Item;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string uuid;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
public class XTimeScheduleTimePeriodTimePeriod : XTimePeriod {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string uuid;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(XTimeScheduleTimePeriodTimePeriod))]
public class XTimePeriod {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string name;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public XTimeOfDay startTime;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool startTimeSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public XTimeOfDay endTime;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool endTimeSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public XDayOfWeek startDay;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool startDaySpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public XDayOfWeek endDay;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool endDaySpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public XMonthOfYear monthOfYear;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool monthOfYearSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="nonNegativeInteger")]
    public string dayOfMonth;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
public enum XTimeOfDay {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("No Office Hours")]
    NoOfficeHours,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("0:00")]
    Item000,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("0:15")]
    Item015,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("0:30")]
    Item030,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("0:45")]
    Item045,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("1:00")]
    Item100,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("1:15")]
    Item115,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("1:30")]
    Item130,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("1:45")]
    Item145,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("2:00")]
    Item200,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("2:15")]
    Item215,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("2:30")]
    Item230,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("2:45")]
    Item245,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("3:00")]
    Item300,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("3:15")]
    Item315,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("3:30")]
    Item330,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("3:45")]
    Item345,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("4:00")]
    Item400,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("4:15")]
    Item415,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("4:30")]
    Item430,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("4:45")]
    Item445,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("5:00")]
    Item500,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("5:15")]
    Item515,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("5:30")]
    Item530,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("5:45")]
    Item545,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("6:00")]
    Item600,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("6:15")]
    Item615,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("6:30")]
    Item630,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("6:45")]
    Item645,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("7:00")]
    Item700,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("7:15")]
    Item715,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("7:30")]
    Item730,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("7:45")]
    Item745,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("8:00")]
    Item800,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("8:15")]
    Item815,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("8:30")]
    Item830,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("8:45")]
    Item845,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("9:00")]
    Item900,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("9:15")]
    Item915,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("9:30")]
    Item930,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("9:45")]
    Item945,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("10:00")]
    Item1000,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("10:15")]
    Item1015,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("10:30")]
    Item1030,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("10:45")]
    Item1045,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("11:00")]
    Item1100,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("11:15")]
    Item1115,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("11:30")]
    Item1130,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("11:45")]
    Item1145,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("12:00")]
    Item1200,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("12:15")]
    Item1215,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("12:30")]
    Item1230,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("12:45")]
    Item1245,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("13:00")]
    Item1300,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("13:15")]
    Item1315,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("13:30")]
    Item1330,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("13:45")]
    Item1345,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("14:00")]
    Item1400,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("14:15")]
    Item1415,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("14:30")]
    Item1430,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("14:45")]
    Item1445,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("15:00")]
    Item1500,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("15:15")]
    Item1515,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("15:30")]
    Item1530,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("15:45")]
    Item1545,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("16:00")]
    Item1600,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("16:15")]
    Item1615,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("16:30")]
    Item1630,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("16:45")]
    Item1645,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("17:00")]
    Item1700,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("17:15")]
    Item1715,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("17:30")]
    Item1730,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("17:45")]
    Item1745,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("18:00")]
    Item1800,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("18:15")]
    Item1815,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("18:30")]
    Item1830,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("18:45")]
    Item1845,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("19:00")]
    Item1900,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("19:15")]
    Item1915,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("19:30")]
    Item1930,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("19:45")]
    Item1945,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("20:00")]
    Item2000,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("20:15")]
    Item2015,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("20:30")]
    Item2030,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("20:45")]
    Item2045,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("21:00")]
    Item2100,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("21:15")]
    Item2115,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("21:30")]
    Item2130,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("21:45")]
    Item2145,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("22:00")]
    Item2200,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("22:15")]
    Item2215,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("22:30")]
    Item2230,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("22:45")]
    Item2245,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("23:00")]
    Item2300,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("23:15")]
    Item2315,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("23:30")]
    Item2330,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("23:45")]
    Item2345,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("24:00")]
    Item2400,
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
public enum XDayOfWeek {
    
    /// <remarks/>
    Sun,
    
    /// <remarks/>
    Mon,
    
    /// <remarks/>
    Tue,
    
    /// <remarks/>
    Wed,
    
    /// <remarks/>
    Thu,
    
    /// <remarks/>
    Fri,
    
    /// <remarks/>
    Sat,
    
    /// <remarks/>
    None,
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
public enum XMonthOfYear {
    
    /// <remarks/>
    None,
    
    /// <remarks/>
    Jan,
    
    /// <remarks/>
    Feb,
    
    /// <remarks/>
    Mar,
    
    /// <remarks/>
    Apr,
    
    /// <remarks/>
    May,
    
    /// <remarks/>
    Jun,
    
    /// <remarks/>
    Jul,
    
    /// <remarks/>
    Aug,
    
    /// <remarks/>
    Sep,
    
    /// <remarks/>
    Oct,
    
    /// <remarks/>
    Nov,
    
    /// <remarks/>
    Dec,
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
public class GetHuntListResReturn {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public XHuntList huntList;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
public class GetHuntListRes {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public GetHuntListResReturn @return;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public System.UInt64 sequence;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool sequenceSpecified;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
public class GetPhoneReq {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("phoneId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlElementAttribute("phoneName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")]
    public string Item;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public ItemChoiceType106 ItemElementName;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public System.UInt64 sequence;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool sequenceSpecified;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
public enum ItemChoiceType106 {
    
    /// <remarks/>
    phoneId,
    
    /// <remarks/>
    phoneName,
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
public class AddRegionReq {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public XRegion region;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public System.UInt64 sequence;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool sequenceSpecified;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
public class GetPhoneRes {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public GetPhoneResReturn @return;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public System.UInt64 sequence;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool sequenceSpecified;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
public class GetPhoneResReturn {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public XIPPhone device;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
public class GetRouteGroupResReturn {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public XRouteGroup routeGroup;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
public class GetRouteGroupRes {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public GetRouteGroupResReturn @return;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public System.UInt64 sequence;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool sequenceSpecified;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
public class UpdateDDIReq {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("name", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlElementAttribute("uuid", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")]
    public string Item;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public ItemChoiceType105 ItemElementName;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="Name")]
    public string newName;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("dialPlanName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlElementAttribute("dialPlanId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlChoiceIdentifierAttribute("Item1ElementName")]
    public string Item1;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public Item1ChoiceType25 Item1ElementName;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlArrayItemAttribute("member", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
    public XDigitDiscardInstructionMember[] members;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public System.UInt64 sequence;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool sequenceSpecified;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
public enum ItemChoiceType105 {
    
    /// <remarks/>
    name,
    
    /// <remarks/>
    uuid,
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
public enum Item1ChoiceType25 {
    
    /// <remarks/>
    dialPlanName,
    
    /// <remarks/>
    dialPlanId,
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(TypeName="UpdateUserReq", Namespace="http://www.cisco.com/AXL/API/1.0")]
public class UpdateUserReq1 {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string userid;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string firstname;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string lastname;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string password;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string pin;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string telephoneNumber;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string extension;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string department;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string manager;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public XCountry locale;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool localeSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlArrayItemAttribute("device", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
    public string[] associatedDevices;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string associatedPC;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public bool authenticationProxyRights;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool authenticationProxyRightsSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public bool enableCTI;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool enableCTISpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public bool enableCTISuperProvider;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool enableCTISuperProviderSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public bool allowCallParkRetrieval;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool allowCallParkRetrievalSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public bool callingNumberModAllowed;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool callingNumberModAllowedSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string iaqExtension;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public UpdateUserReqPhoneProfiles phoneProfiles;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public System.UInt64 sequence;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool sequenceSpecified;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
public class UpdateUserReqPhoneProfiles {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("profile", typeof(XPhoneProfile), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlElementAttribute("profileName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public object[] Items;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
public class XPhoneProfile : XIPPhone {
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
public class AddCSSReq {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public XCallingSearchSpace newCSS;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public System.UInt64 sequence;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool sequenceSpecified;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
public class UpdateCallPickupGroupReq {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("routePartitionId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlElementAttribute("name", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlElementAttribute("routePartitionName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlElementAttribute("uuid", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlElementAttribute("pattern", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlElementAttribute("routeFilterId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlElementAttribute("routeFilterName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")]
    public string Item;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public ItemChoiceType104 ItemElementName;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string newPattern;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string description;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("newRoutePartitionId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlElementAttribute("newRoutePartitionName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlChoiceIdentifierAttribute("Item1ElementName")]
    public string Item1;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public Item1ChoiceType24 Item1ElementName;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string newName;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlArrayItemAttribute("member", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
    public XPickupGroupMember[] members;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public System.UInt64 sequence;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool sequenceSpecified;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
public enum ItemChoiceType104 {
    
    /// <remarks/>
    routePartitionId,
    
    /// <remarks/>
    name,
    
    /// <remarks/>
    routePartitionName,
    
    /// <remarks/>
    uuid,
    
    /// <remarks/>
    pattern,
    
    /// <remarks/>
    routeFilterId,
    
    /// <remarks/>
    routeFilterName,
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
public enum Item1ChoiceType24 {
    
    /// <remarks/>
    newRoutePartitionId,
    
    /// <remarks/>
    newRoutePartitionName,
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
public class UpdateCallParkReq {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("routePartitionId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlElementAttribute("routePartitionName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlElementAttribute("uuid", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlElementAttribute("pattern", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlElementAttribute("routeFilterId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlElementAttribute("routeFilterName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")]
    public string Item;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public ItemChoiceType103 ItemElementName;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string newPattern;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string description;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("newRoutePartitionId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlElementAttribute("newRoutePartitionName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlChoiceIdentifierAttribute("Item1ElementName")]
    public string Item1;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public Item1ChoiceType23 Item1ElementName;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("callManagerName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlElementAttribute("callManagerId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlChoiceIdentifierAttribute("Item2ElementName")]
    public string Item2;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public Item2ChoiceType17 Item2ElementName;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public System.UInt64 sequence;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool sequenceSpecified;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
public enum ItemChoiceType103 {
    
    /// <remarks/>
    routePartitionId,
    
    /// <remarks/>
    routePartitionName,
    
    /// <remarks/>
    uuid,
    
    /// <remarks/>
    pattern,
    
    /// <remarks/>
    routeFilterId,
    
    /// <remarks/>
    routeFilterName,
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
public enum Item1ChoiceType23 {
    
    /// <remarks/>
    newRoutePartitionId,
    
    /// <remarks/>
    newRoutePartitionName,
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
public enum Item2ChoiceType17 {
    
    /// <remarks/>
    callManagerName,
    
    /// <remarks/>
    callManagerId,
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
public class DeviceLoginResponse {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string @return;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public System.UInt64 sequence;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool sequenceSpecified;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
public class UpdateGatekeeperReq {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("name", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlElementAttribute("uuid", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")]
    public string Item;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public ItemChoiceType102 ItemElementName;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string newName;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string description;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="nonNegativeInteger")]
    public string rrqTimeToLive;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public bool retryTimeout;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool retryTimeoutSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public bool enableDevice;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool enableDeviceSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public System.UInt64 sequence;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool sequenceSpecified;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
public enum ItemChoiceType102 {
    
    /// <remarks/>
    name,
    
    /// <remarks/>
    uuid,
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
public class AddMGCPSubunitReqUnit {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute(DataType="nonNegativeInteger")]
    public string index;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
public class AddMGCPSubunitReq {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("uuid", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlElementAttribute("domainName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")]
    public string Item;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public ItemChoiceType101 ItemElementName;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public AddMGCPSubunitReqUnit unit;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public XMGCPSubunit subunit;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public System.UInt64 sequence;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool sequenceSpecified;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
public enum ItemChoiceType101 {
    
    /// <remarks/>
    uuid,
    
    /// <remarks/>
    domainName,
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
public class XMGCPSubunit {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public XMGCPVic product;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public XMGCPEndpoints endpoints;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute(DataType="nonNegativeInteger")]
    public string index;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
public enum XMGCPVic {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("VIC-2FXS")]
    VIC2FXS,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("VIC-2FXO")]
    VIC2FXO,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("VWIC-1MFT-T1")]
    VWIC1MFTT1,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("VWIC-2MFT-T1")]
    VWIC2MFTT1,
    
    /// <remarks/>
    VIC_NONE,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("VWIC-1MFT-E1")]
    VWIC1MFTE1,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("VWIC-2MFT-E1")]
    VWIC2MFTE1,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("WS-U4604-8FXS")]
    WSU46048FXS,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("8FXS")]
    Item8FXS,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("16FXS")]
    Item16FXS,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("1T1")]
    Item1T1,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("16FXS8FXO")]
    Item16FXS8FXO,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("48_PORTS")]
    Item48_PORTS,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("VIC-4FXS")]
    VIC4FXS,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("VIC-4FXO")]
    VIC4FXO,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("VIC-8FXS")]
    VIC8FXS,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("VIC-16FXS")]
    VIC16FXS,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("WS-SVC-CMM-24FXS")]
    WSSVCCMM24FXS,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("WS-SVC-CMM-6T1")]
    WSSVCCMM6T1,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("WS-SVC-CMM-6E1")]
    WSSVCCMM6E1,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("EM-4FXO-EM0")]
    EM4FXOEM0,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("EM-4FXO-EM1")]
    EM4FXOEM1,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("EM-8FXS-EM0")]
    EM8FXSEM0,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("EM-8FXS-EM1")]
    EM8FXSEM1,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("NM-HDA-4FXS")]
    NMHDA4FXS,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("PA-VXA-1TE1-24-T1")]
    PAVXA1TE124T1,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("PA-VXA-1TE1-30-E1")]
    PAVXA1TE130E1,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("PA-VXB-2TE1-T1")]
    PAVXB2TE1T1,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("PA-VXB-2TE1-E1")]
    PAVXB2TE1E1,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("PA-VXC-2TE1-T1")]
    PAVXC2TE1T1,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("PA-VXC-2TE1-E1")]
    PAVXC2TE1E1,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("PA-MCX-2TE1-T1")]
    PAMCX2TE1T1,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("PA-MCX-2TE1-E1")]
    PAMCX2TE1E1,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("PA-MCX-4TE1-T1")]
    PAMCX4TE1T1,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("PA-MCX-4TE1-E1")]
    PAMCX4TE1E1,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("PA-MCX-6TE1-T1")]
    PAMCX6TE1T1,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("PA-MCX-6TE1-E1")]
    PAMCX6TE1E1,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("PA-MCX-8TE1-T1")]
    PAMCX8TE1T1,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("PA-MCX-8TE1-E1")]
    PAMCX8TE1E1,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("VIC-8FXO")]
    VIC8FXO,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("WS-U4604-8FXO-2FXS")]
    WSU46048FXO2FXS,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("WS-U4604-16FXS")]
    WSU460416FXS,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("VIC-2BRI")]
    VIC2BRI,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("VIC-2FXS-SCCP")]
    VIC2FXSSCCP,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("VIC-4FXS-SCCP")]
    VIC4FXSSCCP,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("VIC2-2FXS-SCCP")]
    VIC22FXSSCCP,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("VIC2-2BRI-NT/TE-SCCP")]
    VIC22BRINTTESCCP,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("NM-HDA-4FXS-SCCP")]
    NMHDA4FXSSCCP,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("EM-8FXS-EM0-SCCP")]
    EM8FXSEM0SCCP,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("24FXS-SCCP")]
    Item24FXSSCCP,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("EM-8FXS-EM1-SCCP")]
    EM8FXSEM1SCCP,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("WS-SVC-CMM-ACT")]
    WSSVCCMMACT,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("VIC2-2FXS")]
    VIC22FXS,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("VIC2-2FXO")]
    VIC22FXO,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("VIC2-2BRI")]
    VIC22BRI,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("VIC-4FXS/DID")]
    VIC4FXSDID,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("VIC2-4FXO")]
    VIC24FXO,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("NM-HDV2-ONBOARD-T1")]
    NMHDV2ONBOARDT1,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("NM-HDV2-ONBOARD-E1")]
    NMHDV2ONBOARDE1,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("VWIC2-1MFT-T1E1-T1")]
    VWIC21MFTT1E1T1,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("VWIC2-1MFT-T1E1-E1")]
    VWIC21MFTT1E1E1,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("VWIC2-2MFT-T1E1-T1")]
    VWIC22MFTT1E1T1,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("VWIC2-2MFT-T1E1-E1")]
    VWIC22MFTT1E1E1,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("VWIC2-1MFT-G703-T1")]
    VWIC21MFTG703T1,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("VWIC2-1MFT-G703-E1")]
    VWIC21MFTG703E1,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("VWIC2-2MFT-G703-T1")]
    VWIC22MFTG703T1,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("VWIC2-2MFT-G703-E1")]
    VWIC22MFTG703E1,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("EVM-HD-8FXS/DID")]
    EVMHD8FXSDID,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("EM-4BRI-NT/TE-EM0")]
    EM4BRINTTEEM0,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("EM-4BRI-NT/TE-EM1")]
    EM4BRINTTEEM1,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("24FXS")]
    Item24FXS,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("NM-HDV2-ONBOARD-T1-2PORT")]
    NMHDV2ONBOARDT12PORT,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("NM-HDV2-ONBOARD-E1-2PORT")]
    NMHDV2ONBOARDE12PORT,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("EM-HDA-8FXS")]
    EMHDA8FXS,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("EM-HDA-6FXO")]
    EMHDA6FXO,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("EM-HDA-3FXS/4FXO")]
    EMHDA3FXS4FXO,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("EM2-HDA-4FXO")]
    EM2HDA4FXO,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("EM-4BRI-NT/TE")]
    EM4BRINTTE,
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
public class XMGCPEndpoints {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("deviceName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlElementAttribute("endpoint", typeof(XGateway), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public object[] Items;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute(DataType="positiveInteger")]
    public string max;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
public class UpdateProcessNodeReq {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("name", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlElementAttribute("uuid", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")]
    public string Item;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public ItemChoiceType100 ItemElementName;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="Name")]
    public string newName;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string description;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string mac;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public System.UInt64 sequence;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool sequenceSpecified;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
public enum ItemChoiceType100 {
    
    /// <remarks/>
    name,
    
    /// <remarks/>
    uuid,
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
public class RemoveRoutePatternReq {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("routePartitionId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlElementAttribute("routePartitionName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlElementAttribute("uuid", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlElementAttribute("pattern", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlElementAttribute("routeFilterId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlElementAttribute("routeFilterName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")]
    public string Item;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public ItemChoiceType99 ItemElementName;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public System.UInt64 sequence;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool sequenceSpecified;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
public enum ItemChoiceType99 {
    
    /// <remarks/>
    routePartitionId,
    
    /// <remarks/>
    routePartitionName,
    
    /// <remarks/>
    uuid,
    
    /// <remarks/>
    pattern,
    
    /// <remarks/>
    routeFilterId,
    
    /// <remarks/>
    routeFilterName,
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
public class AddMGCPEndpointReqSubunit {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute(DataType="nonNegativeInteger")]
    public string index;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
public class AddMGCPEndpointReqUnit {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute(DataType="nonNegativeInteger")]
    public string index;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
public class AddMGCPEndpointReq {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("uuid", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlElementAttribute("domainName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")]
    public string Item;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public ItemChoiceType98 ItemElementName;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public AddMGCPEndpointReqUnit unit;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public AddMGCPEndpointReqSubunit subunit;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public AddMGCPEndpointReqEndpoint endpoint;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public System.UInt64 sequence;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool sequenceSpecified;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
public enum ItemChoiceType98 {
    
    /// <remarks/>
    uuid,
    
    /// <remarks/>
    domainName,
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
public class DeviceLogoutReq {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("deviceId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlElementAttribute("deviceName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")]
    public string Item;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public ItemChoiceType97 ItemElementName;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public System.UInt64 sequence;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool sequenceSpecified;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
public enum ItemChoiceType97 {
    
    /// <remarks/>
    deviceId,
    
    /// <remarks/>
    deviceName,
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
public class NameAndGUIDRequest {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("name", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlElementAttribute("uuid", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")]
    public string Item;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public ItemChoiceType96 ItemElementName;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public System.UInt64 sequence;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool sequenceSpecified;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
public enum ItemChoiceType96 {
    
    /// <remarks/>
    name,
    
    /// <remarks/>
    uuid,
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
public class AddH323PhoneReq {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public XH323Phone phone;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public System.UInt64 sequence;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool sequenceSpecified;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
public class UpdateDialPlanTagReq {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("name", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlElementAttribute("uuid", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")]
    public string Item;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public ItemChoiceType95 ItemElementName;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="Name")]
    public string newName;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("dialPlanName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlElementAttribute("dialPlan", typeof(XDialPlan), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public object Item1;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public XOperator @operator;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool operatorSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public bool suppressFromRouteFilter;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool suppressFromRouteFilterSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public System.UInt64 sequence;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool sequenceSpecified;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
public enum ItemChoiceType95 {
    
    /// <remarks/>
    name,
    
    /// <remarks/>
    uuid,
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
public abstract class UpdateNumPlanPattern {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("routePartitionId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlElementAttribute("routePartitionName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlElementAttribute("uuid", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlElementAttribute("pattern", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlElementAttribute("routeFilterId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlElementAttribute("routeFilterName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")]
    public string Item;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public ItemChoiceType94 ItemElementName;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public System.UInt64 sequence;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool sequenceSpecified;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
public enum ItemChoiceType94 {
    
    /// <remarks/>
    routePartitionId,
    
    /// <remarks/>
    routePartitionName,
    
    /// <remarks/>
    uuid,
    
    /// <remarks/>
    pattern,
    
    /// <remarks/>
    routeFilterId,
    
    /// <remarks/>
    routeFilterName,
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
public class ListDeviceByServiceNameReq {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string searchString;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public XClass serviceName;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public System.UInt64 sequence;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool sequenceSpecified;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
public class GetMediaResourceGroupResReturn {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public XMediaResourceGroup mediaResourceGroup;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
public class GetMediaResourceGroupRes {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public GetMediaResourceGroupResReturn @return;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public System.UInt64 sequence;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool sequenceSpecified;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
public class ListDeviceByServiceNameResDevice {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string name;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string uuid;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
public class ListDeviceByServiceNameRes {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlArrayItemAttribute("device", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
    public ListDeviceByServiceNameResDevice[] @return;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public System.UInt64 sequence;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool sequenceSpecified;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
public class UpdateDevicePoolReq {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("name", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlElementAttribute("uuid", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")]
    public string Item;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public ItemChoiceType93 ItemElementName;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string newName;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("autoSearchSpaceName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
    [System.Xml.Serialization.XmlElementAttribute("autoSearchSpaceId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
    [System.Xml.Serialization.XmlChoiceIdentifierAttribute("Item1ElementName")]
    public string Item1;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public Item1ChoiceType22 Item1ElementName;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("dateTimeSettingId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlElementAttribute("dateTimeSettingName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlChoiceIdentifierAttribute("Item2ElementName")]
    public string Item2;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public Item2ChoiceType16 Item2ElementName;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("callManagerGroupId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlElementAttribute("callManagerGroupName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlChoiceIdentifierAttribute("Item3ElementName")]
    public string Item3;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public Item3ChoiceType14 Item3ElementName;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("mediaResourceListId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
    [System.Xml.Serialization.XmlElementAttribute("mediaResourceListName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
    [System.Xml.Serialization.XmlChoiceIdentifierAttribute("Item4ElementName")]
    public string Item4;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public Item4ChoiceType13 Item4ElementName;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("regionId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlElementAttribute("regionName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlChoiceIdentifierAttribute("Item5ElementName")]
    public string Item5;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public Item5ChoiceType11 Item5ElementName;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("softkeyTemplateName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlElementAttribute("softkeyTemplateId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlChoiceIdentifierAttribute("Item6ElementName")]
    public string Item6;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public Item6ChoiceType8 Item6ElementName;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public XCountry networkLocale;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool networkLocaleSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public XUserLocale userLocale;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool userLocaleSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="integer")]
    public string networkHoldMOHAudioSourceId;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="integer")]
    public string userHoldMOHAudioSourceId;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("srstName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlElementAttribute("srstInfoId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlChoiceIdentifierAttribute("Item7ElementName")]
    public string Item7;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public Item7ChoiceType2 Item7ElementName;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public int mlppDomainId;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool mlppDomainIdSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public XStatus mlppIndicationStatus;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool mlppIndicationStatusSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public XPreemption preemption;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool preemptionSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public int connectionMonitorDuration;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool connectionMonitorDurationSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public System.UInt64 sequence;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool sequenceSpecified;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
public enum ItemChoiceType93 {
    
    /// <remarks/>
    name,
    
    /// <remarks/>
    uuid,
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
public enum Item1ChoiceType22 {
    
    /// <remarks/>
    autoSearchSpaceName,
    
    /// <remarks/>
    autoSearchSpaceId,
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
public enum Item2ChoiceType16 {
    
    /// <remarks/>
    dateTimeSettingId,
    
    /// <remarks/>
    dateTimeSettingName,
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
public enum Item3ChoiceType14 {
    
    /// <remarks/>
    callManagerGroupId,
    
    /// <remarks/>
    callManagerGroupName,
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
public enum Item4ChoiceType13 {
    
    /// <remarks/>
    mediaResourceListId,
    
    /// <remarks/>
    mediaResourceListName,
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
public enum Item5ChoiceType11 {
    
    /// <remarks/>
    regionId,
    
    /// <remarks/>
    regionName,
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
public enum Item6ChoiceType8 {
    
    /// <remarks/>
    softkeyTemplateName,
    
    /// <remarks/>
    softkeyTemplateId,
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
public enum Item7ChoiceType2 {
    
    /// <remarks/>
    srstName,
    
    /// <remarks/>
    srstInfoId,
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
public class AddDeviceProfileReq {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public XPhoneProfile newProfile;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public System.UInt64 sequence;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool sequenceSpecified;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
public class RemoveMGCPEndpointReqEndpoint {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute(DataType="nonNegativeInteger")]
    public string index;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
public class RemoveMGCPEndpointReqSubunit {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute(DataType="nonNegativeInteger")]
    public string index;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
public class RemoveMGCPEndpointReqUnit {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute(DataType="nonNegativeInteger")]
    public string index;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
public class RemoveMGCPEndpointReq {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("uuid", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlElementAttribute("domainName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")]
    public string Item;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public ItemChoiceType92 ItemElementName;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public RemoveMGCPEndpointReqUnit unit;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public RemoveMGCPEndpointReqSubunit subunit;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public RemoveMGCPEndpointReqEndpoint endpoint;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public System.UInt64 sequence;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool sequenceSpecified;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
public enum ItemChoiceType92 {
    
    /// <remarks/>
    uuid,
    
    /// <remarks/>
    domainName,
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
public class UpdateMOHAudioSourceReq {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("sourceId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="nonNegativeInteger")]
    [System.Xml.Serialization.XmlElementAttribute("uuid", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")]
    public string Item;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public ItemChoiceType91 ItemElementName;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string name;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string sourceFile;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public bool multicast;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool multicastSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public bool repeat;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool repeatSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public System.UInt64 sequence;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool sequenceSpecified;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
public enum ItemChoiceType91 {
    
    /// <remarks/>
    sourceId,
    
    /// <remarks/>
    uuid,
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
public class UpdateRouteFilterReq {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("name", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlElementAttribute("uuid", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")]
    public string Item;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public ItemChoiceType90 ItemElementName;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string newName;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("dialPlanName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="Name")]
    [System.Xml.Serialization.XmlElementAttribute("dialPlanId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlChoiceIdentifierAttribute("Item1ElementName")]
    public string Item1;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public Item1ChoiceType21 Item1ElementName;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlArrayItemAttribute("member", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
    public XRouteFilterMember[] members;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public System.UInt64 sequence;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool sequenceSpecified;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
public enum ItemChoiceType90 {
    
    /// <remarks/>
    name,
    
    /// <remarks/>
    uuid,
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
public enum Item1ChoiceType21 {
    
    /// <remarks/>
    dialPlanName,
    
    /// <remarks/>
    dialPlanId,
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
public class AddLineGroupReq {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public XLineGroup lineGroup;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public System.UInt64 sequence;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool sequenceSpecified;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
public class AddH323GatewayReq {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public XH323Gateway gateway;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public System.UInt64 sequence;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool sequenceSpecified;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
public class AddVoiceMailPortReq {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public XVoiceMailPort voiceMailPort;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public System.UInt64 sequence;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool sequenceSpecified;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
public class ListPhoneTemplateResPhoneTemplate {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string name;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string uuid;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
public class ListPhoneTemplateRes {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlArrayItemAttribute("phoneTemplate", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
    public ListPhoneTemplateResPhoneTemplate[] @return;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
public class GetTransPatternRes {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public GetTransPatternResReturn @return;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public System.UInt64 sequence;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool sequenceSpecified;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
public class GetTransPatternResReturn {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public XNPTranslationPattern pattern;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
public class UpdateHuntListReq {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("name", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlElementAttribute("uuid", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")]
    public string Item;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public ItemChoiceType89 ItemElementName;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string newName;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string description;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("callManagerGroupName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlElementAttribute("callManagerGroup", typeof(XCallManagerGroup), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public object Item1;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public bool routeListEnabled;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool routeListEnabledSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlArrayItemAttribute("member", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
    public XHuntListMember[] members;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public System.UInt64 sequence;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool sequenceSpecified;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
public enum ItemChoiceType89 {
    
    /// <remarks/>
    name,
    
    /// <remarks/>
    uuid,
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
public class XMOHAudioSource {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="nonNegativeInteger")]
    public string sourceId;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string name;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string sourceFile;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public bool multicast;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public bool repeat;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string uuid;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
public class GetMOHAudioSourceResReturn {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public XMOHAudioSource mohAudioSource;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
public class GetMOHAudioSourceRes {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public GetMOHAudioSourceResReturn @return;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public System.UInt64 sequence;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool sequenceSpecified;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
public class RemoveCallPickupGroupReq {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("routePartitionId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlElementAttribute("name", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlElementAttribute("routePartitionName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlElementAttribute("uuid", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlElementAttribute("pattern", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlElementAttribute("routeFilterId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlElementAttribute("routeFilterName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")]
    public string Item;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public ItemChoiceType88 ItemElementName;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public System.UInt64 sequence;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool sequenceSpecified;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
public enum ItemChoiceType88 {
    
    /// <remarks/>
    routePartitionId,
    
    /// <remarks/>
    name,
    
    /// <remarks/>
    routePartitionName,
    
    /// <remarks/>
    uuid,
    
    /// <remarks/>
    pattern,
    
    /// <remarks/>
    routeFilterId,
    
    /// <remarks/>
    routeFilterName,
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
public class AddDialPlanReq {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public XDialPlan dialPlan;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public System.UInt64 sequence;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool sequenceSpecified;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
public class GetDevicePoolResReturn {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public XDevicePool devicePool;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
public class GetDevicePoolRes {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public GetDevicePoolResReturn @return;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public System.UInt64 sequence;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool sequenceSpecified;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
public class XProcessNodeService {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("processNodeName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlElementAttribute("processNode", typeof(XProcessNode), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public object Item;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public XService service;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string fileName;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="nonNegativeInteger")]
    [System.ComponentModel.DefaultValueAttribute("0")]
    public string traceLevel = "0";
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="nonNegativeInteger")]
    [System.ComponentModel.DefaultValueAttribute("0")]
    public string userCategories = "0";
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.ComponentModel.DefaultValueAttribute(false)]
    public bool enable = false;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="nonNegativeInteger")]
    [System.ComponentModel.DefaultValueAttribute("250")]
    public string numFiles = "250";
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="nonNegativeInteger")]
    [System.ComponentModel.DefaultValueAttribute("10000")]
    public string numLines = "10000";
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="nonNegativeInteger")]
    [System.ComponentModel.DefaultValueAttribute("1440")]
    public string numMinutes = "1440";
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.ComponentModel.DefaultValueAttribute(false)]
    public bool includeNonDeviceTraces = false;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public bool useXML;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string serverName;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.ComponentModel.DefaultValueAttribute(false)]
    public bool deviceNameMonitorFlag = false;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public bool deviceTypeMonitorFlag;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.ComponentModel.DefaultValueAttribute(false)]
    public bool fileTraceFlag = false;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.ComponentModel.DefaultValueAttribute(false)]
    public bool outputDebugStringFlag = false;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string uuid;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
public enum XService {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Cisco CallManager")]
    CiscoCallManager,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Cisco Tftp")]
    CiscoTftp,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Cisco Messaging Interface")]
    CiscoMessagingInterface,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Cisco IP Voice Media Streaming App")]
    CiscoIPVoiceMediaStreamingApp,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Cisco CTI Manager")]
    CiscoCTIManager,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Cisco Telephony Call Dispatcher")]
    CiscoTelephonyCallDispatcher,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Cisco MOH Audio Translator")]
    CiscoMOHAudioTranslator,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Cisco RIS Data Collector")]
    CiscoRISDataCollector,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Cisco Extension Mobility")]
    CiscoExtensionMobility,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Cisco Database Layer Monitor")]
    CiscoDatabaseLayerMonitor,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Cisco CDR Insert")]
    CiscoCDRInsert,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Enterprise Wide")]
    EnterpriseWide,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Cisco IP Manager Assistant")]
    CiscoIPManagerAssistant,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Cisco Extended Functions")]
    CiscoExtendedFunctions,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Cisco Serviceability Reporter")]
    CiscoServiceabilityReporter,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Cisco CTL Provider")]
    CiscoCTLProvider,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Cisco WebDialer")]
    CiscoWebDialer,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Cisco Dialed Number Analyzer")]
    CiscoDialedNumberAnalyzer,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Cisco Certificate Authority Proxy Function")]
    CiscoCertificateAuthorityProxyFunction,
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
public class GetProcessNodeServiceResReturn {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public XProcessNodeService processNodeService;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
public class GetProcessNodeServiceRes {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public GetProcessNodeServiceResReturn @return;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public System.UInt64 sequence;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool sequenceSpecified;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
public class AddCTIRoutePointReq {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public XCTIRoutePoint routePoint;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public System.UInt64 sequence;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool sequenceSpecified;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
public class AddTransPatternReq {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public XNPTranslationPattern newPattern;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public System.UInt64 sequence;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool sequenceSpecified;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
public class GetRoutePartitionRes {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public GetRoutePartitionResReturn @return;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public System.UInt64 sequence;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool sequenceSpecified;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
public class GetRoutePartitionResReturn {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public XRoutePartition routePartition;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
public class DeviceLogoutRes {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string @return;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public System.UInt64 sequence;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool sequenceSpecified;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
public class GetRoutePartitionReq {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("partitionId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlElementAttribute("partitionName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")]
    public string Item;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public ItemChoiceType87 ItemElementName;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public System.UInt64 sequence;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool sequenceSpecified;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
public enum ItemChoiceType87 {
    
    /// <remarks/>
    partitionId,
    
    /// <remarks/>
    partitionName,
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
public class ListPhoneByDescriptionResPhone {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string name;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public XProduct product;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public XModel model;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string uuid;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
public class ListPhoneByDescriptionRes {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlArrayItemAttribute("phone", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
    public ListPhoneByDescriptionResPhone[] @return;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public System.UInt64 sequence;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool sequenceSpecified;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
public class UpdateH323TrunkReqRemoteServerInfo {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string server1;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string server2;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string server3;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
public class UpdateH323TrunkReqGatekeeperInfo {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("gatekeeperName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlElementAttribute("gatekeeperId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")]
    public string Item;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public ItemChoiceType86 ItemElementName;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public XTerminal terminal;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool terminalSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string technologyPrefix;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string zone;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
public enum ItemChoiceType86 {
    
    /// <remarks/>
    gatekeeperName,
    
    /// <remarks/>
    gatekeeperId,
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
public class UpdateH323GatewayReqSignificantDigits {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public bool enable;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTextAttribute(DataType="nonNegativeInteger")]
    public string Value;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(UpdateH323TrunkReq))]
public class UpdateH323GatewayReq {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("name", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlElementAttribute("uuid", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")]
    public string Item;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public ItemChoiceType85 ItemElementName;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string newName;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string description;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("callingSearchSpaceId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlElementAttribute("callingSearchSpaceName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlChoiceIdentifierAttribute("Item1ElementName")]
    public string Item1;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public Item1ChoiceType20 Item1ElementName;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("devicePoolName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlElementAttribute("devicePoolId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlChoiceIdentifierAttribute("Item2ElementName")]
    public string Item2;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public Item2ChoiceType15 Item2ElementName;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public XNetworkLocation networkLocation;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool networkLocationSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("locationName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlElementAttribute("locationId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlChoiceIdentifierAttribute("Item3ElementName")]
    public string Item3;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public Item3ChoiceType13 Item3ElementName;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("mediaResourceListId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlElementAttribute("mediaResourceListName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlChoiceIdentifierAttribute("Item4ElementName")]
    public string Item4;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public Item4ChoiceType12 Item4ElementName;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="nonNegativeInteger")]
    public string networkHoldMOHAudioSourceId;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="nonNegativeInteger")]
    public string userHoldMOHAudioSourceId;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("automatedAlternateRoutingCSSId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlElementAttribute("automatedAlternateRoutingCSSName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlChoiceIdentifierAttribute("Item5ElementName")]
    public string Item5;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public Item5ChoiceType10 Item5ElementName;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("aarNeighborhoodName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlElementAttribute("aarNeighborhoodId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlChoiceIdentifierAttribute("Item6ElementName")]
    public string Item6;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public Item6ChoiceType7 Item6ElementName;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public bool retryVideoCallAsAudio;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool retryVideoCallAsAudioSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public bool waitForFarEndH245TerminalSet;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool waitForFarEndH245TerminalSetSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public bool mtpRequired;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool mtpRequiredSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string callerIdDN;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public XCallingPartySelection callingPartySelection;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool callingPartySelectionSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public XPresentationBit callingLineIdPresentation;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool callingLineIdPresentationSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public bool displayIEDelivery;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool displayIEDeliverySpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public bool redirectOutboundNumberIE;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool redirectOutboundNumberIESpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public bool redirectInboundNumberIE;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool redirectInboundNumberIESpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public bool enableInboundFaststart;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool enableInboundFaststartSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public bool enableOutboundFaststart;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool enableOutboundFaststartSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public UpdateH323GatewayReqSignificantDigits significantDigits;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string prefixDN;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public XPriOfNumber calledPartyIENumberType;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool calledPartyIENumberTypeSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public XPriOfNumber callingPartyIENumberType;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool callingPartyIENumberTypeSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public XNumberingPlan calledNumberingPlan;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool calledNumberingPlanSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public XNumberingPlan callingNumberingPlan;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool callingNumberingPlanSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public XTunneledProtocol tunneledProtocol;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.ComponentModel.DefaultValueAttribute(false)]
    public bool pathReplacementSupport = false;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public System.UInt64 sequence;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool sequenceSpecified;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
public enum ItemChoiceType85 {
    
    /// <remarks/>
    name,
    
    /// <remarks/>
    uuid,
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
public enum Item1ChoiceType20 {
    
    /// <remarks/>
    callingSearchSpaceId,
    
    /// <remarks/>
    callingSearchSpaceName,
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
public enum Item2ChoiceType15 {
    
    /// <remarks/>
    devicePoolName,
    
    /// <remarks/>
    devicePoolId,
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
public enum Item3ChoiceType13 {
    
    /// <remarks/>
    locationName,
    
    /// <remarks/>
    locationId,
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
public enum Item4ChoiceType12 {
    
    /// <remarks/>
    mediaResourceListId,
    
    /// <remarks/>
    mediaResourceListName,
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
public enum Item5ChoiceType10 {
    
    /// <remarks/>
    automatedAlternateRoutingCSSId,
    
    /// <remarks/>
    automatedAlternateRoutingCSSName,
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
public enum Item6ChoiceType7 {
    
    /// <remarks/>
    aarNeighborhoodName,
    
    /// <remarks/>
    aarNeighborhoodId,
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
public class UpdateH323TrunkReq : UpdateH323GatewayReq {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("remoteServerInfo", typeof(UpdateH323TrunkReqRemoteServerInfo), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlElementAttribute("gatekeeperInfo", typeof(UpdateH323TrunkReqGatekeeperInfo), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public object Item7;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
public class ListMediaResourceListResMediaResourceList {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string name;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string uuid;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
public class ListMediaResourceListRes {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlArrayItemAttribute("mediaResourceList", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
    public ListMediaResourceListResMediaResourceList[] @return;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public System.UInt64 sequence;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool sequenceSpecified;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
public class UpdateH323DeviceReq {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("name", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlElementAttribute("uuid", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")]
    public string Item;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public ItemChoiceType84 ItemElementName;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string newName;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string description;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("callingSearchSpaceId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlElementAttribute("callingSearchSpaceName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlChoiceIdentifierAttribute("Item1ElementName")]
    public string Item1;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public Item1ChoiceType19 Item1ElementName;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("devicePoolName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlElementAttribute("devicePoolId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlChoiceIdentifierAttribute("Item2ElementName")]
    public string Item2;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public Item2ChoiceType14 Item2ElementName;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public XNetworkLocation networkLocation;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool networkLocationSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("locationName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlElementAttribute("locationId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlChoiceIdentifierAttribute("Item3ElementName")]
    public string Item3;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public Item3ChoiceType12 Item3ElementName;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("mediaResourceListId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlElementAttribute("mediaResourceListName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlChoiceIdentifierAttribute("Item4ElementName")]
    public string Item4;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public Item4ChoiceType11 Item4ElementName;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="nonNegativeInteger")]
    public string networkHoldMOHAudioSourceId;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="nonNegativeInteger")]
    public string userHoldMOHAudioSourceId;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("automatedAlternateRoutingCSSId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlElementAttribute("automatedAlternateRoutingCSSName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlChoiceIdentifierAttribute("Item5ElementName")]
    public string Item5;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public Item5ChoiceType9 Item5ElementName;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("aarNeighborhoodName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlElementAttribute("aarNeighborhoodId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlChoiceIdentifierAttribute("Item6ElementName")]
    public string Item6;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public Item6ChoiceType6 Item6ElementName;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public bool retryVideoCallAsAudio;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool retryVideoCallAsAudioSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public bool waitForFarEndH245TerminalSet;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool waitForFarEndH245TerminalSetSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public bool mtpRequired;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool mtpRequiredSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string callerIdDN;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public XCallingPartySelection callingPartySelection;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool callingPartySelectionSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public XPresentationBit callingLineIdPresentation;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool callingLineIdPresentationSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public bool displayIEDelivery;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool displayIEDeliverySpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public bool redirectOutboundNumberIE;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool redirectOutboundNumberIESpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public bool redirectInboundNumberIE;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool redirectInboundNumberIESpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public bool enableInboundFaststart;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool enableInboundFaststartSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public bool enableOutboundFaststart;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool enableOutboundFaststartSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public System.UInt64 sequence;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool sequenceSpecified;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
public enum ItemChoiceType84 {
    
    /// <remarks/>
    name,
    
    /// <remarks/>
    uuid,
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
public enum Item1ChoiceType19 {
    
    /// <remarks/>
    callingSearchSpaceId,
    
    /// <remarks/>
    callingSearchSpaceName,
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
public enum Item2ChoiceType14 {
    
    /// <remarks/>
    devicePoolName,
    
    /// <remarks/>
    devicePoolId,
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
public enum Item3ChoiceType12 {
    
    /// <remarks/>
    locationName,
    
    /// <remarks/>
    locationId,
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
public enum Item4ChoiceType11 {
    
    /// <remarks/>
    mediaResourceListId,
    
    /// <remarks/>
    mediaResourceListName,
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
public enum Item5ChoiceType9 {
    
    /// <remarks/>
    automatedAlternateRoutingCSSId,
    
    /// <remarks/>
    automatedAlternateRoutingCSSName,
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
public enum Item6ChoiceType6 {
    
    /// <remarks/>
    aarNeighborhoodName,
    
    /// <remarks/>
    aarNeighborhoodId,
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
public class UpdateLineGroupReq {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("name", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlElementAttribute("uuid", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")]
    public string Item;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public ItemChoiceType83 ItemElementName;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string newName;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public XDistributeAlgorithm distributionAlgorithm;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="nonNegativeInteger")]
    [System.ComponentModel.DefaultValueAttribute("10")]
    public string rnaReversionTimeout = "10";
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public XHuntAlgorithm huntAlgorithmNoAnswer;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public XHuntAlgorithm huntAlgorithmBusy;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public XHuntAlgorithm huntAlgorithmNotAvailable;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlArrayItemAttribute("member", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
    public XLineGroupMember[] members;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public System.UInt64 sequence;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool sequenceSpecified;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
public enum ItemChoiceType83 {
    
    /// <remarks/>
    name,
    
    /// <remarks/>
    uuid,
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
public class GetLineRes {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public GetLineResReturn @return;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public System.UInt64 sequence;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool sequenceSpecified;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
public class GetLineResReturn {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public XNPDirectoryNumber directoryNumber;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
public class UpdateRegionMatrixReq {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string uuid;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public XBandwidth bandwidth;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool bandwidthSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="nonNegativeInteger")]
    public string videoBandwidth;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public System.UInt64 sequence;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool sequenceSpecified;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
public class GetLineReq {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("routePartitionId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlElementAttribute("routePartitionName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlElementAttribute("uuid", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlElementAttribute("pattern", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlElementAttribute("routeFilterId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlElementAttribute("routeFilterName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")]
    public string Item;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public ItemChoiceType82 ItemElementName;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public System.UInt64 sequence;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool sequenceSpecified;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
public enum ItemChoiceType82 {
    
    /// <remarks/>
    routePartitionId,
    
    /// <remarks/>
    routePartitionName,
    
    /// <remarks/>
    uuid,
    
    /// <remarks/>
    pattern,
    
    /// <remarks/>
    routeFilterId,
    
    /// <remarks/>
    routeFilterName,
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
public class RemoveLineReq {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("routePartitionId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlElementAttribute("routePartitionName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlElementAttribute("uuid", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlElementAttribute("pattern", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlElementAttribute("routeFilterId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlElementAttribute("routeFilterName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")]
    public string Item;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public ItemChoiceType81 ItemElementName;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public System.UInt64 sequence;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool sequenceSpecified;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
public enum ItemChoiceType81 {
    
    /// <remarks/>
    routePartitionId,
    
    /// <remarks/>
    routePartitionName,
    
    /// <remarks/>
    uuid,
    
    /// <remarks/>
    pattern,
    
    /// <remarks/>
    routeFilterId,
    
    /// <remarks/>
    routeFilterName,
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
public class UpdateTimeScheduleReq {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("name", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlElementAttribute("uuid", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")]
    public string Item;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public ItemChoiceType80 ItemElementName;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string newName;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlArrayItemAttribute("member", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
    public XTimeScheduleTimePeriod[] members;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public System.UInt64 sequence;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool sequenceSpecified;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
public enum ItemChoiceType80 {
    
    /// <remarks/>
    name,
    
    /// <remarks/>
    uuid,
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
public class RemoveTransPatternReq {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("routePartitionId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlElementAttribute("routePartitionName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlElementAttribute("uuid", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlElementAttribute("pattern", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlElementAttribute("routeFilterId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlElementAttribute("routeFilterName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")]
    public string Item;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public ItemChoiceType79 ItemElementName;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public System.UInt64 sequence;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool sequenceSpecified;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
public enum ItemChoiceType79 {
    
    /// <remarks/>
    routePartitionId,
    
    /// <remarks/>
    routePartitionName,
    
    /// <remarks/>
    uuid,
    
    /// <remarks/>
    pattern,
    
    /// <remarks/>
    routeFilterId,
    
    /// <remarks/>
    routeFilterName,
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
public class AddRouteListReq {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public XRouteList routeList;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public System.UInt64 sequence;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool sequenceSpecified;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
public class AddFACInfoReq {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public XFACInfo facInfo;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public System.UInt64 sequence;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool sequenceSpecified;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
public class XFACInfo {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string code;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string description;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="nonNegativeInteger")]
    public string authorizationLevel;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string uuid;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
public class ListGatekeeperResGatekeeper {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string name;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string uuid;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
public class ListGatekeeperRes {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlArrayItemAttribute("gatekeeper", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
    public ListGatekeeperResGatekeeper[] @return;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public System.UInt64 sequence;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool sequenceSpecified;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
public class UpdateTransPatternReq {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("routePartitionId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlElementAttribute("routePartitionName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlElementAttribute("uuid", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlElementAttribute("pattern", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlElementAttribute("routeFilterId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlElementAttribute("routeFilterName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")]
    public string Item;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public ItemChoiceType78 ItemElementName;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string newPattern;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string description;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("routePartitionId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlElementAttribute("routePartitionName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlChoiceIdentifierAttribute("Item1ElementName")]
    public string Item1;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public Item1ChoiceType18 Item1ElementName;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public bool blockEnable;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool blockEnableSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string calledPartyTransformationMask;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string callingPartyTransformationMask;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public XStatus useCallingPartyPhoneMask;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool useCallingPartyPhoneMaskSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
    public string callingPartyPrefixDigits;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public XPresentationBit callingPartyPresentation;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool callingPartyPresentationSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("dialPlanName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlElementAttribute("dialPlanId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlChoiceIdentifierAttribute("Item2ElementName")]
    public string Item2;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public Item2ChoiceType13 Item2ElementName;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("digitDiscardInstructionName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlElementAttribute("digitDiscardInstructionId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlChoiceIdentifierAttribute("Item3ElementName")]
    public string Item3;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public Item3ChoiceType11 Item3ElementName;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public XLampBlinkRate messageWaiting;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool messageWaitingSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public XNetworkLocation networkLocation;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool networkLocationSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public bool patternUrgency;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool patternUrgencySpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string prefixDigitsOut;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("routeFilterId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlElementAttribute("routeFilterName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlChoiceIdentifierAttribute("Item4ElementName")]
    public string Item4;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public Item4ChoiceType10 Item4ElementName;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public XPresentationBit callingLinePresentationBit;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool callingLinePresentationBitSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public XPresentationBit callingNamePresentationBit;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool callingNamePresentationBitSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public XPresentationBit connectedLinePresentationBit;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool connectedLinePresentationBitSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public XPresentationBit connectedNamePresentationBit;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool connectedNamePresentationBitSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public bool supportOverlapSending;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool supportOverlapSendingSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public XPatternPrecedence patternPrecedence;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool patternPrecedenceSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public XReleaseCauseValue releaseCause;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool releaseCauseSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("callingSearchSpaceId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlElementAttribute("callingSearchSpaceName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlChoiceIdentifierAttribute("Item5ElementName")]
    public string Item5;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public Item5ChoiceType8 Item5ElementName;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public System.UInt64 sequence;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool sequenceSpecified;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
public enum ItemChoiceType78 {
    
    /// <remarks/>
    routePartitionId,
    
    /// <remarks/>
    routePartitionName,
    
    /// <remarks/>
    uuid,
    
    /// <remarks/>
    pattern,
    
    /// <remarks/>
    routeFilterId,
    
    /// <remarks/>
    routeFilterName,
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
public enum Item1ChoiceType18 {
    
    /// <remarks/>
    routePartitionId,
    
    /// <remarks/>
    routePartitionName,
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
public enum Item2ChoiceType13 {
    
    /// <remarks/>
    dialPlanName,
    
    /// <remarks/>
    dialPlanId,
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
public enum Item3ChoiceType11 {
    
    /// <remarks/>
    digitDiscardInstructionName,
    
    /// <remarks/>
    digitDiscardInstructionId,
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
public enum Item4ChoiceType10 {
    
    /// <remarks/>
    routeFilterId,
    
    /// <remarks/>
    routeFilterName,
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
public enum Item5ChoiceType8 {
    
    /// <remarks/>
    callingSearchSpaceId,
    
    /// <remarks/>
    callingSearchSpaceName,
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
public class UpdateMediaResourceGroupReq {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("name", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlElementAttribute("uuid", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")]
    public string Item;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public ItemChoiceType77 ItemElementName;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string newName;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string description;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public bool multicast;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool multicastSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlArrayItemAttribute("member", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
    public XMediaResourceGroupMember[] members;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public System.UInt64 sequence;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool sequenceSpecified;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
public enum ItemChoiceType77 {
    
    /// <remarks/>
    name,
    
    /// <remarks/>
    uuid,
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
public class GetUserRes {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public GetUserResReturn @return;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public System.UInt64 sequence;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool sequenceSpecified;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
public class GetUserResReturn {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public XUser user;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
public class XUser {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string firstname;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string lastname;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string userid;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string password;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string pin;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string telephoneNumber;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string extension;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string department;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string manager;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public XUserLocale locale;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool localeSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlArrayItemAttribute("device", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
    public string[] associatedDevices;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string associatedPC;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public bool authenticationProxyRights;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool authenticationProxyRightsSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public bool enableCTI;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool enableCTISpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public bool enableCTISuperProvider;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool enableCTISuperProviderSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public bool allowCallParkRetrieval;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool allowCallParkRetrievalSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public bool callingNumberModAllowed;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool callingNumberModAllowedSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string iaqExtension;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public XUserPhoneProfiles phoneProfiles;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
public class XUserPhoneProfiles {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("profile", typeof(XPhoneProfile), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlElementAttribute("profileName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public object[] Items;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
public class GetH323PhoneResReturn {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public XH323Phone phone;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
public class GetH323PhoneRes {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public GetH323PhoneResReturn @return;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public System.UInt64 sequence;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool sequenceSpecified;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
public class AddCMCInfoReq {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public XCMCInfo cmcInfo;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public System.UInt64 sequence;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool sequenceSpecified;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
public class XCMCInfo {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string code;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string description;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string uuid;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
public class RemoveRoutePartitionReq {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("partitionId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlElementAttribute("partitionName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")]
    public string Item;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public ItemChoiceType76 ItemElementName;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public System.UInt64 sequence;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool sequenceSpecified;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
public enum ItemChoiceType76 {
    
    /// <remarks/>
    partitionId,
    
    /// <remarks/>
    partitionName,
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
public class ListPhoneByNameReq {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string searchString;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public System.UInt64 sequence;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool sequenceSpecified;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
public class RemoveMGCPUnitReqUnit {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute(DataType="nonNegativeInteger")]
    public string index;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
public class RemoveMGCPUnitReq {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("uuid", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlElementAttribute("domainName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")]
    public string Item;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public ItemChoiceType75 ItemElementName;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public RemoveMGCPUnitReqUnit unit;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public System.UInt64 sequence;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool sequenceSpecified;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
public enum ItemChoiceType75 {
    
    /// <remarks/>
    uuid,
    
    /// <remarks/>
    domainName,
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
public class AddLocationReq {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public XLocation location;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public System.UInt64 sequence;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool sequenceSpecified;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
public class ListMOHAudioSourceResMohAudioSource {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="nonNegativeInteger")]
    public string sourceId;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string name;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string uuid;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
public class ListMOHAudioSourceRes {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlArrayItemAttribute("mohAudioSource", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
    public ListMOHAudioSourceResMohAudioSource[] @return;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public System.UInt64 sequence;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool sequenceSpecified;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
public class UpdateHuntPilotReqDestination {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("huntListName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlElementAttribute("huntList", typeof(XHuntList), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public object Item;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
public class UpdateHuntPilotReq {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("routePartitionId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlElementAttribute("routePartitionName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlElementAttribute("uuid", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlElementAttribute("pattern", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlElementAttribute("routeFilterId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlElementAttribute("routeFilterName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")]
    public string Item;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public ItemChoiceType74 ItemElementName;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string newPattern;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string description;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("newRoutePartitionId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlElementAttribute("newRoutePartitionName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlChoiceIdentifierAttribute("Item1ElementName")]
    public string Item1;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public Item1ChoiceType17 Item1ElementName;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public bool blockEnable;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool blockEnableSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string calledPartyTransformationMask;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string callingPartyTransformationMask;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public XStatus useCallingPartyPhoneMask;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool useCallingPartyPhoneMaskSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
    public string callingPartyPrefixDigits;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("dialPlanName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlElementAttribute("dialPlanId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlChoiceIdentifierAttribute("Item2ElementName")]
    public string Item2;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public Item2ChoiceType12 Item2ElementName;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("digitDiscardInstructionName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlElementAttribute("digitDiscardInstructionId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlChoiceIdentifierAttribute("Item3ElementName")]
    public string Item3;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public Item3ChoiceType10 Item3ElementName;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public XLampBlinkRate messageWaiting;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool messageWaitingSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public XNetworkLocation networkLocation;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool networkLocationSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public bool patternUrgency;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool patternUrgencySpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string prefixDigitsOut;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("routeFilterId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlElementAttribute("routeFilterName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlChoiceIdentifierAttribute("Item4ElementName")]
    public string Item4;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public Item4ChoiceType9 Item4ElementName;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public XPresentationBit callingLinePresentationBit;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool callingLinePresentationBitSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public XPresentationBit callingNamePresentationBit;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool callingNamePresentationBitSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public XPresentationBit connectedLinePresentationBit;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool connectedLinePresentationBitSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public XPresentationBit connectedNamePresentationBit;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool connectedNamePresentationBitSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public XPatternPrecedence patternPrecedence;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool patternPrecedenceSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public XReleaseCauseValue releaseCause;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool releaseCauseSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public UpdateHuntPilotReqDestination destination;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public XHuntForwardInfo ForwardHuntBusy;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public XHuntForwardInfo ForwardHuntNoAnswer;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public System.UInt64 sequence;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool sequenceSpecified;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
public enum ItemChoiceType74 {
    
    /// <remarks/>
    routePartitionId,
    
    /// <remarks/>
    routePartitionName,
    
    /// <remarks/>
    uuid,
    
    /// <remarks/>
    pattern,
    
    /// <remarks/>
    routeFilterId,
    
    /// <remarks/>
    routeFilterName,
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
public enum Item1ChoiceType17 {
    
    /// <remarks/>
    newRoutePartitionId,
    
    /// <remarks/>
    newRoutePartitionName,
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
public enum Item2ChoiceType12 {
    
    /// <remarks/>
    dialPlanName,
    
    /// <remarks/>
    dialPlanId,
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
public enum Item3ChoiceType10 {
    
    /// <remarks/>
    digitDiscardInstructionName,
    
    /// <remarks/>
    digitDiscardInstructionId,
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
public enum Item4ChoiceType9 {
    
    /// <remarks/>
    routeFilterId,
    
    /// <remarks/>
    routeFilterName,
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(UpdateCMCInfoReq))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(UpdateFACInfoReq))]
public class GUIDRequest {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string uuid;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public System.UInt64 sequence;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool sequenceSpecified;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
public class UpdateCMCInfoReq : GUIDRequest {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string code;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string description;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="nonNegativeInteger")]
    public string authorizationLevel;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
public class UpdateFACInfoReq : GUIDRequest {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string code;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string description;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="nonNegativeInteger")]
    public string authorizationLevel;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
public class AddPilotPointReq {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public XPilotPoint pilotPoint;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public System.UInt64 sequence;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool sequenceSpecified;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
public class XPilotPoint {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="Name")]
    public string name;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("devicePoolName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlElementAttribute("devicePool", typeof(XDevicePool), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public object Item;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("routePartition", typeof(XRoutePartition), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlElementAttribute("routePartitionName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public object Item1;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("callingSearchSpace", typeof(XCallingSearchSpace), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlElementAttribute("callingSearchSpaceName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="Name")]
    public object Item2;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string pilotNumber;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public bool useFirstAvailable;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("location", typeof(XLocation), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlElementAttribute("locationName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public object Item3;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
public class UpdateServiceParameterReq {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("name", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlElementAttribute("uuid", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlElementAttribute("processNodeId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlElementAttribute("processNodeName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlElementAttribute("service", typeof(XService), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")]
    public object Item;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public ItemChoiceType73 ItemElementName;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
    public string newValue;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public System.UInt64 sequence;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool sequenceSpecified;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
public enum ItemChoiceType73 {
    
    /// <remarks/>
    name,
    
    /// <remarks/>
    uuid,
    
    /// <remarks/>
    processNodeId,
    
    /// <remarks/>
    processNodeName,
    
    /// <remarks/>
    service,
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
public class Error {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public long code;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string message;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string request;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="anyURI")]
    public string url;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(TypeName="UpdatePhoneReq", Namespace="http://www.cisco.com/AXL/API/1.0")]
public class UpdatePhoneReq3 {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("name", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlElementAttribute("uuid", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")]
    public string Item;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public ItemChoiceType72 ItemElementName;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="Name")]
    public string newName;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string description;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("callingSearchSpaceId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlElementAttribute("callingSearchSpaceName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="Name")]
    [System.Xml.Serialization.XmlChoiceIdentifierAttribute("Item1ElementName")]
    public string Item1;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public Item1ChoiceType16 Item1ElementName;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("devicePoolName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlElementAttribute("devicePoolId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlChoiceIdentifierAttribute("Item2ElementName")]
    public string Item2;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public Item2ChoiceType11 Item2ElementName;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("locationName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="Name")]
    [System.Xml.Serialization.XmlElementAttribute("locationId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlChoiceIdentifierAttribute("Item3ElementName")]
    public string Item3;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public Item3ChoiceType9 Item3ElementName;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("mediaResourceListId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlElementAttribute("mediaResourceListName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="Name")]
    [System.Xml.Serialization.XmlChoiceIdentifierAttribute("Item4ElementName")]
    public string Item4;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public Item4ChoiceType8 Item4ElementName;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="nonNegativeInteger")]
    public string networkHoldMOHAudioSourceId;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="nonNegativeInteger")]
    public string userHoldMOHAudioSourceId;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("automatedAlternateRoutingCSSId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlElementAttribute("automatedAlternateRoutingCSSName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlChoiceIdentifierAttribute("Item5ElementName")]
    public string Item5;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public Item5ChoiceType7 Item5ElementName;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("aarNeighborhoodName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlElementAttribute("aarNeighborhoodId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlChoiceIdentifierAttribute("Item6ElementName")]
    public string Item6;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public Item6ChoiceType5 Item6ElementName;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public XLoadInformation loadInformation;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public System.Xml.XmlElement vendorConfig;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public bool traceFlag;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool traceFlagSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public int mlppDomainId;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool mlppDomainIdSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public XStatus mlppIndicationStatus;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool mlppIndicationStatusSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public XPreemption preemption;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool preemptionSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public bool retryVideoCallAsVoice;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool retryVideoCallAsVoiceSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string associatedPC;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public UpdatePhoneReqLines lines;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("phoneTemplateId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlElementAttribute("phoneTemplateName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlChoiceIdentifierAttribute("Item7ElementName")]
    public string Item7;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public Item7ChoiceType1 Item7ElementName;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlArrayItemAttribute("speeddial", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
    public XSpeeddial[] speeddials;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlArrayItemAttribute("addOnModule", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
    public XAddOnModule[] addOnModules;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public XUserLocale userLocale;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool userLocaleSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public XCountry networkLocale;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool networkLocaleSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public XDeviceSecurityMode deviceSecurityMode;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool deviceSecurityModeSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="nonNegativeInteger")]
    public string idleTimeout;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="anyURI")]
    public string authenticationURL;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="anyURI")]
    public string directoryURL;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="anyURI")]
    public string idleURL;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="anyURI")]
    public string informationURL;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="anyURI")]
    public string messagesURL;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="anyURI")]
    public string proxyServerURL;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="anyURI")]
    public string servicesURL;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlArrayItemAttribute("service", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
    public XSubscribedService[] services;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("softkeyTemplateName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlElementAttribute("softkeyTemplateId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlChoiceIdentifierAttribute("Item8ElementName")]
    public string Item8;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public Item8ChoiceType2 Item8ElementName;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("defaultProfileId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlElementAttribute("defaultProfileName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlChoiceIdentifierAttribute("Item9ElementName")]
    public string Item9;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public Item9ChoiceType1 Item9ElementName;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public bool enableExtensionMobility;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public XStatus builtInBridgeStatus;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool builtInBridgeStatusSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public XStatus callInfoPrivacyStatus;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool callInfoPrivacyStatusSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
    public string ownerUserId;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.ComponentModel.DefaultValueAttribute(false)]
    public bool ignorePresentationIndicators = false;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public XPacketCaptureMode packetCaptureMode;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool packetCaptureModeSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="positiveInteger", IsNullable=true)]
    public string packetCaptureDuration;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public XCertificateOperation certificateOperation;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool certificateOperationSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public XAuthenticationMode authenticationMode;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool authenticationModeSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="Name", IsNullable=true)]
    public string authenticationString;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public XCertificateStatus certificateStatus;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool certificateStatusSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public XKeySize keySize;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool keySizeSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="Name", IsNullable=true)]
    public string upgradeFinishTime;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public XCertificate certificate;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool certificateSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public System.UInt64 sequence;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool sequenceSpecified;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
public enum ItemChoiceType72 {
    
    /// <remarks/>
    name,
    
    /// <remarks/>
    uuid,
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
public enum Item1ChoiceType16 {
    
    /// <remarks/>
    callingSearchSpaceId,
    
    /// <remarks/>
    callingSearchSpaceName,
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
public enum Item2ChoiceType11 {
    
    /// <remarks/>
    devicePoolName,
    
    /// <remarks/>
    devicePoolId,
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
public enum Item3ChoiceType9 {
    
    /// <remarks/>
    locationName,
    
    /// <remarks/>
    locationId,
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
public enum Item4ChoiceType8 {
    
    /// <remarks/>
    mediaResourceListId,
    
    /// <remarks/>
    mediaResourceListName,
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
public enum Item5ChoiceType7 {
    
    /// <remarks/>
    automatedAlternateRoutingCSSId,
    
    /// <remarks/>
    automatedAlternateRoutingCSSName,
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
public enum Item6ChoiceType5 {
    
    /// <remarks/>
    aarNeighborhoodName,
    
    /// <remarks/>
    aarNeighborhoodId,
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
public class UpdatePhoneReqLines {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("lineIdentifier", typeof(XNumplanIdentifier), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlElementAttribute("line", typeof(XLine), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public object[] Items;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
public enum Item7ChoiceType1 {
    
    /// <remarks/>
    phoneTemplateId,
    
    /// <remarks/>
    phoneTemplateName,
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
public enum XDeviceSecurityMode {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Use System Default")]
    UseSystemDefault,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Non Secure")]
    NonSecure,
    
    /// <remarks/>
    Authenticated,
    
    /// <remarks/>
    Encrypted,
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
public class XSubscribedService {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("telecasterServiceName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlElementAttribute("telecasterService", typeof(XTelecasterService), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public object Item;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string name;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="anyURI")]
    public string url;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="nonNegativeInteger")]
    public string urlButtonIndex;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string urlLabel;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string uuid;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
public class XTelecasterService {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string name;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string description;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="anyURI")]
    public string templateURL;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string uuid;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
public enum Item8ChoiceType2 {
    
    /// <remarks/>
    softkeyTemplateName,
    
    /// <remarks/>
    softkeyTemplateId,
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
public enum Item9ChoiceType1 {
    
    /// <remarks/>
    defaultProfileId,
    
    /// <remarks/>
    defaultProfileName,
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
public enum XCertificateOperation {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("No Pending Operation")]
    NoPendingOperation,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Install/Upgrade")]
    InstallUpgrade,
    
    /// <remarks/>
    Delete,
    
    /// <remarks/>
    Troubleshoot,
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
public enum XAuthenticationMode {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("By Authentication String")]
    ByAuthenticationString,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("By Null String")]
    ByNullString,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("By Existing Certificate (precedence to LSC)")]
    ByExistingCertificateprecedencetoLSC,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("By Existing Certificate (precedence to MIC)")]
    ByExistingCertificateprecedencetoMIC,
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
public enum XCertificateStatus {
    
    /// <remarks/>
    None,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Operation Pending")]
    OperationPending,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Upgrade Success")]
    UpgradeSuccess,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Delete Success")]
    DeleteSuccess,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Troubleshoot Success")]
    TroubleshootSuccess,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Upgrade Failed")]
    UpgradeFailed,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Delete Failed")]
    DeleteFailed,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Troubleshoot Failed")]
    TroubleshootFailed,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Upgrade Failed: Invalid LSC")]
    UpgradeFailedInvalidLSC,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Upgrade Failed: Invalid Authentication String")]
    UpgradeFailedInvalidAuthenticationString,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Upgrade Failed: Invalid MIC")]
    UpgradeFailedInvalidMIC,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Upgrade Failed: Invalid Credentials")]
    UpgradeFailedInvalidCredentials,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Upgrade Failed: Phone Communication Failure")]
    UpgradeFailedPhoneCommunicationFailure,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Upgrade Failed: Key Generation Failed/Timeout")]
    UpgradeFailedKeyGenerationFailedTimeout,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Upgrade Failed: CA Communication Failure")]
    UpgradeFailedCACommunicationFailure,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Upgrade Failed: CA Rejected Connection")]
    UpgradeFailedCARejectedConnection,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Upgrade Failed: User Initiated Request Late/Timedout")]
    UpgradeFailedUserInitiatedRequestLateTimedout,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Delete Failed: Invalid LSC")]
    DeleteFailedInvalidLSC,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Delete Failed: Invalid Authentication String")]
    DeleteFailedInvalidAuthenticationString,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Delete Failed: Invalid MIC")]
    DeleteFailedInvalidMIC,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Delete Failed: Invalid Credentials")]
    DeleteFailedInvalidCredentials,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Delete Failed: Phone Communication Failure")]
    DeleteFailedPhoneCommunicationFailure,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Delete Failed: Key Generation Failed/Timeout")]
    DeleteFailedKeyGenerationFailedTimeout,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Delete Failed: CA Communication Failure")]
    DeleteFailedCACommunicationFailure,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Delete Failed: CA Rejected Connection")]
    DeleteFailedCARejectedConnection,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Delete Failed: User Initiated Request Late/Timedout")]
    DeleteFailedUserInitiatedRequestLateTimedout,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Troubleshoot Failed: Invalid LSC")]
    TroubleshootFailedInvalidLSC,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Troubleshoot Failed: Invalid Authentication String")]
    TroubleshootFailedInvalidAuthenticationString,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Troubleshoot Failed: Invalid MIC")]
    TroubleshootFailedInvalidMIC,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Troubleshoot Failed: Invalid Credentials")]
    TroubleshootFailedInvalidCredentials,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Troubleshoot Failed: Phone Communication Failure")]
    TroubleshootFailedPhoneCommunicationFailure,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Troubleshoot Failed: Key Generation Failed/Timeout")]
    TroubleshootFailedKeyGenerationFailedTimeout,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Troubleshoot Failed: User Initiated Request Late/Timedout")]
    TroubleshootFailedUserInitiatedRequestLateTimedout,
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
public enum XKeySize {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("512")]
    Item512,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("1024")]
    Item1024,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("2048")]
    Item2048,
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
public enum XCertificate {
    
    /// <remarks/>
    Unknown,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("No Certificate Exists")]
    NoCertificateExists,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Locally Significant Certificate")]
    LocallySignificantCertificate,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Manufacture Installed Certificate Exists")]
    ManufactureInstalledCertificateExists,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Locally Significant Certificate and Manufacture Installed Certificate Exists")]
    LocallySignificantCertificateandManufactureInstalledCertificateExists,
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
public class AddCallManagerGroupReq {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public XCallManagerGroup callManagerGroup;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public System.UInt64 sequence;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool sequenceSpecified;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
public class ListDeviceByNameAndClassReq {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string searchString;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public XClass @class;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public System.UInt64 sequence;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool sequenceSpecified;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
public class ListPhoneByNameResPhone {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string name;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public XProduct product;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public XModel model;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string uuid;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
public class ListPhoneByNameRes {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlArrayItemAttribute("phone", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
    public ListPhoneByNameResPhone[] @return;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public System.UInt64 sequence;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool sequenceSpecified;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
public class DeviceLoginReq {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("deviceId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlElementAttribute("deviceName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")]
    public string Item;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public ItemChoiceType71 ItemElementName;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="nonNegativeInteger")]
    public string loginDuration;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("profileName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlElementAttribute("profileId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlChoiceIdentifierAttribute("Item1ElementName")]
    public string Item1;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public Item1ChoiceType15 Item1ElementName;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string userId;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public System.UInt64 sequence;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool sequenceSpecified;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
public enum ItemChoiceType71 {
    
    /// <remarks/>
    deviceId,
    
    /// <remarks/>
    deviceName,
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
public enum Item1ChoiceType15 {
    
    /// <remarks/>
    profileName,
    
    /// <remarks/>
    profileId,
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
public class UpdateRoutePartitionReq {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("name", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlElementAttribute("uuid", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")]
    public string Item;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public ItemChoiceType70 ItemElementName;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string newName;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string description;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("newTimeScheduleName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlElementAttribute("newTimeScheduleId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlChoiceIdentifierAttribute("Item1ElementName")]
    public string Item1;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public Item1ChoiceType14 Item1ElementName;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public bool useOriginatingDeviceTimeZone;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool useOriginatingDeviceTimeZoneSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public XTimeZone timeZone;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool timeZoneSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public System.UInt64 sequence;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool sequenceSpecified;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
public enum ItemChoiceType70 {
    
    /// <remarks/>
    name,
    
    /// <remarks/>
    uuid,
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
public enum Item1ChoiceType14 {
    
    /// <remarks/>
    newTimeScheduleName,
    
    /// <remarks/>
    newTimeScheduleId,
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
public class RemoveMGCPSubunitReqSubunit {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute(DataType="nonNegativeInteger")]
    public string index;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
public class RemoveMGCPSubunitReqUnit {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute(DataType="nonNegativeInteger")]
    public string index;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
public class RemoveMGCPSubunitReq {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("uuid", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlElementAttribute("domainName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")]
    public string Item;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public ItemChoiceType69 ItemElementName;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public RemoveMGCPSubunitReqUnit unit;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public RemoveMGCPSubunitReqSubunit subunit;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public System.UInt64 sequence;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool sequenceSpecified;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
public enum ItemChoiceType69 {
    
    /// <remarks/>
    uuid,
    
    /// <remarks/>
    domainName,
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
public class UpdateCallManagerGroupReq {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("name", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlElementAttribute("uuid", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")]
    public string Item;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public ItemChoiceType68 ItemElementName;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string newName;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public bool tftpDefault;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool tftpDefaultSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlArrayItemAttribute("member", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
    public XCallManagerMember[] members;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public System.UInt64 sequence;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool sequenceSpecified;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
public enum ItemChoiceType68 {
    
    /// <remarks/>
    name,
    
    /// <remarks/>
    uuid,
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
public class ListUserByNameReq {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string firstname;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string lastname;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public int searchLimit;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public System.UInt64 sequence;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool sequenceSpecified;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
public class ListUserByNameResUser {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string firstname;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string lastname;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string ldapRN;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
public class ListUserByNameRes {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlArrayItemAttribute("user", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
    public ListUserByNameResUser[] @return;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public System.UInt64 sequence;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool sequenceSpecified;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
public class GetLineGroupResReturn {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public XLineGroup lineGroup;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
public class GetLineGroupRes {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public GetLineGroupResReturn @return;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public System.UInt64 sequence;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool sequenceSpecified;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
public class UpdateSIPTrunkReqSigDigits {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public bool enable;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTextAttribute(DataType="nonNegativeInteger")]
    public string Value;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
public class UpdateSIPTrunkReq {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("name", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlElementAttribute("uuid", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")]
    public string Item;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public ItemChoiceType67 ItemElementName;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string newName;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string description;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("callingSearchSpaceId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlElementAttribute("callingSearchSpaceName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlChoiceIdentifierAttribute("Item1ElementName")]
    public string Item1;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public Item1ChoiceType13 Item1ElementName;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("devicePoolName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlElementAttribute("devicePoolId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlChoiceIdentifierAttribute("Item2ElementName")]
    public string Item2;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public Item2ChoiceType10 Item2ElementName;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public XNetworkLocation networkLocation;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool networkLocationSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("locationName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlElementAttribute("locationId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlChoiceIdentifierAttribute("Item3ElementName")]
    public string Item3;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public Item3ChoiceType8 Item3ElementName;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("mediaResourceListId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlElementAttribute("mediaResourceListName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlChoiceIdentifierAttribute("Item4ElementName")]
    public string Item4;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public Item4ChoiceType7 Item4ElementName;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="nonNegativeInteger")]
    public string networkHoldMOHAudioSourceId;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="nonNegativeInteger")]
    public string userHoldMOHAudioSourceId;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("automatedAlternateRoutingCSSId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlElementAttribute("automatedAlternateRoutingCSSName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlChoiceIdentifierAttribute("Item5ElementName")]
    public string Item5;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public Item5ChoiceType6 Item5ElementName;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("aarNeighborhoodName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlElementAttribute("aarNeighborhoodId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlChoiceIdentifierAttribute("Item6ElementName")]
    public string Item6;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public Item6ChoiceType4 Item6ElementName;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public int mlppDomainId;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool mlppDomainIdSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public XStatus mlppIndicationStatus;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool mlppIndicationStatusSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public XPreemption preemption;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool preemptionSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public bool retryVideoCallAsAudio;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool retryVideoCallAsAudioSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public bool mtpRequired;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool mtpRequiredSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string destinationaddress;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public bool destAddrIsSRV;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool destAddrIsSRVSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="integer")]
    [System.ComponentModel.DefaultValueAttribute("0")]
    public string destinationport = "0";
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="integer")]
    public string incomingport;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public XSIPCodec tkSipCodec;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool tkSipCodecSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public XTransport OutgoingTransportType;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool OutgoingTransportTypeSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public UpdateSIPTrunkReqSigDigits sigDigits;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public XPresentationBit connectedNamePresentation;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool connectedNamePresentationSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public XPresentationBit connectedPartyIdPresentation;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool connectedPartyIdPresentationSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public XCallingPartySelection callingPartySelection;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool callingPartySelectionSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public XPresentationBit callingname;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool callingnameSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public XPresentationBit callingLineIdPresentation;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool callingLineIdPresentationSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string prefixDN;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string callerName;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string callerIdDN;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public bool acceptInboundRDNIS;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool acceptInboundRDNISSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public bool acceptOutboundRDNIS;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool acceptOutboundRDNISSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public System.UInt64 sequence;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool sequenceSpecified;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
public enum ItemChoiceType67 {
    
    /// <remarks/>
    name,
    
    /// <remarks/>
    uuid,
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
public enum Item1ChoiceType13 {
    
    /// <remarks/>
    callingSearchSpaceId,
    
    /// <remarks/>
    callingSearchSpaceName,
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
public enum Item2ChoiceType10 {
    
    /// <remarks/>
    devicePoolName,
    
    /// <remarks/>
    devicePoolId,
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
public enum Item3ChoiceType8 {
    
    /// <remarks/>
    locationName,
    
    /// <remarks/>
    locationId,
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
public enum Item4ChoiceType7 {
    
    /// <remarks/>
    mediaResourceListId,
    
    /// <remarks/>
    mediaResourceListName,
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
public enum Item5ChoiceType6 {
    
    /// <remarks/>
    automatedAlternateRoutingCSSId,
    
    /// <remarks/>
    automatedAlternateRoutingCSSName,
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
public enum Item6ChoiceType4 {
    
    /// <remarks/>
    aarNeighborhoodName,
    
    /// <remarks/>
    aarNeighborhoodId,
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
public class UpdateRouteListReq {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("name", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlElementAttribute("uuid", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")]
    public string Item;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public ItemChoiceType66 ItemElementName;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string newName;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string description;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("callManagerGroupName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlElementAttribute("callManagerGroup", typeof(XCallManagerGroup), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public object Item1;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public bool routeListEnabled;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool routeListEnabledSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlArrayItemAttribute("member", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
    public XRouteListMember[] members;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public System.UInt64 sequence;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool sequenceSpecified;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
public enum ItemChoiceType66 {
    
    /// <remarks/>
    name,
    
    /// <remarks/>
    uuid,
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
public class AddDDIReq {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public XDigitDiscardInstruction ddi;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public System.UInt64 sequence;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool sequenceSpecified;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
public class GetDDIResReturn {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public XDigitDiscardInstruction ddi;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
public class GetDDIRes {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public GetDDIResReturn @return;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public System.UInt64 sequence;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool sequenceSpecified;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
public class DeviceResetRes {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("routePartitionId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlElementAttribute("routePartitionName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlElementAttribute("uuid", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlElementAttribute("pattern", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlElementAttribute("routeFilterId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlElementAttribute("routeFilterName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")]
    public string Item;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public ItemChoiceType65 ItemElementName;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public System.UInt64 sequence;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool sequenceSpecified;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
public enum ItemChoiceType65 {
    
    /// <remarks/>
    routePartitionId,
    
    /// <remarks/>
    routePartitionName,
    
    /// <remarks/>
    uuid,
    
    /// <remarks/>
    pattern,
    
    /// <remarks/>
    routeFilterId,
    
    /// <remarks/>
    routeFilterName,
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
public class ExecuteSQLQueryReq {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string sql;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public System.UInt64 sequence;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool sequenceSpecified;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
public class DeviceResetReq {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("deviceId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlElementAttribute("deviceName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")]
    public string Item;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public ItemChoiceType64 ItemElementName;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.ComponentModel.DefaultValueAttribute(false)]
    public bool isHardReset = false;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public System.UInt64 sequence;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool sequenceSpecified;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
public enum ItemChoiceType64 {
    
    /// <remarks/>
    deviceId,
    
    /// <remarks/>
    deviceName,
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
public class ListProcessNodesByServiceReq {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public XService service;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public System.UInt64 sequence;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool sequenceSpecified;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
public class GetCallPickupGroupReq {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("routePartitionId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlElementAttribute("name", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlElementAttribute("routePartitionName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlElementAttribute("uuid", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlElementAttribute("pattern", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlElementAttribute("routeFilterId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlElementAttribute("routeFilterName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")]
    public string Item;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public ItemChoiceType63 ItemElementName;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public System.UInt64 sequence;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool sequenceSpecified;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
public enum ItemChoiceType63 {
    
    /// <remarks/>
    routePartitionId,
    
    /// <remarks/>
    name,
    
    /// <remarks/>
    routePartitionName,
    
    /// <remarks/>
    uuid,
    
    /// <remarks/>
    pattern,
    
    /// <remarks/>
    routeFilterId,
    
    /// <remarks/>
    routeFilterName,
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
public class GetCallPickupGroupResReturn {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public XNPCallPickupGroup callPickup;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
public class GetCallPickupGroupRes {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public GetCallPickupGroupResReturn @return;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public System.UInt64 sequence;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool sequenceSpecified;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
public class GetProcessNodeResReturn {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public XProcessNode processNode;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
public class GetProcessNodeRes {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public GetProcessNodeResReturn @return;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public System.UInt64 sequence;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool sequenceSpecified;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
public class ListPhoneResponsePhone {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string name;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public XProduct product;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public XModel model;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string uuid;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
public class ListPhoneResponse {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlArrayItemAttribute("phone", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
    public ListPhoneResponsePhone[] @return;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public System.UInt64 sequence;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool sequenceSpecified;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
public class UpdateRegionReq {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("name", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlElementAttribute("uuid", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")]
    public string Item;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public ItemChoiceType62 ItemElementName;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string newName;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public System.UInt64 sequence;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool sequenceSpecified;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
public enum ItemChoiceType62 {
    
    /// <remarks/>
    name,
    
    /// <remarks/>
    uuid,
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
public class GetDialPlanResReturn {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public XDialPlan dialPlan;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
public class GetDialPlanRes {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public GetDialPlanResReturn @return;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public System.UInt64 sequence;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool sequenceSpecified;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
public class ListVoiceMailProfileRes {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlArrayItemAttribute("voiceMailProfile", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
    public XVoiceMailProfile[] @return;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public System.UInt64 sequence;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool sequenceSpecified;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
public class ListBySearchString {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string searchString;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public System.UInt64 sequence;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool sequenceSpecified;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
public class GetCTIRoutePointResReturn {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public XCTIRoutePoint routePoint;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
public class GetCTIRoutePointRes {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public GetCTIRoutePointResReturn @return;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public System.UInt64 sequence;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool sequenceSpecified;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
public class ListCSSResponse {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlArrayItemAttribute("callingSearchSpace", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
    public XCallingSearchSpace[] @return;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public System.UInt64 sequence;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool sequenceSpecified;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
public class GetNumDevicesReq {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public XClass @class;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public System.UInt64 sequence;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool sequenceSpecified;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
public class GetNumDevicesRes {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="nonNegativeInteger")]
    public string @return;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public System.UInt64 sequence;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool sequenceSpecified;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(TypeName="UpdateCSSReq", Namespace="http://www.cisco.com/AXL/API/1.0")]
public class UpdateCSSReq1 {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("name", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlElementAttribute("uuid", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")]
    public string Item;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public ItemChoiceType61 ItemElementName;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string newName;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string description;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlArrayItemAttribute("member", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
    public XCallingSearchSpaceMember[] members;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public System.UInt64 sequence;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool sequenceSpecified;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
public enum ItemChoiceType61 {
    
    /// <remarks/>
    name,
    
    /// <remarks/>
    uuid,
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
public class AddRoutePatternReq {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public XNPRoutePattern newPattern;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public System.UInt64 sequence;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool sequenceSpecified;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
public class AddUserReq {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public XUser newUser;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public System.UInt64 sequence;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool sequenceSpecified;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
public class GetCSSRes {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public GetCSSResReturn @return;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public System.UInt64 sequence;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool sequenceSpecified;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
public class GetCSSResReturn {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public XCallingSearchSpace callingSearchSpace;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
public class GetRegionResReturn {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public XRegion region;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
public class GetRegionRes {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public GetRegionResReturn @return;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public System.UInt64 sequence;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool sequenceSpecified;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
public class ListMediaResourceGroupResMediaResourceGroup {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string name;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string uuid;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
public class ListMediaResourceGroupRes {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlArrayItemAttribute("mediaResourceGroup", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
    public ListMediaResourceGroupResMediaResourceGroup[] @return;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public System.UInt64 sequence;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool sequenceSpecified;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
public class ListServiceParametersResParam {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string name;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string value;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
public class ListServiceParametersRes {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlArrayItemAttribute("param", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
    public ListServiceParametersResParam[] @return;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public System.UInt64 sequence;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool sequenceSpecified;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
public class ListServiceParametersReq {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string nodeName;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public XService serviceType;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public System.UInt64 sequence;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool sequenceSpecified;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
public class GetDialPlanTagResReturn {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public XDialPlanTag dialPlanTag;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
public class GetDialPlanTagRes {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public GetDialPlanTagResReturn @return;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public System.UInt64 sequence;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool sequenceSpecified;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
public class UpdateProcessNodeServiceReq {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("uuid", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlElementAttribute("processNodeId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlElementAttribute("processNodeName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlElementAttribute("service", typeof(XService), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")]
    public object Item;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public ItemChoiceType59 ItemElementName;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
    public string fileName;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="nonNegativeInteger")]
    public string traceLevel;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="nonNegativeInteger")]
    public string userCategories;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public bool enable;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool enableSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="nonNegativeInteger")]
    public string numFiles;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="nonNegativeInteger")]
    public string numLines;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="nonNegativeInteger")]
    public string numMinutes;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public bool includeNonDeviceTraces;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool includeNonDeviceTracesSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public bool useXML;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool useXMLSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
    public string serverName;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public bool deviceNameMonitorFlag;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool deviceNameMonitorFlagSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public bool deviceTypeMonitorFlag;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool deviceTypeMonitorFlagSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public bool fileTraceFlag;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool fileTraceFlagSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public bool outputDebugStringFlag;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool outputDebugStringFlagSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public System.UInt64 sequence;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool sequenceSpecified;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
public enum ItemChoiceType59 {
    
    /// <remarks/>
    uuid,
    
    /// <remarks/>
    processNodeId,
    
    /// <remarks/>
    processNodeName,
    
    /// <remarks/>
    service,
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
public class RemovePhoneReq {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("phoneId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlElementAttribute("phoneName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")]
    public string Item;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public ItemChoiceType58 ItemElementName;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public System.UInt64 sequence;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool sequenceSpecified;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
public enum ItemChoiceType58 {
    
    /// <remarks/>
    phoneId,
    
    /// <remarks/>
    phoneName,
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
public abstract class APIResponse {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public System.UInt64 sequence;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool sequenceSpecified;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
public class GetCallManagerGroupResReturn {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public XCallManagerGroup callManagerGroup;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
public class GetCallManagerGroupRes {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public GetCallManagerGroupResReturn @return;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public System.UInt64 sequence;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool sequenceSpecified;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
public class AddHuntListReq {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public XHuntList huntList;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public System.UInt64 sequence;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool sequenceSpecified;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
public class ListAllProcessNodesReq {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public System.UInt64 sequence;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool sequenceSpecified;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
public class ListAllProcessNodesRes {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlArrayItemAttribute("processNode", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
    public XProcessNode[] @return;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public System.UInt64 sequence;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool sequenceSpecified;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
public abstract class GetCallPickupGroup {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("routePartitionId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlElementAttribute("name", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlElementAttribute("routePartitionName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlElementAttribute("uuid", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlElementAttribute("pattern", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlElementAttribute("routeFilterId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlElementAttribute("routeFilterName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")]
    public string Item;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public ItemChoiceType57 ItemElementName;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public System.UInt64 sequence;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool sequenceSpecified;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
public enum ItemChoiceType57 {
    
    /// <remarks/>
    routePartitionId,
    
    /// <remarks/>
    name,
    
    /// <remarks/>
    routePartitionName,
    
    /// <remarks/>
    uuid,
    
    /// <remarks/>
    pattern,
    
    /// <remarks/>
    routeFilterId,
    
    /// <remarks/>
    routeFilterName,
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
public class GetGatewayEndpointResReturn {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public XGateway device;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
public class GetGatewayEndpointRes {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public GetGatewayEndpointResReturn @return;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public System.UInt64 sequence;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool sequenceSpecified;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
public class GetRouteListResReturn {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public XRouteList routeList;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
public class GetRouteListRes {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public GetRouteListResReturn @return;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public System.UInt64 sequence;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool sequenceSpecified;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
public class GetMGCPReq {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("uuid", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlElementAttribute("domainName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")]
    public string Item;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public ItemChoiceType56 ItemElementName;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public System.UInt64 sequence;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool sequenceSpecified;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
public enum ItemChoiceType56 {
    
    /// <remarks/>
    uuid,
    
    /// <remarks/>
    domainName,
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
public class GetTransPatternReq {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("routePartitionId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlElementAttribute("routePartitionName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlElementAttribute("uuid", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlElementAttribute("pattern", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlElementAttribute("routeFilterId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlElementAttribute("routeFilterName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")]
    public string Item;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public ItemChoiceType55 ItemElementName;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public System.UInt64 sequence;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool sequenceSpecified;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
public enum ItemChoiceType55 {
    
    /// <remarks/>
    routePartitionId,
    
    /// <remarks/>
    routePartitionName,
    
    /// <remarks/>
    uuid,
    
    /// <remarks/>
    pattern,
    
    /// <remarks/>
    routeFilterId,
    
    /// <remarks/>
    routeFilterName,
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
public class CreateAutogeneratedProfileReq {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("phoneId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlElementAttribute("phoneName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")]
    public string Item;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public ItemChoiceType54 ItemElementName;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public System.UInt64 sequence;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool sequenceSpecified;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
public enum ItemChoiceType54 {
    
    /// <remarks/>
    phoneId,
    
    /// <remarks/>
    phoneName,
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
public class GetCMCInfoResReturn {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public XCMCInfo cmcInfo;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
public class GetCMCInfoRes {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public GetCMCInfoResReturn @return;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public System.UInt64 sequence;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool sequenceSpecified;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
public class ListLocationRes {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlArrayItemAttribute("location", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
    public XLocation[] @return;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public System.UInt64 sequence;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool sequenceSpecified;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
public class ListRoutePartitionRes {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlArrayItemAttribute("routePartition", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
    public XRoutePartition[] @return;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public System.UInt64 sequence;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool sequenceSpecified;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
public class RemoveHuntPilotReq {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("routePartitionId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlElementAttribute("routePartitionName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlElementAttribute("uuid", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlElementAttribute("pattern", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlElementAttribute("routeFilterId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlElementAttribute("routeFilterName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")]
    public string Item;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public ItemChoiceType53 ItemElementName;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public System.UInt64 sequence;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool sequenceSpecified;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
public enum ItemChoiceType53 {
    
    /// <remarks/>
    routePartitionId,
    
    /// <remarks/>
    routePartitionName,
    
    /// <remarks/>
    uuid,
    
    /// <remarks/>
    pattern,
    
    /// <remarks/>
    routeFilterId,
    
    /// <remarks/>
    routeFilterName,
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
public abstract class GetNumPlanPattern {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("routePartitionId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlElementAttribute("routePartitionName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlElementAttribute("uuid", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlElementAttribute("pattern", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlElementAttribute("routeFilterId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlElementAttribute("routeFilterName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")]
    public string Item;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public ItemChoiceType52 ItemElementName;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public System.UInt64 sequence;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool sequenceSpecified;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
public enum ItemChoiceType52 {
    
    /// <remarks/>
    routePartitionId,
    
    /// <remarks/>
    routePartitionName,
    
    /// <remarks/>
    uuid,
    
    /// <remarks/>
    pattern,
    
    /// <remarks/>
    routeFilterId,
    
    /// <remarks/>
    routeFilterName,
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
public class ListProcessNodesByServiceRes {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlArrayItemAttribute("processNode", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
    public XProcessNode[] @return;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public System.UInt64 sequence;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool sequenceSpecified;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
public class GetVoiceMailPortResReturn {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public XVoiceMailPort voiceMailPort;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
public class GetVoiceMailPortRes {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public GetVoiceMailPortResReturn @return;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public System.UInt64 sequence;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool sequenceSpecified;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
public class GetMediaResourceListResReturn {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public XMediaResourceList mediaResourceList;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
public class GetMediaResourceListRes {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public GetMediaResourceListResReturn @return;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public System.UInt64 sequence;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool sequenceSpecified;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
public class StandardResponse {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string @return;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public System.UInt64 sequence;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool sequenceSpecified;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
public class GetPilotPointResReturn {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public XPilotPoint pilotPoint;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
public class GetPilotPointRes {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public GetPilotPointResReturn @return;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public System.UInt64 sequence;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool sequenceSpecified;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
public class UpdateCTIRoutePointReqLines {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("lineIdentifier", typeof(XNumplanIdentifier), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlElementAttribute("line", typeof(XLine), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public object[] Items;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
public class UpdateCTIRoutePointReq {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("name", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="Name")]
    [System.Xml.Serialization.XmlElementAttribute("uuid", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")]
    public string Item;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public ItemChoiceType51 ItemElementName;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="Name")]
    public string newName;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string description;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("callingSearchSpaceId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlElementAttribute("callingSearchSpaceName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="Name")]
    [System.Xml.Serialization.XmlChoiceIdentifierAttribute("Item1ElementName")]
    public string Item1;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public Item1ChoiceType12 Item1ElementName;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("devicePoolName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="Name")]
    [System.Xml.Serialization.XmlElementAttribute("devicePoolId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlChoiceIdentifierAttribute("Item2ElementName")]
    public string Item2;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public Item2ChoiceType9 Item2ElementName;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("locationName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlElementAttribute("locationId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlChoiceIdentifierAttribute("Item3ElementName")]
    public string Item3;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public Item3ChoiceType7 Item3ElementName;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public UpdateCTIRoutePointReqLines lines;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public System.UInt64 sequence;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool sequenceSpecified;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
public enum ItemChoiceType51 {
    
    /// <remarks/>
    name,
    
    /// <remarks/>
    uuid,
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
public enum Item1ChoiceType12 {
    
    /// <remarks/>
    callingSearchSpaceId,
    
    /// <remarks/>
    callingSearchSpaceName,
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
public enum Item2ChoiceType9 {
    
    /// <remarks/>
    devicePoolName,
    
    /// <remarks/>
    devicePoolId,
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
public enum Item3ChoiceType7 {
    
    /// <remarks/>
    locationName,
    
    /// <remarks/>
    locationId,
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
public class GetUserReq {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string userid;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public System.UInt64 sequence;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool sequenceSpecified;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
public class XProcessConfig {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("processNodeName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlElementAttribute("processNode", typeof(XProcessNode), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public object Item;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string name;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public XService service;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
    public string value;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public XParam valueType;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.ComponentModel.DefaultValueAttribute(false)]
    public bool primaryData = false;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string uuid;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
public enum XParam {
    
    /// <remarks/>
    boolean,
    
    /// <remarks/>
    @double,
    
    /// <remarks/>
    @long,
    
    /// <remarks/>
    @string,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("date/time")]
    datetime,
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
public class GetServiceParameterResReturn {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public XProcessConfig serviceParameter;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
public class GetServiceParameterRes {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public GetServiceParameterResReturn @return;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public System.UInt64 sequence;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool sequenceSpecified;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
public class UpdateRoutePatternReqDestination {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("gatewayName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlElementAttribute("routeList", typeof(XRouteList), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlElementAttribute("gateway", typeof(XDevice), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlElementAttribute("routeListName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")]
    public object Item;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public ItemChoiceType50 ItemElementName;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
public enum ItemChoiceType50 {
    
    /// <remarks/>
    gatewayName,
    
    /// <remarks/>
    routeList,
    
    /// <remarks/>
    gateway,
    
    /// <remarks/>
    routeListName,
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
public class UpdateRoutePatternReq {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("routePartitionId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlElementAttribute("routePartitionName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlElementAttribute("uuid", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlElementAttribute("pattern", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlElementAttribute("routeFilterId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlElementAttribute("routeFilterName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")]
    public string Item;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public ItemChoiceType49 ItemElementName;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string newPattern;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string description;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("routePartitionId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlElementAttribute("routePartitionName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlChoiceIdentifierAttribute("Item1ElementName")]
    public string Item1;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public Item1ChoiceType11 Item1ElementName;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public bool blockEnable;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool blockEnableSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string calledPartyTransformationMask;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string callingPartyTransformationMask;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public XStatus useCallingPartyPhoneMask;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool useCallingPartyPhoneMaskSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
    public string callingPartyPrefixDigits;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("dialPlanName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlElementAttribute("dialPlanId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlChoiceIdentifierAttribute("Item2ElementName")]
    public string Item2;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public Item2ChoiceType8 Item2ElementName;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("digitDiscardInstructionName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlElementAttribute("digitDiscardInstructionId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlChoiceIdentifierAttribute("Item3ElementName")]
    public string Item3;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public Item3ChoiceType6 Item3ElementName;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public XLampBlinkRate messageWaiting;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool messageWaitingSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public XNetworkLocation networkLocation;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool networkLocationSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public bool patternUrgency;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool patternUrgencySpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string prefixDigitsOut;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("routeFilterId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlElementAttribute("routeFilterName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlChoiceIdentifierAttribute("Item4ElementName")]
    public string Item4;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public Item4ChoiceType6 Item4ElementName;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public XPresentationBit callingLinePresentationBit;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool callingLinePresentationBitSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public XPresentationBit callingNamePresentationBit;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool callingNamePresentationBitSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public XPresentationBit connectedLinePresentationBit;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool connectedLinePresentationBitSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public XPresentationBit connectedNamePresentationBit;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool connectedNamePresentationBitSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public bool supportOverlapSending;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool supportOverlapSendingSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public XPatternPrecedence patternPrecedence;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool patternPrecedenceSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public XReleaseCauseValue releaseCause;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool releaseCauseSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public object allowDeviceOverride;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public object provideOutsideDialtone;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public UpdateRoutePatternReqDestination destination;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public bool authorizationCodeRequired;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool authorizationCodeRequiredSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="nonNegativeInteger")]
    public string authorizationLevelRequired;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public bool clientCodeRequired;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool clientCodeRequiredSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string withTag;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string withValueClause;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public System.UInt64 sequence;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool sequenceSpecified;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
public enum ItemChoiceType49 {
    
    /// <remarks/>
    routePartitionId,
    
    /// <remarks/>
    routePartitionName,
    
    /// <remarks/>
    uuid,
    
    /// <remarks/>
    pattern,
    
    /// <remarks/>
    routeFilterId,
    
    /// <remarks/>
    routeFilterName,
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
public enum Item1ChoiceType11 {
    
    /// <remarks/>
    routePartitionId,
    
    /// <remarks/>
    routePartitionName,
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
public enum Item2ChoiceType8 {
    
    /// <remarks/>
    dialPlanName,
    
    /// <remarks/>
    dialPlanId,
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
public enum Item3ChoiceType6 {
    
    /// <remarks/>
    digitDiscardInstructionName,
    
    /// <remarks/>
    digitDiscardInstructionId,
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
public enum Item4ChoiceType6 {
    
    /// <remarks/>
    routeFilterId,
    
    /// <remarks/>
    routeFilterName,
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
public class AddH323TrunkReq {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public XH323Trunk trunk;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public System.UInt64 sequence;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool sequenceSpecified;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
public class GetMOHAudioSourceByIDAndSourceReq {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("sourceId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="nonNegativeInteger")]
    [System.Xml.Serialization.XmlElementAttribute("uuid", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")]
    public string Item;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public ItemChoiceType48 ItemElementName;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public System.UInt64 sequence;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool sequenceSpecified;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
public enum ItemChoiceType48 {
    
    /// <remarks/>
    sourceId,
    
    /// <remarks/>
    uuid,
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
public class AddCallManagerReq {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public XCallManager callManager;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public System.UInt64 sequence;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool sequenceSpecified;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
public class GetCallParkResReturn {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public XNPCallPark callPark;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
public class GetCallParkRes {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public GetCallParkResReturn @return;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public System.UInt64 sequence;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool sequenceSpecified;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
public class AddCallParkReq {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public XNPCallPark callPark;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public System.UInt64 sequence;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool sequenceSpecified;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
public class GetCallParkReq {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("routePartitionId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlElementAttribute("routePartitionName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlElementAttribute("uuid", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlElementAttribute("pattern", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlElementAttribute("routeFilterId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlElementAttribute("routeFilterName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")]
    public string Item;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public ItemChoiceType47 ItemElementName;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public System.UInt64 sequence;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool sequenceSpecified;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
public enum ItemChoiceType47 {
    
    /// <remarks/>
    routePartitionId,
    
    /// <remarks/>
    routePartitionName,
    
    /// <remarks/>
    uuid,
    
    /// <remarks/>
    pattern,
    
    /// <remarks/>
    routeFilterId,
    
    /// <remarks/>
    routeFilterName,
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
public class AddDevicePoolReq {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public XDevicePool devicePool;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public System.UInt64 sequence;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool sequenceSpecified;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
public class GetServiceParameterReq {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("name", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlElementAttribute("uuid", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlElementAttribute("processNodeId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlElementAttribute("processNodeName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlElementAttribute("service", typeof(XService), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")]
    public object Item;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public ItemChoiceType46 ItemElementName;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public System.UInt64 sequence;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool sequenceSpecified;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
public enum ItemChoiceType46 {
    
    /// <remarks/>
    name,
    
    /// <remarks/>
    uuid,
    
    /// <remarks/>
    processNodeId,
    
    /// <remarks/>
    processNodeName,
    
    /// <remarks/>
    service,
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
public class ListPhoneByDescriptionReq {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string searchString;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public System.UInt64 sequence;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool sequenceSpecified;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
public class RemoveUserReq {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string userid;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public System.UInt64 sequence;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool sequenceSpecified;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
public class GetProcessNodeServiceReq {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("uuid", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlElementAttribute("processNodeId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlElementAttribute("processNodeName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlElementAttribute("service", typeof(XService), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")]
    public object Item;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public ItemChoiceType45 ItemElementName;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public System.UInt64 sequence;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool sequenceSpecified;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
public enum ItemChoiceType45 {
    
    /// <remarks/>
    uuid,
    
    /// <remarks/>
    processNodeId,
    
    /// <remarks/>
    processNodeName,
    
    /// <remarks/>
    service,
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
public class UpdateH323PhoneReqGatekeeperInfo {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("gatekeeperName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlElementAttribute("gatekeeperId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")]
    public string Item;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public ItemChoiceType44 ItemElementName;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string e164;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string technologyPrefix;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string zone;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
public enum ItemChoiceType44 {
    
    /// <remarks/>
    gatekeeperName,
    
    /// <remarks/>
    gatekeeperId,
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
public class UpdateH323PhoneReq {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("name", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlElementAttribute("uuid", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")]
    public string Item;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public ItemChoiceType43 ItemElementName;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string newName;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string description;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("callingSearchSpaceId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlElementAttribute("callingSearchSpaceName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlChoiceIdentifierAttribute("Item1ElementName")]
    public string Item1;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public Item1ChoiceType10 Item1ElementName;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("devicePoolName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlElementAttribute("devicePoolId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlChoiceIdentifierAttribute("Item2ElementName")]
    public string Item2;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public Item2ChoiceType7 Item2ElementName;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public XNetworkLocation networkLocation;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool networkLocationSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("locationName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlElementAttribute("locationId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlChoiceIdentifierAttribute("Item3ElementName")]
    public string Item3;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public Item3ChoiceType5 Item3ElementName;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("mediaResourceListId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlElementAttribute("mediaResourceListName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlChoiceIdentifierAttribute("Item4ElementName")]
    public string Item4;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public Item4ChoiceType5 Item4ElementName;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="nonNegativeInteger")]
    public string networkHoldMOHAudioSourceId;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="nonNegativeInteger")]
    public string userHoldMOHAudioSourceId;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("automatedAlternateRoutingCSSId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlElementAttribute("automatedAlternateRoutingCSSName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlChoiceIdentifierAttribute("Item5ElementName")]
    public string Item5;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public Item5ChoiceType5 Item5ElementName;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("aarNeighborhoodName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlElementAttribute("aarNeighborhoodId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlChoiceIdentifierAttribute("Item6ElementName")]
    public string Item6;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public Item6ChoiceType3 Item6ElementName;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public bool retryVideoCallAsAudio;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool retryVideoCallAsAudioSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public bool waitForFarEndH245TerminalSet;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool waitForFarEndH245TerminalSetSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public bool mtpRequired;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool mtpRequiredSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string callerIdDN;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public XCallingPartySelection callingPartySelection;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool callingPartySelectionSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public XPresentationBit callingLineIdPresentation;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool callingLineIdPresentationSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public bool displayIEDelivery;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool displayIEDeliverySpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public bool redirectOutboundNumberIE;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool redirectOutboundNumberIESpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public bool redirectInboundNumberIE;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool redirectInboundNumberIESpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public bool enableInboundFaststart;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool enableInboundFaststartSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public bool enableOutboundFaststart;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool enableOutboundFaststartSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string ownerUserId;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="nonNegativeInteger")]
    public string signalingPort;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public UpdateH323PhoneReqGatekeeperInfo gatekeeperInfo;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlArrayItemAttribute("line", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
    public XLine[] lines;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.ComponentModel.DefaultValueAttribute(false)]
    public bool ignorePresentationIndicators = false;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public System.UInt64 sequence;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool sequenceSpecified;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
public enum ItemChoiceType43 {
    
    /// <remarks/>
    name,
    
    /// <remarks/>
    uuid,
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
public enum Item1ChoiceType10 {
    
    /// <remarks/>
    callingSearchSpaceId,
    
    /// <remarks/>
    callingSearchSpaceName,
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
public enum Item2ChoiceType7 {
    
    /// <remarks/>
    devicePoolName,
    
    /// <remarks/>
    devicePoolId,
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
public enum Item3ChoiceType5 {
    
    /// <remarks/>
    locationName,
    
    /// <remarks/>
    locationId,
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
public enum Item4ChoiceType5 {
    
    /// <remarks/>
    mediaResourceListId,
    
    /// <remarks/>
    mediaResourceListName,
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
public enum Item5ChoiceType5 {
    
    /// <remarks/>
    automatedAlternateRoutingCSSId,
    
    /// <remarks/>
    automatedAlternateRoutingCSSName,
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
public enum Item6ChoiceType3 {
    
    /// <remarks/>
    aarNeighborhoodName,
    
    /// <remarks/>
    aarNeighborhoodId,
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
public class UpdateGatewayEndpointReqT1 {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public XTrunkSelectionOrder trunkSelectionOrder;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool trunkSelectionOrderSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public XClockReference clockReference;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool clockReferenceSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public XCSUParam csuParam;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool csuParamSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public XDigitSending digitSending;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool digitSendingSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public XEncode encode;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool encodeSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public XFDLChannel fdlChannel;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool fdlChannelSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlArrayItemAttribute("port", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Namespace="http://www.cisco.com/AXL/1.0", IsNullable=false)]
    public XT1Port[] ports;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public XYellowAlarm yellowAlarm;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool yellowAlarmSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public XZeroSuppression zeroSuppression;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool zeroSuppressionSpecified;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
public class UpdateGatewayEndpointReqBri {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public bool acceptInboundRDNIS;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool acceptInboundRDNISSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public XBriProtocol briProtocol;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool briProtocolSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public XNumberingPlan calledPlan;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool calledPlanSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public XPriOfNumber calledPri;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool calledPriSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string callerIDDN;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public XCallingPartySelection callingPartySelection;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool callingPartySelectionSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public XNumberingPlan callingPlan;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool callingPlanSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public XPriOfNumber callingPri;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool callingPriSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="nonNegativeInteger")]
    public string chanIE;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public XClockReference clockReference;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool clockReferenceSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public XCSUParam csuParam;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool csuParamSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public bool dChannelEnable;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool dChannelEnableSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public bool direction;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool directionSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public bool displayIE;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool displayIESpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public XEncode encode;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool encodeSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public XFDLChannel fdlChannel;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool fdlChannelSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="nonNegativeInteger")]
    public string firstDelay;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public XFraming framing;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool framingSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="nonNegativeInteger")]
    public string intraDelay;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public bool numberIE;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool numberIESpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="nonNegativeInteger")]
    public string numDigits;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string prefix;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public XPresentationBit presentationBit;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool presentationBitSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public bool sendRestart;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool sendRestartSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public bool setupNonISDNPI;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool setupNonISDNPISpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public bool sigDigits;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool sigDigitsSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public bool stableIn4;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool stableIn4Specified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public bool statusPoll;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool statusPollSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="nonNegativeInteger")]
    public string stripCountOut;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public XTrunkPad trunkPadRx;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool trunkPadRxSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public XTrunkPad trunkPadTx;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool trunkPadTxSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public XTrunkLevel trunkLevel;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool trunkLevelSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public XYellowAlarm yellowAlarm;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool yellowAlarmSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public XZeroSuppression zeroSuppression;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool zeroSuppressionSpecified;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
public class UpdateGatewayEndpointReqPriInterfaceId {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public bool present;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTextAttribute(DataType="nonNegativeInteger")]
    public string Value;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
public class UpdateGatewayEndpointReqPri {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public bool acceptInboundRDNIS;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool acceptInboundRDNISSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public XNumberingPlan calledPlan;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool calledPlanSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public XPriOfNumber calledPri;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool calledPriSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string callerIDDN;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public XCallingPartySelection callingPartySelection;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool callingPartySelectionSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public XNumberingPlan callingPlan;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool callingPlanSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public XPriOfNumber callingPri;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool callingPriSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="nonNegativeInteger")]
    public string chanIE;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public XClockReference clockReference;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool clockReferenceSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public XCSUParam csuParam;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool csuParamSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public bool dChannelEnable;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool dChannelEnableSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public bool direction;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool directionSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public bool displayIE;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool displayIESpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public XEncode encode;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool encodeSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public XFDLChannel fdlChannel;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool fdlChannelSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="nonNegativeInteger")]
    public string firstDelay;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public UpdateGatewayEndpointReqPriInterfaceId interfaceId;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="nonNegativeInteger")]
    public string intraDelay;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public bool mcdnEnable;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool mcdnEnableSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public bool numberIE;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool numberIESpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="nonNegativeInteger")]
    public string numDigits;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public bool passingPrecedenceLevelThroughUUIE;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool passingPrecedenceLevelThroughUUIESpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string prefix;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public XPresentationBit callingLinePresentationBit;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool callingLinePresentationBitSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public XPresentationBit connectedLinePresentationBit;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool connectedLinePresentationBitSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public XConnectedPBX connectedPBX;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool connectedPBXSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public XPriProtocol priProtocol;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool priProtocolSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="nonNegativeInteger")]
    public string securityAccessLevel;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public bool sendCallingNameInFacilityIE;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool sendCallingNameInFacilityIESpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public bool sendEXLeadingCharInDispIE;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool sendEXLeadingCharInDispIESpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public bool sendRestart;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool sendRestartSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public bool setupNonISDNPI;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool setupNonISDNPISpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public bool sigDigits;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool sigDigitsSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="nonNegativeInteger")]
    public string span;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public bool statusPoll;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool statusPollSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="nonNegativeInteger")]
    public string stripCountOut;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public XTrunkPad trunkPadRx;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool trunkPadRxSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public XTrunkPad trunkPadTx;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool trunkPadTxSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public XTrunkLevel trunkLevel;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool trunkLevelSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public XYellowAlarm yellowAlarm;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool yellowAlarmSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public XZeroSuppression zeroSuppression;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool zeroSuppressionSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="positiveInteger")]
    public string sMDIBasePort;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public bool protocolProfile91NameOnly;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool protocolProfile91NameOnlySpecified;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
public class UpdateGatewayEndpointReqAnalog {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlArrayItemAttribute("port", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Namespace="http://www.cisco.com/AXL/1.0", IsNullable=false)]
    public XAnalogPort[] ports;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public XTrunkSelectionOrder trunkSelectionOrder;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool trunkSelectionOrderSpecified;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
public class UpdateGatewayEndpointReq {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("name", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlElementAttribute("uuid", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")]
    public string Item;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public ItemChoiceType42 ItemElementName;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string newName;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string description;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public XProtocolSide protocolSide;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool protocolSideSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("callingSearchSpaceId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlElementAttribute("callingSearchSpaceName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="Name")]
    [System.Xml.Serialization.XmlChoiceIdentifierAttribute("Item1ElementName")]
    public string Item1;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public Item1ChoiceType9 Item1ElementName;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("devicePoolName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlElementAttribute("devicePoolId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlChoiceIdentifierAttribute("Item2ElementName")]
    public string Item2;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public Item2ChoiceType6 Item2ElementName;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public XNetworkLocation networkLocation;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool networkLocationSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("locationName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="Name")]
    [System.Xml.Serialization.XmlElementAttribute("locationId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlChoiceIdentifierAttribute("Item3ElementName")]
    public string Item3;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public Item3ChoiceType4 Item3ElementName;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("mediaResourceListId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlElementAttribute("mediaResourceListName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="Name")]
    [System.Xml.Serialization.XmlChoiceIdentifierAttribute("Item4ElementName")]
    public string Item4;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public Item4ChoiceType4 Item4ElementName;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="nonNegativeInteger")]
    public string networkHoldMOHAudioSourceId;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="nonNegativeInteger")]
    public string userHoldMOHAudioSourceId;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("automatedAlternateRoutingCSSId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlElementAttribute("automatedAlternateRoutingCSSName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlChoiceIdentifierAttribute("Item5ElementName")]
    public string Item5;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public Item5ChoiceType4 Item5ElementName;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("aarNeighborhoodName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlElementAttribute("aarNeighborhoodId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlChoiceIdentifierAttribute("Item6ElementName")]
    public string Item6;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public Item6ChoiceType2 Item6ElementName;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public XLoadInformation loadInformation;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public System.Xml.XmlElement vendorConfig;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public bool traceFlag;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool traceFlagSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public int mlppDomainId;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool mlppDomainIdSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public XStatus mlppIndicationStatus;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool mlppIndicationStatusSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public XPreemption preemption;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool preemptionSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public XCountry country;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool countrySpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public XPacketCaptureMode packetCaptureMode;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool packetCaptureModeSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="positiveInteger")]
    public string packetCaptureDuration;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("pri", typeof(UpdateGatewayEndpointReqPri), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlElementAttribute("analog", typeof(UpdateGatewayEndpointReqAnalog), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlElementAttribute("bri", typeof(UpdateGatewayEndpointReqBri), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlElementAttribute("t1", typeof(UpdateGatewayEndpointReqT1), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public object Item7;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public System.UInt64 sequence;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool sequenceSpecified;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
public enum ItemChoiceType42 {
    
    /// <remarks/>
    name,
    
    /// <remarks/>
    uuid,
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
public enum Item1ChoiceType9 {
    
    /// <remarks/>
    callingSearchSpaceId,
    
    /// <remarks/>
    callingSearchSpaceName,
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
public enum Item2ChoiceType6 {
    
    /// <remarks/>
    devicePoolName,
    
    /// <remarks/>
    devicePoolId,
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
public enum Item3ChoiceType4 {
    
    /// <remarks/>
    locationName,
    
    /// <remarks/>
    locationId,
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
public enum Item4ChoiceType4 {
    
    /// <remarks/>
    mediaResourceListId,
    
    /// <remarks/>
    mediaResourceListName,
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
public enum Item5ChoiceType4 {
    
    /// <remarks/>
    automatedAlternateRoutingCSSId,
    
    /// <remarks/>
    automatedAlternateRoutingCSSName,
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
public enum Item6ChoiceType2 {
    
    /// <remarks/>
    aarNeighborhoodName,
    
    /// <remarks/>
    aarNeighborhoodId,
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
public class AddProcessNodeReq {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public XProcessNode processNode;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public System.UInt64 sequence;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool sequenceSpecified;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
public class AddMGCPReq {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public XMGCP newMGCP;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public System.UInt64 sequence;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool sequenceSpecified;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
public class XMGCP {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string domainName;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string description;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public XProduct product;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public XModel model;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("callManagerGroupName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlElementAttribute("callManagerGroup", typeof(XCallManagerGroup), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public object Item;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public XMGCPUnits units;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string scratch;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public System.Xml.XmlElement vendorConfig;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string versionStamp;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public XLoadInformation loadInformation;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string uuid;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
public class XMGCPUnits {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("unit", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public XMGCPUnit[] unit;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute(DataType="positiveInteger")]
    public string max;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
public class XMGCPUnit {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public XMGCPSlotModule product;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public XMGCPSubunits subunits;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute(DataType="nonNegativeInteger")]
    public string index;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
public enum XMGCPSlotModule {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("NM-1V")]
    NM1V,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("NM-2V")]
    NM2V,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("NM-HDV")]
    NMHDV,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("VIC-SLOT")]
    VICSLOT,
    
    /// <remarks/>
    NONE,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("VWIC-SLOT")]
    VWICSLOT,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("FLEX-SLOT")]
    FLEXSLOT,
    
    /// <remarks/>
    ANALOG,
    
    /// <remarks/>
    DIGITAL,
    
    /// <remarks/>
    VGC_PORT,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("WS-X6600")]
    WSX6600,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("AIM-VOICE-30 (2 subunits)")]
    AIMVOICE302subunits,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("NM-HDA")]
    NMHDA,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("PA-VXA")]
    PAVXA,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("PA-VXB")]
    PAVXB,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("PA-VXC")]
    PAVXC,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("PA-MCX")]
    PAMCX,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("NM-HD-1V")]
    NMHD1V,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("NM-HD-2V")]
    NMHD2V,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("NM-HD-2VE")]
    NMHD2VE,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("GENERIC-SLOT")]
    GENERICSLOT,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("NM-4VWIC-MBRD")]
    NM4VWICMBRD,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("EVM-HD")]
    EVMHD,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("NM-HDV2-0PORT")]
    NMHDV20PORT,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("NM-HDV2-1PORT-T1")]
    NMHDV21PORTT1,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("NM-HDV2-1PORT-E1")]
    NMHDV21PORTE1,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("NM-HDV2-2PORT-T1")]
    NMHDV22PORTT1,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("NM-HDV2-2PORT-E1")]
    NMHDV22PORTE1,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("AIM-VOICE-30-SLOT-0 (3 subunits- slot 0 only)")]
    AIMVOICE30SLOT03subunitsslot0only,
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
public class XMGCPSubunits {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("subunit", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public XMGCPSubunit[] subunit;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute(DataType="nonNegativeInteger")]
    public string index;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
public class AddLineReq {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public XNPDirectoryNumber newLine;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public System.UInt64 sequence;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool sequenceSpecified;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
public class UpdateLocationReq {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("name", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlElementAttribute("uuid", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")]
    public string Item;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public ItemChoiceType41 ItemElementName;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string newName;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="nonNegativeInteger")]
    public string kbits;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="nonNegativeInteger")]
    public string videoKbits;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public System.UInt64 sequence;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool sequenceSpecified;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
public enum ItemChoiceType41 {
    
    /// <remarks/>
    name,
    
    /// <remarks/>
    uuid,
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
public class UpdateMediaResourceListReq {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("name", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlElementAttribute("uuid", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")]
    public string Item;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public ItemChoiceType40 ItemElementName;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string newName;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlArrayItemAttribute("member", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
    public XMediaResourceListMember[] members;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public System.UInt64 sequence;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool sequenceSpecified;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
public enum ItemChoiceType40 {
    
    /// <remarks/>
    name,
    
    /// <remarks/>
    uuid,
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
public class UpdatePilotPointReq {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("name", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlElementAttribute("uuid", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")]
    public string Item;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public ItemChoiceType39 ItemElementName;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string newName;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("devicePoolName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlElementAttribute("devicePool", typeof(XDevicePool), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public object Item1;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("routePartitionName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlElementAttribute("routePartition", typeof(XRoutePartition), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public object Item2;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("callingSearchSpaceName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="Name")]
    [System.Xml.Serialization.XmlElementAttribute("callingSearchSpace", typeof(XCallingSearchSpace), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public object Item3;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string pilotNumber;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public bool useFirstAvailable;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool useFirstAvailableSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("locationName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlElementAttribute("location", typeof(XLocation), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public object Item4;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public System.UInt64 sequence;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool sequenceSpecified;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
public enum ItemChoiceType39 {
    
    /// <remarks/>
    name,
    
    /// <remarks/>
    uuid,
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
public class UpdateDialPlanReq {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("name", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlElementAttribute("uuid", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")]
    public string Item;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public ItemChoiceType38 ItemElementName;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string newName;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string description;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public System.UInt64 sequence;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool sequenceSpecified;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
public enum ItemChoiceType38 {
    
    /// <remarks/>
    name,
    
    /// <remarks/>
    uuid,
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
public class GetHuntPilotReq {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("routePartitionId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlElementAttribute("routePartitionName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlElementAttribute("uuid", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlElementAttribute("pattern", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlElementAttribute("routeFilterId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlElementAttribute("routeFilterName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")]
    public string Item;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public ItemChoiceType37 ItemElementName;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public System.UInt64 sequence;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool sequenceSpecified;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
public enum ItemChoiceType37 {
    
    /// <remarks/>
    routePartitionId,
    
    /// <remarks/>
    routePartitionName,
    
    /// <remarks/>
    uuid,
    
    /// <remarks/>
    pattern,
    
    /// <remarks/>
    routeFilterId,
    
    /// <remarks/>
    routeFilterName,
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
public class GetGatekeeperResReturn {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public XGatekeeper gatekeeper;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
public class GetGatekeeperRes {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public GetGatekeeperResReturn @return;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public System.UInt64 sequence;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool sequenceSpecified;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
public class GetHuntPilotResReturn {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public XNPHuntPilot pattern;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
public class GetHuntPilotRes {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public GetHuntPilotResReturn @return;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public System.UInt64 sequence;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool sequenceSpecified;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
public class ListCSSByNameRes {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlArrayItemAttribute("callingSearchSpace", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
    public XCallingSearchSpace[] @return;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public System.UInt64 sequence;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool sequenceSpecified;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
public class ListCSSByNameReq {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string searchString;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public System.UInt64 sequence;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool sequenceSpecified;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
public class AddDialPlanTagReq {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public XDialPlanTag dialPlanTag;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public System.UInt64 sequence;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool sequenceSpecified;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
public class AddSIPTrunkReq {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public XSIPTrunk trunk;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public System.UInt64 sequence;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool sequenceSpecified;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
public class GetFACInfoResReturn {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public XFACInfo facInfo;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
public class GetFACInfoRes {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public GetFACInfoResReturn @return;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public System.UInt64 sequence;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool sequenceSpecified;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
public class RemoveCallParkReq {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("routePartitionId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlElementAttribute("routePartitionName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlElementAttribute("uuid", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlElementAttribute("pattern", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlElementAttribute("routeFilterId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlElementAttribute("routeFilterName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")]
    public string Item;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public ItemChoiceType36 ItemElementName;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public System.UInt64 sequence;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool sequenceSpecified;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
public enum ItemChoiceType36 {
    
    /// <remarks/>
    routePartitionId,
    
    /// <remarks/>
    routePartitionName,
    
    /// <remarks/>
    uuid,
    
    /// <remarks/>
    pattern,
    
    /// <remarks/>
    routeFilterId,
    
    /// <remarks/>
    routeFilterName,
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
public class AddCallPickupGroupReq {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public XNPCallPickupGroup callPickup;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public System.UInt64 sequence;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool sequenceSpecified;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
public class ExecuteSQLQueryRes {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlArrayItemAttribute("row", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
    public object[] @return;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public System.UInt64 sequence;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool sequenceSpecified;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
public class UpdateCallManagerReqPortsMgcpPorts {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="nonNegativeInteger")]
    public string listen;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="nonNegativeInteger")]
    public string keepAlive;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
public class UpdateCallManagerReqPorts {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="nonNegativeInteger")]
    public string analogAccessPort;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="nonNegativeInteger")]
    public string digitalAccessPort;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="nonNegativeInteger")]
    public string ethernetPhonePort;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public UpdateCallManagerReqPortsMgcpPorts mgcpPorts;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
public class UpdateCallManagerReqAutoRegistration {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string startDN;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string endDN;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string nextDN;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("routePartitionId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlElementAttribute("routePartitionName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")]
    public string Item;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public ItemChoiceType35 ItemElementName;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string e164Mask;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
public enum ItemChoiceType35 {
    
    /// <remarks/>
    routePartitionId,
    
    /// <remarks/>
    routePartitionName,
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
public class UpdateCallManagerReq {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("name", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlElementAttribute("uuid", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")]
    public string Item;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public ItemChoiceType34 ItemElementName;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string newName;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string description;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public UpdateCallManagerReqAutoRegistration autoRegistration;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public UpdateCallManagerReqPorts ports;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public System.UInt64 sequence;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool sequenceSpecified;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
public enum ItemChoiceType34 {
    
    /// <remarks/>
    name,
    
    /// <remarks/>
    uuid,
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
public class GetH323GatewayResReturn {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public XH323Gateway gateway;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
public class GetH323GatewayRes {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public GetH323GatewayResReturn @return;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public System.UInt64 sequence;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool sequenceSpecified;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
public class UpdateVoiceMailPortReq {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("name", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlElementAttribute("uuid", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")]
    public string Item;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public ItemChoiceType33 ItemElementName;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string newName;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string description;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("callingSearchSpaceId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlElementAttribute("callingSearchSpaceName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="Name")]
    [System.Xml.Serialization.XmlChoiceIdentifierAttribute("Item1ElementName")]
    public string Item1;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public Item1ChoiceType8 Item1ElementName;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("devicePoolName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlElementAttribute("devicePoolId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlChoiceIdentifierAttribute("Item2ElementName")]
    public string Item2;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public Item2ChoiceType5 Item2ElementName;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("locationName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="Name")]
    [System.Xml.Serialization.XmlElementAttribute("locationId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlChoiceIdentifierAttribute("Item3ElementName")]
    public string Item3;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public Item3ChoiceType3 Item3ElementName;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("mediaResourceListId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlElementAttribute("mediaResourceListName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="Name")]
    [System.Xml.Serialization.XmlChoiceIdentifierAttribute("Item4ElementName")]
    public string Item4;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public Item4ChoiceType3 Item4ElementName;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("automatedAlternateRoutingCSSId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlElementAttribute("automatedAlternateRoutingCSSName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlChoiceIdentifierAttribute("Item5ElementName")]
    public string Item5;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public Item5ChoiceType3 Item5ElementName;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("aarNeighborhoodName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlElementAttribute("aarNeighborhoodId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlChoiceIdentifierAttribute("Item6ElementName")]
    public string Item6;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public Item6ChoiceType1 Item6ElementName;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public XLoadInformation loadInformation;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public System.Xml.XmlElement vendorConfig;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public bool traceFlag;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool traceFlagSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
    public XLine line;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public System.UInt64 sequence;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool sequenceSpecified;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
public enum ItemChoiceType33 {
    
    /// <remarks/>
    name,
    
    /// <remarks/>
    uuid,
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
public enum Item1ChoiceType8 {
    
    /// <remarks/>
    callingSearchSpaceId,
    
    /// <remarks/>
    callingSearchSpaceName,
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
public enum Item2ChoiceType5 {
    
    /// <remarks/>
    devicePoolName,
    
    /// <remarks/>
    devicePoolId,
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
public enum Item3ChoiceType3 {
    
    /// <remarks/>
    locationName,
    
    /// <remarks/>
    locationId,
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
public enum Item4ChoiceType3 {
    
    /// <remarks/>
    mediaResourceListId,
    
    /// <remarks/>
    mediaResourceListName,
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
public enum Item5ChoiceType3 {
    
    /// <remarks/>
    automatedAlternateRoutingCSSId,
    
    /// <remarks/>
    automatedAlternateRoutingCSSName,
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
public enum Item6ChoiceType1 {
    
    /// <remarks/>
    aarNeighborhoodName,
    
    /// <remarks/>
    aarNeighborhoodId,
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
public class AddGatewayEndpointReq {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public XGateway gateway;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public System.UInt64 sequence;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool sequenceSpecified;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(TypeName="UpdateDeviceProfileReq", Namespace="http://www.cisco.com/AXL/API/1.0")]
public class UpdateDeviceProfileReq3 {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("name", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlElementAttribute("uuid", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")]
    public string Item;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public ItemChoiceType32 ItemElementName;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="Name")]
    public string newName;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string description;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="nonNegativeInteger")]
    public string networkHoldMOHAudioSourceId;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="nonNegativeInteger")]
    public string userHoldMOHAudioSourceId;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public int mlppDomainId;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool mlppDomainIdSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public XStatus mlppIndicationStatus;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool mlppIndicationStatusSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public XPreemption preemption;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool preemptionSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public UpdateDeviceProfileReqLines lines;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("phoneTemplateId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlElementAttribute("phoneTemplateName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlChoiceIdentifierAttribute("Item1ElementName")]
    public string Item1;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public Item1ChoiceType7 Item1ElementName;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlArrayItemAttribute("speeddial", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
    public XSpeeddial[] speeddials;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlArrayItemAttribute("addOnModule", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
    public XAddOnModule[] addOnModules;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public XUserLocale userLocale;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool userLocaleSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlArrayItemAttribute("service", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
    public XSubscribedService[] services;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("softkeyTemplateName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlElementAttribute("softkeyTemplateId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlChoiceIdentifierAttribute("Item2ElementName")]
    public string Item2;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public Item2ChoiceType4 Item2ElementName;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string loginUserId;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.ComponentModel.DefaultValueAttribute(false)]
    public bool ignorePresentationIndicators = false;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public System.UInt64 sequence;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool sequenceSpecified;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
public enum ItemChoiceType32 {
    
    /// <remarks/>
    name,
    
    /// <remarks/>
    uuid,
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
public class UpdateDeviceProfileReqLines {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("lineIdentifier", typeof(XNumplanIdentifier), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlElementAttribute("line", typeof(XLine), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public object[] Items;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
public enum Item1ChoiceType7 {
    
    /// <remarks/>
    phoneTemplateId,
    
    /// <remarks/>
    phoneTemplateName,
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
public enum Item2ChoiceType4 {
    
    /// <remarks/>
    softkeyTemplateName,
    
    /// <remarks/>
    softkeyTemplateId,
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
public class RemoveMGCPReq {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("uuid", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlElementAttribute("domainName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")]
    public string Item;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public ItemChoiceType31 ItemElementName;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public System.UInt64 sequence;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool sequenceSpecified;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
public enum ItemChoiceType31 {
    
    /// <remarks/>
    uuid,
    
    /// <remarks/>
    domainName,
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
public class GetTimeScheduleResReturn {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public XTimeSchedule timeSchedule;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
public class GetTimeScheduleRes {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public GetTimeScheduleResReturn @return;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public System.UInt64 sequence;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool sequenceSpecified;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
public class GetCallManagerResReturn {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public XCallManager callManager;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
public class GetCallManagerRes {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public GetCallManagerResReturn @return;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public System.UInt64 sequence;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool sequenceSpecified;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
public class AddRoutePartitionReq {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public XRoutePartition newRoutePartition;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public System.UInt64 sequence;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool sequenceSpecified;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
public abstract class APIRequest {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public System.UInt64 sequence;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool sequenceSpecified;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
public class GetRouteFilterResReturn {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public XRouteFilter routeFilter;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
public class GetRouteFilterRes {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public GetRouteFilterResReturn @return;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public System.UInt64 sequence;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool sequenceSpecified;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
public class ListDevicePoolResDevicePool {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string name;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string uuid;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
public class ListDevicePoolRes {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlArrayItemAttribute("devicePool", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
    public ListDevicePoolResDevicePool[] @return;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public System.UInt64 sequence;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool sequenceSpecified;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
public class AddRouteFilterReq {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public XRouteFilter routeFilter;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public System.UInt64 sequence;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool sequenceSpecified;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
public class GetDeviceProfileRes {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public GetDeviceProfileResReturn @return;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public System.UInt64 sequence;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool sequenceSpecified;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
public class GetDeviceProfileResReturn {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public XPhoneProfile profile;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
public class AddPhoneReq {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public XIPPhone newPhone;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public System.UInt64 sequence;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool sequenceSpecified;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
public class GetDeviceProfileReq {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("profileName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlElementAttribute("profileId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")]
    public string Item;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public ItemChoiceType30 ItemElementName;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public System.UInt64 sequence;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool sequenceSpecified;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
public enum ItemChoiceType30 {
    
    /// <remarks/>
    profileName,
    
    /// <remarks/>
    profileId,
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
public class GetMGCPResReturn {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public XMGCP mgcp;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
public class GetMGCPRes {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public GetMGCPResReturn @return;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public System.UInt64 sequence;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool sequenceSpecified;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
public class AddTimePeriodReq {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public XTimePeriod timePeriod;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public System.UInt64 sequence;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool sequenceSpecified;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
public class AddRouteGroupReq {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public XRouteGroup routeGroup;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public System.UInt64 sequence;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool sequenceSpecified;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
public class AddGatekeeperReq {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public XGatekeeper gatekeeper;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public System.UInt64 sequence;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool sequenceSpecified;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
public class ListDeviceResDevice {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string name;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public XProduct product;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public XModel model;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string uuid;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
public class ListDeviceRes {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlArrayItemAttribute("device", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
    public ListDeviceResDevice[] @return;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public System.UInt64 sequence;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool sequenceSpecified;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
public class GetTimePeriodResReturn {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public XTimePeriod timePeriod;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
public class GetTimePeriodRes {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public GetTimePeriodResReturn @return;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public System.UInt64 sequence;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool sequenceSpecified;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
public class GetH323TrunkReturn {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public XH323Gateway trunk;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
public class GetH323Trunk {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public GetH323TrunkReturn @return;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public System.UInt64 sequence;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool sequenceSpecified;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
public class UpdateMGCPReq {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("uuid", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlElementAttribute("domainName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")]
    public string Item;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public ItemChoiceType29 ItemElementName;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string newDomainName;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string description;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public XProduct product;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool productSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public XModel model;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool modelSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("callManagerGroupName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlElementAttribute("callManagerGroup", typeof(XCallManagerGroup), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public object Item1;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="Name")]
    public string scratch;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public System.Xml.XmlElement vendorConfig;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string versionStamp;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public XLoadInformation loadInformation;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public System.UInt64 sequence;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool sequenceSpecified;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
public enum ItemChoiceType29 {
    
    /// <remarks/>
    uuid,
    
    /// <remarks/>
    domainName,
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
public class AddMediaResourceGroupReq {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public XMediaResourceGroup mediaResourceGroup;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public System.UInt64 sequence;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool sequenceSpecified;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
public class UpdateTimePeriodReq {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("name", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlElementAttribute("uuid", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")]
    public string Item;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public ItemChoiceType28 ItemElementName;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string newName;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public XTimeOfDay startTime;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool startTimeSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public XTimeOfDay endTime;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool endTimeSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public XDayOfWeek startDay;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool startDaySpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public XDayOfWeek endDay;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool endDaySpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public XMonthOfYear monthOfYear;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool monthOfYearSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="nonNegativeInteger")]
    public string dayOfMonth;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public System.UInt64 sequence;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool sequenceSpecified;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
public enum ItemChoiceType28 {
    
    /// <remarks/>
    name,
    
    /// <remarks/>
    uuid,
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
public class ListAARGroupRes {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlArrayItemAttribute("aarGroup", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
    public XAARNeighborhood[] @return;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public System.UInt64 sequence;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool sequenceSpecified;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
public class AddMGCPUnitReq {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("uuid", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlElementAttribute("domainName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")]
    public string Item;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public ItemChoiceType27 ItemElementName;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public XMGCPUnit unit;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public System.UInt64 sequence;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool sequenceSpecified;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
public enum ItemChoiceType27 {
    
    /// <remarks/>
    uuid,
    
    /// <remarks/>
    domainName,
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
public class GetLocationResReturn {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public XLocation location;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
public class GetLocationRes {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public GetLocationResReturn @return;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public System.UInt64 sequence;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool sequenceSpecified;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
public class GetSIPTrunkReturn {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public XSIPTrunk trunk;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
public class GetSIPTrunk {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public GetSIPTrunkReturn @return;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public System.UInt64 sequence;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool sequenceSpecified;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
public class UpdateLineReq {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("routePartitionId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlElementAttribute("routePartitionName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlElementAttribute("uuid", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlElementAttribute("pattern", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlElementAttribute("routeFilterId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlElementAttribute("routeFilterName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")]
    public string Item;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public ItemChoiceType26 ItemElementName;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string newPattern;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string description;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("newRoutePartitionId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlElementAttribute("newRoutePartitionName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlChoiceIdentifierAttribute("Item1ElementName")]
    public string Item1;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public Item1ChoiceType6 Item1ElementName;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("aarNeighborhoodName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlElementAttribute("aarNeighborhoodId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlChoiceIdentifierAttribute("Item2ElementName")]
    public string Item2;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public Item2ChoiceType3 Item2ElementName;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
    public XCallForwardInfo callForwardAll;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
    public XCallForwardInfo callForwardBusy;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
    public XCallForwardInfo callForwardBusyInt;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
    public XCallForwardInfo callForwardNoAnswer;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
    public XCallForwardInfo callForwardNoAnswerInt;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
    public XCallForwardInfo callForwardNoCoverage;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
    public XCallForwardInfo callForwardNoCoverageInt;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public XCallForwardInfo callForwardOnFailure;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public XCallForwardInfo callForwardAlternateParty;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("callPickupGroupName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlElementAttribute("callPickupGroupId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlChoiceIdentifierAttribute("Item3ElementName")]
    public string Item3;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public Item3ChoiceType2 Item3ElementName;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public XAutoAnswer autoAnswer;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool autoAnswerSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="nonNegativeInteger")]
    public string networkHoldMOHAudioSourceId;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="nonNegativeInteger")]
    public string userHoldMOHAudioSourceId;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
    public string alertingName;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("shareLineAppearanceCSSId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlElementAttribute("shareLineAppearanceCSSName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlChoiceIdentifierAttribute("Item4ElementName")]
    public string Item4;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public Item4ChoiceType2 Item4ElementName;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("voiceMailProfileId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlElementAttribute("voiceMailProfileName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlChoiceIdentifierAttribute("Item5ElementName")]
    public string Item5;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public Item5ChoiceType2 Item5ElementName;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public XPatternPrecedence patternPrecedence;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool patternPrecedenceSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public XReleaseCauseValue releaseCause;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool releaseCauseSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public System.UInt64 sequence;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool sequenceSpecified;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
public enum ItemChoiceType26 {
    
    /// <remarks/>
    routePartitionId,
    
    /// <remarks/>
    routePartitionName,
    
    /// <remarks/>
    uuid,
    
    /// <remarks/>
    pattern,
    
    /// <remarks/>
    routeFilterId,
    
    /// <remarks/>
    routeFilterName,
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
public enum Item1ChoiceType6 {
    
    /// <remarks/>
    newRoutePartitionId,
    
    /// <remarks/>
    newRoutePartitionName,
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
public enum Item2ChoiceType3 {
    
    /// <remarks/>
    aarNeighborhoodName,
    
    /// <remarks/>
    aarNeighborhoodId,
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
public enum Item3ChoiceType2 {
    
    /// <remarks/>
    callPickupGroupName,
    
    /// <remarks/>
    callPickupGroupId,
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
public enum Item4ChoiceType2 {
    
    /// <remarks/>
    shareLineAppearanceCSSId,
    
    /// <remarks/>
    shareLineAppearanceCSSName,
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
public enum Item5ChoiceType2 {
    
    /// <remarks/>
    voiceMailProfileId,
    
    /// <remarks/>
    voiceMailProfileName,
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
public class UpdateRouteGroupReq {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("name", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlElementAttribute("uuid", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")]
    public string Item;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public ItemChoiceType24 ItemElementName;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string newName;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlArrayItemAttribute("member", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
    public XRouteGroupMember[] members;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public System.UInt64 sequence;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool sequenceSpecified;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
public enum ItemChoiceType24 {
    
    /// <remarks/>
    name,
    
    /// <remarks/>
    uuid,
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
public class AddHuntPilotReq {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public XNPHuntPilot newPattern;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public System.UInt64 sequence;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool sequenceSpecified;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
public class AddMediaResourceListReq {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public XMediaResourceList mediaResourceList;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public System.UInt64 sequence;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool sequenceSpecified;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
public class ListRoutePlanByTypeReq {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public XPatternUsage usage;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public System.UInt64 sequence;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool sequenceSpecified;
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
public enum ItemChoiceType3 {
    
    /// <remarks/>
    phoneId,
    
    /// <remarks/>
    phoneName,
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
public enum ItemChoiceType4 {
    
    /// <remarks/>
    name,
    
    /// <remarks/>
    uuid,
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
public enum Item1ChoiceType1 {
    
    /// <remarks/>
    callingSearchSpaceId,
    
    /// <remarks/>
    callingSearchSpaceName,
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
public enum Item2ChoiceType {
    
    /// <remarks/>
    devicePoolName,
    
    /// <remarks/>
    devicePoolId,
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
public enum Item3ChoiceType {
    
    /// <remarks/>
    locationName,
    
    /// <remarks/>
    locationId,
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
public enum Item4ChoiceType {
    
    /// <remarks/>
    mediaResourceListId,
    
    /// <remarks/>
    mediaResourceListName,
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
public enum Item5ChoiceType {
    
    /// <remarks/>
    automatedAlternateRoutingCSSId,
    
    /// <remarks/>
    automatedAlternateRoutingCSSName,
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
public enum Item6ChoiceType {
    
    /// <remarks/>
    aarNeighborhoodName,
    
    /// <remarks/>
    aarNeighborhoodId,
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
public enum Item7ChoiceType {
    
    /// <remarks/>
    phoneTemplateId,
    
    /// <remarks/>
    phoneTemplateName,
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
public enum Item8ChoiceType1 {
    
    /// <remarks/>
    softkeyTemplateName,
    
    /// <remarks/>
    softkeyTemplateId,
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
public enum Item9ChoiceType {
    
    /// <remarks/>
    defaultProfileId,
    
    /// <remarks/>
    defaultProfileName,
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
public enum ItemChoiceType5 {
    
    /// <remarks/>
    phoneId,
    
    /// <remarks/>
    phoneName,
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
public enum ItemChoiceType6 {
    
    /// <remarks/>
    deviceId,
    
    /// <remarks/>
    deviceName,
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
public enum Item1ChoiceType2 {
    
    /// <remarks/>
    profileName,
    
    /// <remarks/>
    profileId,
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
public enum ItemChoiceType7 {
    
    /// <remarks/>
    deviceId,
    
    /// <remarks/>
    deviceName,
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
public enum ItemChoiceType8 {
    
    /// <remarks/>
    deviceId,
    
    /// <remarks/>
    deviceName,
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
public enum ItemChoiceType9 {
    
    /// <remarks/>
    routePartitionId,
    
    /// <remarks/>
    routePartitionName,
    
    /// <remarks/>
    uuid,
    
    /// <remarks/>
    pattern,
    
    /// <remarks/>
    routeFilterId,
    
    /// <remarks/>
    routeFilterName,
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
public enum ItemChoiceType10 {
    
    /// <remarks/>
    routePartitionId,
    
    /// <remarks/>
    routePartitionName,
    
    /// <remarks/>
    uuid,
    
    /// <remarks/>
    pattern,
    
    /// <remarks/>
    routeFilterId,
    
    /// <remarks/>
    routeFilterName,
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
public enum ItemChoiceType11 {
    
    /// <remarks/>
    routePartitionId,
    
    /// <remarks/>
    routePartitionName,
    
    /// <remarks/>
    uuid,
    
    /// <remarks/>
    pattern,
    
    /// <remarks/>
    routeFilterId,
    
    /// <remarks/>
    routeFilterName,
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
public enum Item1ChoiceType3 {
    
    /// <remarks/>
    newRoutePartitionId,
    
    /// <remarks/>
    newRoutePartitionName,
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
public enum Item2ChoiceType1 {
    
    /// <remarks/>
    aarNeighborhoodName,
    
    /// <remarks/>
    aarNeighborhoodId,
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
public enum Item3ChoiceType1 {
    
    /// <remarks/>
    callPickupGroupName,
    
    /// <remarks/>
    callPickupGroupId,
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
public enum Item4ChoiceType1 {
    
    /// <remarks/>
    shareLineAppearanceCSSId,
    
    /// <remarks/>
    shareLineAppearanceCSSName,
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
public enum Item5ChoiceType1 {
    
    /// <remarks/>
    voiceMailProfileId,
    
    /// <remarks/>
    voiceMailProfileName,
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
public enum ItemChoiceType12 {
    
    /// <remarks/>
    routePartitionId,
    
    /// <remarks/>
    routePartitionName,
    
    /// <remarks/>
    uuid,
    
    /// <remarks/>
    pattern,
    
    /// <remarks/>
    routeFilterId,
    
    /// <remarks/>
    routeFilterName,
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
public enum ItemChoiceType13 {
    
    /// <remarks/>
    profileName,
    
    /// <remarks/>
    profileId,
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
public enum ItemChoiceType14 {
    
    /// <remarks/>
    name,
    
    /// <remarks/>
    uuid,
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
public enum Item1ChoiceType4 {
    
    /// <remarks/>
    phoneTemplateId,
    
    /// <remarks/>
    phoneTemplateName,
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
public enum Item2ChoiceType2 {
    
    /// <remarks/>
    softkeyTemplateName,
    
    /// <remarks/>
    softkeyTemplateId,
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
public enum ItemChoiceType15 {
    
    /// <remarks/>
    profileName,
    
    /// <remarks/>
    profileId,
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
public enum ItemChoiceType16 {
    
    /// <remarks/>
    name,
    
    /// <remarks/>
    uuid,
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
public enum Item1ChoiceType5 {
    
    /// <remarks/>
    newTimeScheduleName,
    
    /// <remarks/>
    newTimeScheduleId,
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
public enum ItemChoiceType17 {
    
    /// <remarks/>
    partitionId,
    
    /// <remarks/>
    partitionName,
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
public enum ItemChoiceType18 {
    
    /// <remarks/>
    partitionId,
    
    /// <remarks/>
    partitionName,
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
public enum ItemChoiceType19 {
    
    /// <remarks/>
    name,
    
    /// <remarks/>
    uuid,
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
public enum ItemChoiceType20 {
    
    /// <remarks/>
    name,
    
    /// <remarks/>
    uuid,
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
public enum ItemChoiceType21 {
    
    /// <remarks/>
    name,
    
    /// <remarks/>
    uuid,
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
public enum ItemChoiceType22 {
    
    /// <remarks/>
    routePartitionId,
    
    /// <remarks/>
    routePartitionName,
    
    /// <remarks/>
    uuid,
    
    /// <remarks/>
    pattern,
    
    /// <remarks/>
    routeFilterId,
    
    /// <remarks/>
    routeFilterName,
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
public enum ItemChoiceType110 {
    
    /// <remarks/>
    routePartitionId,
    
    /// <remarks/>
    routePartitionName,
    
    /// <remarks/>
    uuid,
    
    /// <remarks/>
    pattern,
    
    /// <remarks/>
    routeFilterId,
    
    /// <remarks/>
    routeFilterName,
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
public enum ItemChoiceType111 {
    
    /// <remarks/>
    routePartitionId,
    
    /// <remarks/>
    routePartitionName,
    
    /// <remarks/>
    uuid,
    
    /// <remarks/>
    pattern,
    
    /// <remarks/>
    routeFilterId,
    
    /// <remarks/>
    routeFilterName,
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
public enum Item1ChoiceType26 {
    
    /// <remarks/>
    routePartitionId,
    
    /// <remarks/>
    routePartitionName,
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
public enum Item2ChoiceType18 {
    
    /// <remarks/>
    dialPlanName,
    
    /// <remarks/>
    dialPlanId,
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
public enum Item3ChoiceType15 {
    
    /// <remarks/>
    digitDiscardInstructionName,
    
    /// <remarks/>
    digitDiscardInstructionId,
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
public enum Item4ChoiceType14 {
    
    /// <remarks/>
    routeFilterId,
    
    /// <remarks/>
    routeFilterName,
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
public enum Item5ChoiceType12 {
    
    /// <remarks/>
    callingSearchSpaceId,
    
    /// <remarks/>
    callingSearchSpaceName,
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
public enum ItemChoiceType112 {
    
    /// <remarks/>
    routePartitionId,
    
    /// <remarks/>
    routePartitionName,
    
    /// <remarks/>
    uuid,
    
    /// <remarks/>
    pattern,
    
    /// <remarks/>
    routeFilterId,
    
    /// <remarks/>
    routeFilterName,
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
public enum ItemChoiceType113 {
    
    /// <remarks/>
    routePartitionId,
    
    /// <remarks/>
    routePartitionName,
    
    /// <remarks/>
    uuid,
    
    /// <remarks/>
    pattern,
    
    /// <remarks/>
    routeFilterId,
    
    /// <remarks/>
    routeFilterName,
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
public enum ItemChoiceType114 {
    
    /// <remarks/>
    routePartitionId,
    
    /// <remarks/>
    routePartitionName,
    
    /// <remarks/>
    uuid,
    
    /// <remarks/>
    pattern,
    
    /// <remarks/>
    routeFilterId,
    
    /// <remarks/>
    routeFilterName,
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
public enum Item1ChoiceType27 {
    
    /// <remarks/>
    routePartitionId,
    
    /// <remarks/>
    routePartitionName,
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
public enum Item2ChoiceType19 {
    
    /// <remarks/>
    dialPlanName,
    
    /// <remarks/>
    dialPlanId,
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
public enum Item3ChoiceType16 {
    
    /// <remarks/>
    digitDiscardInstructionName,
    
    /// <remarks/>
    digitDiscardInstructionId,
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
public enum Item4ChoiceType15 {
    
    /// <remarks/>
    routeFilterId,
    
    /// <remarks/>
    routeFilterName,
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
public enum ItemChoiceType115 {
    
    /// <remarks/>
    name,
    
    /// <remarks/>
    uuid,
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
public enum ItemChoiceType116 {
    
    /// <remarks/>
    name,
    
    /// <remarks/>
    uuid,
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
public enum ItemChoiceType117 {
    
    /// <remarks/>
    name,
    
    /// <remarks/>
    uuid,
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
public enum ItemChoiceType118 {
    
    /// <remarks/>
    name,
    
    /// <remarks/>
    uuid,
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
public enum ItemChoiceType119 {
    
    /// <remarks/>
    name,
    
    /// <remarks/>
    uuid,
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
public enum ItemChoiceType120 {
    
    /// <remarks/>
    name,
    
    /// <remarks/>
    uuid,
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
public enum ItemChoiceType121 {
    
    /// <remarks/>
    name,
    
    /// <remarks/>
    uuid,
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
public enum Item1ChoiceType28 {
    
    /// <remarks/>
    callingSearchSpaceId,
    
    /// <remarks/>
    callingSearchSpaceName,
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
public enum Item2ChoiceType20 {
    
    /// <remarks/>
    devicePoolName,
    
    /// <remarks/>
    devicePoolId,
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
public enum Item3ChoiceType17 {
    
    /// <remarks/>
    locationName,
    
    /// <remarks/>
    locationId,
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
public enum ItemChoiceType122 {
    
    /// <remarks/>
    name,
    
    /// <remarks/>
    uuid,
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
public enum ItemChoiceType123 {
    
    /// <remarks/>
    name,
    
    /// <remarks/>
    uuid,
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
public enum ItemChoiceType124 {
    
    /// <remarks/>
    name,
    
    /// <remarks/>
    uuid,
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
public enum ItemChoiceType125 {
    
    /// <remarks/>
    name,
    
    /// <remarks/>
    uuid,
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
public enum ItemChoiceType126 {
    
    /// <remarks/>
    name,
    
    /// <remarks/>
    uuid,
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
public enum ItemChoiceType127 {
    
    /// <remarks/>
    name,
    
    /// <remarks/>
    uuid,
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
public enum ItemChoiceType128 {
    
    /// <remarks/>
    name,
    
    /// <remarks/>
    dialPlanUuid,
    
    /// <remarks/>
    uuid,
    
    /// <remarks/>
    dialPlanName,
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
public enum ItemChoiceType129 {
    
    /// <remarks/>
    name,
    
    /// <remarks/>
    uuid,
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
public enum ItemChoiceType130 {
    
    /// <remarks/>
    routePartitionId,
    
    /// <remarks/>
    routePartitionName,
    
    /// <remarks/>
    uuid,
    
    /// <remarks/>
    pattern,
    
    /// <remarks/>
    routeFilterId,
    
    /// <remarks/>
    routeFilterName,
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
public enum Item1ChoiceType29 {
    
    /// <remarks/>
    newRoutePartitionId,
    
    /// <remarks/>
    newRoutePartitionName,
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
public enum Item2ChoiceType21 {
    
    /// <remarks/>
    callManagerName,
    
    /// <remarks/>
    callManagerId,
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
public enum ItemChoiceType131 {
    
    /// <remarks/>
    routePartitionId,
    
    /// <remarks/>
    routePartitionName,
    
    /// <remarks/>
    uuid,
    
    /// <remarks/>
    pattern,
    
    /// <remarks/>
    routeFilterId,
    
    /// <remarks/>
    routeFilterName,
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
public enum ItemChoiceType132 {
    
    /// <remarks/>
    routePartitionId,
    
    /// <remarks/>
    routePartitionName,
    
    /// <remarks/>
    uuid,
    
    /// <remarks/>
    pattern,
    
    /// <remarks/>
    routeFilterId,
    
    /// <remarks/>
    routeFilterName,
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
public enum ItemChoiceType133 {
    
    /// <remarks/>
    routePartitionId,
    
    /// <remarks/>
    name,
    
    /// <remarks/>
    routePartitionName,
    
    /// <remarks/>
    uuid,
    
    /// <remarks/>
    pattern,
    
    /// <remarks/>
    routeFilterId,
    
    /// <remarks/>
    routeFilterName,
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
public enum Item1ChoiceType30 {
    
    /// <remarks/>
    newRoutePartitionId,
    
    /// <remarks/>
    newRoutePartitionName,
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
public enum ItemChoiceType134 {
    
    /// <remarks/>
    routePartitionId,
    
    /// <remarks/>
    name,
    
    /// <remarks/>
    routePartitionName,
    
    /// <remarks/>
    uuid,
    
    /// <remarks/>
    pattern,
    
    /// <remarks/>
    routeFilterId,
    
    /// <remarks/>
    routeFilterName,
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
public enum ItemChoiceType135 {
    
    /// <remarks/>
    routePartitionId,
    
    /// <remarks/>
    name,
    
    /// <remarks/>
    routePartitionName,
    
    /// <remarks/>
    uuid,
    
    /// <remarks/>
    pattern,
    
    /// <remarks/>
    routeFilterId,
    
    /// <remarks/>
    routeFilterName,
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
public enum ItemChoiceType136 {
    
    /// <remarks/>
    name,
    
    /// <remarks/>
    uuid,
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
public enum Item1ChoiceType31 {
    
    /// <remarks/>
    dialPlanName,
    
    /// <remarks/>
    dialPlanId,
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
public enum ItemChoiceType137 {
    
    /// <remarks/>
    name,
    
    /// <remarks/>
    dialPlanUuid,
    
    /// <remarks/>
    uuid,
    
    /// <remarks/>
    dialPlanName,
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
public enum ItemChoiceType138 {
    
    /// <remarks/>
    name,
    
    /// <remarks/>
    uuid,
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
public enum ItemChoiceType139 {
    
    /// <remarks/>
    phoneId,
    
    /// <remarks/>
    phoneName,
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
public enum ItemChoiceType140 {
    
    /// <remarks/>
    name,
    
    /// <remarks/>
    uuid,
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
public enum Item1ChoiceType32 {
    
    /// <remarks/>
    autoSearchSpaceName,
    
    /// <remarks/>
    autoSearchSpaceId,
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
public enum Item2ChoiceType22 {
    
    /// <remarks/>
    dateTimeSettingId,
    
    /// <remarks/>
    dateTimeSettingName,
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
public enum Item3ChoiceType18 {
    
    /// <remarks/>
    callManagerGroupId,
    
    /// <remarks/>
    callManagerGroupName,
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
public enum Item4ChoiceType16 {
    
    /// <remarks/>
    mediaResourceListId,
    
    /// <remarks/>
    mediaResourceListName,
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
public enum Item5ChoiceType13 {
    
    /// <remarks/>
    regionId,
    
    /// <remarks/>
    regionName,
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
public enum Item6ChoiceType9 {
    
    /// <remarks/>
    softkeyTemplateName,
    
    /// <remarks/>
    softkeyTemplateId,
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
public enum Item7ChoiceType3 {
    
    /// <remarks/>
    srstName,
    
    /// <remarks/>
    srstInfoId,
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
public enum ItemChoiceType141 {
    
    /// <remarks/>
    name,
    
    /// <remarks/>
    uuid,
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
public enum ItemChoiceType142 {
    
    /// <remarks/>
    name,
    
    /// <remarks/>
    uuid,
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
public enum ItemChoiceType143 {
    
    /// <remarks/>
    name,
    
    /// <remarks/>
    uuid,
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
public enum ItemChoiceType144 {
    
    /// <remarks/>
    name,
    
    /// <remarks/>
    uuid,
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
public enum ItemChoiceType145 {
    
    /// <remarks/>
    name,
    
    /// <remarks/>
    uuid,
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
public enum ItemChoiceType146 {
    
    /// <remarks/>
    name,
    
    /// <remarks/>
    uuid,
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
public enum Item1ChoiceType33 {
    
    /// <remarks/>
    callingSearchSpaceId,
    
    /// <remarks/>
    callingSearchSpaceName,
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
public enum Item2ChoiceType23 {
    
    /// <remarks/>
    devicePoolName,
    
    /// <remarks/>
    devicePoolId,
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
public enum Item3ChoiceType19 {
    
    /// <remarks/>
    locationName,
    
    /// <remarks/>
    locationId,
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
public enum Item4ChoiceType17 {
    
    /// <remarks/>
    mediaResourceListId,
    
    /// <remarks/>
    mediaResourceListName,
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
public enum Item5ChoiceType14 {
    
    /// <remarks/>
    automatedAlternateRoutingCSSId,
    
    /// <remarks/>
    automatedAlternateRoutingCSSName,
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
public enum Item6ChoiceType10 {
    
    /// <remarks/>
    aarNeighborhoodName,
    
    /// <remarks/>
    aarNeighborhoodId,
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
public enum ItemChoiceType147 {
    
    /// <remarks/>
    name,
    
    /// <remarks/>
    uuid,
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
public enum ItemChoiceType148 {
    
    /// <remarks/>
    name,
    
    /// <remarks/>
    uuid,
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
public enum ItemChoiceType149 {
    
    /// <remarks/>
    name,
    
    /// <remarks/>
    uuid,
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
public enum Item1ChoiceType34 {
    
    /// <remarks/>
    callingSearchSpaceId,
    
    /// <remarks/>
    callingSearchSpaceName,
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
public enum Item2ChoiceType24 {
    
    /// <remarks/>
    devicePoolName,
    
    /// <remarks/>
    devicePoolId,
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
public enum Item3ChoiceType20 {
    
    /// <remarks/>
    locationName,
    
    /// <remarks/>
    locationId,
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
public enum Item4ChoiceType18 {
    
    /// <remarks/>
    mediaResourceListId,
    
    /// <remarks/>
    mediaResourceListName,
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
public enum Item5ChoiceType15 {
    
    /// <remarks/>
    automatedAlternateRoutingCSSId,
    
    /// <remarks/>
    automatedAlternateRoutingCSSName,
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
public enum Item6ChoiceType11 {
    
    /// <remarks/>
    aarNeighborhoodName,
    
    /// <remarks/>
    aarNeighborhoodId,
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
public enum ItemChoiceType150 {
    
    /// <remarks/>
    name,
    
    /// <remarks/>
    uuid,
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
public enum ItemChoiceType151 {
    
    /// <remarks/>
    name,
    
    /// <remarks/>
    uuid,
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
public enum ItemChoiceType152 {
    
    /// <remarks/>
    name,
    
    /// <remarks/>
    uuid,
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
public enum Item1ChoiceType35 {
    
    /// <remarks/>
    dialPlanName,
    
    /// <remarks/>
    dialPlanId,
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
public enum ItemChoiceType153 {
    
    /// <remarks/>
    name,
    
    /// <remarks/>
    uuid,
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
public enum ItemChoiceType154 {
    
    /// <remarks/>
    name,
    
    /// <remarks/>
    uuid,
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
public enum ItemChoiceType155 {
    
    /// <remarks/>
    name,
    
    /// <remarks/>
    uuid,
    
    /// <remarks/>
    processNodeId,
    
    /// <remarks/>
    processNodeName,
    
    /// <remarks/>
    service,
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
public enum ItemChoiceType156 {
    
    /// <remarks/>
    name,
    
    /// <remarks/>
    uuid,
    
    /// <remarks/>
    processNodeId,
    
    /// <remarks/>
    processNodeName,
    
    /// <remarks/>
    service,
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
public enum ItemChoiceType157 {
    
    /// <remarks/>
    name,
    
    /// <remarks/>
    uuid,
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
public enum ItemChoiceType158 {
    
    /// <remarks/>
    name,
    
    /// <remarks/>
    uuid,
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
public enum ItemChoiceType159 {
    
    /// <remarks/>
    name,
    
    /// <remarks/>
    uuid,
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
public enum ItemChoiceType160 {
    
    /// <remarks/>
    name,
    
    /// <remarks/>
    uuid,
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
public enum ItemChoiceType161 {
    
    /// <remarks/>
    name,
    
    /// <remarks/>
    uuid,
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
public enum ItemChoiceType162 {
    
    /// <remarks/>
    uuid,
    
    /// <remarks/>
    domainName,
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
public enum ItemChoiceType163 {
    
    /// <remarks/>
    uuid,
    
    /// <remarks/>
    domainName,
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
public enum ItemChoiceType164 {
    
    /// <remarks/>
    uuid,
    
    /// <remarks/>
    domainName,
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
public enum ItemChoiceType165 {
    
    /// <remarks/>
    uuid,
    
    /// <remarks/>
    domainName,
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
public enum ItemChoiceType166 {
    
    /// <remarks/>
    uuid,
    
    /// <remarks/>
    domainName,
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
public enum ItemChoiceType167 {
    
    /// <remarks/>
    uuid,
    
    /// <remarks/>
    domainName,
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
public enum ItemChoiceType168 {
    
    /// <remarks/>
    uuid,
    
    /// <remarks/>
    domainName,
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
public enum ItemChoiceType169 {
    
    /// <remarks/>
    uuid,
    
    /// <remarks/>
    domainName,
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
public enum ItemChoiceType170 {
    
    /// <remarks/>
    uuid,
    
    /// <remarks/>
    domainName,
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
public enum ItemChoiceType171 {
    
    /// <remarks/>
    name,
    
    /// <remarks/>
    uuid,
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
public enum ItemChoiceType172 {
    
    /// <remarks/>
    name,
    
    /// <remarks/>
    uuid,
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
public enum ItemChoiceType173 {
    
    /// <remarks/>
    name,
    
    /// <remarks/>
    uuid,
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
public enum ItemChoiceType174 {
    
    /// <remarks/>
    name,
    
    /// <remarks/>
    uuid,
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
public enum ItemChoiceType175 {
    
    /// <remarks/>
    name,
    
    /// <remarks/>
    uuid,
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
public enum ItemChoiceType176 {
    
    /// <remarks/>
    name,
    
    /// <remarks/>
    uuid,
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
public enum ItemChoiceType177 {
    
    /// <remarks/>
    uuid,
    
    /// <remarks/>
    processNodeId,
    
    /// <remarks/>
    processNodeName,
    
    /// <remarks/>
    service,
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
public enum ItemChoiceType178 {
    
    /// <remarks/>
    uuid,
    
    /// <remarks/>
    processNodeId,
    
    /// <remarks/>
    processNodeName,
    
    /// <remarks/>
    service,
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
public enum ItemChoiceType179 {
    
    /// <remarks/>
    sourceId,
    
    /// <remarks/>
    uuid,
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
public enum ItemChoiceType180 {
    
    /// <remarks/>
    sourceId,
    
    /// <remarks/>
    uuid,
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
public enum ItemChoiceType181 {
    
    /// <remarks/>
    sourceId,
    
    /// <remarks/>
    uuid,
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
public enum ItemChoiceType182 {
    
    /// <remarks/>
    name,
    
    /// <remarks/>
    uuid,
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
public enum ItemChoiceType183 {
    
    /// <remarks/>
    name,
    
    /// <remarks/>
    uuid,
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
public enum ItemChoiceType184 {
    
    /// <remarks/>
    name,
    
    /// <remarks/>
    uuid,
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
public enum ItemChoiceType185 {
    
    /// <remarks/>
    name,
    
    /// <remarks/>
    uuid,
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
public enum ItemChoiceType186 {
    
    /// <remarks/>
    name,
    
    /// <remarks/>
    uuid,
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
public enum ItemChoiceType187 {
    
    /// <remarks/>
    name,
    
    /// <remarks/>
    uuid,
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
public enum ItemChoiceType188 {
    
    /// <remarks/>
    name,
    
    /// <remarks/>
    uuid,
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
public enum ItemChoiceType189 {
    
    /// <remarks/>
    name,
    
    /// <remarks/>
    uuid,
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
public enum ItemChoiceType190 {
    
    /// <remarks/>
    name,
    
    /// <remarks/>
    uuid,
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
public enum ItemChoiceType191 {
    
    /// <remarks/>
    name,
    
    /// <remarks/>
    uuid,
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
public enum ItemChoiceType192 {
    
    /// <remarks/>
    name,
    
    /// <remarks/>
    uuid,
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
public enum ItemChoiceType193 {
    
    /// <remarks/>
    name,
    
    /// <remarks/>
    uuid,
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
public enum ItemChoiceType194 {
    
    /// <remarks/>
    name,
    
    /// <remarks/>
    uuid,
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
public enum ItemChoiceType195 {
    
    /// <remarks/>
    name,
    
    /// <remarks/>
    uuid,
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
public enum ItemChoiceType196 {
    
    /// <remarks/>
    name,
    
    /// <remarks/>
    uuid,
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
public enum ItemChoiceType197 {
    
    /// <remarks/>
    name,
    
    /// <remarks/>
    uuid,
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
public enum Item1ChoiceType36 {
    
    /// <remarks/>
    callingSearchSpaceId,
    
    /// <remarks/>
    callingSearchSpaceName,
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
public enum Item2ChoiceType25 {
    
    /// <remarks/>
    devicePoolName,
    
    /// <remarks/>
    devicePoolId,
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
public enum Item3ChoiceType21 {
    
    /// <remarks/>
    locationName,
    
    /// <remarks/>
    locationId,
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
public enum Item4ChoiceType19 {
    
    /// <remarks/>
    mediaResourceListId,
    
    /// <remarks/>
    mediaResourceListName,
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
public enum Item5ChoiceType16 {
    
    /// <remarks/>
    automatedAlternateRoutingCSSId,
    
    /// <remarks/>
    automatedAlternateRoutingCSSName,
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
public enum Item6ChoiceType12 {
    
    /// <remarks/>
    aarNeighborhoodName,
    
    /// <remarks/>
    aarNeighborhoodId,
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
public enum ItemChoiceType198 {
    
    /// <remarks/>
    name,
    
    /// <remarks/>
    uuid,
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
public enum Item1ChoiceType37 {
    
    /// <remarks/>
    callingSearchSpaceId,
    
    /// <remarks/>
    callingSearchSpaceName,
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
public enum Item2ChoiceType26 {
    
    /// <remarks/>
    devicePoolName,
    
    /// <remarks/>
    devicePoolId,
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
public enum Item3ChoiceType22 {
    
    /// <remarks/>
    locationName,
    
    /// <remarks/>
    locationId,
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
public enum Item4ChoiceType20 {
    
    /// <remarks/>
    mediaResourceListId,
    
    /// <remarks/>
    mediaResourceListName,
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
public enum Item5ChoiceType17 {
    
    /// <remarks/>
    automatedAlternateRoutingCSSId,
    
    /// <remarks/>
    automatedAlternateRoutingCSSName,
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
public enum Item6ChoiceType13 {
    
    /// <remarks/>
    aarNeighborhoodName,
    
    /// <remarks/>
    aarNeighborhoodId,
}
