//------------------------------------------------------------------------------
// <autogenerated>
//     This code was generated by a tool.
//     Runtime Version: 1.1.4322.2032
//
//     Changes to this file may cause incorrect behavior and will be lost if 
//     the code is regenerated.
// </autogenerated>
//------------------------------------------------------------------------------

// 
// InfoVersionComment, WseWsdl2, Version=2.0.3.0, Culture=neutral, PublicKeyToken=26ba029e599ec4f8, RunTime Version: 1.1.4322.2032
// 
using System;
using System.Xml;
using Microsoft.Web.Services2;
using Microsoft.Web.Services2.Addressing;
using Microsoft.Web.Services2.Messaging;
using System.Xml.Serialization;

namespace Metreos.AxlSoap413
{

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("addPhone", Namespace="http://www.cisco.com/AXL/API/1.0", IsNullable=false)]
    public class AddPhoneReq 
    {
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XIPPhone newPhone;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public System.UInt64 sequence;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool sequenceSpecified;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")] // was http://www.cisco.com/AXL/1.0 ...
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(XPhoneProfile))]
    public class XIPPhone : XPhone 
    {
    
        // MSC... this must be false, not true!  If their parser encounters the presence of the addOnModules element, 
        // it will complain (even if the nil=true attr is present)
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]        
        [System.Xml.Serialization.XmlArrayItemAttribute("addOnModule", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public XAddOnModule[] addOnModules;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XUserLocale userLocale;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool userLocaleSpecified;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XCountry networkLocale;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool networkLocaleSpecified;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XDeviceSecurityMode deviceSecurityMode;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool deviceSecurityModeSpecified;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="nonNegativeInteger", IsNullable=true)]
        public string idleTimeout;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="anyURI", IsNullable=true)]
        public string authenticationURL;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="anyURI", IsNullable=true)]
        public string directoryURL;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="anyURI", IsNullable=true)]
        public string idleURL;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="anyURI", IsNullable=true)]
        public string informationURL;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="anyURI", IsNullable=true)]
        public string messagesURL;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="anyURI", IsNullable=true)]
        public string proxyServerURL;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="anyURI", IsNullable=true)]
        public string servicesURL;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute("service", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public XSubscribedService[] services;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("softkeyTemplate", typeof(XSoftkeyTemplate), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("softkeyTemplateName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public object Item9;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string loginUserId;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("defaultProfileName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("defaultProfile", typeof(XProfile), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public object Item10;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool enableExtensionMobility;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("currentProfile", typeof(XProfile), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("currentProfileName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public object Item11;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="nonNegativeInteger")]
        public string loginTime;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="nonNegativeInteger")]
        public string loginDuration;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XStatus builtInBridgeStatus;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool builtInBridgeStatusSpecified;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XStatus callInfoPrivacyStatus;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool callInfoPrivacyStatusSpecified;
    
        /// <remarks/>
        // When adding a DeviceProfile, having nillable=true causes  CCM to fail.  AddPhone still works after this change.
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string ownerUserId;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(false)]
        public bool ignorePresentationIndicators = false;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XPacketCaptureMode packetCaptureMode;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool packetCaptureModeSpecified;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="positiveInteger")]
        public string packetCaptureDuration;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XCertificateOperation certificateOperation;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool certificateOperationSpecified;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XAuthenticationMode authenticationMode;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool authenticationModeSpecified;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="Name")]
        public string authenticationString;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XCertificateStatus certificateStatus;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool certificateStatusSpecified;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XKeySize keySize;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool keySizeSpecified;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="Name")]
        public string upgradeFinishTime;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XCertificate certificate;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool certificateSpecified;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
    public class XAddOnModule 
    {
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XLoadInformation loadInformation;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XModel model;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string uuid;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute(DataType="nonNegativeInteger")]
        public string index;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
    public class XLoadInformation 
    {
    
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool special;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool specialSpecified;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string Value;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
    public class XSIPTrunkSigDigits 
    {
    
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool enable;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute(DataType="nonNegativeInteger")]
        public string Value;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
    public class XH323PhoneGatekeeperInfo 
    {
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("gatekeeperName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("gatekeeper", typeof(XGatekeeper), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public object Item;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string e164;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string technologyPrefix;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string zone;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
    public class XGatekeeper 
    {
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string name;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string description;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="nonNegativeInteger")]
        public string rrqTimeToLive;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="nonNegativeInteger")]
        public string retryTimeout;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool enableDevice;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool enableDeviceSpecified;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string uuid;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
    public class XH323TrunkRemoteServerInfo 
    {
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string server1;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string server2;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string server3;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
    public class XH323TrunkGatekeeperInfo 
    {
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("gatekeeperName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("gatekeeper", typeof(XGatekeeper), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public object Item;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XTerminal terminal;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string technologyPrefix;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string zone;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
    public enum XTerminal 
    {
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("-- Not Selected --")]
        NotSelected,
    
        /// <remarks/>
        Terminal,
    
        /// <remarks/>
        Gateway,
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
    public class XH323GatewaySignificantDigits 
    {
    
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool enable;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute(DataType="nonNegativeInteger")]
        public string Value;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
    public class XTelecasterService 
    {
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string name;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string description;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="anyURI")]
        public string templateURL;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string uuid;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
    public class XSubscribedService 
    {
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("telecasterServiceName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("telecasterService", typeof(XTelecasterService), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public object Item;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string name;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="anyURI")]
        public string url;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="nonNegativeInteger")]
        public string urlButtonIndex;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string urlLabel;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string uuid;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
    public class XSpeeddial 
    {
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string dirn;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string label;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute(DataType="positiveInteger")]
        public string index;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
    public class XButton 
    {
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XFeature feature;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string label;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="integer")]
        public string paramN1;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="integer")]
        public string paramN2;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string paramT1;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string paramT2;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string uuid;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute(DataType="positiveInteger")]
        public string index;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
    public enum XFeature 
    {
    
        /// <remarks/>
        Redial,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Speed Dial")]
        SpeedDial,
    
        /// <remarks/>
        Hold,
    
        /// <remarks/>
        Transfer,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Forward All")]
        ForwardAll,
    
        /// <remarks/>
        Display,
    
        /// <remarks/>
        Line,
    
        /// <remarks/>
        Chat,
    
        /// <remarks/>
        Whiteboard,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Application Sharing")]
        ApplicationSharing,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("File Transfer")]
        FileTransfer,
    
        /// <remarks/>
        Video,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Message Waiting")]
        MessageWaiting,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Answer/Release")]
        AnswerRelease,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Auto Answer")]
        AutoAnswer,
    
        /// <remarks/>
        Settings,
    
        /// <remarks/>
        Privacy,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Service URL")]
        ServiceURL,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Malicious Call Identification")]
        MaliciousCallIdentification,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Meet Me Conference")]
        MeetMeConference,
    
        /// <remarks/>
        Conference,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Call Park")]
        CallPark,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Call Pickup")]
        CallPickup,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Group Call Pickup")]
        GroupCallPickup,
    
        /// <remarks/>
        AEC,
    
        /// <remarks/>
        None,
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
    public class XPhoneTemplate 
    {
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string name;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute("button", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public XButton[] buttons;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XPhoneTemplateUsage usage;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string uuid;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool userModifiable;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool userModifiableSpecified;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool removeAtMigration;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool removeAtMigrationSpecified;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
    public enum XPhoneTemplateUsage 
    {
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Traditional Phone Template")]
        TraditionalPhoneTemplate,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Side Car 14-Buttons")]
        SideCar14Buttons,
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
    public class XPhoneLines 
    {
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("lineId", typeof(XLineId), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("line", typeof(XLine), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("lineLabel", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("lineIdentifier", typeof(XNumplanIdentifier), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public object[] Items;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
    public class XLineId 
    {
    
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute(DataType="nonNegativeInteger")]
        public string index;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute(DataType="nonNegativeInteger")]
        public string ctiid;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string Value;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
    public class XLine 
    {
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string label;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string display;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("dirn", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XNPDirectoryNumber Item;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(XRingSetting.Ring)]
        public XRingSetting ringSetting = XRingSetting.Ring;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(XRingSetting.UseSystemDefault)]
        public XRingSetting consecutiveRingSetting = XRingSetting.UseSystemDefault;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string e164Mask;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="nonNegativeInteger")]
        public string dialPlanWizardId;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XMWLPolicy mwlPolicy;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool mwlPolicySpecified;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="nonNegativeInteger")]
        public string maxNumCalls;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="nonNegativeInteger")]
        public string busyTrigger;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XLineCallInfoDisplay callInfoDisplay;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string uuid;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute(DataType="positiveInteger")]
        public string index;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute(DataType="nonNegativeInteger")]
        public string ctiid;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(XNPMessageWaiting))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(XNPCTIDirectoryNumber))]
    public class XNPDirectoryNumber : XNumPlan 
    {
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("aarNeighborhoodName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("aarNeighborhood", typeof(XAARNeighborhood), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public object Item1;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XCallForwardInfo callForwardAll;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XCallForwardInfo callForwardBusy;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XCallForwardInfo callForwardBusyInt;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XCallForwardInfo callForwardNoAnswer;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XCallForwardInfo callForwardNoAnswerInt;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XCallForwardInfo callForwardNoCoverage;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XCallForwardInfo callForwardNoCoverageInt;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XCallForwardInfo callForwardOnFailure;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XCallForwardInfo callForwardAlternateParty;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("callPickupGroup", typeof(XNPCallPickupGroup), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("callPickupGroupName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public object Item2;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XAutoAnswer autoAnswer;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool autoAnswerSpecified;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="nonNegativeInteger", IsNullable=true)]
        public string networkHoldMOHAudioSourceId;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="nonNegativeInteger", IsNullable=true)]
        public string userHoldMOHAudioSourceId;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string cfaCSSClause;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string alertingName;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("shareLineAppearanceCSS", typeof(XNPDirectoryNumberShareLineAppearanceCSS), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("shareLineAppearanceCSSName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public object Item3;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("voiceMailProfile", typeof(XVoiceMailProfile), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("voiceMailProfileName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public object Item4;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XPatternPrecedence patternPrecedence;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool patternPrecedenceSpecified;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XReleaseCauseValue releaseCause;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool releaseCauseSpecified;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
    public class XAARNeighborhood 
    {
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string name;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string uuid;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
    public class XCallForwardInfo 
    {
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        //Incorrect AXL Schema.  Default is not false.  Default is ignore currently configured
        //[System.ComponentModel.DefaultValueAttribute(false)]
        public bool forwardToVoiceMail;

        [XmlIgnoreAttribute()]
        public bool forwardToVoiceMailSpecified;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("callingSearchSpace", typeof(XCallingSearchSpace), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("callingSearchSpaceName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public object Item;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string destination;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="nonNegativeInteger")]
        public string duration;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(XNPDirectoryNumberShareLineAppearanceCSS))]
    public class XCallingSearchSpace 
    {
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="Name")]
        public string name;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string description;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string clause;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="nonNegativeInteger")]
        public string dialPlanWizardGenId;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute("member", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public XCallingSearchSpaceMember[] members;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string uuid;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
    public class XCallingSearchSpaceMember 
    {
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("routePartition", typeof(XRoutePartition), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("routePartitionId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("routePartitionName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")]
        public object Item;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public ItemChoiceType1 ItemElementName;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute(DataType="positiveInteger")]
        public string index;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
    public class XRoutePartition 
    {
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string name;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string description;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="nonNegativeInteger")]
        public string dialPlanWizardGenId;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("timeScheduleName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("timeScheduleId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")]
        public string Item;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public ItemChoiceType ItemElementName;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool useOriginatingDeviceTimeZone;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool useOriginatingDeviceTimeZoneSpecified;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XTimeZone timeZone;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool timeZoneSpecified;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string uuid;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0", IncludeInSchema=false)]
    public enum ItemChoiceType 
    {
    
        /// <remarks/>
        timeScheduleName,
    
        /// <remarks/>
        timeScheduleId,
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
    public enum XTimeZone 
    {
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Dateline Standard Time")]
        DatelineStandardTime,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Samoa Standard Time")]
        SamoaStandardTime,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Hawaiian Standard Time")]
        HawaiianStandardTime,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Alaskan Standard/Daylight Time")]
        AlaskanStandardDaylightTime,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Pacific Standard/Daylight Time")]
        PacificStandardDaylightTime,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("US Mountain Standard Time")]
        USMountainStandardTime,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Mountain Standard/Daylight Time")]
        MountainStandardDaylightTime,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Central Standard/Daylight Time")]
        CentralStandardDaylightTime,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Mexico Standard/Daylight Time")]
        MexicoStandardDaylightTime,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Canada Central Standard Time")]
        CanadaCentralStandardTime,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("SA Pacific Standard Time")]
        SAPacificStandardTime,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Eastern Standard/Daylight Time")]
        EasternStandardDaylightTime,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("US Eastern Standard Time")]
        USEasternStandardTime,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Atlantic Standard/Daylight Time")]
        AtlanticStandardDaylightTime,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("SA Western Standard Time")]
        SAWesternStandardTime,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Newfoundland Standard/Daylight Time")]
        NewfoundlandStandardDaylightTime,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("E. South America Standard/Daylight Time")]
        ESouthAmericaStandardDaylightTime,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("SA Eastern Standard Time")]
        SAEasternStandardTime,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Mid-Atlantic Standard/Daylight Time")]
        MidAtlanticStandardDaylightTime,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Azores Standard/Daylight Time")]
        AzoresStandardDaylightTime,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("GMT Standard/Daylight Time")]
        GMTStandardDaylightTime,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Greenwich Standard Time")]
        GreenwichStandardTime,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("W. Europe Standard/Daylight Time")]
        WEuropeStandardDaylightTime,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("GTB Standard/Daylight Time")]
        GTBStandardDaylightTime,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Egypt Standard/Daylight Time")]
        EgyptStandardDaylightTime,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("E. Europe Standard/Daylight Time")]
        EEuropeStandardDaylightTime,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Romance Standard/Daylight Time")]
        RomanceStandardDaylightTime,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Central Europe Standard/Daylight Time")]
        CentralEuropeStandardDaylightTime,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("South Africa Standard Time")]
        SouthAfricaStandardTime,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Jerusalem Standard/Daylight Time")]
        JerusalemStandardDaylightTime,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Saudi Arabia Standard Time")]
        SaudiArabiaStandardTime,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Russian Standard/Daylight Time")]
        RussianStandardDaylightTime,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Iran Standard/Daylight Time")]
        IranStandardDaylightTime,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Caucasus Standard/Daylight Time")]
        CaucasusStandardDaylightTime,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Afghanistan Standard Time")]
        AfghanistanStandardTime,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("West Asia Standard Time")]
        WestAsiaStandardTime,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("India Standard Time")]
        IndiaStandardTime,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Central Asia Standard Time")]
        CentralAsiaStandardTime,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("SE Asia Standard Time")]
        SEAsiaStandardTime,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("China Standard/Daylight Time")]
        ChinaStandardDaylightTime,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Taipei Standard Time")]
        TaipeiStandardTime,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Tokyo Standard Time")]
        TokyoStandardTime,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Cen. Australia Standard/Daylight Time")]
        CenAustraliaStandardDaylightTime,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("AUS Central Standard Time")]
        AUSCentralStandardTime,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("E. Australia Standard Time")]
        EAustraliaStandardTime,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("AUS Eastern Standard/Daylight Time")]
        AUSEasternStandardDaylightTime,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("West Pacific Standard Time")]
        WestPacificStandardTime,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Tasmania Standard/Daylight Time")]
        TasmaniaStandardDaylightTime,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Central Pacific Standard Time")]
        CentralPacificStandardTime,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Fiji Standard Time")]
        FijiStandardTime,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("New Zealand Standard/Daylight Time")]
        NewZealandStandardDaylightTime,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Arabian Standard Time")]
        ArabianStandardTime,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Ekaterinburg Standard Time")]
        EkaterinburgStandardTime,
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0", IncludeInSchema=false)]
    public enum ItemChoiceType1 
    {
    
        /// <remarks/>
        routePartition,
    
        /// <remarks/>
        routePartitionId,
    
        /// <remarks/>
        routePartitionName,
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
    public class XNPDirectoryNumberShareLineAppearanceCSS : XCallingSearchSpace 
    {
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
    public class XNPCallPickupGroup : XNumPlan 
    {
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="Name")]
        public string name;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute("member", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public XPickupGroupMember[] members;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
    public class XPickupGroupMember 
    {
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="nonNegativeInteger")]
        public string priority;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("pickupGroupName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("pickupGroup", typeof(XPickupGroupMemberPickupGroup), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("pickupDNAndPartition", typeof(XPickupGroupMemberPickupDNAndPartition), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public object Item;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string uuid;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
    public class XPickupGroupMemberPickupGroup 
    {
    
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string uuid;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string Value;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
    public class XPickupGroupMemberPickupDNAndPartition 
    {
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string dnPattern;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("routePartition", typeof(XRoutePartition), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("routePartitionId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("routePartitionName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")]
        public object Item;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public ItemChoiceType2 ItemElementName;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0", IncludeInSchema=false)]
    public enum ItemChoiceType2 
    {
    
        /// <remarks/>
        routePartition,
    
        /// <remarks/>
        routePartitionId,
    
        /// <remarks/>
        routePartitionName,
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(XNPCallPark))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(XNPConference))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(XNPCallPickupGroup))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(XNPDirectoryNumber))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(XNPMessageWaiting))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(XNPCTIDirectoryNumber))]
    public abstract class XNumPlan 
    {
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string pattern;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string description;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XPatternUsage usage;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("routePartition", typeof(XRoutePartition), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("routePartitionName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public object Item;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string uuid;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
    public enum XPatternUsage 
    {
    
        /// <remarks/>
        CallPark,
    
        /// <remarks/>
        Conference,
    
        /// <remarks/>
        Device,
    
        /// <remarks/>
        Translation,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Call Pick Up Group")]
        CallPickUpGroup,
    
        /// <remarks/>
        Route,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Message Waiting")]
        MessageWaiting,
    
        /// <remarks/>
        Hunt,
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
    public class XNPCallPark : XNumPlan 
    {
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("callManagerName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("callManagerId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("Item1ElementName")]
        public string Item1;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public Item1ChoiceType Item1ElementName;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0", IncludeInSchema=false)]
    public enum Item1ChoiceType 
    {
    
        /// <remarks/>
        callManagerName,
    
        /// <remarks/>
        callManagerId,
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
    public class XNPConference : XNumPlan 
    {
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XMixer mixer;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
    public enum XMixer 
    {
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Not Selected")]
        NotSelected,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Multicast Point")]
        MulticastPoint,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Unicast Bridge")]
        UnicastBridge,
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
    public enum XAutoAnswer 
    {
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Auto Answer Off")]
        AutoAnswerOff,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Auto Answer with Headset")]
        AutoAnswerwithHeadset,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Auto Answer with Speakerphone")]
        AutoAnswerwithSpeakerphone,
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
    public class XVoiceMailProfile 
    {
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string name;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string description;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(false)]
        public bool isDefault = false;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string voiceMailboxMask;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XVoiceMailPilot voiceMailPilot;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string uuid;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
    public class XVoiceMailPilot 
    {
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string dirn;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string description;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("CSS", typeof(XCallingSearchSpace), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("CSSName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public object Item;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(false)]
        public bool isDefault = false;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string uuid;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
    public enum XPatternPrecedence 
    {
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Flash Override")]
        FlashOverride,
    
        /// <remarks/>
        Flash,
    
        /// <remarks/>
        Immediate,
    
        /// <remarks/>
        Priority,
    
        /// <remarks/>
        Routine,
    
        /// <remarks/>
        Default,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Executive Override")]
        ExecutiveOverride,
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
    public enum XReleaseCauseValue 
    {
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("No Error")]
        NoError,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Unallocated Number")]
        UnallocatedNumber,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Call Rejected")]
        CallRejected,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Number Changed")]
        NumberChanged,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Invalid Number Format")]
        InvalidNumberFormat,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Precedence Level Exceeded")]
        PrecedenceLevelExceeded,
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
    public class XNPMessageWaiting : XNPDirectoryNumber 
    {
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool isMessageWaitingOn;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XCallingSearchSpace mwiCSS;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
    public class XNPCTIDirectoryNumber : XNPDirectoryNumber 
    {
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XCallForwardInfo callForwardCTIFailure;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
    public enum XRingSetting 
    {
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Use System Default")]
        UseSystemDefault,
    
        /// <remarks/>
        Disable,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Flash Only")]
        FlashOnly,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Ring Once")]
        RingOnce,
    
        /// <remarks/>
        Ring,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Beep Only")]
        BeepOnly,
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
    public enum XMWLPolicy 
    {
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Use System Policy")]
        UseSystemPolicy,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Light and Prompt")]
        LightandPrompt,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Prompt Only")]
        PromptOnly,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Light Only")]
        LightOnly,
    
        /// <remarks/>
        None,
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
    public class XLineCallInfoDisplay 
    {
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool callerName;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool callerNumber;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool redirectedNumber;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool dialedNumber;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
    public class XNumplanIdentifier 
    {
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string directoryNumber;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string routePartitionName;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
    public class XCTIRoutePointLines 
    {
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("lineId", typeof(XLineId), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("line", typeof(XLine), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("lineIdentifier", typeof(XNumplanIdentifier), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public object[] Items;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
    public class XPRIGatewayInterfaceId 
    {
    
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool present;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool presentSpecified;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute(DataType="nonNegativeInteger")]
        public string Value;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
    public class XAnalogPortFinalDigits 
    {
    
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool significant;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute(DataType="nonNegativeInteger")]
        public string Value;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(XT1Port))]
    public class XAnalogPort 
    {
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string attendantDN;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string callerIdDN;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool callerIdEnable;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XCallingPartySelection callingPartySelection;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XDigitSending digitSending;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="nonNegativeInteger")]
        public string expectedDigits;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XAnalogPortFinalDigits finalDigits;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("lineId", typeof(XLineId), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("line", typeof(XLine), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public object Item;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string prefixDN;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XPresentationBit presentationBit;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XSilenceSuppressionThreshold silenceSuppressionThreshold;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="nonNegativeInteger")]
        public string smdiPortNumber;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XStartDialProtocol startDialProtocol;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute("timer", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="nonNegativeInteger", IsNullable=false)]
        public string[] timers;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XTrunk trunk;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XTrunkDirection trunkDirection;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XTrunkLevel trunkLevel;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XTrunkPad trunkPadRx;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XTrunkPad trunkPadTx;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public System.Xml.XmlElement vendorConfig;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string uuid;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute(DataType="positiveInteger")]
        public string portNumber;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
    public enum XCallingPartySelection 
    {
    
        /// <remarks/>
        Originator,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("First Redirect Number")]
        FirstRedirectNumber,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Last Redirect Number")]
        LastRedirectNumber,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("First Redirect Number (External)")]
        FirstRedirectNumberExternal,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Last Redirect Number (External)")]
        LastRedirectNumberExternal,
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
    public enum XDigitSending 
    {
    
        /// <remarks/>
        DTMF,
    
        /// <remarks/>
        MF,
    
        /// <remarks/>
        PULSE,
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
    public enum XPresentationBit 
    {
    
        /// <remarks/>
        Default,
    
        /// <remarks/>
        Allowed,
    
        /// <remarks/>
        Restricted,
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
    public enum XSilenceSuppressionThreshold 
    {
    
        /// <remarks/>
        Disable,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("-48dbm0")]
        Item48dbm0,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("-45dbm0")]
        Item45dbm0,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("-42dbm0")]
        Item42dbm0,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("-39dbm0")]
        Item39dbm0,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("-36dbm0")]
        Item36dbm0,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("-33dbm0")]
        Item33dbm0,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("-30dbm0")]
        Item30dbm0,
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
    public enum XStartDialProtocol 
    {
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Not Set")]
        NotSet,
    
        /// <remarks/>
        Immediate,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Wink Start Feature Group B")]
        WinkStartFeatureGroupB,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Delay Dial")]
        DelayDial,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Wink Start Feature Group D")]
        WinkStartFeatureGroupD,
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
    public enum XTrunk 
    {
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Ground Start")]
        GroundStart,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Loop Start")]
        LoopStart,
    
        /// <remarks/>
        DID,
    
        /// <remarks/>
        POTS,
    
        /// <remarks/>
        EANDM,
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
    public enum XTrunkDirection 
    {
    
        /// <remarks/>
        Inbound,
    
        /// <remarks/>
        Outbound,
    
        /// <remarks/>
        Bothways,
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
    public enum XTrunkLevel 
    {
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("AAL(A)")]
        AALA,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("AAL(D)")]
        AALD,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("A/TT")]
        ATT,
    
        /// <remarks/>
        DAL,
    
        /// <remarks/>
        ICS,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("ISD/TT")]
        ISDTT,
    
        /// <remarks/>
        IST,
    
        /// <remarks/>
        ONS,
    
        /// <remarks/>
        OPS,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("S/ATT")]
        SATT,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("S/DTT")]
        SDTT,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("A/TO")]
        ATO,
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
    public enum XTrunkPad 
    {
    
        /// <remarks/>
        Minus32db,
    
        /// <remarks/>
        Minus31db,
    
        /// <remarks/>
        Minus30db,
    
        /// <remarks/>
        Minus29db,
    
        /// <remarks/>
        Minus28db,
    
        /// <remarks/>
        Minus27db,
    
        /// <remarks/>
        Minus26db,
    
        /// <remarks/>
        Minus25db,
    
        /// <remarks/>
        Minus24db,
    
        /// <remarks/>
        Minus23db,
    
        /// <remarks/>
        Minus22db,
    
        /// <remarks/>
        Minus21db,
    
        /// <remarks/>
        Minus20db,
    
        /// <remarks/>
        Minus19db,
    
        /// <remarks/>
        Minus18db,
    
        /// <remarks/>
        Minus17db,
    
        /// <remarks/>
        Minus16db,
    
        /// <remarks/>
        Minus15db,
    
        /// <remarks/>
        Minus14db,
    
        /// <remarks/>
        Minus13db,
    
        /// <remarks/>
        Minus12db,
    
        /// <remarks/>
        Minus11db,
    
        /// <remarks/>
        Minus10db,
    
        /// <remarks/>
        Minus9db,
    
        /// <remarks/>
        Minus8db,
    
        /// <remarks/>
        Minus7db,
    
        /// <remarks/>
        Minus6db,
    
        /// <remarks/>
        Minus5db,
    
        /// <remarks/>
        Minus4db,
    
        /// <remarks/>
        Minus3db,
    
        /// <remarks/>
        Minus2db,
    
        /// <remarks/>
        Minus1db,
    
        /// <remarks/>
        NoDbPadding,
    
        /// <remarks/>
        Plus1db,
    
        /// <remarks/>
        Plus2db,
    
        /// <remarks/>
        Plus3db,
    
        /// <remarks/>
        Plus4db,
    
        /// <remarks/>
        Plus5db,
    
        /// <remarks/>
        Plus6db,
    
        /// <remarks/>
        Plus7db,
    
        /// <remarks/>
        Plus8db,
    
        /// <remarks/>
        Plus9db,
    
        /// <remarks/>
        Plus10db,
    
        /// <remarks/>
        Plus11db,
    
        /// <remarks/>
        Plus12db,
    
        /// <remarks/>
        Plus13db,
    
        /// <remarks/>
        Plus14db,
    
        /// <remarks/>
        Plus15db,
    
        /// <remarks/>
        Plus16db,
    
        /// <remarks/>
        Plus17db,
    
        /// <remarks/>
        Plus18db,
    
        /// <remarks/>
        Plus19db,
    
        /// <remarks/>
        Plus20db,
    
        /// <remarks/>
        Plus21db,
    
        /// <remarks/>
        Plus22db,
    
        /// <remarks/>
        Plus23db,
    
        /// <remarks/>
        Plus24db,
    
        /// <remarks/>
        Plus25db,
    
        /// <remarks/>
        Plus26db,
    
        /// <remarks/>
        Plus27db,
    
        /// <remarks/>
        Plus28db,
    
        /// <remarks/>
        Plus29db,
    
        /// <remarks/>
        Plus30db,
    
        /// <remarks/>
        Plus31db,
    
        /// <remarks/>
        Plus32db,
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
    public class XT1Port : XAnalogPort 
    {
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XCallerID callerId;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string endpointId;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
    public enum XCallerID 
    {
    
        /// <remarks/>
        ANI,
    
        /// <remarks/>
        DNIS,
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
    public class XLocation 
    {
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string name;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="nonNegativeInteger")]
        public string id;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="nonNegativeInteger")]
        public string kbits;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="nonNegativeInteger")]
        public string videoKbits;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string uuid;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
    public class XSRSTInfo 
    {
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="Name")]
        public string name;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(XSRSTOption.UserSpecific)]
        public XSRSTOption srstOption = XSRSTOption.UserSpecific;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(true)]
        public bool userModifiable = true;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string ipAddr1;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="nonNegativeInteger")]
        [System.ComponentModel.DefaultValueAttribute("2000")]
        public string port1 = "2000";
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string ipAddr2;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="nonNegativeInteger")]
        [System.ComponentModel.DefaultValueAttribute("2000")]
        public string port2 = "2000";
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string ipAddr3;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="nonNegativeInteger")]
        [System.ComponentModel.DefaultValueAttribute("2000")]
        public string port3 = "2000";
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string certificate;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(false)]
        public bool isSecure = false;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string uuid;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
    public enum XSRSTOption 
    {
    
        /// <remarks/>
        Disable,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Use Default Gateway")]
        UseDefaultGateway,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Legacy Configuration")]
        LegacyConfiguration,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("User Specific")]
        UserSpecific,
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
    public class XSoftkeyTemplate 
    {
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string name;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string description;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(true)]
        public bool isStandard = true;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string softkeyClause;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string softkeySetClause;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string uuid;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
    public class XRegionRelationship 
    {
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("region", typeof(XRegion), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("name", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public object Item;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(XBandwidth.G711)]
        public XBandwidth bandwidth = XBandwidth.G711;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="nonNegativeInteger")]
        public string videoBandwidth;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string uuid;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
    public class XRegion 
    {
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string name;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute("relatedRegion", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public XRegionRelationship[] relatedRegions;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string uuid;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
    public enum XBandwidth 
    {
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("G.723")]
        G723,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("G.729")]
        G729,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("G.722")]
        G722,
    
        /// <remarks/>
        GSM,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("G.728")]
        G728,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("G.711")]
        G711,
    
        /// <remarks/>
        Wideband,
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
    public class XMediaResourceGroupMember 
    {
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("deviceName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("device", typeof(XDevice), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public object Item;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string uuid;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(XSIPTrunk))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(XMGCPEndpoint))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(XVoiceMailPort))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(XServerDevice))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(XH323Device))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(XH323Phone))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(XH323Gateway))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(XH323Trunk))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(XProfile))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(XPhone))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(XIPPhone))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(XPhoneProfile))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(XCTIRoutePoint))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(XGateway))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(XAnalogGateway))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(XDigitalGateway))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(XPRIGateway))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(XT1Gateway))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(XBRIGateway))]
    public class XDevice 
    {
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="Name")]
        public string name;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string description;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("productInfo", typeof(XProductInfo), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("product", typeof(XProduct), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public object Item;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("modelInfo", typeof(XModelInfo), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("model", typeof(XModel), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public object Item1;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XClass @class;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XDeviceProtocol protocol;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XProtocolSide protocolSide;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("callingSearchSpace", typeof(XCallingSearchSpace), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("callingSearchSpaceName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="Name")]
        public object Item2;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("devicePoolName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("devicePool", typeof(XDevicePool), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public object Item3;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XNetworkLocation networkLocation;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool networkLocationSpecified;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("location", typeof(XLocation), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("locationName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public object Item4;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("mediaResourceList", typeof(XMediaResourceList), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("mediaResourceListName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public object Item5;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="nonNegativeInteger")]
        public string networkHoldMOHAudioSourceId;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="nonNegativeInteger")]
        public string userHoldMOHAudioSourceId;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("automatedAlternateRoutingCSSName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("automatedAlternateRoutingCSS", typeof(XCallingSearchSpace), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public object Item6;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("aarNeighborhoodName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("aarNeighborhood", typeof(XAARNeighborhood), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public object Item7;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XLoadInformation loadInformation;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public System.Xml.XmlElement vendorConfig;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string versionStamp;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool traceFlag;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool traceFlagSpecified;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int mlppDomainId;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool mlppDomainIdSpecified;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XStatus mlppIndicationStatus;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool mlppIndicationStatusSpecified;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XPreemption preemption;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool preemptionSpecified;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(true)]
        public bool retryVideoCallAsAudio = true;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute(DataType="positiveInteger")]
        public string ctiid;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string uuid;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
    public class XProductInfo 
    {
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XModel model;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="nonNegativeInteger")]
        public string maxPorts;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool showInDropDown;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool showInDropDownSpecified;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public XProduct name;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool nameSpecified;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
    public enum XModel 
    {
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Cisco 30 SP+")]
        Cisco30SP,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Cisco 12 SP+")]
        Cisco12SP,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Cisco 12 SP")]
        Cisco12SP1,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Cisco 12 S")]
        Cisco12S,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Cisco 30 VIP")]
        Cisco30VIP,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Cisco 7910")]
        Cisco7910,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Cisco 7960")]
        Cisco7960,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Cisco 7940")]
        Cisco7940,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Cisco 7935")]
        Cisco7935,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Cisco VGC Phone")]
        CiscoVGCPhone,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Cisco VGC Virtual Phone")]
        CiscoVGCVirtualPhone,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Cisco ATA 186")]
        CiscoATA186,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Selsius Soft Phone")]
        SelsiusSoftPhone,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Analog Access")]
        AnalogAccess,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Digital Access")]
        DigitalAccess,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Digital Access+")]
        DigitalAccess1,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Digital Access WS-X6608")]
        DigitalAccessWSX6608,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Analog Access WS-X6624")]
        AnalogAccessWSX6624,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("VGC Gateway")]
        VGCGateway,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Conference Bridge")]
        ConferenceBridge,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Conference Bridge Hardware")]
        ConferenceBridgeHardware,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Cisco IOS Conference Bridge (HDV2)")]
        CiscoIOSConferenceBridgeHDV2,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Cisco Conference Bridge (WS-SVC-CMM)")]
        CiscoConferenceBridgeWSSVCCMM,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("H.323 Phone")]
        H323Phone,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("H.323 Gateway")]
        H323Gateway,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Music On Hold")]
        MusicOnHold,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Device Pilot")]
        DevicePilot,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("CTI Port")]
        CTIPort,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("CTI Route Point")]
        CTIRoutePoint,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Voice Mail Port")]
        VoiceMailPort,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Cisco IOS Software Media Termination Point (HDV2)")]
        CiscoIOSSoftwareMediaTerminationPointHDV2,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Cisco Video Conference Bridge (IPVC-35xx)")]
        CiscoVideoConferenceBridgeIPVC35xx,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Route List")]
        RouteList,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Load Simulator")]
        LoadSimulator,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Media Termination Point")]
        MediaTerminationPoint,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Media Termination Point Hardware")]
        MediaTerminationPointHardware,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Cisco IOS Media Termination Point (HDV2)")]
        CiscoIOSMediaTerminationPointHDV2,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Cisco Media Termination Point (WS-SVC-CMM)")]
        CiscoMediaTerminationPointWSSVCCMM,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("MGCP Station")]
        MGCPStation,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("MGCP Trunk")]
        MGCPTrunk,
    
        /// <remarks/>
        GateKeeper,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("7914 14-Button Line Expansion Module")]
        Item791414ButtonLineExpansionModule,
    
        /// <remarks/>
        Trunk,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Tone Announcement Player")]
        ToneAnnouncementPlayer,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("SIP Trunk")]
        SIPTrunk,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("SIP Gateway")]
        SIPGateway,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Unknown MGCP Gateway")]
        UnknownMGCPGateway,
    
        /// <remarks/>
        Unknown,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Cisco 7905")]
        Cisco7905,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Cisco 7920")]
        Cisco7920,

        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Cisco 7921")]
        Cisco7921,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Ubiquity I")]
        UbiquityI,
    
        /// <remarks/>
        IP250D,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Cisco 7970")]
        Cisco7970,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Cisco 7912")]
        Cisco7912,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Cisco 7902")]
        Cisco7902,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Cisco SoftPhone SE-S")]
        CiscoSoftPhoneSES,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Cisco IP Communicator")]
        CiscoIPCommunicator,
    
        /// <remarks/>
        SamplePhone,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Cisco 7965")]
        Cisco7965,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Cisco 7936")]
        Cisco7936,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Analog Phone")]
        AnalogPhone,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("ISDN BRI Phone")]
        ISDNBRIPhone,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("SCCP gateway virtual phone")]
        SCCPgatewayvirtualphone,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("IP-STE")]
        IPSTE,
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
    public enum XProduct 
    {
    
        /// <remarks/>
        Pilot,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Cisco Catalyst 6000 T1 VoIP Gateway")]
        CiscoCatalyst6000T1VoIPGateway,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Cisco Catalyst 6000 E1 VoIP Gateway")]
        CiscoCatalyst6000E1VoIPGateway,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Cisco Catalyst 6000 24 port FXS Gateway")]
        CiscoCatalyst600024portFXSGateway,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Cisco Catalyst 6000 12 port FXO Gateway")]
        CiscoCatalyst600012portFXOGateway,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Cisco DT-24+ Gateway")]
        CiscoDT24Gateway,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Cisco DE-30+ Gateway")]
        CiscoDE30Gateway,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Cisco AT-2 Gateway")]
        CiscoAT2Gateway,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Cisco AT-4 Gateway")]
        CiscoAT4Gateway,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Cisco AT-8 Gateway")]
        CiscoAT8Gateway,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Cisco AS-2 Gateway")]
        CiscoAS2Gateway,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Cisco AS-4 Gateway")]
        CiscoAS4Gateway,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Cisco AS-8 Gateway")]
        CiscoAS8Gateway,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("H.323 Client")]
        H323Client,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("H.323 Gateway")]
        H323Gateway,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Cisco MGCP FXO Port")]
        CiscoMGCPFXOPort,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Cisco MGCP FXS Port")]
        CiscoMGCPFXSPort,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Cisco 12 SP+")]
        Cisco12SP,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Cisco 12 SP")]
        Cisco12SP1,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Cisco 12 S")]
        Cisco12S,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Cisco 30 SP+")]
        Cisco30SP,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Cisco 30 VIP")]
        Cisco30VIP,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("CTI Port")]
        CTIPort,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Cisco Web Attendant Pilot")]
        CiscoWebAttendantPilot,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Cisco Voice Mail Port")]
        CiscoVoiceMailPort,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Cisco Conference Bridge Software")]
        CiscoConferenceBridgeSoftware,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Cisco Conference Bridge Hardware")]
        CiscoConferenceBridgeHardware,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Cisco Media Termination Point Software")]
        CiscoMediaTerminationPointSoftware,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Cisco Media Termination Point Hardware")]
        CiscoMediaTerminationPointHardware,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Cisco 7935")]
        Cisco7935,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Selsius Soft Phone")]
        SelsiusSoftPhone,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Cisco 7910")]
        Cisco7910,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Cisco 7960")]
        Cisco7960,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Cisco 7940")]
        Cisco7940,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Route List")]
        RouteList,
    
        /// <remarks/>
        Unknown,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Load Simulator")]
        LoadSimulator,
    
        /// <remarks/>
        Gatekeeper,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("NM-1V")]
        NM1V,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("NM-2V")]
        NM2V,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Cisco VG200")]
        CiscoVG200,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Cisco 26XX")]
        Cisco26XX,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Cisco 362X")]
        Cisco362X,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Cisco 364X")]
        Cisco364X,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Cisco 366X")]
        Cisco366X,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("CTI Route Point")]
        CTIRoutePoint,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Music On Hold")]
        MusicOnHold,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Cisco MGCP T1 Port")]
        CiscoMGCPT1Port,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("NM-HDV")]
        NMHDV,
    
        /// <remarks/>
        VIC_SLOT,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Cisco MGCP E1 Port")]
        CiscoMGCPE1Port,
    
        /// <remarks/>
        VWIC_SLOT,
    
        /// <remarks/>
        FLEX_SLOT,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Cisco Catalyst 4224 Voice Gateway Switch")]
        CiscoCatalyst4224VoiceGatewaySwitch,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Cisco Catalyst 4000 Access Gateway  Module")]
        CiscoCatalyst4000AccessGatewayModule,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Cisco IOS Conference Bridge")]
        CiscoIOSConferenceBridge,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Cisco IOS Media Termination Point")]
        CiscoIOSMediaTerminationPoint,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Cisco IAD 2420 (end of sale product)")]
        CiscoIAD2420endofsaleproduct,
    
        /// <remarks/>
        IAD2400_ANALOG,
    
        /// <remarks/>
        IAD2400_DIGITAL,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Cisco VGC Phone")]
        CiscoVGCPhone,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Cisco VG248 Gateway")]
        CiscoVG248Gateway,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("VGC Port")]
        VGCPort,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Cisco VGC Virtual Phone")]
        CiscoVGCVirtualPhone,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Cisco ATA 186")]
        CiscoATA186,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Cisco ICS77XX-MRP2xx")]
        CiscoICS77XXMRP2xx,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Cisco ICS77XX-ASI81")]
        CiscoICS77XXASI81,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Cisco ICS77XX-ASI160")]
        CiscoICS77XXASI160,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("H.225 Trunk (Gatekeeper Controlled)")]
        H225TrunkGatekeeperControlled,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Inter-Cluster Trunk (Gatekeeper Controlled)")]
        InterClusterTrunkGatekeeperControlled,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Inter-Cluster Trunk (Non-Gatekeeper Controlled)")]
        InterClusterTrunkNonGatekeeperControlled,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Communication Media Module")]
        CommunicationMediaModule,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("WS-X6600")]
        WSX6600,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("AIM-VOICE-30")]
        AIMVOICE30,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("NM-HDA")]
        NMHDA,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("PA-VXA")]
        PAVXA,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("PA-VXB")]
        PAVXB,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("PA-VXC")]
        PAVXC,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("PA-MCX")]
        PAMCX,
    
        /// <remarks/>
        Annunciator,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Cisco MGCP BRI Port")]
        CiscoMGCPBRIPort,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("NM-HD-1V")]
        NMHD1V,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("NM-HD-2V")]
        NMHD2V,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("NM-HD-2VE")]
        NMHD2VE,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("SIP Trunk")]
        SIPTrunk,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Cisco Conference Bridge (WS-SVC-CMM)")]
        CiscoConferenceBridgeWSSVCCMM,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Cisco Media Termination Point (WS-SVC-CMM)")]
        CiscoMediaTerminationPointWSSVCCMM,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Cisco IOS Enhanced Software Media Termination Point")]
        CiscoIOSEnhancedSoftwareMediaTerminationPoint,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("7914 14-Button Line Expansion Module")]
        Item791414ButtonLineExpansionModule,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Cisco IOS Enhanced Conference Bridge")]
        CiscoIOSEnhancedConferenceBridge,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Cisco IOS Enhanced Media Termination Point")]
        CiscoIOSEnhancedMediaTerminationPoint,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Cisco Video Conference Bridge(IPVC-35xx)")]
        CiscoVideoConferenceBridgeIPVC35xx,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Hunt List")]
        HuntList,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("WS-SVC-CMM-MS")]
        WSSVCCMMMS,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("NM-4VWIC-MBRD")]
        NM4VWICMBRD,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("VNM-HDA")]
        VNMHDA,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("NM-HDV2-0PORT")]
        NMHDV20PORT,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("NM-HDV2-1PORT")]
        NMHDV21PORT,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("NM-HDV2-2PORT")]
        NMHDV22PORT,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Cisco 3745")]
        Cisco3745,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Cisco 3725")]
        Cisco3725,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Cisco 7905")]
        Cisco7905,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Cisco 7920")]
        Cisco7920,

        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Cisco 7921")]
        Cisco7921,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Cisco ICS77XX-MRP3xx")]
        CiscoICS77XXMRP3xx,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Cisco ICS77XX-MRP3-8FXS")]
        CiscoICS77XXMRP38FXS,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Cisco ICS77XX-MRP3-16FXS")]
        CiscoICS77XXMRP316FXS,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Cisco ICS77XX-MRP3-8FXO-M1")]
        CiscoICS77XXMRP38FXOM1,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Ubiquity I")]
        UbiquityI,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Cisco 269X")]
        Cisco269X,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Cisco 72XX")]
        Cisco72XX,
    
        /// <remarks/>
        IP250D,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Cisco 7970")]
        Cisco7970,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Cisco 1760")]
        Cisco1760,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Cisco 1751")]
        Cisco1751,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Cisco 7912")]
        Cisco7912,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Cisco 7902")]
        Cisco7902,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("WS-X6600-6E1")]
        WSX66006E1,
    
        /// <remarks/>
        VG224,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Cisco SoftPhone SE-S")]
        CiscoSoftPhoneSES,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Cisco 2821")]
        Cisco2821,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Cisco IP Communicator")]
        CiscoIPCommunicator,
    
        /// <remarks/>
        SampleGW,
    
        /// <remarks/>
        SamplePhone,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Cisco 7965")]
        Cisco7965,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("366xA")]
        Item366xA,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("366xB")]
        Item366xB,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("3745")]
        Item3745,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("3745A")]
        Item3745A,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Cisco 7936")]
        Cisco7936,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Cisco 3825")]
        Cisco3825,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Cisco 3845")]
        Cisco3845,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Cisco 2811")]
        Cisco2811,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Cisco 2851")]
        Cisco2851,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Analog Phone")]
        AnalogPhone,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("ISDN BRI Phone")]
        ISDNBRIPhone,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("SCCP gateway virtual phone")]
        SCCPgatewayvirtualphone,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("IP-STE")]
        IPSTE,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Cisco 2801")]
        Cisco2801,
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
    public class XModelInfo 
    {
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XClass @class;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="nonNegativeInteger")]
        public string defaultDTMFCapability;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute("feature", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public XFeature[] features;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool hasFirmwardLoad;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool hasFirmwardLoadSpecified;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool hasPhoneTemplate;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool hasPhoneTemplateSpecified;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="nonNegativeInteger")]
        public string numberOfButtons;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool phoneTemplateIsUserModifiable;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool phoneTemplateIsUserModifiableSpecified;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool showInDeviceDefaults;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool showInDeviceDefaultsSpecified;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public XModel name;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool nameSpecified;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
    public enum XClass 
    {
        /// <remarks/>
        Phone,
    
        /// <remarks/>
        Gateway,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Conference Bridge")]
        ConferenceBridge,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Media Termination Point")]
        MediaTerminationPoint,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Route List")]
        RouteList,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Voice Mail")]
        VoiceMail,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("CTI Route Point")]
        CTIRoutePoint,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Music On Hold")]
        MusicOnHold,
    
        /// <remarks/>
        Simulation,
    
        /// <remarks/>
        Pilot,
    
        /// <remarks/>
        GateKeeper,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Add-on modules")]
        Addonmodules,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Hidden Phone")]
        HiddenPhone,
    
        /// <remarks/>
        Trunk,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Tone Announcement Player")]
        ToneAnnouncementPlayer,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Device Profile")]
        DeviceProfile,
    
        /// <remarks/>
        Invalid,
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
    public enum XDeviceProtocol 
    {
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Cisco-station")]
        Ciscostation,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Digital Access PRI")]
        DigitalAccessPRI,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("H.225")]
        H225,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Analog Access")]
        AnalogAccess,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Digital Access T1")]
        DigitalAccessT1,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Route Point")]
        RoutePoint,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Unicast Bridge")]
        UnicastBridge,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Multicast Point")]
        MulticastPoint,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Inter-Cluster Trunk")]
        InterClusterTrunk,
    
        /// <remarks/>
        RAS,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Digital Access BRI")]
        DigitalAccessBRI,
    
        /// <remarks/>
        SIP,
    
        /// <remarks/>
        MGCP,
    
        /// <remarks/>
        SCCP,
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
    public enum XProtocolSide 
    {
    
        /// <remarks/>
        Network,
    
        /// <remarks/>
        User,
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
    public class XDevicePool 
    {
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string name;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("autoSearchSpaceName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("autoSearchSpace", typeof(XCallingSearchSpace), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public object Item;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("dateTimeSetting", typeof(XDateTimeSetting), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("dateTimeSettingName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public object Item1;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("callManagerGroupName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("callManagerGroup", typeof(XCallManagerGroup), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public object Item2;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("mediaResourceList", typeof(XMediaResourceList), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("mediaResourceListName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public object Item3;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("region", typeof(XRegion), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("regionName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public object Item4;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("softkeyTemplate", typeof(XSoftkeyTemplate), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("softkeyTemplateName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public object Item5;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XCountry networkLocale;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool networkLocaleSpecified;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XUserLocale userLocale;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool userLocaleSpecified;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="nonNegativeInteger")]
        public string networkHoldMOHAudioSourceId;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="nonNegativeInteger")]
        public string userHoldMOHAudioSourceId;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("srstName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("srstInfo", typeof(XSRSTInfo), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public object Item6;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int mlppDomainId;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool mlppDomainIdSpecified;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XStatus mlppIndicationStatus;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool mlppIndicationStatusSpecified;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XPreemption preemption;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool preemptionSpecified;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int connectionMonitorDuration;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool connectionMonitorDurationSpecified;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string uuid;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
    public class XDateTimeSetting 
    {
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string name;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string dateTemplate;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XTimeZone timeZone;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string uuid;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
    public class XCallManagerGroup 
    {
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string name;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool tftpDefault;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool tftpDefaultSpecified;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute("member", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public XCallManagerMember[] members;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string uuid;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
    public class XCallManagerMember 
    {
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("callManager", typeof(XCallManager), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("callManagerName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public object Item;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute(DataType="nonNegativeInteger")]
        public string priority;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
    public class XCallManager 
    {
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string name;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string description;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XCallManagerAutoRegistration autoRegistration;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XCallManagerPorts ports;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("processNodeName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("processNode", typeof(XProcessNode), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public object Item;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string uuid;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute(DataType="nonNegativeInteger")]
        public string ctiid;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
    public class XCallManagerAutoRegistration 
    {
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string startDN;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string endDN;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string nextDN;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("routePartition", typeof(XRoutePartition), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("routePartitionName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public object Item;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string e164Mask;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
    public class XCallManagerPorts 
    {
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="nonNegativeInteger")]
        public string analogAccessPort;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="nonNegativeInteger")]
        public string digitalAccessPort;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="nonNegativeInteger")]
        public string ethernetPhonePort;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XCallManagerPortsMgcpPorts mgcpPorts;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
    public class XCallManagerPortsMgcpPorts 
    {
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="nonNegativeInteger")]
        public string listen;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="nonNegativeInteger")]
        public string keepAlive;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
    public class XProcessNode 
    {
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string name;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string description;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string mac;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string uuid;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
    public class XMediaResourceList 
    {
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string name;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string clause;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute("member", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public XMediaResourceListMember[] members;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string uuid;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
    public class XMediaResourceListMember 
    {
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("mediaResourceGroupName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("mediaResourceGroup", typeof(XMediaResourceGroup), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public object Item;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string uuid;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute(DataType="nonNegativeInteger")]
        public string order;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
    public class XMediaResourceGroup 
    {
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string name;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string description;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool multicast;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute("member", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public XMediaResourceGroupMember[] members;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string uuid;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
    public enum XCountry 
    {
    
        /// <remarks/>
        Argentina,
    
        /// <remarks/>
        Australia,
    
        /// <remarks/>
        Austria,
    
        /// <remarks/>
        Belgium,
    
        /// <remarks/>
        Brazil,
    
        /// <remarks/>
        Canada,
    
        /// <remarks/>
        China,
    
        /// <remarks/>
        Colombia,
    
        /// <remarks/>
        Cyprus,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Czech Republic")]
        CzechRepublic,
    
        /// <remarks/>
        Denmark,
    
        /// <remarks/>
        Egypt,
    
        /// <remarks/>
        Finland,
    
        /// <remarks/>
        France,
    
        /// <remarks/>
        Germany,
    
        /// <remarks/>
        Ghana,
    
        /// <remarks/>
        Greece,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Hong Kong")]
        HongKong,
    
        /// <remarks/>
        Hungary,
    
        /// <remarks/>
        Iceland,
    
        /// <remarks/>
        India,
    
        /// <remarks/>
        Indonesia,
    
        /// <remarks/>
        Ireland,
    
        /// <remarks/>
        Israel,
    
        /// <remarks/>
        Italy,
    
        /// <remarks/>
        Japan,
    
        /// <remarks/>
        Jordan,
    
        /// <remarks/>
        Kenya,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Korea Republic")]
        KoreaRepublic,
    
        /// <remarks/>
        Lebanon,
    
        /// <remarks/>
        Luxembourg,
    
        /// <remarks/>
        Malaysia,
    
        /// <remarks/>
        Mexico,
    
        /// <remarks/>
        Nepal,
    
        /// <remarks/>
        Netherlands,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("New Zealand")]
        NewZealand,
    
        /// <remarks/>
        Nigeria,
    
        /// <remarks/>
        Norway,
    
        /// <remarks/>
        Pakistan,
    
        /// <remarks/>
        Panama,
    
        /// <remarks/>
        Peru,
    
        /// <remarks/>
        Philippines,
    
        /// <remarks/>
        Poland,
    
        /// <remarks/>
        Portugal,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Russian Federation")]
        RussianFederation,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Saudi Arabia")]
        SaudiArabia,
    
        /// <remarks/>
        Singapore,
    
        /// <remarks/>
        Slovakia,
    
        /// <remarks/>
        Slovenia,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("South Africa")]
        SouthAfrica,
    
        /// <remarks/>
        Spain,
    
        /// <remarks/>
        Sweden,
    
        /// <remarks/>
        Switzerland,
    
        /// <remarks/>
        Taiwan,
    
        /// <remarks/>
        Thailand,
    
        /// <remarks/>
        Turkey,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("United Kingdom")]
        UnitedKingdom,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("United States")]
        UnitedStates,
    
        /// <remarks/>
        Venezuela,
    
        /// <remarks/>
        Zimbabwe,
    
        /// <remarks/>
        Itu,
    
        /// <remarks/>
        Chile,
    
        /// <remarks/>
        Bulgaria,
    
        /// <remarks/>
        Croatia,
    
        /// <remarks/>
        Romania,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Serbia and Montenegro")]
        SerbiaandMontenegro,
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
    public enum XUserLocale 
    {
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("English United States")]
        EnglishUnitedStates,
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
    public enum XStatus 
    {
    
        /// <remarks/>
        Off,
    
        /// <remarks/>
        On,
    
        /// <remarks/>
        Default,
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
    public enum XPreemption 
    {
    
        /// <remarks/>
        Disabled,
    
        /// <remarks/>
        Forceful,
    
        /// <remarks/>
        Default,
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
    public enum XNetworkLocation 
    {
    
        /// <remarks/>
        OnNet,
    
        /// <remarks/>
        OffNet,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Use System Default")]
        UseSystemDefault,
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
    public class XSIPTrunk : XDevice 
    {
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool mtpRequired;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool mtpRequiredSpecified;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string destinationaddress;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(false)]
        public bool destAddrIsSRV = false;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="integer")]
        [System.ComponentModel.DefaultValueAttribute("0")]
        public string destinationport = "0";
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="integer")]
        public string incomingport;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XSIPCodec tkSipCodec;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool tkSipCodecSpecified;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XTransport OutgoingTransportType;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool OutgoingTransportTypeSpecified;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XSIPTrunkSigDigits sigDigits;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XPresentationBit connectedNamePresentation;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool connectedNamePresentationSpecified;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XPresentationBit connectedPartyIdPresentation;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool connectedPartyIdPresentationSpecified;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XCallingPartySelection callingPartySelection;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool callingPartySelectionSpecified;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XPresentationBit callingname;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool callingnameSpecified;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XPresentationBit callingLineIdPresentation;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool callingLineIdPresentationSpecified;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string prefixDN;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string callerName;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string callerIdDN;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool acceptInboundRDNIS;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool acceptInboundRDNISSpecified;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool acceptOutboundRDNIS;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool acceptOutboundRDNISSpecified;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
    public enum XSIPCodec 
    {
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("711ulaw")]
        Item711ulaw,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("711alaw")]
        Item711alaw,
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
    public enum XTransport 
    {
    
        /// <remarks/>
        TCP,
    
        /// <remarks/>
        UDP,
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
    public class XMGCPEndpoint : XDevice 
    {
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(XPacketCaptureMode.None)]
        public XPacketCaptureMode packetCaptureMode = XPacketCaptureMode.None;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="positiveInteger")]
        [System.ComponentModel.DefaultValueAttribute("60")]
        public string packetCaptureDuration = "60";
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
    public enum XPacketCaptureMode 
    {
    
        /// <remarks/>
        None,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Real-time Mode")]
        RealtimeMode,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Batch Processing Mode")]
        BatchProcessingMode,
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
    public class XVoiceMailPort : XDevice 
    {
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XLine line;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
    public class XServerDevice : XDevice 
    {
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("processNodeName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="Name")]
        [System.Xml.Serialization.XmlElementAttribute("processNodeId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("processNode", typeof(XProcessNode), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("Item8ElementName")]
        public object Item8;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public Item8ChoiceType Item8ElementName;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0", IncludeInSchema=false)]
    public enum Item8ChoiceType 
    {
    
        /// <remarks/>
        processNodeName,
    
        /// <remarks/>
        processNodeId,
    
        /// <remarks/>
        processNode,
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(XH323Phone))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(XH323Gateway))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(XH323Trunk))]
    public class XH323Device : XDevice 
    {
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool waitForFarEndH245TerminalSet;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool waitForFarEndH245TerminalSetSpecified;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool mtpRequired;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool mtpRequiredSpecified;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string callerIdDN;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XCallingPartySelection callingPartySelection;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool callingPartySelectionSpecified;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XPresentationBit callingLineIdPresentation;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool callingLineIdPresentationSpecified;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool displayIEDelivery;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool displayIEDeliverySpecified;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool redirectOutboundNumberIE;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool redirectOutboundNumberIESpecified;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool redirectInboundNumberIE;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool redirectInboundNumberIESpecified;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool enableInboundFaststart;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool enableInboundFaststartSpecified;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool enableOutboundFaststart;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool enableOutboundFaststartSpecified;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
    public class XH323Phone : XH323Device 
    {
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string ownerUserId;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="nonNegativeInteger")]
        public string signalingPort;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XH323PhoneGatekeeperInfo gatekeeperInfo;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute("line", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public XLine[] lines;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(false)]
        public bool ignorePresentationIndicators = false;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(XH323Trunk))]
    public class XH323Gateway : XH323Device 
    {
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XH323GatewaySignificantDigits significantDigits;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string prefixDN;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XPriOfNumber calledPartyIENumberType;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool calledPartyIENumberTypeSpecified;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XPriOfNumber callingPartyIENumberType;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool callingPartyIENumberTypeSpecified;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XNumberingPlan calledNumberingPlan;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool calledNumberingPlanSpecified;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XNumberingPlan callingNumberingPlan;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool callingNumberingPlanSpecified;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XTunneledProtocol tunneledProtocol;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(false)]
        public bool pathReplacementSupport = false;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
    public enum XPriOfNumber 
    {
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Cisco CallManager")]
        CiscoCallManager,
    
        /// <remarks/>
        Unknown,
    
        /// <remarks/>
        National,
    
        /// <remarks/>
        International,
    
        /// <remarks/>
        Subscriber,
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
    public enum XNumberingPlan 
    {
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Cisco CallManager")]
        CiscoCallManager,
    
        /// <remarks/>
        ISDN,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("National Standard")]
        NationalStandard,
    
        /// <remarks/>
        Private,
    
        /// <remarks/>
        Unknown,
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
    public enum XTunneledProtocol 
    {
    
        /// <remarks/>
        None,
    
        /// <remarks/>
        QSIG,
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
    public class XH323Trunk : XH323Gateway 
    {
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("remoteServerInfo", typeof(XH323TrunkRemoteServerInfo), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("gatekeeperInfo", typeof(XH323TrunkGatekeeperInfo), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public object Item8;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
    public class XProfile : XDevice 
    {
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XDeviceProfile deviceProfile;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string loginUserid;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="time")]
        public System.DateTime loginTime;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="nonNegativeInteger")]
        public string loginDuration;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool allowHoteling;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string defaultProfileId;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(false)]
        public bool ignorePresentationIndicators = false;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
    public enum XDeviceProfile 
    {
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Real Device")]
        RealDevice,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("User Profile")]
        UserProfile,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Autogenerated Profile")]
        AutogeneratedProfile,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Model Profile")]
        ModelProfile,
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(XIPPhone))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(XPhoneProfile))]
    public class XPhone : XDevice 
    {
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string associatedPC;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XPhoneLines lines;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="positiveInteger")]
        public string numberOfButtons;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("phoneTemplateName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("phoneTemplate", typeof(XPhoneTemplate), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public object Item8;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute("speeddial", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public XSpeeddial[] speeddials;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
    public class XCTIRoutePoint : XDevice 
    {
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XCTIRoutePointLines lines;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(XAnalogGateway))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(XDigitalGateway))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(XPRIGateway))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(XT1Gateway))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(XBRIGateway))]
    public class XGateway : XDevice 
    {
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(XPacketCaptureMode.None)]
        public XPacketCaptureMode packetCaptureMode = XPacketCaptureMode.None;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="positiveInteger")]
        [System.ComponentModel.DefaultValueAttribute("60")]
        public string packetCaptureDuration = "60";
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
    public class XAnalogGateway : XGateway 
    {
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XCountry country;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool countrySpecified;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="positiveInteger")]
        public string maxPorts;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute("port", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public XAnalogPort[] ports;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XTrunkSelectionOrder trunkSelectionOrder;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="anyURI")]
        public string helpURL;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
    public enum XTrunkSelectionOrder 
    {
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Bottom Up")]
        BottomUp,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Top Down")]
        TopDown,
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(XPRIGateway))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(XT1Gateway))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(XBRIGateway))]
    public abstract class XDigitalGateway : XGateway 
    {
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XCountry country;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool countrySpecified;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XTrunkSelectionOrder trunkSelectionOrder;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool trunkSelectionOrderSpecified;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
    public class XPRIGateway : XDigitalGateway 
    {
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool acceptInboundRDNIS;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XNumberingPlan calledPlan;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XPriOfNumber calledPri;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string callerIDDN;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XCallingPartySelection callingPartySelection;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XNumberingPlan callingPlan;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XPriOfNumber callingPri;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="nonNegativeInteger")]
        public string chanIE;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XClockReference clockReference;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XCSUParam csuParam;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool dChannelEnable;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool direction;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool displayIE;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XEncode encode;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XFDLChannel fdlChannel;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="nonNegativeInteger")]
        public string firstDelay;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XPRIGatewayInterfaceId interfaceId;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="nonNegativeInteger")]
        public string intraDelay;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool mcdnEnable;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool numberIE;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="nonNegativeInteger")]
        public string numDigits;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool passingPrecedenceLevelThroughUUIE;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool passingPrecedenceLevelThroughUUIESpecified;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string prefix;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XPresentationBit callingLinePresentationBit;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XPresentationBit connectedLinePresentationBit;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XConnectedPBX connectedPBX;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XPriProtocol priProtocol;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="nonNegativeInteger")]
        public string securityAccessLevel;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool sendCallingNameInFacilityIE;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool sendEXLeadingCharInDispIE;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool sendRestart;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool setupNonISDNPI;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool sigDigits;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="nonNegativeInteger")]
        public string span;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool statusPoll;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="nonNegativeInteger")]
        public string stripCountOut;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XTrunkPad trunkPadRx;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XTrunkPad trunkPadTx;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XTrunkLevel trunkLevel;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XYellowAlarm yellowAlarm;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XZeroSuppression zeroSuppression;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="positiveInteger")]
        public string sMDIBasePort;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool protocolProfile91NameOnly;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="anyURI")]
        public string helpURL;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
    public enum XClockReference 
    {
    
        /// <remarks/>
        Network,
    
        /// <remarks/>
        Internal,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Span 1")]
        Span1,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Span 2")]
        Span2,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Span 3")]
        Span3,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Span 4")]
        Span4,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Span 5")]
        Span5,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Span 6")]
        Span6,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Span 7")]
        Span7,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Span 8")]
        Span8,
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
    public enum XCSUParam 
    {
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("0dB")]
        Item0dB,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("-7.5dB")]
        Item75dB,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("-15dB")]
        Item15dB,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("-22.5dB")]
        Item225dB,
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
    public enum XEncode 
    {
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("A-law")]
        Alaw,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("u-law")]
        ulaw,
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
    public enum XFDLChannel 
    {
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("ATT 54016")]
        ATT54016,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("ANSI T1.403 NI")]
        ANSIT1403NI,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("ANSI T1.403.CI")]
        ANSIT1403CI,
    
        /// <remarks/>
        None,
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
    public enum XConnectedPBX 
    {
    
        /// <remarks/>
        None,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Siemens Hicom")]
        SiemensHicom,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Ericsson MD-110")]
        EricssonMD110,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Alcatel PBX")]
        AlcatelPBX,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Meridian Option 11C")]
        MeridianOption11C,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Lucent Definity G3")]
        LucentDefinityG3,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("IPC MX")]
        IPCMX,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Cisco CCM")]
        CiscoCCM,
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
    public enum XPriProtocol 
    {
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("PRI 4ESS")]
        PRI4ESS,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("PRI 5E8")]
        PRI5E8,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("PRI 5E8 TELEOS")]
        PRI5E8TELEOS,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("PRI 5E8 INTECOME")]
        PRI5E8INTECOME,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("PRI 5E9")]
        PRI5E9,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("PRI DMS-100")]
        PRIDMS100,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("PRI DMS-250")]
        PRIDMS250,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("PRI EURO")]
        PRIEURO,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("PRI NI2")]
        PRINI2,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("PRI AUSTRALIAN")]
        PRIAUSTRALIAN,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("PRI 5E8 CUSTOM")]
        PRI5E8CUSTOM,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("PRI ETSI SC")]
        PRIETSISC,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("PRI NTT")]
        PRINTT,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("PRI ISO QSIG T1")]
        PRIISOQSIGT1,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("PRI ISO QSIG E1")]
        PRIISOQSIGE1,
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
    public enum XYellowAlarm 
    {
    
        /// <remarks/>
        Bit2,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("F-Bit")]
        FBit,
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
    public enum XZeroSuppression 
    {
    
        /// <remarks/>
        B8ZS,
    
        /// <remarks/>
        AMI,
    
        /// <remarks/>
        HDB3,
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
    public class XT1Gateway : XDigitalGateway 
    {
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XClockReference clockReference;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XCSUParam csuParam;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XDigitSending digitSending;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XEncode encode;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XFDLChannel fdlChannel;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="positiveInteger")]
        public string maxPorts;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute("port", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public XT1Port[] ports;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XYellowAlarm yellowAlarm;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XZeroSuppression zeroSuppression;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="positiveInteger")]
        public string sMDIBasePort;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="anyURI")]
        public string helpURL;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
    public class XBRIGateway : XDigitalGateway 
    {
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool acceptInboundRDNIS;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XBriProtocol briProtocol;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XNumberingPlan calledPlan;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool calledPlanSpecified;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XPriOfNumber calledPri;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string callerIDDN;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XCallingPartySelection callingPartySelection;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XNumberingPlan callingPlan;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool callingPlanSpecified;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XPriOfNumber callingPri;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="nonNegativeInteger")]
        public string chanIE;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XClockReference clockReference;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XCSUParam csuParam;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool dChannelEnable;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool direction;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool displayIE;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XEncode encode;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XFDLChannel fdlChannel;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="nonNegativeInteger")]
        public string firstDelay;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XFraming framing;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="nonNegativeInteger")]
        public string intraDelay;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool numberIE;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="nonNegativeInteger")]
        public string numDigits;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string prefix;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XPresentationBit presentationBit;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool sendRestart;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool setupNonISDNPI;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool sigDigits;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool stableIn4;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool statusPoll;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="nonNegativeInteger")]
        public string stripCountOut;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XTrunkPad trunkPadRx;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XTrunkPad trunkPadTx;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XTrunkLevel trunkLevel;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XYellowAlarm yellowAlarm;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XZeroSuppression zeroSuppression;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
    public enum XBriProtocol 
    {
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("BRI NET3")]
        BRINET3,
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
    public enum XFraming 
    {
    
        /// <remarks/>
        D4,
    
        /// <remarks/>
        ESF,
    
        /// <remarks/>
        CRC4,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Non CRC4")]
        NonCRC4,
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
    public enum XDeviceSecurityMode 
    {
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Use System Default")]
        UseSystemDefault,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Non Secure")]
        NonSecure,
    
        /// <remarks/>
        Authenticated,
    
        /// <remarks/>
        Encrypted,
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
    public enum XCertificateOperation 
    {
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("No Pending Operation")]
        NoPendingOperation,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Install/Upgrade")]
        InstallUpgrade,
    
        /// <remarks/>
        Delete,
    
        /// <remarks/>
        Troubleshoot,
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
    public enum XAuthenticationMode 
    {
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("By Authentication String")]
        ByAuthenticationString,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("By Null String")]
        ByNullString,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("By Existing Certificate (precedence to LSC)")]
        ByExistingCertificateprecedencetoLSC,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("By Existing Certificate (precedence to MIC)")]
        ByExistingCertificateprecedencetoMIC,
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
    public enum XCertificateStatus 
    {
    
        /// <remarks/>
        None,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Operation Pending")]
        OperationPending,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Upgrade Success")]
        UpgradeSuccess,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Delete Success")]
        DeleteSuccess,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Troubleshoot Success")]
        TroubleshootSuccess,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Upgrade Failed")]
        UpgradeFailed,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Delete Failed")]
        DeleteFailed,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Troubleshoot Failed")]
        TroubleshootFailed,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Upgrade Failed: Invalid LSC")]
        UpgradeFailedInvalidLSC,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Upgrade Failed: Invalid Authentication String")]
        UpgradeFailedInvalidAuthenticationString,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Upgrade Failed: Invalid MIC")]
        UpgradeFailedInvalidMIC,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Upgrade Failed: Invalid Credentials")]
        UpgradeFailedInvalidCredentials,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Upgrade Failed: Phone Communication Failure")]
        UpgradeFailedPhoneCommunicationFailure,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Upgrade Failed: Key Generation Failed/Timeout")]
        UpgradeFailedKeyGenerationFailedTimeout,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Upgrade Failed: CA Communication Failure")]
        UpgradeFailedCACommunicationFailure,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Upgrade Failed: CA Rejected Connection")]
        UpgradeFailedCARejectedConnection,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Upgrade Failed: User Initiated Request Late/Timedout")]
        UpgradeFailedUserInitiatedRequestLateTimedout,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Delete Failed: Invalid LSC")]
        DeleteFailedInvalidLSC,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Delete Failed: Invalid Authentication String")]
        DeleteFailedInvalidAuthenticationString,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Delete Failed: Invalid MIC")]
        DeleteFailedInvalidMIC,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Delete Failed: Invalid Credentials")]
        DeleteFailedInvalidCredentials,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Delete Failed: Phone Communication Failure")]
        DeleteFailedPhoneCommunicationFailure,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Delete Failed: Key Generation Failed/Timeout")]
        DeleteFailedKeyGenerationFailedTimeout,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Delete Failed: CA Communication Failure")]
        DeleteFailedCACommunicationFailure,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Delete Failed: CA Rejected Connection")]
        DeleteFailedCARejectedConnection,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Delete Failed: User Initiated Request Late/Timedout")]
        DeleteFailedUserInitiatedRequestLateTimedout,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Troubleshoot Failed: Invalid LSC")]
        TroubleshootFailedInvalidLSC,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Troubleshoot Failed: Invalid Authentication String")]
        TroubleshootFailedInvalidAuthenticationString,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Troubleshoot Failed: Invalid MIC")]
        TroubleshootFailedInvalidMIC,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Troubleshoot Failed: Invalid Credentials")]
        TroubleshootFailedInvalidCredentials,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Troubleshoot Failed: Phone Communication Failure")]
        TroubleshootFailedPhoneCommunicationFailure,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Troubleshoot Failed: Key Generation Failed/Timeout")]
        TroubleshootFailedKeyGenerationFailedTimeout,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Troubleshoot Failed: User Initiated Request Late/Timedout")]
        TroubleshootFailedUserInitiatedRequestLateTimedout,
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
    public enum XKeySize 
    {
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("512")]
        Item512,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("1024")]
        Item1024,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("2048")]
        Item2048,
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
    public enum XCertificate 
    {
    
        /// <remarks/>
        Unknown,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("No Certificate Exists")]
        NoCertificateExists,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Locally Significant Certificate")]
        LocallySignificantCertificate,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Manufacture Installed Certificate Exists")]
        ManufactureInstalledCertificateExists,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Locally Significant Certificate and Manufacture Installed Certificate Exists")]
        LocallySignificantCertificateandManufactureInstalledCertificateExists,
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
    public class XPhoneProfile : XIPPhone 
    {
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("addPhoneResponse", Namespace="http://www.cisco.com/AXL/API/1.0", IsNullable=false)]
    public class StandardResponse 
    {
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string @return;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public System.UInt64 sequence;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool sequenceSpecified;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("removePhone", Namespace="http://www.cisco.com/AXL/API/1.0", IsNullable=false)]
    public class RemovePhoneReq 
    {
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("phoneId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("phoneName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")]
        public string Item;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public ItemChoiceType3 ItemElementName;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public System.UInt64 sequence;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool sequenceSpecified;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
    public enum ItemChoiceType3 
    {
    
        /// <remarks/>
        phoneId,
    
        /// <remarks/>
        phoneName,
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("updatePhone", Namespace="http://www.cisco.com/AXL/API/1.0", IsNullable=false)]
    public class UpdatePhoneReq 
    {
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("name", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("uuid", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")]
        public string Item;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public ItemChoiceType4 ItemElementName;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="Name")]
        public string newName;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string description;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("callingSearchSpaceId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("callingSearchSpaceName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="Name")]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("Item1ElementName")]
        public string Item1;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public Item1ChoiceType1 Item1ElementName;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("devicePoolName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("devicePoolId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("Item2ElementName")]
        public string Item2;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public Item2ChoiceType Item2ElementName;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("locationName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="Name")]
        [System.Xml.Serialization.XmlElementAttribute("locationId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("Item3ElementName")]
        public string Item3;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public Item3ChoiceType Item3ElementName;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("mediaResourceListId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("mediaResourceListName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="Name")]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("Item4ElementName")]
        public string Item4;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public Item4ChoiceType Item4ElementName;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="nonNegativeInteger")]
        public string networkHoldMOHAudioSourceId;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="nonNegativeInteger")]
        public string userHoldMOHAudioSourceId;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("automatedAlternateRoutingCSSId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("automatedAlternateRoutingCSSName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("Item5ElementName")]
        public string Item5;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public Item5ChoiceType Item5ElementName;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("aarNeighborhoodName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("aarNeighborhoodId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("Item6ElementName")]
        public string Item6;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public Item6ChoiceType Item6ElementName;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XLoadInformation loadInformation;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public System.Xml.XmlElement vendorConfig;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool traceFlag;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool traceFlagSpecified;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int mlppDomainId;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool mlppDomainIdSpecified;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XStatus mlppIndicationStatus;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool mlppIndicationStatusSpecified;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XPreemption preemption;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool preemptionSpecified;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool retryVideoCallAsVoice;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool retryVideoCallAsVoiceSpecified;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string associatedPC;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public UpdatePhoneReqLines lines;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("phoneTemplateId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("phoneTemplateName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("Item7ElementName")]
        public string Item7;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public Item7ChoiceType Item7ElementName;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute("speeddial", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public XSpeeddial[] speeddials;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute("addOnModule", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public XAddOnModule[] addOnModules;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XUserLocale userLocale;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool userLocaleSpecified;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XCountry networkLocale;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool networkLocaleSpecified;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XDeviceSecurityMode deviceSecurityMode;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool deviceSecurityModeSpecified;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="nonNegativeInteger")]
        public string idleTimeout;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="anyURI")]
        public string authenticationURL;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="anyURI")]
        public string directoryURL;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="anyURI")]
        public string idleURL;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="anyURI")]
        public string informationURL;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="anyURI")]
        public string messagesURL;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="anyURI")]
        public string proxyServerURL;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="anyURI")]
        public string servicesURL;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute("service", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public XSubscribedService[] services;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("softkeyTemplateName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("softkeyTemplateId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("Item8ElementName")]
        public string Item8;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public Item8ChoiceType1 Item8ElementName;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("defaultProfileId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("defaultProfileName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("Item9ElementName")]
        public string Item9;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public Item9ChoiceType Item9ElementName;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool enableExtensionMobility;

        // Added by Metreos for more serialization control.  
        //
        // From the schema docs on this action:   
        // enableExtensionMobility:     Whether or not to enable extension mobility.  
        //                              A default profile is required regardless if this is true or false.  Not nullable.
        //
        // Seth:  this is odd for the AXL SOAP api:  it has never before required that you set something when not needed.
        // While it's true that for whatever reason the AXL SOAP API is in fact requiring that
        // in the case enableExtensionMobility is true or false, that you then have to set the DefaultProfileName field,
        // it is not the case that the field is not nillable.  It IS nillable, and when you null it, it allows you
        // to not have to specify, and thereby alter, the configuration of the phone you are updating in this regard.
        // So, long story short, this field allows us to do what a developer will tend to want to do: not worry
        // about the state of extension mobility on their phone device they are updating

        // Also odd is the correct behavior bit: when you disable extension mobility of a phone, why in the world
        // must you set the default profile name!  This is contrary to ccmadmin validation behavior 
        // as wellas and my understanding of the purpose of the default profile name 
        // (i.e, its only needed if enableExtMob is TRUE!)
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool enableExtensionMobilitySpecified;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XStatus builtInBridgeStatus;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool builtInBridgeStatusSpecified;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XStatus callInfoPrivacyStatus;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool callInfoPrivacyStatusSpecified;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string ownerUserId;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(false)]
        public bool ignorePresentationIndicators = false;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XPacketCaptureMode packetCaptureMode;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool packetCaptureModeSpecified;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="positiveInteger", IsNullable=true)]
        public string packetCaptureDuration;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XCertificateOperation certificateOperation;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool certificateOperationSpecified;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XAuthenticationMode authenticationMode;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool authenticationModeSpecified;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="Name", IsNullable=true)]
        public string authenticationString;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XCertificateStatus certificateStatus;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool certificateStatusSpecified;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XKeySize keySize;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool keySizeSpecified;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="Name", IsNullable=true)]
        public string upgradeFinishTime;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XCertificate certificate;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool certificateSpecified;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public System.UInt64 sequence;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool sequenceSpecified;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
    public enum ItemChoiceType4 
    {
    
        /// <remarks/>
        name,
    
        /// <remarks/>
        uuid,
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
    public enum Item1ChoiceType1 
    {
    
        /// <remarks/>
        callingSearchSpaceId,
    
        /// <remarks/>
        callingSearchSpaceName,
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
    public enum Item2ChoiceType 
    {
    
        /// <remarks/>
        devicePoolName,
    
        /// <remarks/>
        devicePoolId,
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
    public enum Item3ChoiceType 
    {
    
        /// <remarks/>
        locationName,
    
        /// <remarks/>
        locationId,
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
    public enum Item4ChoiceType 
    {
    
        /// <remarks/>
        mediaResourceListId,
    
        /// <remarks/>
        mediaResourceListName,
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
    public enum Item5ChoiceType 
    {
    
        /// <remarks/>
        automatedAlternateRoutingCSSId,
    
        /// <remarks/>
        automatedAlternateRoutingCSSName,
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
    public enum Item6ChoiceType 
    {
    
        /// <remarks/>
        aarNeighborhoodName,
    
        /// <remarks/>
        aarNeighborhoodId,
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class UpdatePhoneReqLines 
    {
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("lineIdentifier", typeof(XNumplanIdentifier), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("line", typeof(XLine), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public object[] Items;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
    public enum Item7ChoiceType 
    {
    
        /// <remarks/>
        phoneTemplateId,
    
        /// <remarks/>
        phoneTemplateName,
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
    public enum Item8ChoiceType1 
    {
    
        /// <remarks/>
        softkeyTemplateName,
    
        /// <remarks/>
        softkeyTemplateId,
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
    public enum Item9ChoiceType 
    {
    
        /// <remarks/>
        defaultProfileId,
    
        /// <remarks/>
        defaultProfileName,
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("getPhone", Namespace="http://www.cisco.com/AXL/API/1.0", IsNullable=false)]
    public class GetPhoneReq 
    {
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("phoneId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("phoneName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")]
        public string Item;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public ItemChoiceType5 ItemElementName;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public System.UInt64 sequence;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool sequenceSpecified;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
    public enum ItemChoiceType5 
    {
    
        /// <remarks/>
        phoneId,
    
        /// <remarks/>
        phoneName,
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("getPhoneResponse", Namespace="http://www.cisco.com/AXL/API/1.0", IsNullable=false)]
    public class GetPhoneRes 
    {
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public GetPhoneResReturn @return;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public System.UInt64 sequence;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool sequenceSpecified;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class GetPhoneResReturn 
    {
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XIPPhone device;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("doDeviceLogin", Namespace="http://www.cisco.com/AXL/API/1.0", IsNullable=false)]
    public class DeviceLoginReq 
    {
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("deviceId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("deviceName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")]
        public string Item;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public ItemChoiceType6 ItemElementName;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="nonNegativeInteger")]
        public string loginDuration;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("profileName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("profileId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("Item1ElementName")]
        public string Item1;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public Item1ChoiceType2 Item1ElementName;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string userId;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public System.UInt64 sequence;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool sequenceSpecified;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
    public enum ItemChoiceType6 
    {
    
        /// <remarks/>
        deviceId,
    
        /// <remarks/>
        deviceName,
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
    public enum Item1ChoiceType2 
    {
    
        /// <remarks/>
        profileName,
    
        /// <remarks/>
        profileId,
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("doDeviceLoginResponse", Namespace="http://www.cisco.com/AXL/API/1.0", IsNullable=false)]
    public class DeviceLoginResponse 
    {
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string @return;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public System.UInt64 sequence;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool sequenceSpecified;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("doDeviceLogout", Namespace="http://www.cisco.com/AXL/API/1.0", IsNullable=false)]
    public class DeviceLogoutReq 
    {
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("deviceId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("deviceName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")]
        public string Item;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public ItemChoiceType7 ItemElementName;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public System.UInt64 sequence;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool sequenceSpecified;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
    public enum ItemChoiceType7 
    {
    
        /// <remarks/>
        deviceId,
    
        /// <remarks/>
        deviceName,
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("doDeviceLogoutResponse", Namespace="http://www.cisco.com/AXL/API/1.0", IsNullable=false)]
    public class DeviceLogoutRes 
    {
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string @return;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public System.UInt64 sequence;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool sequenceSpecified;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("doDeviceReset", Namespace="http://www.cisco.com/AXL/API/1.0", IsNullable=false)]
    public class DeviceResetReq 
    {
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("deviceId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("deviceName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")]
        public string Item;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public ItemChoiceType8 ItemElementName;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(false)]
        public bool isHardReset = false;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public System.UInt64 sequence;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool sequenceSpecified;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
    public enum ItemChoiceType8 
    {
    
        /// <remarks/>
        deviceId,
    
        /// <remarks/>
        deviceName,
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("doDeviceResetResponse", Namespace="http://www.cisco.com/AXL/API/1.0", IsNullable=false)]
    public class DeviceResetRes 
    {
        // The commented out section below is .NET choking on too much sequence/choice XSD specifications.
        // The following is valid, however, it does not force correct usage
        //(i.e, if you specify routePartitionId, don't specify routePartitionName)
        public string uuid;

        public string pattern;

        public string routePartitionId;

        public string routePartitionName;

        public string routeFilterId;

        public string routeFilterName;

//        /// <remarks/>
//        [System.Xml.Serialization.XmlElementAttribute("routePartitionId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
//        [System.Xml.Serialization.XmlElementAttribute("routePartitionName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
//        [System.Xml.Serialization.XmlElementAttribute("uuid", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
//        [System.Xml.Serialization.XmlElementAttribute("pattern", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
//        [System.Xml.Serialization.XmlElementAttribute("routeFilterId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
//        [System.Xml.Serialization.XmlElementAttribute("routeFilterName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
//        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")]
//        public string Item;
//    
//        /// <remarks/>
//        [System.Xml.Serialization.XmlIgnoreAttribute()]
//        public ItemChoiceType9 ItemElementName;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public System.UInt64 sequence;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool sequenceSpecified;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
    public enum ItemChoiceType9 
    {
    
        /// <remarks/>
        routePartitionId,
    
        /// <remarks/>
        routePartitionName,
    
        /// <remarks/>
        uuid,
    
        /// <remarks/>
        pattern,
    
        /// <remarks/>
        routeFilterId,
    
        /// <remarks/>
        routeFilterName,
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("addLine", Namespace="http://www.cisco.com/AXL/API/1.0", IsNullable=false)]
    public class AddLineReq 
    {
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XNPDirectoryNumber newLine;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public System.UInt64 sequence;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool sequenceSpecified;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("removeLine", Namespace="http://www.cisco.com/AXL/API/1.0", IsNullable=false)]
    public class RemoveLineReq 
    {
        // The commented out section below is .NET choking on too much sequence/choice XSD specifications.
        // The following is valid, however, it does not force correct usage
        //(i.e, if you specify routePartitionId, don't specify routePartitionName)
        public string uuid;

        public string pattern;

        public string routePartitionId;

        public string routePartitionName;

        public string routeFilterId;

        public string routeFilterName;
    
//        /// <remarks/>
//        [System.Xml.Serialization.XmlElementAttribute("routePartitionId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
//        [System.Xml.Serialization.XmlElementAttribute("routePartitionName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
//        [System.Xml.Serialization.XmlElementAttribute("uuid", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
//        [System.Xml.Serialization.XmlElementAttribute("pattern", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
//        [System.Xml.Serialization.XmlElementAttribute("routeFilterId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
//        [System.Xml.Serialization.XmlElementAttribute("routeFilterName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
//        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")]
//        public string Item;
//    
//        /// <remarks/>
//        [System.Xml.Serialization.XmlIgnoreAttribute()]
//        public ItemChoiceType10 ItemElementName;
//    
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public System.UInt64 sequence;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool sequenceSpecified;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
    public enum ItemChoiceType10 
    {
    
        /// <remarks/>
        routePartitionId,
    
        /// <remarks/>
        routePartitionName,
    
        /// <remarks/>
        uuid,
    
        /// <remarks/>
        pattern,
    
        /// <remarks/>
        routeFilterId,
    
        /// <remarks/>
        routeFilterName,
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("updateLine", Namespace="http://www.cisco.com/AXL/API/1.0", IsNullable=false)]
    public class UpdateLineReq 
    {

        // The commented out section below is .NET choking on too much sequence/choice XSD specifications.
        // The following is valid, however, it does not force correct usage
        //(i.e, if you specify routePartitionId, don't specify routePartitionName)
        public string uuid;

        public string pattern;

        public string routePartitionId;

        public string routePartitionName;

        public string routeFilterId;

        public string routeFilterName;
    
//        /// <remarks/>
//        [System.Xml.Serialization.XmlElementAttribute("routePartitionId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
//        [System.Xml.Serialization.XmlElementAttribute("routePartitionName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
//        [System.Xml.Serialization.XmlElementAttribute("uuid", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
//        [System.Xml.Serialization.XmlElementAttribute("pattern", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
//        [System.Xml.Serialization.XmlElementAttribute("routeFilterId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
//        [System.Xml.Serialization.XmlElementAttribute("routeFilterName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
//        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")]
//        public string Item;
//    
//        /// <remarks/>
//        [System.Xml.Serialization.XmlIgnoreAttribute()]
//        public ItemChoiceType11 ItemElementName;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string newPattern;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string description;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("newRoutePartitionId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("newRoutePartitionName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("Item1ElementName")]
        public string Item1;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public Item1ChoiceType3 Item1ElementName;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("aarNeighborhoodName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("aarNeighborhoodId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("Item2ElementName")]
        public string Item2;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public Item2ChoiceType1 Item2ElementName;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public XCallForwardInfo callForwardAll;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public XCallForwardInfo callForwardBusy;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public XCallForwardInfo callForwardBusyInt;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public XCallForwardInfo callForwardNoAnswer;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public XCallForwardInfo callForwardNoAnswerInt;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public XCallForwardInfo callForwardNoCoverage;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public XCallForwardInfo callForwardNoCoverageInt;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XCallForwardInfo callForwardOnFailure;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XCallForwardInfo callForwardAlternateParty;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("callPickupGroupName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("callPickupGroupId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("Item3ElementName")]
        public string Item3;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public Item3ChoiceType1 Item3ElementName;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XAutoAnswer autoAnswer;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool autoAnswerSpecified;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="nonNegativeInteger")]
        public string networkHoldMOHAudioSourceId;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="nonNegativeInteger")]
        public string userHoldMOHAudioSourceId;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string alertingName;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("shareLineAppearanceCSSId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("shareLineAppearanceCSSName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("Item4ElementName")]
        public string Item4;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public Item4ChoiceType1 Item4ElementName;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("voiceMailProfileId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("voiceMailProfileName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("Item5ElementName")]
        public string Item5;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public Item5ChoiceType1 Item5ElementName;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XPatternPrecedence patternPrecedence;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool patternPrecedenceSpecified;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XReleaseCauseValue releaseCause;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool releaseCauseSpecified;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public System.UInt64 sequence;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool sequenceSpecified;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
    public enum ItemChoiceType11 
    {
    
        /// <remarks/>
        routePartitionId,
    
        /// <remarks/>
        routePartitionName,
    
        /// <remarks/>
        uuid,
    
        /// <remarks/>
        pattern,
    
        /// <remarks/>
        routeFilterId,
    
        /// <remarks/>
        routeFilterName,
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
    public enum Item1ChoiceType3 
    {
    
        /// <remarks/>
        newRoutePartitionId,
    
        /// <remarks/>
        newRoutePartitionName,
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
    public enum Item2ChoiceType1 
    {
    
        /// <remarks/>
        aarNeighborhoodName,
    
        /// <remarks/>
        aarNeighborhoodId,
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
    public enum Item3ChoiceType1 
    {
    
        /// <remarks/>
        callPickupGroupName,
    
        /// <remarks/>
        callPickupGroupId,
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
    public enum Item4ChoiceType1 
    {
    
        /// <remarks/>
        shareLineAppearanceCSSId,
    
        /// <remarks/>
        shareLineAppearanceCSSName,
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
    public enum Item5ChoiceType1 
    {
    
        /// <remarks/>
        voiceMailProfileId,
    
        /// <remarks/>
        voiceMailProfileName,
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("getLine", Namespace="http://www.cisco.com/AXL/API/1.0", IsNullable=false)]
    public class GetLineReq 
    {
        // The commented out section below is .NET choking on too much sequence/choice XSD specifications.
        // The following is valid, however, it does not force correct usage 
        //(i.e, if you specify routePartitionId, don't specify routePartitionName)
        public string uuid;

        public string pattern;

        public string routePartitionId;

        public string routePartitionName;

        public string routeFilterId;

        public string routeFilterName;

//        /// <remarks/>
//        [System.Xml.Serialization.XmlElementAttribute("routePartitionId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
//        [System.Xml.Serialization.XmlElementAttribute("routePartitionName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
//        [System.Xml.Serialization.XmlElementAttribute("uuid", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
//        [System.Xml.Serialization.XmlElementAttribute("pattern", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
//        [System.Xml.Serialization.XmlElementAttribute("routeFilterId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
//        [System.Xml.Serialization.XmlElementAttribute("routeFilterName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
//        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")]
//        public string Item;
//    
//        /// <remarks/>
//        [System.Xml.Serialization.XmlIgnoreAttribute()]
//        public ItemChoiceType12 ItemElementName;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public System.UInt64 sequence;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool sequenceSpecified;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
    public enum ItemChoiceType12 
    {
    
        /// <remarks/>
        routePartitionId,
    
        /// <remarks/>
        routePartitionName,
    
        /// <remarks/>
        uuid,
    
        /// <remarks/>
        pattern,
    
        /// <remarks/>
        routeFilterId,
    
        /// <remarks/>
        routeFilterName,
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("getLineResponse", Namespace="http://www.cisco.com/AXL/API/1.0", IsNullable=false)]
    public class GetLineRes 
    {
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public GetLineResReturn @return;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public System.UInt64 sequence;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool sequenceSpecified;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class GetLineResReturn 
    {
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XNPDirectoryNumber directoryNumber;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("addUser", Namespace="http://www.cisco.com/AXL/API/1.0", IsNullable=false)]
    public class AddUserReq 
    {
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XUser newUser;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public System.UInt64 sequence;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool sequenceSpecified;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
    public class XUser 
    {
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string firstname;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string lastname;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string userid;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string password;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string pin;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string telephoneNumber;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string extension;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string department;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string manager;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XUserLocale locale;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool localeSpecified;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute("device", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public string[] associatedDevices;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string associatedPC;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool authenticationProxyRights;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool authenticationProxyRightsSpecified;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool enableCTI;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool enableCTISpecified;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool enableCTISuperProvider;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool enableCTISuperProviderSpecified;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool allowCallParkRetrieval;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool allowCallParkRetrievalSpecified;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool callingNumberModAllowed;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool callingNumberModAllowedSpecified;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string iaqExtension;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XUserPhoneProfiles phoneProfiles;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
    public class XUserPhoneProfiles 
    {
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("profile", typeof(XPhoneProfile), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("profileName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public object[] Items;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("removeUser", Namespace="http://www.cisco.com/AXL/API/1.0", IsNullable=false)]
    public class RemoveUserReq 
    {
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string userid;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public System.UInt64 sequence;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool sequenceSpecified;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("updateUser", Namespace="http://www.cisco.com/AXL/API/1.0", IsNullable=false)]
    public class UpdateUserReq 
    {
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string userid;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string firstname;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string lastname;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string password;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string pin;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string telephoneNumber;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string extension;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string department;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string manager;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XCountry locale;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool localeSpecified;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute("device", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public string[] associatedDevices;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string associatedPC;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool authenticationProxyRights;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool authenticationProxyRightsSpecified;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool enableCTI;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool enableCTISpecified;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool enableCTISuperProvider;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool enableCTISuperProviderSpecified;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool allowCallParkRetrieval;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool allowCallParkRetrievalSpecified;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool callingNumberModAllowed;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool callingNumberModAllowedSpecified;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string iaqExtension;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public UpdateUserReqPhoneProfiles phoneProfiles;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public System.UInt64 sequence;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool sequenceSpecified;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class UpdateUserReqPhoneProfiles 
    {
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("profile", typeof(XPhoneProfile), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("profileName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public object[] Items;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("getUser", Namespace="http://www.cisco.com/AXL/API/1.0", IsNullable=false)]
    public class GetUserReq 
    {
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string userid;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public System.UInt64 sequence;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool sequenceSpecified;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("getUserResponse", Namespace="http://www.cisco.com/AXL/API/1.0", IsNullable=false)]
    public class GetUserRes 
    {
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public GetUserResReturn @return;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public System.UInt64 sequence;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool sequenceSpecified;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class GetUserResReturn 
    {
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XUser user;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("addDeviceProfile", Namespace="http://www.cisco.com/AXL/API/1.0", IsNullable=false)]
    public class AddDeviceProfileReq 
    {
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XPhoneProfile newProfile;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public System.UInt64 sequence;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool sequenceSpecified;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("removeDeviceProfile", Namespace="http://www.cisco.com/AXL/API/1.0", IsNullable=false)]
    public class RemoveDeviceProfileReq 
    {
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("profileName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("profileId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")]
        public string Item;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public ItemChoiceType13 ItemElementName;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public System.UInt64 sequence;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool sequenceSpecified;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
    public enum ItemChoiceType13 
    {
    
        /// <remarks/>
        profileName,
    
        /// <remarks/>
        profileId,
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("updateDeviceProfile", Namespace="http://www.cisco.com/AXL/API/1.0", IsNullable=false)]
    public class UpdateDeviceProfileReq 
    {
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("name", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("uuid", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")]
        public string Item;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public ItemChoiceType14 ItemElementName;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="Name")]
        public string newName;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string description;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="nonNegativeInteger")]
        public string networkHoldMOHAudioSourceId;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="nonNegativeInteger")]
        public string userHoldMOHAudioSourceId;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int mlppDomainId;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool mlppDomainIdSpecified;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XStatus mlppIndicationStatus;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool mlppIndicationStatusSpecified;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XPreemption preemption;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool preemptionSpecified;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public UpdateDeviceProfileReqLines lines;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("phoneTemplateId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("phoneTemplateName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("Item1ElementName")]
        public string Item1;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public Item1ChoiceType4 Item1ElementName;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute("speeddial", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public XSpeeddial[] speeddials;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute("addOnModule", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public XAddOnModule[] addOnModules;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XUserLocale userLocale;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool userLocaleSpecified;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute("service", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public XSubscribedService[] services;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("softkeyTemplateName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("softkeyTemplateId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("Item2ElementName")]
        public string Item2;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public Item2ChoiceType2 Item2ElementName;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string loginUserId;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(false)]
        public bool ignorePresentationIndicators = false;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public System.UInt64 sequence;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool sequenceSpecified;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
    public enum ItemChoiceType14 
    {
    
        /// <remarks/>
        name,
    
        /// <remarks/>
        uuid,
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class UpdateDeviceProfileReqLines 
    {
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("lineIdentifier", typeof(XNumplanIdentifier), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("line", typeof(XLine), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public object[] Items;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
    public enum Item1ChoiceType4 
    {
    
        /// <remarks/>
        phoneTemplateId,
    
        /// <remarks/>
        phoneTemplateName,
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
    public enum Item2ChoiceType2 
    {
    
        /// <remarks/>
        softkeyTemplateName,
    
        /// <remarks/>
        softkeyTemplateId,
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("getDeviceProfile", Namespace="http://www.cisco.com/AXL/API/1.0", IsNullable=false)]
    public class GetDeviceProfileReq 
    {
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("profileName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("profileId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")]
        public string Item;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public ItemChoiceType15 ItemElementName;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public System.UInt64 sequence;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool sequenceSpecified;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
    public enum ItemChoiceType15 
    {
    
        /// <remarks/>
        profileName,
    
        /// <remarks/>
        profileId,
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("getDeviceProfileResponse", Namespace="http://www.cisco.com/AXL/API/1.0", IsNullable=false)]
    public class GetDeviceProfileRes 
    {
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public GetDeviceProfileResReturn @return;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public System.UInt64 sequence;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool sequenceSpecified;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class GetDeviceProfileResReturn 
    {
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XPhoneProfile profile;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("addTimePeriod", Namespace="http://www.cisco.com/AXL/API/1.0", IsNullable=false)]
    public class AddTimePeriodReq 
    {
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XTimePeriod timePeriod;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public System.UInt64 sequence;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool sequenceSpecified;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
    public class XTimePeriod 
    {
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string name;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XTimeOfDay startTime;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool startTimeSpecified;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XTimeOfDay endTime;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool endTimeSpecified;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XDayOfWeek startDay;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool startDaySpecified;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XDayOfWeek endDay;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool endDaySpecified;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XMonthOfYear monthOfYear;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool monthOfYearSpecified;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="nonNegativeInteger")]
        public string dayOfMonth;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
    public enum XTimeOfDay 
    {
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("No Office Hours")]
        NoOfficeHours,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("0:00")]
        Item000,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("0:15")]
        Item015,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("0:30")]
        Item030,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("0:45")]
        Item045,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("1:00")]
        Item100,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("1:15")]
        Item115,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("1:30")]
        Item130,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("1:45")]
        Item145,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("2:00")]
        Item200,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("2:15")]
        Item215,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("2:30")]
        Item230,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("2:45")]
        Item245,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("3:00")]
        Item300,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("3:15")]
        Item315,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("3:30")]
        Item330,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("3:45")]
        Item345,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("4:00")]
        Item400,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("4:15")]
        Item415,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("4:30")]
        Item430,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("4:45")]
        Item445,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("5:00")]
        Item500,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("5:15")]
        Item515,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("5:30")]
        Item530,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("5:45")]
        Item545,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("6:00")]
        Item600,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("6:15")]
        Item615,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("6:30")]
        Item630,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("6:45")]
        Item645,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("7:00")]
        Item700,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("7:15")]
        Item715,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("7:30")]
        Item730,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("7:45")]
        Item745,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("8:00")]
        Item800,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("8:15")]
        Item815,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("8:30")]
        Item830,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("8:45")]
        Item845,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("9:00")]
        Item900,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("9:15")]
        Item915,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("9:30")]
        Item930,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("9:45")]
        Item945,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("10:00")]
        Item1000,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("10:15")]
        Item1015,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("10:30")]
        Item1030,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("10:45")]
        Item1045,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("11:00")]
        Item1100,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("11:15")]
        Item1115,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("11:30")]
        Item1130,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("11:45")]
        Item1145,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("12:00")]
        Item1200,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("12:15")]
        Item1215,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("12:30")]
        Item1230,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("12:45")]
        Item1245,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("13:00")]
        Item1300,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("13:15")]
        Item1315,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("13:30")]
        Item1330,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("13:45")]
        Item1345,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("14:00")]
        Item1400,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("14:15")]
        Item1415,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("14:30")]
        Item1430,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("14:45")]
        Item1445,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("15:00")]
        Item1500,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("15:15")]
        Item1515,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("15:30")]
        Item1530,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("15:45")]
        Item1545,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("16:00")]
        Item1600,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("16:15")]
        Item1615,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("16:30")]
        Item1630,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("16:45")]
        Item1645,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("17:00")]
        Item1700,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("17:15")]
        Item1715,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("17:30")]
        Item1730,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("17:45")]
        Item1745,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("18:00")]
        Item1800,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("18:15")]
        Item1815,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("18:30")]
        Item1830,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("18:45")]
        Item1845,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("19:00")]
        Item1900,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("19:15")]
        Item1915,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("19:30")]
        Item1930,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("19:45")]
        Item1945,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("20:00")]
        Item2000,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("20:15")]
        Item2015,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("20:30")]
        Item2030,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("20:45")]
        Item2045,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("21:00")]
        Item2100,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("21:15")]
        Item2115,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("21:30")]
        Item2130,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("21:45")]
        Item2145,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("22:00")]
        Item2200,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("22:15")]
        Item2215,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("22:30")]
        Item2230,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("22:45")]
        Item2245,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("23:00")]
        Item2300,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("23:15")]
        Item2315,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("23:30")]
        Item2330,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("23:45")]
        Item2345,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("24:00")]
        Item2400,
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
    public enum XDayOfWeek 
    {
    
        /// <remarks/>
        Sun,
    
        /// <remarks/>
        Mon,
    
        /// <remarks/>
        Tue,
    
        /// <remarks/>
        Wed,
    
        /// <remarks/>
        Thu,
    
        /// <remarks/>
        Fri,
    
        /// <remarks/>
        Sat,
    
        /// <remarks/>
        None,
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
    public enum XMonthOfYear 
    {
    
        /// <remarks/>
        None,
    
        /// <remarks/>
        Jan,
    
        /// <remarks/>
        Feb,
    
        /// <remarks/>
        Mar,
    
        /// <remarks/>
        Apr,
    
        /// <remarks/>
        May,
    
        /// <remarks/>
        Jun,
    
        /// <remarks/>
        Jul,
    
        /// <remarks/>
        Aug,
    
        /// <remarks/>
        Sep,
    
        /// <remarks/>
        Oct,
    
        /// <remarks/>
        Nov,
    
        /// <remarks/>
        Dec,
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("getTimePeriod", Namespace="http://www.cisco.com/AXL/API/1.0", IsNullable=false)]
    public class NameAndGUIDRequest 
    {
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("name", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("uuid", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")]
        public string Item;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public ItemChoiceType16 ItemElementName;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public System.UInt64 sequence;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool sequenceSpecified;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
    public enum ItemChoiceType16 
    {
    
        /// <remarks/>
        name,
    
        /// <remarks/>
        uuid,
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("getTimePeriodResponse", Namespace="http://www.cisco.com/AXL/API/1.0", IsNullable=false)]
    public class GetTimePeriodRes 
    {
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public GetTimePeriodResReturn @return;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public System.UInt64 sequence;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool sequenceSpecified;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class GetTimePeriodResReturn 
    {
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XTimePeriod timePeriod;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("updateTimePeriod", Namespace="http://www.cisco.com/AXL/API/1.0", IsNullable=false)]
    public class UpdateTimePeriodReq 
    {
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("name", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("uuid", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")]
        public string Item;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public ItemChoiceType17 ItemElementName;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string newName;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XTimeOfDay startTime;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool startTimeSpecified;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XTimeOfDay endTime;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool endTimeSpecified;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XDayOfWeek startDay;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool startDaySpecified;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XDayOfWeek endDay;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool endDaySpecified;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XMonthOfYear monthOfYear;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool monthOfYearSpecified;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="nonNegativeInteger")]
        public string dayOfMonth;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public System.UInt64 sequence;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool sequenceSpecified;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
    public enum ItemChoiceType17 
    {
    
        /// <remarks/>
        name,
    
        /// <remarks/>
        uuid,
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("addTimeSchedule", Namespace="http://www.cisco.com/AXL/API/1.0", IsNullable=false)]
    public class AddTimeScheduleReq 
    {
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XTimeSchedule timeSchedule;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public System.UInt64 sequence;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool sequenceSpecified;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
    public class XTimeSchedule 
    {
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string name;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute("member", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public XTimeScheduleTimePeriod[] members;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string uuid;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
    public class XTimeScheduleTimePeriod 
    {
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("timePeriodName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("timePeriod", typeof(XTimeScheduleTimePeriodTimePeriod), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public object Item;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string uuid;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
    public class XTimeScheduleTimePeriodTimePeriod : XTimePeriod 
    {
    
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string uuid;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("getTimeScheduleResponse", Namespace="http://www.cisco.com/AXL/API/1.0", IsNullable=false)]
    public class GetTimeScheduleRes 
    {
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public GetTimeScheduleResReturn @return;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public System.UInt64 sequence;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool sequenceSpecified;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class GetTimeScheduleResReturn 
    {
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XTimeSchedule timeSchedule;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("updateTimeSchedule", Namespace="http://www.cisco.com/AXL/API/1.0", IsNullable=false)]
    public class UpdateTimeScheduleReq 
    {
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("name", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("uuid", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")]
        public string Item;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public ItemChoiceType18 ItemElementName;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string newName;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute("member", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public XTimeScheduleTimePeriod[] members;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public System.UInt64 sequence;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool sequenceSpecified;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
    public enum ItemChoiceType18 
    {
    
        /// <remarks/>
        name,
    
        /// <remarks/>
        uuid,
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("addRoutePartition", Namespace="http://www.cisco.com/AXL/API/1.0", IsNullable=false)]
    public class AddRoutePartitionReq 
    {
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XRoutePartition newRoutePartition;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public System.UInt64 sequence;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool sequenceSpecified;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("updateRoutePartition", Namespace="http://www.cisco.com/AXL/API/1.0", IsNullable=false)]
    public class UpdateRoutePartitionReq 
    {
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("name", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("uuid", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")]
        public string Item;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public ItemChoiceType19 ItemElementName;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string newName;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string description;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("newTimeScheduleName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("newTimeScheduleId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("Item1ElementName")]
        public string Item1;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public Item1ChoiceType5 Item1ElementName;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool useOriginatingDeviceTimeZone;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool useOriginatingDeviceTimeZoneSpecified;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XTimeZone timeZone;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool timeZoneSpecified;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public System.UInt64 sequence;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool sequenceSpecified;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
    public enum ItemChoiceType19 
    {
    
        /// <remarks/>
        name,
    
        /// <remarks/>
        uuid,
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
    public enum Item1ChoiceType5 
    {
    
        /// <remarks/>
        newTimeScheduleName,
    
        /// <remarks/>
        newTimeScheduleId,
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("removeRoutePartition", Namespace="http://www.cisco.com/AXL/API/1.0", IsNullable=false)]
    public class RemoveRoutePartitionReq 
    {
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("partitionId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("partitionName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")]
        public string Item;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public ItemChoiceType20 ItemElementName;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public System.UInt64 sequence;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool sequenceSpecified;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
    public enum ItemChoiceType20 
    {
    
        /// <remarks/>
        partitionId,
    
        /// <remarks/>
        partitionName,
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("getRoutePartition", Namespace="http://www.cisco.com/AXL/API/1.0", IsNullable=false)]
    public class GetRoutePartitionReq 
    {
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("partitionId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("partitionName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")]
        public string Item;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public ItemChoiceType21 ItemElementName;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public System.UInt64 sequence;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool sequenceSpecified;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
    public enum ItemChoiceType21 
    {
    
        /// <remarks/>
        partitionId,
    
        /// <remarks/>
        partitionName,
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("getRoutePartitionResponse", Namespace="http://www.cisco.com/AXL/API/1.0", IsNullable=false)]
    public class GetRoutePartitionRes 
    {
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public GetRoutePartitionResReturn @return;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public System.UInt64 sequence;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool sequenceSpecified;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class GetRoutePartitionResReturn 
    {
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XRoutePartition routePartition;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("getCSSResponse", Namespace="http://www.cisco.com/AXL/API/1.0", IsNullable=false)]
    public class GetCSSRes 
    {
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public GetCSSResReturn @return;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public System.UInt64 sequence;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool sequenceSpecified;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class GetCSSResReturn 
    {
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XCallingSearchSpace callingSearchSpace;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("addCSS", Namespace="http://www.cisco.com/AXL/API/1.0", IsNullable=false)]
    public class AddCSSReq 
    {
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XCallingSearchSpace newCSS;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public System.UInt64 sequence;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool sequenceSpecified;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("updateCSS", Namespace="http://www.cisco.com/AXL/API/1.0", IsNullable=false)]
    public class UpdateCSSReq 
    {
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("name", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("uuid", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")]
        public string Item;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public ItemChoiceType22 ItemElementName;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string newName;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string description;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute("member", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public XCallingSearchSpaceMember[] members;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public System.UInt64 sequence;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool sequenceSpecified;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
    public enum ItemChoiceType22 
    {
    
        /// <remarks/>
        name,
    
        /// <remarks/>
        uuid,
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("getTransPattern", Namespace="http://www.cisco.com/AXL/API/1.0", IsNullable=false)]
    public class GetTransPatternReq 
    {
    
        // The commented out section below is .NET choking on too much sequence/choice XSD specifications.
        // The following is valid, however, it does not force correct usage
        //(i.e, if you specify routePartitionId, don't specify routePartitionName)
        public string uuid;

        public string pattern;

        public string routePartitionId;

        public string routePartitionName;

        public string routeFilterId;

        public string routeFilterName;

//        /// <remarks/>
//        [System.Xml.Serialization.XmlElementAttribute("routePartitionId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
//        [System.Xml.Serialization.XmlElementAttribute("routePartitionName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
//        [System.Xml.Serialization.XmlElementAttribute("uuid", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
//        [System.Xml.Serialization.XmlElementAttribute("pattern", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
//        [System.Xml.Serialization.XmlElementAttribute("routeFilterId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
//        [System.Xml.Serialization.XmlElementAttribute("routeFilterName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
//        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")]
//        public string Item;
//    
//        /// <remarks/>
//        [System.Xml.Serialization.XmlIgnoreAttribute()]
//        public ItemChoiceType23 ItemElementName;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public System.UInt64 sequence;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool sequenceSpecified;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
    public enum ItemChoiceType23 
    {
    
        /// <remarks/>
        routePartitionId,
    
        /// <remarks/>
        routePartitionName,
    
        /// <remarks/>
        uuid,
    
        /// <remarks/>
        pattern,
    
        /// <remarks/>
        routeFilterId,
    
        /// <remarks/>
        routeFilterName,
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("getTransPatternResponse", Namespace="http://www.cisco.com/AXL/API/1.0", IsNullable=false)]
    public class GetTransPatternRes 
    {
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public GetTransPatternResReturn @return;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public System.UInt64 sequence;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool sequenceSpecified;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class GetTransPatternResReturn 
    {
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XNPTranslationPattern pattern;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
    public class XNPTranslationPattern : XNPPattern 
    {
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("callingSearchSpace", typeof(XCallingSearchSpace), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("callingSearchSpaceName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public object CallingSearchSpace;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(XNPTranslationPattern))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(XNPRoutePattern))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(XNPHuntPilot))]
    public abstract class XNPPattern 
    {
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string pattern;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string description;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XPatternUsage usage;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("routePartition", typeof(XRoutePartition), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("routePartitionName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public object Item;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool blockEnable;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string calledPartyTransformationMask;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string callingPartyTransformationMask;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XStatus useCallingPartyPhoneMask;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string callingPartyPrefixDigits;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("dialPlan", typeof(XDialPlan), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("dialPlanName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public object Item1;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="nonNegativeInteger")]
        public string dialPlanWizardGenId;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("digitDiscardInstructionName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("digitDiscardInstruction", typeof(XDigitDiscardInstruction), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public object Item2;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XLampBlinkRate messageWaiting;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XNetworkLocation networkLocation;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool patternUrgency;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string prefixDigitsOut;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("routeFilter", typeof(XRouteFilter), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("routeFilterName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public object Item3;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XPresentationBit callingLinePresentationBit;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool callingLinePresentationBitSpecified;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XPresentationBit callingNamePresentationBit;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool callingNamePresentationBitSpecified;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XPresentationBit connectedLinePresentationBit;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool connectedLinePresentationBitSpecified;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XPresentationBit connectedNamePresentationBit;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool connectedNamePresentationBitSpecified;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool supportOverlapSending;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool supportOverlapSendingSpecified;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XPatternPrecedence patternPrecedence;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool patternPrecedenceSpecified;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XReleaseCauseValue releaseCause;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool releaseCauseSpecified;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public object allowDeviceOverride;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public object provideOutsideDialtone;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string uuid;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
    public class XDialPlan 
    {
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string name;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string description;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string uuid;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
    public class XDigitDiscardInstruction 
    {
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string name;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string clause;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("dialPlan", typeof(XDialPlan), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("dialPlanName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public object Item;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="nonNegativeInteger")]
        public string digitAnalysisId;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute("member", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public XDigitDiscardInstructionMember[] members;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string uuid;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
    public class XDigitDiscardInstructionMember 
    {
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("dialPlanTag", typeof(XDialPlanTag), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("dialPlanTagName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public object Item;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string uuid;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
    public class XDialPlanTag 
    {
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string name;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("dialPlan", typeof(XDialPlan), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("dialPlanName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public object Item;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XOperator @operator;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool suppressFromRouteFilter;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool suppressFromRouteFilterSpecified;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string uuid;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
    public enum XOperator 
    {
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("NOT-SELECTED")]
        NOTSELECTED,
    
        /// <remarks/>
        EXISTS,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("DOES-NOT-EXIST")]
        DOESNOTEXIST,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("==")]
        Item,
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
    public enum XLampBlinkRate 
    {
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Lamp Off")]
        LampOff,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Lamp On")]
        LampOn,
    
        /// <remarks/>
        Wink,
    
        /// <remarks/>
        Flash,
    
        /// <remarks/>
        Blink,
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
    public class XRouteFilter 
    {
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string name;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string clause;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("dialPlan", typeof(XDialPlan), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("dialPlanName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public object Item;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="nonNegativeInteger")]
        public string dialPlanWizardGenId;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute("member", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public XRouteFilterMember[] members;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string uuid;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
    public class XRouteFilterMember 
    {
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("dialPlanTag", typeof(XDialPlanTag), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("dialPlanTagName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public object Item;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="nonNegativeInteger")]
        public string digits;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XOperator @operator;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string uuid;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute(DataType="nonNegativeInteger")]
        public string priority;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
    public class XNPRoutePattern : XNPPattern 
    {
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XNPRoutePatternDestination destination;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool authorizationCodeRequired;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool authorizationCodeRequiredSpecified;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="nonNegativeInteger")]
        public string authorizationLevelRequired;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool clientCodeRequired;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool clientCodeRequiredSpecified;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string withTag;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string withValueClause;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
    public class XNPRoutePatternDestination 
    {
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("routeList", typeof(XRouteList), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("gateway", typeof(XDevice), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("routeListName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("gatewayName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")]
        public object Item;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public ItemChoiceType55 ItemElementName;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
    public class XRouteList 
    {
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="Name")]
        public string name;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string description;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("callManagerGroupName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("callManagerGroup", typeof(XCallManagerGroup), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public object Item;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool routeListEnabled;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool routeListEnabledSpecified;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute("member", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public XRouteListMember[] members;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string uuid;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
    public class XRouteListMember 
    {
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("routeGroupName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("routeGroup", typeof(XRouteGroup), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public object Item;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="nonNegativeInteger")]
        public string selectionOrder;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string calledPartyTransformationMask;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string callingPartyTransformationMask;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("callingSearchSpace", typeof(XCallingSearchSpace), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("callingSearchSpaceName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="Name")]
        public object Item1;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="nonNegativeInteger")]
        public string dialPlanWizardGenId;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("digitDiscardInstructionName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="Name")]
        [System.Xml.Serialization.XmlElementAttribute("digitDiscardInstruction", typeof(XDigitDiscardInstruction), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public object Item2;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string prefixDigitsOut;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string callingPartyPrefixDigits;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XStatus useFullyQualifiedCallingPartyNumber;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string uuid;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
    public class XRouteGroup 
    {
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="Name")]
        public string name;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="nonNegativeInteger")]
        public string dialPlanWizardGenId;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute("member", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public XRouteGroupMember[] members;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string uuid;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
    public class XRouteGroupMember 
    {
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="nonNegativeInteger")]
        public string deviceSelectionOrder;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="nonNegativeInteger")]
        public string dialPlanWizardGenId;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("deviceId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("deviceName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("device", typeof(XDevice), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")]
        public object Item;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public ItemChoiceType26 ItemElementName;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string uuid;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute(DataType="nonNegativeInteger")]
        public string port;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0", IncludeInSchema=false)]
    public enum ItemChoiceType26 
    {
    
        /// <remarks/>
        deviceId,
    
        /// <remarks/>
        deviceName,
    
        /// <remarks/>
        device,
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0", IncludeInSchema=false)]
    public enum ItemChoiceType55 
    {
    
        /// <remarks/>
        routeList,
    
        /// <remarks/>
        gateway,
    
        /// <remarks/>
        routeListName,
    
        /// <remarks/>
        gatewayName,
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
    public class XNPHuntPilot : XNPPattern 
    {
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XNPHuntPilotDestination destination;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XHuntForwardInfo ForwardHuntBusy;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XHuntForwardInfo ForwardHuntNoAnswer;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
    public class XNPHuntPilotDestination 
    {
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("huntListName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("huntList", typeof(XHuntList), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public object Item;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
    public class XHuntList 
    {
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="Name")]
        public string name;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string description;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("callManagerGroupName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("callManagerGroup", typeof(XCallManagerGroup), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public object Item;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool routeListEnabled;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool routeListEnabledSpecified;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute("member", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public XHuntListMember[] members;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string uuid;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
    public class XHuntListMember 
    {
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("lineGroup", typeof(XLineGroup), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("lineGroupName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public object Item;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="nonNegativeInteger")]
        public string selectionOrder;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string calledPartyTransformationMask;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string callingPartyTransformationMask;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("callingSearchSpace", typeof(XCallingSearchSpace), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("callingSearchSpaceName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="Name")]
        public object Item1;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="nonNegativeInteger")]
        public string dialPlanWizardGenId;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("digitDiscardInstructionName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="Name")]
        [System.Xml.Serialization.XmlElementAttribute("digitDiscardInstruction", typeof(XDigitDiscardInstruction), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public object Item2;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string prefixDigitsOut;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string callingPartyPrefixDigits;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XStatus useFullyQualifiedCallingPartyNumber;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string uuid;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
    public class XLineGroup 
    {
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="Name")]
        public string name;
    
		/// <remarks/>
		[System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public XDistributeAlgorithm distributionAlgorithm;

		[System.Xml.Serialization.XmlIgnoreAttribute()] // Added manually by MSC
		public bool distributionAlgorithmSpecified;
        
		/// <remarks/>
		[System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="nonNegativeInteger")]
		//[System.ComponentModel.DefaultValueAttribute("10")]
		public string rnaReversionTimeOut = "10";
        
		/// <remarks/>
		[System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public XHuntAlgorithm huntAlgorithmNoAnswer;
        
		[System.Xml.Serialization.XmlIgnoreAttribute()]  // Added manually by MSC
		public bool huntAlgorithmNoAnswerSpecified;

		/// <remarks/>
		[System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public XHuntAlgorithm huntAlgorithmBusy;

		[System.Xml.Serialization.XmlIgnoreAttribute()]  // Added manually by MSC
		public bool huntAlgorithmBusySpecified;
        
		/// <remarks/>
		[System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public XHuntAlgorithm huntAlgorithmNotAvailable;

		[System.Xml.Serialization.XmlIgnoreAttribute()]  // Added manually by MSC
		public bool huntAlgorithmNotAvailableSpecified;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute("member", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public XLineGroupMember[] members;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string uuid;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
    public enum XDistributeAlgorithm 
    {
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Top Down")]
        TopDown,
    
        /// <remarks/>
        Circular,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Longest Idle Time")]
        LongestIdleTime,
    
        /// <remarks/>
        Broadcast,
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
    public enum XHuntAlgorithm 
    {
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Try next member; then, try next group in Hunt List")]
        TrynextmemberthentrynextgroupinHuntList,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Try next member, but do not go to next group")]
        Trynextmemberbutdonotgotonextgroup,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Skip remaining members, and go directly to next group")]
        Skipremainingmembersandgodirectlytonextgroup,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Stop hunting")]
        Stophunting,
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
    public class XLineGroupMember 
    {
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="nonNegativeInteger")]
        public string lineSelectionOrder;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("dnPatternAndPartition", typeof(XLineGroupMemberDnPatternAndPartition), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("directoryNumber", typeof(XNPDirectoryNumber), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("directoryNumberId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public object Item;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string uuid;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
    public class XLineGroupMemberDnPatternAndPartition 
    {
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string dnPattern;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("routePartition", typeof(XRoutePartition), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("routePartitionId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("routePartitionName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")]
        public object Item;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public ItemChoiceType24 ItemElementName;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0", IncludeInSchema=false)]
    public enum ItemChoiceType24 
    {
    
        /// <remarks/>
        routePartition,
    
        /// <remarks/>
        routePartitionId,
    
        /// <remarks/>
        routePartitionName,
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
    public class XHuntForwardInfo 
    {
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(false)]
        public bool usePersonalPreferences = false;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("callingSearchSpace", typeof(XCallingSearchSpace), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("callingSearchSpaceName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public object Item;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string destination;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="nonNegativeInteger")]
        public string maxHuntduration;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("removeTransPattern", Namespace="http://www.cisco.com/AXL/API/1.0", IsNullable=false)]
    public class RemoveTransPatternReq 
    {
    
        // The commented out section below is .NET choking on too much sequence/choice XSD specifications.
        // The following is valid, however, it does not force correct usage
        //(i.e, if you specify routePartitionId, don't specify routePartitionName)
        public string uuid;

        public string pattern;

        public string routePartitionId;

        public string routePartitionName;

        public string routeFilterId;

        public string routeFilterName;

//        /// <remarks/>
//        [System.Xml.Serialization.XmlElementAttribute("routePartitionId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
//        [System.Xml.Serialization.XmlElementAttribute("routePartitionName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
//        [System.Xml.Serialization.XmlElementAttribute("uuid", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
//        [System.Xml.Serialization.XmlElementAttribute("pattern", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
//        [System.Xml.Serialization.XmlElementAttribute("routeFilterId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
//        [System.Xml.Serialization.XmlElementAttribute("routeFilterName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
//        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")]
//        public string Item;
//    
//        /// <remarks/>
//        [System.Xml.Serialization.XmlIgnoreAttribute()]
//        public ItemChoiceType67 ItemElementName;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public System.UInt64 sequence;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool sequenceSpecified;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
    public enum ItemChoiceType67 
    {
    
        /// <remarks/>
        routePartitionId,
    
        /// <remarks/>
        routePartitionName,
    
        /// <remarks/>
        uuid,
    
        /// <remarks/>
        pattern,
    
        /// <remarks/>
        routeFilterId,
    
        /// <remarks/>
        routeFilterName,
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("addTransPattern", Namespace="http://www.cisco.com/AXL/API/1.0", IsNullable=false)]
    public class AddTransPatternReq 
    {
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XNPTranslationPattern newPattern;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public System.UInt64 sequence;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool sequenceSpecified;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("updateTransPattern", Namespace="http://www.cisco.com/AXL/API/1.0", IsNullable=false)]
    public class UpdateTransPatternReq 
    {

        // The commented out section below is .NET choking on too much sequence/choice XSD specifications.
        // The following is valid, however, it does not force correct usage
        //(i.e, if you specify routePartitionId, don't specify routePartitionName)
        public string uuid;

        public string pattern;

        public string routePartitionId;

        public string routePartitionName;

        public string routeFilterId;

        public string routeFilterName;

//        /// <remarks/>
//        [System.Xml.Serialization.XmlElementAttribute("routePartitionId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
//        [System.Xml.Serialization.XmlElementAttribute("routePartitionName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
//        [System.Xml.Serialization.XmlElementAttribute("uuid", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
//        [System.Xml.Serialization.XmlElementAttribute("pattern", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
//        [System.Xml.Serialization.XmlElementAttribute("routeFilterId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
//        [System.Xml.Serialization.XmlElementAttribute("routeFilterName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
//        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")]
//        public string Item;
//    
//        /// <remarks/>
//        [System.Xml.Serialization.XmlIgnoreAttribute()]
//        public ItemChoiceType66 ItemElementName;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string newPattern;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string description;
    
//        /// <remarks/>
//        [System.Xml.Serialization.XmlElementAttribute("routePartitionId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
//        [System.Xml.Serialization.XmlElementAttribute("routePartitionName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
//        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("Item1ElementName")]
//        public string Item1;
//    
//        /// <remarks/>
//        [System.Xml.Serialization.XmlIgnoreAttribute()]
//        public Item1ChoiceType13 Item1ElementName;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool blockEnable;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool blockEnableSpecified;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string calledPartyTransformationMask;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string callingPartyTransformationMask;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XStatus useCallingPartyPhoneMask;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool useCallingPartyPhoneMaskSpecified;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string callingPartyPrefixDigits;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XPresentationBit callingPartyPresentation;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool callingPartyPresentationSpecified;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("dialPlanName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("dialPlanId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("Item2ElementName")]
        public string Item2;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public Item2ChoiceType10 Item2ElementName;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("digitDiscardInstructionName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("digitDiscardInstructionId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("Item3ElementName")]
        public string Item3;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public Item3ChoiceType9 Item3ElementName;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XLampBlinkRate messageWaiting;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool messageWaitingSpecified;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XNetworkLocation networkLocation;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool networkLocationSpecified;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool patternUrgency;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool patternUrgencySpecified;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string prefixDigitsOut;
    
//        /// <remarks/>
//        [System.Xml.Serialization.XmlElementAttribute("routeFilterId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
//        [System.Xml.Serialization.XmlElementAttribute("routeFilterName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
//        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("Item4ElementName")]
//        public string Item4;
//    
//        /// <remarks/>
//        [System.Xml.Serialization.XmlIgnoreAttribute()]
//        public Item4ChoiceType8 Item4ElementName;
//    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XPresentationBit callingLinePresentationBit;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool callingLinePresentationBitSpecified;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XPresentationBit callingNamePresentationBit;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool callingNamePresentationBitSpecified;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XPresentationBit connectedLinePresentationBit;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool connectedLinePresentationBitSpecified;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XPresentationBit connectedNamePresentationBit;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool connectedNamePresentationBitSpecified;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool supportOverlapSending;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool supportOverlapSendingSpecified;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XPatternPrecedence patternPrecedence;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool patternPrecedenceSpecified;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XReleaseCauseValue releaseCause;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool releaseCauseSpecified;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("callingSearchSpaceId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("callingSearchSpaceName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("Item5ElementName")]
        public string Item5;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public Item5ChoiceType6 Item5ElementName;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public System.UInt64 sequence;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool sequenceSpecified;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("updateTransPattern", Namespace="http://www.cisco.com/AXL/API/1.0", IsNullable=false)]
    public class UpdateTransPatternReq2
    {
        public string uuid;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("routePartitionId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("routePartitionName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("Item1ElementName")]
        public string Item1;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public Item1ChoiceType13 Item1ElementName;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("routeFilterId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("routeFilterName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("Item4ElementName")]
        public string Item4;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public Item4ChoiceType8 Item4ElementName;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
    public enum ItemChoiceType66 
    {
    
        /// <remarks/>
        routePartitionId,
    
        /// <remarks/>
        routePartitionName,
    
        /// <remarks/>
        uuid,
    
        /// <remarks/>
        pattern,
    
        /// <remarks/>
        routeFilterId,
    
        /// <remarks/>
        routeFilterName,
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
    public enum Item1ChoiceType13 
    {
    
        /// <remarks/>
        routePartitionId,
    
        /// <remarks/>
        routePartitionName,
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
    public enum Item2ChoiceType10 
    {
    
        /// <remarks/>
        dialPlanName,
    
        /// <remarks/>
        dialPlanId,
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
    public enum Item3ChoiceType9 
    {
    
        /// <remarks/>
        digitDiscardInstructionName,
    
        /// <remarks/>
        digitDiscardInstructionId,
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
    public enum Item4ChoiceType8 
    {
    
        /// <remarks/>
        routeFilterId,
    
        /// <remarks/>
        routeFilterName,
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
    public enum Item5ChoiceType6 
    {
    
        /// <remarks/>
        callingSearchSpaceId,
    
        /// <remarks/>
        callingSearchSpaceName,
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("getRoutePattern", Namespace="http://www.cisco.com/AXL/API/1.0", IsNullable=false)]
    public class GetRoutePatternReq 
    {
        // The commented out section below is .NET choking on too much sequence/choice XSD specifications.
        // The following is valid, however, it does not force correct usage
        //(i.e, if you specify routePartitionId, don't specify routePartitionName)
        public string uuid;

        public string pattern;

        public string routePartitionId;

        public string routePartitionName;

        public string routeFilterId;

        public string routeFilterName;
    
//        /// <remarks/>
//        [System.Xml.Serialization.XmlElementAttribute("routePartitionId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
//        [System.Xml.Serialization.XmlElementAttribute("routePartitionName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
//        [System.Xml.Serialization.XmlElementAttribute("uuid", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
//        [System.Xml.Serialization.XmlElementAttribute("pattern", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
//        [System.Xml.Serialization.XmlElementAttribute("routeFilterId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
//        [System.Xml.Serialization.XmlElementAttribute("routeFilterName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
//        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")]
//        public string Item;
//    
//        /// <remarks/>
//        [System.Xml.Serialization.XmlIgnoreAttribute()]
//        public ItemChoiceType88 ItemElementName;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public System.UInt64 sequence;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool sequenceSpecified;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
    public enum ItemChoiceType88 
    {
    
        /// <remarks/>
        routePartitionId,
    
        /// <remarks/>
        routePartitionName,
    
        /// <remarks/>
        uuid,
    
        /// <remarks/>
        pattern,
    
        /// <remarks/>
        routeFilterId,
    
        /// <remarks/>
        routeFilterName,
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("getRoutePatternResponse", Namespace="http://www.cisco.com/AXL/API/1.0", IsNullable=false)]
    public class GetRoutePatternRes 
    {
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public GetRoutePatternResReturn @return;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public System.UInt64 sequence;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool sequenceSpecified;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class GetRoutePatternResReturn 
    {
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XNPRoutePattern pattern;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("removeRoutePattern", Namespace="http://www.cisco.com/AXL/API/1.0", IsNullable=false)]
    public class RemoveRoutePatternReq 
    {
        // The commented out section below is .NET choking on too much sequence/choice XSD specifications.
        // The following is valid, however, it does not force correct usage
        //(i.e, if you specify routePartitionId, don't specify routePartitionName)
        public string uuid;

        public string pattern;

        public string routePartitionId;

        public string routePartitionName;

        public string routeFilterId;

        public string routeFilterName;

//        /// <remarks/>
//        [System.Xml.Serialization.XmlElementAttribute("routePartitionId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
//        [System.Xml.Serialization.XmlElementAttribute("routePartitionName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
//        [System.Xml.Serialization.XmlElementAttribute("uuid", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
//        [System.Xml.Serialization.XmlElementAttribute("pattern", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
//        [System.Xml.Serialization.XmlElementAttribute("routeFilterId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
//        [System.Xml.Serialization.XmlElementAttribute("routeFilterName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
//        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")]
//        public string Item;
//    
//        /// <remarks/>
//        [System.Xml.Serialization.XmlIgnoreAttribute()]
//        public ItemChoiceType81 ItemElementName;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public System.UInt64 sequence;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool sequenceSpecified;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
    public enum ItemChoiceType81 
    {
    
        /// <remarks/>
        routePartitionId,
    
        /// <remarks/>
        routePartitionName,
    
        /// <remarks/>
        uuid,
    
        /// <remarks/>
        pattern,
    
        /// <remarks/>
        routeFilterId,
    
        /// <remarks/>
        routeFilterName,
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("addRoutePattern", Namespace="http://www.cisco.com/AXL/API/1.0", IsNullable=false)]
    public class AddRoutePatternReq 
    {
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XNPRoutePattern newPattern;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public System.UInt64 sequence;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool sequenceSpecified;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("updateRoutePattern", Namespace="http://www.cisco.com/AXL/API/1.0", IsNullable=false)]
    public class UpdateRoutePatternReq 
    {
        // The commented out section below is .NET choking on too much sequence/choice XSD specifications.
        // The following is valid, however, it does not force correct usage
        //(i.e, if you specify routePartitionId, don't specify routePartitionName)
        public string uuid;

        public string pattern;

        public string routePartitionId;

        public string routePartitionName;

        public string routeFilterId;

        public string routeFilterName;

//        /// <remarks/>
//        [System.Xml.Serialization.XmlElementAttribute("routePartitionId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
//        [System.Xml.Serialization.XmlElementAttribute("routePartitionName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
//        [System.Xml.Serialization.XmlElementAttribute("uuid", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
//        [System.Xml.Serialization.XmlElementAttribute("pattern", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
//        [System.Xml.Serialization.XmlElementAttribute("routeFilterId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
//        [System.Xml.Serialization.XmlElementAttribute("routeFilterName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
//        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")]
//        public string Item;
//    
//        /// <remarks/>
//        [System.Xml.Serialization.XmlIgnoreAttribute()]
//        public ItemChoiceType46 ItemElementName;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string newPattern;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string description;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("routePartitionId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("routePartitionName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("Item1ElementName")]
        public string Item1;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public Item1ChoiceType9 Item1ElementName;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool blockEnable;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool blockEnableSpecified;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string calledPartyTransformationMask;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string callingPartyTransformationMask;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XStatus useCallingPartyPhoneMask;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool useCallingPartyPhoneMaskSpecified;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string callingPartyPrefixDigits;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("dialPlanName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("dialPlanId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("Item2ElementName")]
        public string Item2;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public Item2ChoiceType6 Item2ElementName;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("digitDiscardInstructionName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("digitDiscardInstructionId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("Item3ElementName")]
        public string Item3;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public Item3ChoiceType5 Item3ElementName;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XLampBlinkRate messageWaiting;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool messageWaitingSpecified;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XNetworkLocation networkLocation;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool networkLocationSpecified;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool patternUrgency;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool patternUrgencySpecified;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string prefixDigitsOut;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("routeFilterId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("routeFilterName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("Item4ElementName")]
        public string Item4;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public Item4ChoiceType5 Item4ElementName;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XPresentationBit callingLinePresentationBit;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool callingLinePresentationBitSpecified;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XPresentationBit callingNamePresentationBit;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool callingNamePresentationBitSpecified;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XPresentationBit connectedLinePresentationBit;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool connectedLinePresentationBitSpecified;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XPresentationBit connectedNamePresentationBit;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool connectedNamePresentationBitSpecified;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool supportOverlapSending;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool supportOverlapSendingSpecified;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XPatternPrecedence patternPrecedence;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool patternPrecedenceSpecified;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XReleaseCauseValue releaseCause;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool releaseCauseSpecified;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public object allowDeviceOverride;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public object provideOutsideDialtone;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public UpdateRoutePatternReqDestination destination;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool authorizationCodeRequired;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool authorizationCodeRequiredSpecified;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="nonNegativeInteger")]
        public string authorizationLevelRequired;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool clientCodeRequired;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool clientCodeRequiredSpecified;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string withTag;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string withValueClause;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public System.UInt64 sequence;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool sequenceSpecified;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
    public enum ItemChoiceType46 
    {
    
        /// <remarks/>
        routePartitionId,
    
        /// <remarks/>
        routePartitionName,
    
        /// <remarks/>
        uuid,
    
        /// <remarks/>
        pattern,
    
        /// <remarks/>
        routeFilterId,
    
        /// <remarks/>
        routeFilterName,
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
    public enum Item1ChoiceType9 
    {
    
        /// <remarks/>
        routePartitionId,
    
        /// <remarks/>
        routePartitionName,
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
    public enum Item2ChoiceType6 
    {
    
        /// <remarks/>
        dialPlanName,
    
        /// <remarks/>
        dialPlanId,
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
    public enum Item3ChoiceType5 
    {
    
        /// <remarks/>
        digitDiscardInstructionName,
    
        /// <remarks/>
        digitDiscardInstructionId,
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
    public enum Item4ChoiceType5 
    {
    
        /// <remarks/>
        routeFilterId,
    
        /// <remarks/>
        routeFilterName,
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class UpdateRoutePatternReqDestination 
    {
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("gatewayName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("routeList", typeof(XRouteList), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("gateway", typeof(XDevice), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("routeListName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")]
        public object Item;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public ItemChoiceType47 ItemElementName;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
    public enum ItemChoiceType47 
    {
    
        /// <remarks/>
        gatewayName,
    
        /// <remarks/>
        routeList,
    
        /// <remarks/>
        gateway,
    
        /// <remarks/>
        routeListName,
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("getHuntPilot", Namespace="http://www.cisco.com/AXL/API/1.0", IsNullable=false)]
    public class GetHuntPilotReq 
    {
        // The commented out section below is .NET choking on too much sequence/choice XSD specifications.
        // The following is valid, however, it does not force correct usage
        //(i.e, if you specify routePartitionId, don't specify routePartitionName)
        public string uuid;

        public string pattern;

        public string routePartitionId;

        public string routePartitionName;

        public string routeFilterId;

        public string routeFilterName;

//        /// <remarks/>
//        [System.Xml.Serialization.XmlElementAttribute("routePartitionId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
//        [System.Xml.Serialization.XmlElementAttribute("routePartitionName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
//        [System.Xml.Serialization.XmlElementAttribute("uuid", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
//        [System.Xml.Serialization.XmlElementAttribute("pattern", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
//        [System.Xml.Serialization.XmlElementAttribute("routeFilterId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
//        [System.Xml.Serialization.XmlElementAttribute("routeFilterName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
//        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")]
//        public string Item;
//    
//        /// <remarks/>
//        [System.Xml.Serialization.XmlIgnoreAttribute()]
//        public ItemChoiceType34 ItemElementName;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public System.UInt64 sequence;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool sequenceSpecified;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
    public enum ItemChoiceType34 
    {
    
        /// <remarks/>
        routePartitionId,
    
        /// <remarks/>
        routePartitionName,
    
        /// <remarks/>
        uuid,
    
        /// <remarks/>
        pattern,
    
        /// <remarks/>
        routeFilterId,
    
        /// <remarks/>
        routeFilterName,
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("getHuntPilotResponse", Namespace="http://www.cisco.com/AXL/API/1.0", IsNullable=false)]
    public class GetHuntPilotRes 
    {
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public GetHuntPilotResReturn @return;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public System.UInt64 sequence;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool sequenceSpecified;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class GetHuntPilotResReturn 
    {
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XNPHuntPilot pattern;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("removeHuntPilot", Namespace="http://www.cisco.com/AXL/API/1.0", IsNullable=false)]
    public class RemoveHuntPilotReq 
    {
        // The commented out section below is .NET choking on too much sequence/choice XSD specifications.
        // The following is valid, however, it does not force correct usage
        //(i.e, if you specify routePartitionId, don't specify routePartitionName)
        public string uuid;

        public string pattern;

        public string routePartitionId;

        public string routePartitionName;

        public string routeFilterId;

        public string routeFilterName;

//        /// <remarks/>
//        [System.Xml.Serialization.XmlElementAttribute("routePartitionId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
//        [System.Xml.Serialization.XmlElementAttribute("routePartitionName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
//        [System.Xml.Serialization.XmlElementAttribute("uuid", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
//        [System.Xml.Serialization.XmlElementAttribute("pattern", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
//        [System.Xml.Serialization.XmlElementAttribute("routeFilterId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
//        [System.Xml.Serialization.XmlElementAttribute("routeFilterName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
//        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")]
//        public string Item;
//    
//        /// <remarks/>
//        [System.Xml.Serialization.XmlIgnoreAttribute()]
//        public ItemChoiceType50 ItemElementName;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public System.UInt64 sequence;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool sequenceSpecified;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
    public enum ItemChoiceType50 
    {
    
        /// <remarks/>
        routePartitionId,
    
        /// <remarks/>
        routePartitionName,
    
        /// <remarks/>
        uuid,
    
        /// <remarks/>
        pattern,
    
        /// <remarks/>
        routeFilterId,
    
        /// <remarks/>
        routeFilterName,
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("addHuntPilot", Namespace="http://www.cisco.com/AXL/API/1.0", IsNullable=false)]
    public class AddHuntPilotReq 
    {
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XNPHuntPilot newPattern;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public System.UInt64 sequence;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool sequenceSpecified;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("updateHuntPilot", Namespace="http://www.cisco.com/AXL/API/1.0", IsNullable=false)]
    public class UpdateHuntPilotReq 
    {
    
        // The commented out section below is .NET choking on too much sequence/choice XSD specifications.
        // The following is valid, however, it does not force correct usage
        //(i.e, if you specify routePartitionId, don't specify routePartitionName)
        public string uuid;

        public string pattern;

        public string routePartitionId;

        public string routePartitionName;

        public string routeFilterId;

        public string routeFilterName;

//        /// <remarks/>
//        [System.Xml.Serialization.XmlElementAttribute("routePartitionId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
//        [System.Xml.Serialization.XmlElementAttribute("routePartitionName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
//        [System.Xml.Serialization.XmlElementAttribute("uuid", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
//        [System.Xml.Serialization.XmlElementAttribute("pattern", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
//        [System.Xml.Serialization.XmlElementAttribute("routeFilterId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
//        [System.Xml.Serialization.XmlElementAttribute("routeFilterName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
//        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")]
//        public string Item;
//    
//        /// <remarks/>
//        [System.Xml.Serialization.XmlIgnoreAttribute()]
//        public ItemChoiceType63 ItemElementName;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string newPattern;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string description;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("newRoutePartitionId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("newRoutePartitionName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("Item1ElementName")]
        public string Item1;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public Item1ChoiceType12 Item1ElementName;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool blockEnable;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool blockEnableSpecified;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string calledPartyTransformationMask;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string callingPartyTransformationMask;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XStatus useCallingPartyPhoneMask;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool useCallingPartyPhoneMaskSpecified;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string callingPartyPrefixDigits;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("dialPlanName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("dialPlanId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("Item2ElementName")]
        public string Item2;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public Item2ChoiceType9 Item2ElementName;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("digitDiscardInstructionName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("digitDiscardInstructionId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("Item3ElementName")]
        public string Item3;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public Item3ChoiceType8 Item3ElementName;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XLampBlinkRate messageWaiting;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool messageWaitingSpecified;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XNetworkLocation networkLocation;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool networkLocationSpecified;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool patternUrgency;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool patternUrgencySpecified;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string prefixDigitsOut;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("routeFilterId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("routeFilterName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("Item4ElementName")]
        public string Item4;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public Item4ChoiceType7 Item4ElementName;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XPresentationBit callingLinePresentationBit;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool callingLinePresentationBitSpecified;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XPresentationBit callingNamePresentationBit;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool callingNamePresentationBitSpecified;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XPresentationBit connectedLinePresentationBit;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool connectedLinePresentationBitSpecified;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XPresentationBit connectedNamePresentationBit;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool connectedNamePresentationBitSpecified;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XPatternPrecedence patternPrecedence;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool patternPrecedenceSpecified;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XReleaseCauseValue releaseCause;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool releaseCauseSpecified;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public UpdateHuntPilotReqDestination destination;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XHuntForwardInfo ForwardHuntBusy;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XHuntForwardInfo ForwardHuntNoAnswer;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public System.UInt64 sequence;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool sequenceSpecified;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
    public enum ItemChoiceType63 
    {
    
        /// <remarks/>
        routePartitionId,
    
        /// <remarks/>
        routePartitionName,
    
        /// <remarks/>
        uuid,
    
        /// <remarks/>
        pattern,
    
        /// <remarks/>
        routeFilterId,
    
        /// <remarks/>
        routeFilterName,
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
    public enum Item1ChoiceType12 
    {
    
        /// <remarks/>
        newRoutePartitionId,
    
        /// <remarks/>
        newRoutePartitionName,
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
    public enum Item2ChoiceType9 
    {
    
        /// <remarks/>
        dialPlanName,
    
        /// <remarks/>
        dialPlanId,
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
    public enum Item3ChoiceType8 
    {
    
        /// <remarks/>
        digitDiscardInstructionName,
    
        /// <remarks/>
        digitDiscardInstructionId,
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
    public enum Item4ChoiceType7 
    {
    
        /// <remarks/>
        routeFilterId,
    
        /// <remarks/>
        routeFilterName,
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class UpdateHuntPilotReqDestination 
    {
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("huntListName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("huntList", typeof(XHuntList), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public object Item;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("addLineGroup", Namespace="http://www.cisco.com/AXL/API/1.0", IsNullable=false)]
    public class AddLineGroupReq 
    {
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XLineGroup lineGroup;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public System.UInt64 sequence;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool sequenceSpecified;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("updateLineGroup", Namespace="http://www.cisco.com/AXL/API/1.0", IsNullable=false)]
    public class UpdateLineGroupReq 
    {
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("name", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("uuid", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")]
        public string Item;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public ItemChoiceType68 ItemElementName;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string newName;
    
		/// <remarks/>
		[System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public XDistributeAlgorithm distributionAlgorithm;

		[System.Xml.Serialization.XmlIgnoreAttribute()] // Added manually by MSC
		public bool distributionAlgorithmSpecified;
        
		/// <remarks/>
		[System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="nonNegativeInteger")]
		[System.ComponentModel.DefaultValueAttribute("10")]
		public string rnaReversionTimeOut = "10";
        
		/// <remarks/>
		[System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public XHuntAlgorithm huntAlgorithmNoAnswer;
        
		[System.Xml.Serialization.XmlIgnoreAttribute()]  // Added manually by MSC
		public bool huntAlgorithmNoAnswerSpecified;

		/// <remarks/>
		[System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public XHuntAlgorithm huntAlgorithmBusy;

		[System.Xml.Serialization.XmlIgnoreAttribute()]  // Added manually by MSC
		public bool huntAlgorithmBusySpecified;
        
		/// <remarks/>
		[System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public XHuntAlgorithm huntAlgorithmNotAvailable;

		[System.Xml.Serialization.XmlIgnoreAttribute()]  // Added manually by MSC
		public bool huntAlgorithmNotAvailableSpecified;
    
		/// <remarks/>
		[System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		[System.Xml.Serialization.XmlArrayItemAttribute("member", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
		public XLineGroupMember[] members;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public System.UInt64 sequence;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool sequenceSpecified;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
    public enum ItemChoiceType68 
    {
    
        /// <remarks/>
        name,
    
        /// <remarks/>
        uuid,
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("getLineGroupResponse", Namespace="http://www.cisco.com/AXL/API/1.0", IsNullable=false)]
    public class GetLineGroupRes 
    {
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public GetLineGroupResReturn @return;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public System.UInt64 sequence;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool sequenceSpecified;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class GetLineGroupResReturn 
    {
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XLineGroup lineGroup;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("addRouteGroup", Namespace="http://www.cisco.com/AXL/API/1.0", IsNullable=false)]
    public class AddRouteGroupReq 
    {
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XRouteGroup routeGroup;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public System.UInt64 sequence;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool sequenceSpecified;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("updateRouteGroup", Namespace="http://www.cisco.com/AXL/API/1.0", IsNullable=false)]
    public class UpdateRouteGroupReq 
    {
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("name", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("uuid", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")]
        public string Item;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public ItemChoiceType25 ItemElementName;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string newName;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute("member", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public XRouteGroupMember[] members;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public System.UInt64 sequence;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool sequenceSpecified;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
    public enum ItemChoiceType25 
    {
    
        /// <remarks/>
        name,
    
        /// <remarks/>
        uuid,
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("getRouteGroupResponse", Namespace="http://www.cisco.com/AXL/API/1.0", IsNullable=false)]
    public class GetRouteGroupRes 
    {
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public GetRouteGroupResReturn @return;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public System.UInt64 sequence;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool sequenceSpecified;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class GetRouteGroupResReturn 
    {
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XRouteGroup routeGroup;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("addRouteList", Namespace="http://www.cisco.com/AXL/API/1.0", IsNullable=false)]
    public class AddRouteListReq 
    {
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XRouteList routeList;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public System.UInt64 sequence;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool sequenceSpecified;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("updateRouteList", Namespace="http://www.cisco.com/AXL/API/1.0", IsNullable=false)]
    public class UpdateRouteListReq 
    {
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("name", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("uuid", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")]
        public string Item;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public ItemChoiceType58 ItemElementName;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string newName;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string description;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("callManagerGroupName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("callManagerGroup", typeof(XCallManagerGroup), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public object Item1;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool routeListEnabled;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool routeListEnabledSpecified;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute("member", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public XRouteListMember[] members;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public System.UInt64 sequence;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool sequenceSpecified;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
    public enum ItemChoiceType58 
    {
    
        /// <remarks/>
        name,
    
        /// <remarks/>
        uuid,
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("getRouteListResponse", Namespace="http://www.cisco.com/AXL/API/1.0", IsNullable=false)]
    public class GetRouteListRes 
    {
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public GetRouteListResReturn @return;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public System.UInt64 sequence;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool sequenceSpecified;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class GetRouteListResReturn 
    {
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XRouteList routeList;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("addHuntList", Namespace="http://www.cisco.com/AXL/API/1.0", IsNullable=false)]
    public class AddHuntListReq 
    {
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XHuntList huntList;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public System.UInt64 sequence;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool sequenceSpecified;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("updateHuntList", Namespace="http://www.cisco.com/AXL/API/1.0", IsNullable=false)]
    public class UpdateHuntListReq 
    {
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("name", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("uuid", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")]
        public string Item;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public ItemChoiceType73 ItemElementName;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string newName;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string description;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("callManagerGroupName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("callManagerGroup", typeof(XCallManagerGroup), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public object Item1;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool routeListEnabled;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool routeListEnabledSpecified;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute("member", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public XHuntListMember[] members;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public System.UInt64 sequence;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool sequenceSpecified;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
    public enum ItemChoiceType73 
    {
    
        /// <remarks/>
        name,
    
        /// <remarks/>
        uuid,
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("getHuntListResponse", Namespace="http://www.cisco.com/AXL/API/1.0", IsNullable=false)]
    public class GetHuntListRes 
    {
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public GetHuntListResReturn @return;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public System.UInt64 sequence;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool sequenceSpecified;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class GetHuntListResReturn 
    {
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XHuntList huntList;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("addCTIRoutePoint", Namespace="http://www.cisco.com/AXL/API/1.0", IsNullable=false)]
    public class AddCTIRoutePointReq 
    {
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XCTIRoutePoint routePoint;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public System.UInt64 sequence;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool sequenceSpecified;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("updateCTIRoutePoint", Namespace="http://www.cisco.com/AXL/API/1.0", IsNullable=false)]
    public class UpdateCTIRoutePointReq 
    {
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("name", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="Name")]
        [System.Xml.Serialization.XmlElementAttribute("uuid", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")]
        public string Item;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public ItemChoiceType48 ItemElementName;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="Name")]
        public string newName;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string description;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("callingSearchSpaceId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("callingSearchSpaceName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="Name")]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("Item1ElementName")]
        public string Item1;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public Item1ChoiceType10 Item1ElementName;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("devicePoolName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="Name")]
        [System.Xml.Serialization.XmlElementAttribute("devicePoolId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("Item2ElementName")]
        public string Item2;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public Item2ChoiceType7 Item2ElementName;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("locationName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("locationId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("Item3ElementName")]
        public string Item3;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public Item3ChoiceType6 Item3ElementName;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public UpdateCTIRoutePointReqLines lines;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public System.UInt64 sequence;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool sequenceSpecified;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
    public enum ItemChoiceType48 
    {
    
        /// <remarks/>
        name,
    
        /// <remarks/>
        uuid,
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
    public enum Item1ChoiceType10 
    {
    
        /// <remarks/>
        callingSearchSpaceId,
    
        /// <remarks/>
        callingSearchSpaceName,
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
    public enum Item2ChoiceType7 
    {
    
        /// <remarks/>
        devicePoolName,
    
        /// <remarks/>
        devicePoolId,
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
    public enum Item3ChoiceType6 
    {
    
        /// <remarks/>
        locationName,
    
        /// <remarks/>
        locationId,
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class UpdateCTIRoutePointReqLines 
    {
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("lineIdentifier", typeof(XNumplanIdentifier), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("line", typeof(XLine), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public object[] Items;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("getCTIRoutePointResponse", Namespace="http://www.cisco.com/AXL/API/1.0", IsNullable=false)]
    public class GetCTIRoutePointRes 
    {
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public GetCTIRoutePointResReturn @return;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public System.UInt64 sequence;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool sequenceSpecified;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class GetCTIRoutePointResReturn 
    {
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XCTIRoutePoint routePoint;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("addDialPlan", Namespace="http://www.cisco.com/AXL/API/1.0", IsNullable=false)]
    public class AddDialPlanReq 
    {
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XDialPlan dialPlan;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public System.UInt64 sequence;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool sequenceSpecified;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("updateDialPlan", Namespace="http://www.cisco.com/AXL/API/1.0", IsNullable=false)]
    public class UpdateDialPlanReq 
    {
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("name", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("uuid", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")]
        public string Item;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public ItemChoiceType35 ItemElementName;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string newName;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string description;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public System.UInt64 sequence;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool sequenceSpecified;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
    public enum ItemChoiceType35 
    {
    
        /// <remarks/>
        name,
    
        /// <remarks/>
        uuid,
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("getDialPlanResponse", Namespace="http://www.cisco.com/AXL/API/1.0", IsNullable=false)]
    public class GetDialPlanRes 
    {
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public GetDialPlanResReturn @return;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public System.UInt64 sequence;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool sequenceSpecified;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class GetDialPlanResReturn 
    {
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XDialPlan dialPlan;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("addDialPlanTag", Namespace="http://www.cisco.com/AXL/API/1.0", IsNullable=false)]
    public class AddDialPlanTagReq 
    {
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XDialPlanTag dialPlanTag;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public System.UInt64 sequence;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool sequenceSpecified;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("updateDialPlanTag", Namespace="http://www.cisco.com/AXL/API/1.0", IsNullable=false)]
    public class UpdateDialPlanTagReq 
    {
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("name", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("uuid", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")]
        public string Item;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public ItemChoiceType79 ItemElementName;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="Name")]
        public string newName;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("dialPlanName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("dialPlan", typeof(XDialPlan), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public object Item1;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XOperator @operator;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool operatorSpecified;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool suppressFromRouteFilter;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool suppressFromRouteFilterSpecified;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public System.UInt64 sequence;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool sequenceSpecified;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
    public enum ItemChoiceType79 
    {
    
        /// <remarks/>
        name,
    
        /// <remarks/>
        uuid,
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IsNullable=false)]
    public class getDialPlanTag 
    {
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("name", typeof(object), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("dialPlanUuid", typeof(object), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("uuid", typeof(object), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("dialPlanName", typeof(object), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")]
        public object Item;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public ItemChoiceType90 ItemElementName;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
    public enum ItemChoiceType90 
    {
    
        /// <remarks/>
        name,
    
        /// <remarks/>
        dialPlanUuid,
    
        /// <remarks/>
        uuid,
    
        /// <remarks/>
        dialPlanName,
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("getDialPlanTagResponse", Namespace="http://www.cisco.com/AXL/API/1.0", IsNullable=false)]
    public class GetDialPlanTagRes 
    {
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public GetDialPlanTagResReturn @return;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public System.UInt64 sequence;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool sequenceSpecified;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class GetDialPlanTagResReturn 
    {
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XDialPlanTag dialPlanTag;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("addCallPark", Namespace="http://www.cisco.com/AXL/API/1.0", IsNullable=false)]
    public class AddCallParkReq 
    {
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XNPCallPark callPark;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public System.UInt64 sequence;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool sequenceSpecified;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("updateCallPark", Namespace="http://www.cisco.com/AXL/API/1.0", IsNullable=false)]
    public class UpdateCallParkReq 
    {
        // The commented out section below is .NET choking on too much sequence/choice XSD specifications.
        // The following is valid, however, it does not force correct usage
        //(i.e, if you specify routePartitionId, don't specify routePartitionName)
        public string uuid;

        public string pattern;

        public string routePartitionId;

        public string routePartitionName;

        public string routeFilterId;

        public string routeFilterName;

//        /// <remarks/>
//        [System.Xml.Serialization.XmlElementAttribute("routePartitionId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
//        [System.Xml.Serialization.XmlElementAttribute("routePartitionName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
//        [System.Xml.Serialization.XmlElementAttribute("uuid", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
//        [System.Xml.Serialization.XmlElementAttribute("pattern", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
//        [System.Xml.Serialization.XmlElementAttribute("routeFilterId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
//        [System.Xml.Serialization.XmlElementAttribute("routeFilterName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
//        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")]
//        public string Item;
//    
//        /// <remarks/>
//        [System.Xml.Serialization.XmlIgnoreAttribute()]
//        public ItemChoiceType85 ItemElementName;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string newPattern;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string description;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("newRoutePartitionId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("newRoutePartitionName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("Item1ElementName")]
        public string Item1;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public Item1ChoiceType18 Item1ElementName;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("callManagerName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("callManagerId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("Item2ElementName")]
        public string Item2;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public Item2ChoiceType14 Item2ElementName;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public System.UInt64 sequence;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool sequenceSpecified;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
    public enum ItemChoiceType85 
    {
    
        /// <remarks/>
        routePartitionId,
    
        /// <remarks/>
        routePartitionName,
    
        /// <remarks/>
        uuid,
    
        /// <remarks/>
        pattern,
    
        /// <remarks/>
        routeFilterId,
    
        /// <remarks/>
        routeFilterName,
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
    public enum Item1ChoiceType18 
    {
    
        /// <remarks/>
        newRoutePartitionId,
    
        /// <remarks/>
        newRoutePartitionName,
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
    public enum Item2ChoiceType14 
    {
    
        /// <remarks/>
        callManagerName,
    
        /// <remarks/>
        callManagerId,
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("getCallPark", Namespace="http://www.cisco.com/AXL/API/1.0", IsNullable=false)]
    public class GetCallParkReq 
    {
        // The commented out section below is .NET choking on too much sequence/choice XSD specifications.
        // The following is valid, however, it does not force correct usage
        //(i.e, if you specify routePartitionId, don't specify routePartitionName)
        public string uuid;

        public string pattern;

        public string routePartitionId;

        public string routePartitionName;

        public string routeFilterId;

        public string routeFilterName;

//        /// <remarks/>
//        [System.Xml.Serialization.XmlElementAttribute("routePartitionId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
//        [System.Xml.Serialization.XmlElementAttribute("routePartitionName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
//        [System.Xml.Serialization.XmlElementAttribute("uuid", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
//        [System.Xml.Serialization.XmlElementAttribute("pattern", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
//        [System.Xml.Serialization.XmlElementAttribute("routeFilterId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
//        [System.Xml.Serialization.XmlElementAttribute("routeFilterName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
//        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")]
//        public string Item;
//    
//        /// <remarks/>
//        [System.Xml.Serialization.XmlIgnoreAttribute()]
//        public ItemChoiceType44 ItemElementName;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public System.UInt64 sequence;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool sequenceSpecified;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
    public enum ItemChoiceType44 
    {
    
        /// <remarks/>
        routePartitionId,
    
        /// <remarks/>
        routePartitionName,
    
        /// <remarks/>
        uuid,
    
        /// <remarks/>
        pattern,
    
        /// <remarks/>
        routeFilterId,
    
        /// <remarks/>
        routeFilterName,
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("getCallParkResponse", Namespace="http://www.cisco.com/AXL/API/1.0", IsNullable=false)]
    public class GetCallParkRes 
    {
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public GetCallParkResReturn @return;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public System.UInt64 sequence;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool sequenceSpecified;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class GetCallParkResReturn 
    {
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XNPCallPark callPark;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("removeCallPark", Namespace="http://www.cisco.com/AXL/API/1.0", IsNullable=false)]
    public class RemoveCallParkReq 
    {
        // The commented out section below is .NET choking on too much sequence/choice XSD specifications.
        // The following is valid, however, it does not force correct usage
        //(i.e, if you specify routePartitionId, don't specify routePartitionName)
        public string uuid;

        public string pattern;

        public string routePartitionId;

        public string routePartitionName;

        public string routeFilterId;

        public string routeFilterName;

//        /// <remarks/>
//        [System.Xml.Serialization.XmlElementAttribute("routePartitionId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
//        [System.Xml.Serialization.XmlElementAttribute("routePartitionName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
//        [System.Xml.Serialization.XmlElementAttribute("uuid", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
//        [System.Xml.Serialization.XmlElementAttribute("pattern", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
//        [System.Xml.Serialization.XmlElementAttribute("routeFilterId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
//        [System.Xml.Serialization.XmlElementAttribute("routeFilterName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
//        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")]
//        public string Item;
//    
//        /// <remarks/>
//        [System.Xml.Serialization.XmlIgnoreAttribute()]
//        public ItemChoiceType33 ItemElementName;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public System.UInt64 sequence;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool sequenceSpecified;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
    public enum ItemChoiceType33 
    {
    
        /// <remarks/>
        routePartitionId,
    
        /// <remarks/>
        routePartitionName,
    
        /// <remarks/>
        uuid,
    
        /// <remarks/>
        pattern,
    
        /// <remarks/>
        routeFilterId,
    
        /// <remarks/>
        routeFilterName,
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("addCallPickupGroup", Namespace="http://www.cisco.com/AXL/API/1.0", IsNullable=false)]
    public class AddCallPickupGroupReq 
    {
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XNPCallPickupGroup callPickup;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public System.UInt64 sequence;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool sequenceSpecified;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("updateCallPickupGroup", Namespace="http://www.cisco.com/AXL/API/1.0", IsNullable=false)]
    public class UpdateCallPickupGroupReq 
    {
        // The commented out section below is .NET choking on too much sequence/choice XSD specifications.
        // The following is valid, however, it does not force correct usage
        //(i.e, if you specify routePartitionId, don't specify routePartitionName)
        public string uuid;

        public string pattern;

        public string routePartitionId;

        public string routePartitionName;

        public string routeFilterId;

        public string routeFilterName;

//        /// <remarks/>
//        [System.Xml.Serialization.XmlElementAttribute("routePartitionId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
//        [System.Xml.Serialization.XmlElementAttribute("name", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
//        [System.Xml.Serialization.XmlElementAttribute("routePartitionName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
//        [System.Xml.Serialization.XmlElementAttribute("uuid", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
//        [System.Xml.Serialization.XmlElementAttribute("pattern", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
//        [System.Xml.Serialization.XmlElementAttribute("routeFilterId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
//        [System.Xml.Serialization.XmlElementAttribute("routeFilterName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
//        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")]
//        public string Item;
//    
//        /// <remarks/>
//        [System.Xml.Serialization.XmlIgnoreAttribute()]
//        public ItemChoiceType86 ItemElementName;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string newPattern;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string description;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("newRoutePartitionId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("newRoutePartitionName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("Item1ElementName")]
        public string Item1;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public Item1ChoiceType19 Item1ElementName;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string newName;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute("member", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public XPickupGroupMember[] members;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public System.UInt64 sequence;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool sequenceSpecified;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
    public enum ItemChoiceType86 
    {
    
        /// <remarks/>
        routePartitionId,
    
        /// <remarks/>
        name,
    
        /// <remarks/>
        routePartitionName,
    
        /// <remarks/>
        uuid,
    
        /// <remarks/>
        pattern,
    
        /// <remarks/>
        routeFilterId,
    
        /// <remarks/>
        routeFilterName,
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
    public enum Item1ChoiceType19 
    {
    
        /// <remarks/>
        newRoutePartitionId,
    
        /// <remarks/>
        newRoutePartitionName,
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("getCallPickupGroup", Namespace="http://www.cisco.com/AXL/API/1.0", IsNullable=false)]
    public class GetCallPickupGroupReq 
    {
        // The commented out section below is .NET choking on too much sequence/choice XSD specifications.
        // The following is valid, however, it does not force correct usage
        //(i.e, if you specify routePartitionId, don't specify routePartitionName)
        public string uuid;

        public string pattern;

        public string routePartitionId;

        public string routePartitionName;

        public string routeFilterId;

        public string routeFilterName;

//        /// <remarks/>
//        [System.Xml.Serialization.XmlElementAttribute("routePartitionId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
//        [System.Xml.Serialization.XmlElementAttribute("name", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
//        [System.Xml.Serialization.XmlElementAttribute("routePartitionName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
//        [System.Xml.Serialization.XmlElementAttribute("uuid", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
//        [System.Xml.Serialization.XmlElementAttribute("pattern", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
//        [System.Xml.Serialization.XmlElementAttribute("routeFilterId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
//        [System.Xml.Serialization.XmlElementAttribute("routeFilterName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
//        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")]
//        public string Item;
//    
//        /// <remarks/>
//        [System.Xml.Serialization.XmlIgnoreAttribute()]
//        public ItemChoiceType57 ItemElementName;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public System.UInt64 sequence;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool sequenceSpecified;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
    public enum ItemChoiceType57 
    {
    
        /// <remarks/>
        routePartitionId,
    
        /// <remarks/>
        name,
    
        /// <remarks/>
        routePartitionName,
    
        /// <remarks/>
        uuid,
    
        /// <remarks/>
        pattern,
    
        /// <remarks/>
        routeFilterId,
    
        /// <remarks/>
        routeFilterName,
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("getCallPickupGroupResponse", Namespace="http://www.cisco.com/AXL/API/1.0", IsNullable=false)]
    public class GetCallPickupGroupRes 
    {
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public GetCallPickupGroupResReturn @return;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public System.UInt64 sequence;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool sequenceSpecified;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class GetCallPickupGroupResReturn 
    {
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XNPCallPickupGroup callPickup;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("removeCallPickupGroup", Namespace="http://www.cisco.com/AXL/API/1.0", IsNullable=false)]
    public class RemoveCallPickupGroupReq 
    {
        // The commented out section below is .NET choking on too much sequence/choice XSD specifications.
        // The following is valid, however, it does not force correct usage
        //(i.e, if you specify routePartitionId, don't specify routePartitionName)
        public string uuid;

        public string pattern;

        public string routePartitionId;

        public string routePartitionName;

        public string routeFilterId;

        public string routeFilterName;

//        /// <remarks/>
//        [System.Xml.Serialization.XmlElementAttribute("routePartitionId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
//        [System.Xml.Serialization.XmlElementAttribute("name", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
//        [System.Xml.Serialization.XmlElementAttribute("routePartitionName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
//        [System.Xml.Serialization.XmlElementAttribute("uuid", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
//        [System.Xml.Serialization.XmlElementAttribute("pattern", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
//        [System.Xml.Serialization.XmlElementAttribute("routeFilterId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
//        [System.Xml.Serialization.XmlElementAttribute("routeFilterName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
//        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")]
//        public string Item;
//    
//        /// <remarks/>
//        [System.Xml.Serialization.XmlIgnoreAttribute()]
//        public ItemChoiceType72 ItemElementName;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public System.UInt64 sequence;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool sequenceSpecified;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
    public enum ItemChoiceType72 
    {
    
        /// <remarks/>
        routePartitionId,
    
        /// <remarks/>
        name,
    
        /// <remarks/>
        routePartitionName,
    
        /// <remarks/>
        uuid,
    
        /// <remarks/>
        pattern,
    
        /// <remarks/>
        routeFilterId,
    
        /// <remarks/>
        routeFilterName,
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("addDDI", Namespace="http://www.cisco.com/AXL/API/1.0", IsNullable=false)]
    public class AddDDIReq 
    {
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XDigitDiscardInstruction ddi;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public System.UInt64 sequence;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool sequenceSpecified;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("updateDDI", Namespace="http://www.cisco.com/AXL/API/1.0", IsNullable=false)]
    public class UpdateDDIReq 
    {
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("name", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("uuid", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")]
        public string Item;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public ItemChoiceType87 ItemElementName;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="Name")]
        public string newName;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("dialPlanName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("dialPlanId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("Item1ElementName")]
        public string Item1;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public Item1ChoiceType20 Item1ElementName;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute("member", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public XDigitDiscardInstructionMember[] members;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public System.UInt64 sequence;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool sequenceSpecified;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
    public enum ItemChoiceType87 
    {
    
        /// <remarks/>
        name,
    
        /// <remarks/>
        uuid,
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
    public enum Item1ChoiceType20 
    {
    
        /// <remarks/>
        dialPlanName,
    
        /// <remarks/>
        dialPlanId,
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IsNullable=false)]
    public class getDDI 
    {
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("name", typeof(object), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("dialPlanUuid", typeof(object), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("uuid", typeof(object), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("dialPlanName", typeof(object), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")]
        public object Item;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public ItemChoiceType91 ItemElementName;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
    public enum ItemChoiceType91 
    {
    
        /// <remarks/>
        name,
    
        /// <remarks/>
        dialPlanUuid,
    
        /// <remarks/>
        uuid,
    
        /// <remarks/>
        dialPlanName,
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("getDDIResponse", Namespace="http://www.cisco.com/AXL/API/1.0", IsNullable=false)]
    public class GetDDIRes 
    {
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public GetDDIResReturn @return;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public System.UInt64 sequence;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool sequenceSpecified;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class GetDDIResReturn 
    {
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XDigitDiscardInstruction ddi;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("createAutogeneratedProfile", Namespace="http://www.cisco.com/AXL/API/1.0", IsNullable=false)]
    public class CreateAutogeneratedProfileReq 
    {
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("phoneId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("phoneName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")]
        public string Item;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public ItemChoiceType51 ItemElementName;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public System.UInt64 sequence;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool sequenceSpecified;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
    public enum ItemChoiceType51 
    {
    
        /// <remarks/>
        phoneId,
    
        /// <remarks/>
        phoneName,
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("listPhoneByName", Namespace="http://www.cisco.com/AXL/API/1.0", IsNullable=false)]
    public class ListPhoneByNameReq 
    {
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string searchString;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public System.UInt64 sequence;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool sequenceSpecified;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("listPhoneByNameResponse", Namespace="http://www.cisco.com/AXL/API/1.0", IsNullable=false)]
    public class ListPhoneByNameRes 
    {
    
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute("phone", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public ListPhoneByNameResPhone[] @return;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public System.UInt64 sequence;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool sequenceSpecified;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class ListPhoneByNameResPhone 
    {
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string name;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XProduct product;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XModel model;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string uuid;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("listPhoneByDescription", Namespace="http://www.cisco.com/AXL/API/1.0", IsNullable=false)]
    public class ListPhoneByDescriptionReq 
    {
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string searchString;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public System.UInt64 sequence;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool sequenceSpecified;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("listPhoneByDescriptionResponse", Namespace="http://www.cisco.com/AXL/API/1.0", IsNullable=false)]
    public class ListPhoneByDescriptionRes 
    {
    
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute("phone", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public ListPhoneByDescriptionResPhone[] @return;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public System.UInt64 sequence;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool sequenceSpecified;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class ListPhoneByDescriptionResPhone 
    {
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string name;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XProduct product;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XModel model;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string uuid;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("listUserByName", Namespace="http://www.cisco.com/AXL/API/1.0", IsNullable=false)]
    public class ListUserByNameReq 
    {
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string firstname;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string lastname;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int searchLimit;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public System.UInt64 sequence;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool sequenceSpecified;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("listUserByNameResponse", Namespace="http://www.cisco.com/AXL/API/1.0", IsNullable=false)]
    public class ListUserByNameRes 
    {
    
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute("user", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public ListUserByNameResUser[] @return;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public System.UInt64 sequence;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool sequenceSpecified;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class ListUserByNameResUser 
    {
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string firstname;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string lastname;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string ldapRN;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("listRoutePlanByType", Namespace="http://www.cisco.com/AXL/API/1.0", IsNullable=false)]
    public class ListRoutePlanByTypeReq 
    {
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XPatternUsage usage;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public System.UInt64 sequence;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool sequenceSpecified;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("listRoutePlanByTypeResponse", Namespace="http://www.cisco.com/AXL/API/1.0", IsNullable=false)]
    public class ListRoutePlanByTypeRes 
    {
    
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute("routePlan", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public ListRoutePlanByTypeResRoutePlan[] @return;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public System.UInt64 sequence;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool sequenceSpecified;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class ListRoutePlanByTypeResRoutePlan 
    {
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string directoryNumber;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string routePartitionName;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XPatternUsage usage;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string routeFilterName;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string uuid;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("getNumDevices", Namespace="http://www.cisco.com/AXL/API/1.0", IsNullable=false)]
    public class GetNumDevicesReq 
    {
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XClass @class;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public System.UInt64 sequence;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool sequenceSpecified;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("getNumDevicesResponse", Namespace="http://www.cisco.com/AXL/API/1.0", IsNullable=false)]
    public class GetNumDevicesRes 
    {
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="nonNegativeInteger")]
        public string @return;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public System.UInt64 sequence;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool sequenceSpecified;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("listServiceParameters", Namespace="http://www.cisco.com/AXL/API/1.0", IsNullable=false)]
    public class ListServiceParametersReq 
    {
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string nodeName;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XService serviceType;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public System.UInt64 sequence;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool sequenceSpecified;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
    public enum XService 
    {
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Cisco CallManager")]
        CiscoCallManager,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Cisco Tftp")]
        CiscoTftp,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Cisco Messaging Interface")]
        CiscoMessagingInterface,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Cisco IP Voice Media Streaming App")]
        CiscoIPVoiceMediaStreamingApp,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Cisco CTI Manager")]
        CiscoCTIManager,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Cisco Telephony Call Dispatcher")]
        CiscoTelephonyCallDispatcher,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Cisco MOH Audio Translator")]
        CiscoMOHAudioTranslator,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Cisco RIS Data Collector")]
        CiscoRISDataCollector,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Cisco Extension Mobility")]
        CiscoExtensionMobility,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Cisco Database Layer Monitor")]
        CiscoDatabaseLayerMonitor,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Cisco CDR Insert")]
        CiscoCDRInsert,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Enterprise Wide")]
        EnterpriseWide,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Cisco IP Manager Assistant")]
        CiscoIPManagerAssistant,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Cisco Extended Functions")]
        CiscoExtendedFunctions,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Cisco Serviceability Reporter")]
        CiscoServiceabilityReporter,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Cisco CTL Provider")]
        CiscoCTLProvider,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Cisco WebDialer")]
        CiscoWebDialer,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Cisco Dialed Number Analyzer")]
        CiscoDialedNumberAnalyzer,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Cisco Certificate Authority Proxy Function")]
        CiscoCertificateAuthorityProxyFunction,
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("listServiceParametersResponse", Namespace="http://www.cisco.com/AXL/API/1.0", IsNullable=false)]
    public class ListServiceParametersRes 
    {
    
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute("param", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public ListServiceParametersResParam[] @return;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public System.UInt64 sequence;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool sequenceSpecified;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class ListServiceParametersResParam 
    {
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string name;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string value;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("listCSSByName", Namespace="http://www.cisco.com/AXL/API/1.0", IsNullable=false)]
    public class ListCSSByNameReq 
    {
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string searchString;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public System.UInt64 sequence;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool sequenceSpecified;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("listCSSByNameResponse", Namespace="http://www.cisco.com/AXL/API/1.0", IsNullable=false)]
    public class ListCSSByNameRes 
    {
    
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute("callingSearchSpace", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public XCallingSearchSpace[] @return;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public System.UInt64 sequence;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool sequenceSpecified;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("addDevicePool", Namespace="http://www.cisco.com/AXL/API/1.0", IsNullable=false)]
    public class AddDevicePoolReq 
    {
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XDevicePool devicePool;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public System.UInt64 sequence;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool sequenceSpecified;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("updateDevicePool", Namespace="http://www.cisco.com/AXL/API/1.0", IsNullable=false)]
    public class UpdateDevicePoolReq 
    {
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("name", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("uuid", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")]
        public string Item;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public ItemChoiceType77 ItemElementName;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string newName;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("autoSearchSpaceName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        [System.Xml.Serialization.XmlElementAttribute("autoSearchSpaceId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("Item1ElementName")]
        public string Item1;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public Item1ChoiceType17 Item1ElementName;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("dateTimeSettingId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("dateTimeSettingName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("Item2ElementName")]
        public string Item2;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public Item2ChoiceType13 Item2ElementName;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("callManagerGroupId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("callManagerGroupName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("Item3ElementName")]
        public string Item3;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public Item3ChoiceType12 Item3ElementName;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("mediaResourceListId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        [System.Xml.Serialization.XmlElementAttribute("mediaResourceListName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("Item4ElementName")]
        public string Item4;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public Item4ChoiceType11 Item4ElementName;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("regionId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("regionName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("Item5ElementName")]
        public string Item5;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public Item5ChoiceType9 Item5ElementName;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("softkeyTemplateName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("softkeyTemplateId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("Item6ElementName")]
        public string Item6;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public Item6ChoiceType7 Item6ElementName;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XCountry networkLocale;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool networkLocaleSpecified;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XUserLocale userLocale;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool userLocaleSpecified;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="integer")]
        public string networkHoldMOHAudioSourceId;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="integer")]
        public string userHoldMOHAudioSourceId;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("srstName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("srstInfoId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("Item7ElementName")]
        public string Item7;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public Item7ChoiceType1 Item7ElementName;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int mlppDomainId;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool mlppDomainIdSpecified;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XStatus mlppIndicationStatus;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool mlppIndicationStatusSpecified;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XPreemption preemption;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool preemptionSpecified;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int connectionMonitorDuration;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool connectionMonitorDurationSpecified;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public System.UInt64 sequence;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool sequenceSpecified;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
    public enum ItemChoiceType77 
    {
    
        /// <remarks/>
        name,
    
        /// <remarks/>
        uuid,
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
    public enum Item1ChoiceType17 
    {
    
        /// <remarks/>
        autoSearchSpaceName,
    
        /// <remarks/>
        autoSearchSpaceId,
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
    public enum Item2ChoiceType13 
    {
    
        /// <remarks/>
        dateTimeSettingId,
    
        /// <remarks/>
        dateTimeSettingName,
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
    public enum Item3ChoiceType12 
    {
    
        /// <remarks/>
        callManagerGroupId,
    
        /// <remarks/>
        callManagerGroupName,
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
    public enum Item4ChoiceType11 
    {
    
        /// <remarks/>
        mediaResourceListId,
    
        /// <remarks/>
        mediaResourceListName,
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
    public enum Item5ChoiceType9 
    {
    
        /// <remarks/>
        regionId,
    
        /// <remarks/>
        regionName,
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
    public enum Item6ChoiceType7 
    {
    
        /// <remarks/>
        softkeyTemplateName,
    
        /// <remarks/>
        softkeyTemplateId,
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
    public enum Item7ChoiceType1 
    {
    
        /// <remarks/>
        srstName,
    
        /// <remarks/>
        srstInfoId,
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("getDevicePoolResponse", Namespace="http://www.cisco.com/AXL/API/1.0", IsNullable=false)]
    public class GetDevicePoolRes 
    {
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public GetDevicePoolResReturn @return;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public System.UInt64 sequence;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool sequenceSpecified;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class GetDevicePoolResReturn 
    {
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XDevicePool devicePool;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("addCallManagerGroup", Namespace="http://www.cisco.com/AXL/API/1.0", IsNullable=false)]
    public class AddCallManagerGroupReq 
    {
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XCallManagerGroup callManagerGroup;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public System.UInt64 sequence;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool sequenceSpecified;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("updateCallManagerGroup", Namespace="http://www.cisco.com/AXL/API/1.0", IsNullable=false)]
    public class UpdateCallManagerGroupReq 
    {
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("name", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("uuid", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")]
        public string Item;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public ItemChoiceType60 ItemElementName;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string newName;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool tftpDefault;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool tftpDefaultSpecified;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute("member", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public XCallManagerMember[] members;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public System.UInt64 sequence;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool sequenceSpecified;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
    public enum ItemChoiceType60 
    {
    
        /// <remarks/>
        name,
    
        /// <remarks/>
        uuid,
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("getCallManagerGroupResponse", Namespace="http://www.cisco.com/AXL/API/1.0", IsNullable=false)]
    public class GetCallManagerGroupRes 
    {
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public GetCallManagerGroupResReturn @return;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public System.UInt64 sequence;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool sequenceSpecified;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class GetCallManagerGroupResReturn 
    {
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XCallManagerGroup callManagerGroup;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("addVoiceMailPort", Namespace="http://www.cisco.com/AXL/API/1.0", IsNullable=false)]
    public class AddVoiceMailPortReq 
    {
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XVoiceMailPort voiceMailPort;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public System.UInt64 sequence;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool sequenceSpecified;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("updateVoiceMailPort", Namespace="http://www.cisco.com/AXL/API/1.0", IsNullable=false)]
    public class UpdateVoiceMailPortReq 
    {
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("name", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("uuid", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")]
        public string Item;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public ItemChoiceType30 ItemElementName;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string newName;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string description;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("callingSearchSpaceId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("callingSearchSpaceName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="Name")]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("Item1ElementName")]
        public string Item1;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public Item1ChoiceType6 Item1ElementName;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("devicePoolName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("devicePoolId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("Item2ElementName")]
        public string Item2;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public Item2ChoiceType3 Item2ElementName;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("locationName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="Name")]
        [System.Xml.Serialization.XmlElementAttribute("locationId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("Item3ElementName")]
        public string Item3;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public Item3ChoiceType2 Item3ElementName;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("mediaResourceListId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("mediaResourceListName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="Name")]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("Item4ElementName")]
        public string Item4;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public Item4ChoiceType2 Item4ElementName;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("automatedAlternateRoutingCSSId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("automatedAlternateRoutingCSSName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("Item5ElementName")]
        public string Item5;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public Item5ChoiceType2 Item5ElementName;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("aarNeighborhoodName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("aarNeighborhoodId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("Item6ElementName")]
        public string Item6;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public Item6ChoiceType1 Item6ElementName;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XLoadInformation loadInformation;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public System.Xml.XmlElement vendorConfig;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool traceFlag;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool traceFlagSpecified;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public XLine line;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public System.UInt64 sequence;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool sequenceSpecified;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
    public enum ItemChoiceType30 
    {
    
        /// <remarks/>
        name,
    
        /// <remarks/>
        uuid,
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
    public enum Item1ChoiceType6 
    {
    
        /// <remarks/>
        callingSearchSpaceId,
    
        /// <remarks/>
        callingSearchSpaceName,
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
    public enum Item2ChoiceType3 
    {
    
        /// <remarks/>
        devicePoolName,
    
        /// <remarks/>
        devicePoolId,
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
    public enum Item3ChoiceType2 
    {
    
        /// <remarks/>
        locationName,
    
        /// <remarks/>
        locationId,
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
    public enum Item4ChoiceType2 
    {
    
        /// <remarks/>
        mediaResourceListId,
    
        /// <remarks/>
        mediaResourceListName,
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
    public enum Item5ChoiceType2 
    {
    
        /// <remarks/>
        automatedAlternateRoutingCSSId,
    
        /// <remarks/>
        automatedAlternateRoutingCSSName,
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
    public enum Item6ChoiceType1 
    {
    
        /// <remarks/>
        aarNeighborhoodName,
    
        /// <remarks/>
        aarNeighborhoodId,
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("getVoiceMailPortResponse", Namespace="http://www.cisco.com/AXL/API/1.0", IsNullable=false)]
    public class GetVoiceMailPortRes 
    {
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public GetVoiceMailPortResReturn @return;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public System.UInt64 sequence;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool sequenceSpecified;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class GetVoiceMailPortResReturn 
    {
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XVoiceMailPort voiceMailPort;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("addGatewayEndpoint", Namespace="http://www.cisco.com/AXL/API/1.0", IsNullable=false)]
    public class AddGatewayEndpointReq 
    {
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XGateway gateway;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public System.UInt64 sequence;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool sequenceSpecified;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("updateGatewayEndpoint", Namespace="http://www.cisco.com/AXL/API/1.0", IsNullable=false)]
    public class UpdateGatewayEndpointReq 
    {
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("name", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("uuid", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")]
        public string Item;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public ItemChoiceType39 ItemElementName;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string newName;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string description;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XProtocolSide protocolSide;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool protocolSideSpecified;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("callingSearchSpaceId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("callingSearchSpaceName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="Name")]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("Item1ElementName")]
        public string Item1;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public Item1ChoiceType7 Item1ElementName;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("devicePoolName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("devicePoolId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("Item2ElementName")]
        public string Item2;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public Item2ChoiceType4 Item2ElementName;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XNetworkLocation networkLocation;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool networkLocationSpecified;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("locationName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="Name")]
        [System.Xml.Serialization.XmlElementAttribute("locationId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("Item3ElementName")]
        public string Item3;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public Item3ChoiceType3 Item3ElementName;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("mediaResourceListId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("mediaResourceListName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="Name")]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("Item4ElementName")]
        public string Item4;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public Item4ChoiceType3 Item4ElementName;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="nonNegativeInteger")]
        public string networkHoldMOHAudioSourceId;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="nonNegativeInteger")]
        public string userHoldMOHAudioSourceId;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("automatedAlternateRoutingCSSId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("automatedAlternateRoutingCSSName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("Item5ElementName")]
        public string Item5;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public Item5ChoiceType3 Item5ElementName;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("aarNeighborhoodName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("aarNeighborhoodId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("Item6ElementName")]
        public string Item6;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public Item6ChoiceType2 Item6ElementName;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XLoadInformation loadInformation;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public System.Xml.XmlElement vendorConfig;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool traceFlag;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool traceFlagSpecified;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int mlppDomainId;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool mlppDomainIdSpecified;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XStatus mlppIndicationStatus;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool mlppIndicationStatusSpecified;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XPreemption preemption;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool preemptionSpecified;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XCountry country;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool countrySpecified;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XPacketCaptureMode packetCaptureMode;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool packetCaptureModeSpecified;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="positiveInteger")]
        public string packetCaptureDuration;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("pri", typeof(UpdateGatewayEndpointReqPri), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("analog", typeof(UpdateGatewayEndpointReqAnalog), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("bri", typeof(UpdateGatewayEndpointReqBri), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("t1", typeof(UpdateGatewayEndpointReqT1), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public object Item7;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public System.UInt64 sequence;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool sequenceSpecified;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
    public enum ItemChoiceType39 
    {
    
        /// <remarks/>
        name,
    
        /// <remarks/>
        uuid,
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
    public enum Item1ChoiceType7 
    {
    
        /// <remarks/>
        callingSearchSpaceId,
    
        /// <remarks/>
        callingSearchSpaceName,
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
    public enum Item2ChoiceType4 
    {
    
        /// <remarks/>
        devicePoolName,
    
        /// <remarks/>
        devicePoolId,
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
    public enum Item3ChoiceType3 
    {
    
        /// <remarks/>
        locationName,
    
        /// <remarks/>
        locationId,
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
    public enum Item4ChoiceType3 
    {
    
        /// <remarks/>
        mediaResourceListId,
    
        /// <remarks/>
        mediaResourceListName,
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
    public enum Item5ChoiceType3 
    {
    
        /// <remarks/>
        automatedAlternateRoutingCSSId,
    
        /// <remarks/>
        automatedAlternateRoutingCSSName,
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
    public enum Item6ChoiceType2 
    {
    
        /// <remarks/>
        aarNeighborhoodName,
    
        /// <remarks/>
        aarNeighborhoodId,
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class UpdateGatewayEndpointReqPri 
    {
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool acceptInboundRDNIS;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool acceptInboundRDNISSpecified;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XNumberingPlan calledPlan;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool calledPlanSpecified;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XPriOfNumber calledPri;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool calledPriSpecified;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string callerIDDN;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XCallingPartySelection callingPartySelection;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool callingPartySelectionSpecified;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XNumberingPlan callingPlan;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool callingPlanSpecified;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XPriOfNumber callingPri;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool callingPriSpecified;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="nonNegativeInteger")]
        public string chanIE;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XClockReference clockReference;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool clockReferenceSpecified;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XCSUParam csuParam;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool csuParamSpecified;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool dChannelEnable;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool dChannelEnableSpecified;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool direction;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool directionSpecified;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool displayIE;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool displayIESpecified;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XEncode encode;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool encodeSpecified;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XFDLChannel fdlChannel;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool fdlChannelSpecified;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="nonNegativeInteger")]
        public string firstDelay;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public UpdateGatewayEndpointReqPriInterfaceId interfaceId;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="nonNegativeInteger")]
        public string intraDelay;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool mcdnEnable;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool mcdnEnableSpecified;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool numberIE;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool numberIESpecified;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="nonNegativeInteger")]
        public string numDigits;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool passingPrecedenceLevelThroughUUIE;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool passingPrecedenceLevelThroughUUIESpecified;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string prefix;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XPresentationBit callingLinePresentationBit;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool callingLinePresentationBitSpecified;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XPresentationBit connectedLinePresentationBit;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool connectedLinePresentationBitSpecified;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XConnectedPBX connectedPBX;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool connectedPBXSpecified;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XPriProtocol priProtocol;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool priProtocolSpecified;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="nonNegativeInteger")]
        public string securityAccessLevel;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool sendCallingNameInFacilityIE;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool sendCallingNameInFacilityIESpecified;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool sendEXLeadingCharInDispIE;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool sendEXLeadingCharInDispIESpecified;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool sendRestart;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool sendRestartSpecified;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool setupNonISDNPI;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool setupNonISDNPISpecified;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool sigDigits;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool sigDigitsSpecified;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="nonNegativeInteger")]
        public string span;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool statusPoll;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool statusPollSpecified;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="nonNegativeInteger")]
        public string stripCountOut;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XTrunkPad trunkPadRx;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool trunkPadRxSpecified;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XTrunkPad trunkPadTx;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool trunkPadTxSpecified;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XTrunkLevel trunkLevel;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool trunkLevelSpecified;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XYellowAlarm yellowAlarm;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool yellowAlarmSpecified;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XZeroSuppression zeroSuppression;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool zeroSuppressionSpecified;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="positiveInteger")]
        public string sMDIBasePort;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool protocolProfile91NameOnly;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool protocolProfile91NameOnlySpecified;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class UpdateGatewayEndpointReqPriInterfaceId 
    {
    
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool present;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute(DataType="nonNegativeInteger")]
        public string Value;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class UpdateGatewayEndpointReqAnalog 
    {
    
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute("port", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Namespace="http://www.cisco.com/AXL/1.0", IsNullable=false)]
        public XAnalogPort[] ports;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XTrunkSelectionOrder trunkSelectionOrder;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool trunkSelectionOrderSpecified;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class UpdateGatewayEndpointReqBri 
    {
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool acceptInboundRDNIS;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool acceptInboundRDNISSpecified;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XBriProtocol briProtocol;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool briProtocolSpecified;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XNumberingPlan calledPlan;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool calledPlanSpecified;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XPriOfNumber calledPri;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool calledPriSpecified;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string callerIDDN;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XCallingPartySelection callingPartySelection;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool callingPartySelectionSpecified;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XNumberingPlan callingPlan;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool callingPlanSpecified;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XPriOfNumber callingPri;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool callingPriSpecified;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="nonNegativeInteger")]
        public string chanIE;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XClockReference clockReference;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool clockReferenceSpecified;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XCSUParam csuParam;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool csuParamSpecified;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool dChannelEnable;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool dChannelEnableSpecified;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool direction;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool directionSpecified;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool displayIE;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool displayIESpecified;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XEncode encode;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool encodeSpecified;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XFDLChannel fdlChannel;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool fdlChannelSpecified;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="nonNegativeInteger")]
        public string firstDelay;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XFraming framing;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool framingSpecified;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="nonNegativeInteger")]
        public string intraDelay;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool numberIE;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool numberIESpecified;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="nonNegativeInteger")]
        public string numDigits;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string prefix;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XPresentationBit presentationBit;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool presentationBitSpecified;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool sendRestart;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool sendRestartSpecified;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool setupNonISDNPI;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool setupNonISDNPISpecified;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool sigDigits;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool sigDigitsSpecified;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool stableIn4;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool stableIn4Specified;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool statusPoll;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool statusPollSpecified;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="nonNegativeInteger")]
        public string stripCountOut;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XTrunkPad trunkPadRx;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool trunkPadRxSpecified;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XTrunkPad trunkPadTx;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool trunkPadTxSpecified;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XTrunkLevel trunkLevel;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool trunkLevelSpecified;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XYellowAlarm yellowAlarm;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool yellowAlarmSpecified;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XZeroSuppression zeroSuppression;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool zeroSuppressionSpecified;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class UpdateGatewayEndpointReqT1 
    {
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XTrunkSelectionOrder trunkSelectionOrder;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool trunkSelectionOrderSpecified;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XClockReference clockReference;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool clockReferenceSpecified;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XCSUParam csuParam;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool csuParamSpecified;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XDigitSending digitSending;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool digitSendingSpecified;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XEncode encode;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool encodeSpecified;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XFDLChannel fdlChannel;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool fdlChannelSpecified;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute("port", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Namespace="http://www.cisco.com/AXL/1.0", IsNullable=false)]
        public XT1Port[] ports;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XYellowAlarm yellowAlarm;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool yellowAlarmSpecified;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XZeroSuppression zeroSuppression;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool zeroSuppressionSpecified;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("getGatewayEndpointResponse", Namespace="http://www.cisco.com/AXL/API/1.0", IsNullable=false)]
    public class GetGatewayEndpointRes 
    {
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public GetGatewayEndpointResReturn @return;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public System.UInt64 sequence;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool sequenceSpecified;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class GetGatewayEndpointResReturn 
    {
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XGateway device;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("addRouteFilter", Namespace="http://www.cisco.com/AXL/API/1.0", IsNullable=false)]
    public class AddRouteFilterReq 
    {
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XRouteFilter routeFilter;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public System.UInt64 sequence;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool sequenceSpecified;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("updateRouteFilter", Namespace="http://www.cisco.com/AXL/API/1.0", IsNullable=false)]
    public class UpdateRouteFilterReq 
    {
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("name", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("uuid", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")]
        public string Item;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public ItemChoiceType74 ItemElementName;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string newName;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("dialPlanName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="Name")]
        [System.Xml.Serialization.XmlElementAttribute("dialPlanId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("Item1ElementName")]
        public string Item1;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public Item1ChoiceType16 Item1ElementName;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute("member", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public XRouteFilterMember[] members;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public System.UInt64 sequence;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool sequenceSpecified;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
    public enum ItemChoiceType74 
    {
    
        /// <remarks/>
        name,
    
        /// <remarks/>
        uuid,
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
    public enum Item1ChoiceType16 
    {
    
        /// <remarks/>
        dialPlanName,
    
        /// <remarks/>
        dialPlanId,
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("getRouteFilterResponse", Namespace="http://www.cisco.com/AXL/API/1.0", IsNullable=false)]
    public class GetRouteFilterRes 
    {
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public GetRouteFilterResReturn @return;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public System.UInt64 sequence;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool sequenceSpecified;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class GetRouteFilterResReturn 
    {
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XRouteFilter routeFilter;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("getServiceParameter", Namespace="http://www.cisco.com/AXL/API/1.0", IsNullable=false)]
    public class GetServiceParameterReq 
    {
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("name", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("uuid", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("processNodeId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("processNodeName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("service", typeof(XService), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")]
        public object Item;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public ItemChoiceType43 ItemElementName;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public System.UInt64 sequence;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool sequenceSpecified;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
    public enum ItemChoiceType43 
    {
    
        /// <remarks/>
        name,
    
        /// <remarks/>
        uuid,
    
        /// <remarks/>
        processNodeId,
    
        /// <remarks/>
        processNodeName,
    
        /// <remarks/>
        service,
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("getServiceParameterResponse", Namespace="http://www.cisco.com/AXL/API/1.0", IsNullable=false)]
    public class GetServiceParameterRes 
    {
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public GetServiceParameterResReturn @return;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public System.UInt64 sequence;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool sequenceSpecified;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class GetServiceParameterResReturn 
    {
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XProcessConfig serviceParameter;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
    public class XProcessConfig 
    {
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("processNodeName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("processNode", typeof(XProcessNode), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public object Item;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string name;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XService service;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string value;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XParam valueType;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(false)]
        public bool primaryData = false;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string uuid;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
    public enum XParam 
    {
    
        /// <remarks/>
        boolean,
    
        /// <remarks/>
        @double,
    
        /// <remarks/>
        @long,
    
        /// <remarks/>
        @string,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("date/time")]
        datetime,
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("updateServiceParameter", Namespace="http://www.cisco.com/AXL/API/1.0", IsNullable=false)]
    public class UpdateServiceParameterReq 
    {
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("name", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("uuid", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("processNodeId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("processNodeName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("service", typeof(XService), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")]
        public object Item;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public ItemChoiceType62 ItemElementName;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string newValue;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public System.UInt64 sequence;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool sequenceSpecified;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
    public enum ItemChoiceType62 
    {
    
        /// <remarks/>
        name,
    
        /// <remarks/>
        uuid,
    
        /// <remarks/>
        processNodeId,
    
        /// <remarks/>
        processNodeName,
    
        /// <remarks/>
        service,
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("addLocation", Namespace="http://www.cisco.com/AXL/API/1.0", IsNullable=false)]
    public class AddLocationReq 
    {
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XLocation location;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public System.UInt64 sequence;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool sequenceSpecified;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("updateLocation", Namespace="http://www.cisco.com/AXL/API/1.0", IsNullable=false)]
    public class UpdateLocationReq 
    {
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("name", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("uuid", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")]
        public string Item;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public ItemChoiceType38 ItemElementName;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string newName;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="nonNegativeInteger")]
        public string kbits;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="nonNegativeInteger")]
        public string videoKbits;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public System.UInt64 sequence;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool sequenceSpecified;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
    public enum ItemChoiceType38 
    {
    
        /// <remarks/>
        name,
    
        /// <remarks/>
        uuid,
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("getLocationResponse", Namespace="http://www.cisco.com/AXL/API/1.0", IsNullable=false)]
    public class GetLocationRes 
    {
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public GetLocationResReturn @return;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public System.UInt64 sequence;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool sequenceSpecified;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class GetLocationResReturn 
    {
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XLocation location;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("addCMCInfo", Namespace="http://www.cisco.com/AXL/API/1.0", IsNullable=false)]
    public class AddCMCInfoReq 
    {
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XCMCInfo cmcInfo;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public System.UInt64 sequence;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool sequenceSpecified;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
    public class XCMCInfo 
    {
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string code;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string description;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string uuid;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("updateCMCInfo", Namespace="http://www.cisco.com/AXL/API/1.0", IsNullable=false)]
    public class UpdateCMCInfoReq : GUIDRequest 
    {
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string code;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string description;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="nonNegativeInteger")]
        public string authorizationLevel;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(UpdateCMCInfoReq))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(UpdateFACInfoReq))]
    [System.Xml.Serialization.XmlRootAttribute("getCMCInfo", Namespace="http://www.cisco.com/AXL/API/1.0", IsNullable=false)]
    public class GUIDRequest 
    {
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string uuid;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public System.UInt64 sequence;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool sequenceSpecified;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("updateFACInfo", Namespace="http://www.cisco.com/AXL/API/1.0", IsNullable=false)]
    public class UpdateFACInfoReq : GUIDRequest 
    {
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string code;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string description;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="nonNegativeInteger")]
        public string authorizationLevel;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("getCMCInfoResponse", Namespace="http://www.cisco.com/AXL/API/1.0", IsNullable=false)]
    public class GetCMCInfoRes 
    {
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public GetCMCInfoResReturn @return;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public System.UInt64 sequence;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool sequenceSpecified;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class GetCMCInfoResReturn 
    {
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XCMCInfo cmcInfo;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("addFACInfo", Namespace="http://www.cisco.com/AXL/API/1.0", IsNullable=false)]
    public class AddFACInfoReq 
    {
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XFACInfo facInfo;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public System.UInt64 sequence;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool sequenceSpecified;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
    public class XFACInfo 
    {
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string code;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string description;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="nonNegativeInteger")]
        public string authorizationLevel;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string uuid;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("getFACInfoResponse", Namespace="http://www.cisco.com/AXL/API/1.0", IsNullable=false)]
    public class GetFACInfoRes 
    {
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public GetFACInfoResReturn @return;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public System.UInt64 sequence;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool sequenceSpecified;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class GetFACInfoResReturn 
    {
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XFACInfo facInfo;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("addRegion", Namespace="http://www.cisco.com/AXL/API/1.0", IsNullable=false)]
    public class AddRegionReq 
    {
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XRegion region;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public System.UInt64 sequence;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool sequenceSpecified;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("updateRegion", Namespace="http://www.cisco.com/AXL/API/1.0", IsNullable=false)]
    public class UpdateRegionReq 
    {
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("name", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("uuid", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")]
        public string Item;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public ItemChoiceType56 ItemElementName;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string newName;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public System.UInt64 sequence;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool sequenceSpecified;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
    public enum ItemChoiceType56 
    {
    
        /// <remarks/>
        name,
    
        /// <remarks/>
        uuid,
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("getRegionResponse", Namespace="http://www.cisco.com/AXL/API/1.0", IsNullable=false)]
    public class GetRegionRes 
    {
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public GetRegionResReturn @return;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public System.UInt64 sequence;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool sequenceSpecified;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class GetRegionResReturn 
    {
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XRegion region;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("updateRegionMatrix", Namespace="http://www.cisco.com/AXL/API/1.0", IsNullable=false)]
    public class UpdateRegionMatrixReq 
    {
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string uuid;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XBandwidth bandwidth;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool bandwidthSpecified;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="nonNegativeInteger")]
        public string videoBandwidth;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public System.UInt64 sequence;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool sequenceSpecified;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("addMGCP", Namespace="http://www.cisco.com/AXL/API/1.0", IsNullable=false)]
    public class AddMGCPReq 
    {
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XMGCP newMGCP;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public System.UInt64 sequence;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool sequenceSpecified;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
    public class XMGCP 
    {
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string domainName;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string description;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XProduct product;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XModel model;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("callManagerGroupName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("callManagerGroup", typeof(XCallManagerGroup), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public object Item;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XMGCPUnits units;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string scratch;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public System.Xml.XmlElement vendorConfig;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string versionStamp;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XLoadInformation loadInformation;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string uuid;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
    public class XMGCPUnits 
    {
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("unit", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XMGCPUnit[] unit;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute(DataType="positiveInteger")]
        public string max;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
    public class XMGCPUnit 
    {
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XMGCPSlotModule product;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XMGCPSubunits subunits;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute(DataType="nonNegativeInteger")]
        public string index;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
    public enum XMGCPSlotModule 
    {
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("NM-1V")]
        NM1V,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("NM-2V")]
        NM2V,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("NM-HDV")]
        NMHDV,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("VIC-SLOT")]
        VICSLOT,
    
        /// <remarks/>
        NONE,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("VWIC-SLOT")]
        VWICSLOT,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("FLEX-SLOT")]
        FLEXSLOT,
    
        /// <remarks/>
        ANALOG,
    
        /// <remarks/>
        DIGITAL,
    
        /// <remarks/>
        VGC_PORT,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("WS-X6600")]
        WSX6600,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("AIM-VOICE-30 (2 subunits)")]
        AIMVOICE302subunits,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("NM-HDA")]
        NMHDA,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("PA-VXA")]
        PAVXA,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("PA-VXB")]
        PAVXB,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("PA-VXC")]
        PAVXC,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("PA-MCX")]
        PAMCX,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("NM-HD-1V")]
        NMHD1V,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("NM-HD-2V")]
        NMHD2V,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("NM-HD-2VE")]
        NMHD2VE,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("GENERIC-SLOT")]
        GENERICSLOT,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("NM-4VWIC-MBRD")]
        NM4VWICMBRD,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("EVM-HD")]
        EVMHD,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("NM-HDV2-0PORT")]
        NMHDV20PORT,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("NM-HDV2-1PORT-T1")]
        NMHDV21PORTT1,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("NM-HDV2-1PORT-E1")]
        NMHDV21PORTE1,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("NM-HDV2-2PORT-T1")]
        NMHDV22PORTT1,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("NM-HDV2-2PORT-E1")]
        NMHDV22PORTE1,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("AIM-VOICE-30-SLOT-0 (3 subunits- slot 0 only)")]
        AIMVOICE30SLOT03subunitsslot0only,
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
    public class XMGCPSubunits 
    {
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("subunit", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XMGCPSubunit[] subunit;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute(DataType="nonNegativeInteger")]
        public string index;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
    public class XMGCPSubunit 
    {
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XMGCPVic product;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XMGCPEndpoints endpoints;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute(DataType="nonNegativeInteger")]
        public string index;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
    public enum XMGCPVic 
    {
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("VIC-2FXS")]
        VIC2FXS,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("VIC-2FXO")]
        VIC2FXO,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("VWIC-1MFT-T1")]
        VWIC1MFTT1,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("VWIC-2MFT-T1")]
        VWIC2MFTT1,
    
        /// <remarks/>
        VIC_NONE,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("VWIC-1MFT-E1")]
        VWIC1MFTE1,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("VWIC-2MFT-E1")]
        VWIC2MFTE1,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("WS-U4604-8FXS")]
        WSU46048FXS,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("8FXS")]
        Item8FXS,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("16FXS")]
        Item16FXS,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("1T1")]
        Item1T1,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("16FXS8FXO")]
        Item16FXS8FXO,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("48_PORTS")]
        Item48_PORTS,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("VIC-4FXS")]
        VIC4FXS,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("VIC-4FXO")]
        VIC4FXO,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("VIC-8FXS")]
        VIC8FXS,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("VIC-16FXS")]
        VIC16FXS,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("WS-SVC-CMM-24FXS")]
        WSSVCCMM24FXS,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("WS-SVC-CMM-6T1")]
        WSSVCCMM6T1,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("WS-SVC-CMM-6E1")]
        WSSVCCMM6E1,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("EM-4FXO-EM0")]
        EM4FXOEM0,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("EM-4FXO-EM1")]
        EM4FXOEM1,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("EM-8FXS-EM0")]
        EM8FXSEM0,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("EM-8FXS-EM1")]
        EM8FXSEM1,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("NM-HDA-4FXS")]
        NMHDA4FXS,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("PA-VXA-1TE1-24-T1")]
        PAVXA1TE124T1,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("PA-VXA-1TE1-30-E1")]
        PAVXA1TE130E1,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("PA-VXB-2TE1-T1")]
        PAVXB2TE1T1,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("PA-VXB-2TE1-E1")]
        PAVXB2TE1E1,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("PA-VXC-2TE1-T1")]
        PAVXC2TE1T1,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("PA-VXC-2TE1-E1")]
        PAVXC2TE1E1,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("PA-MCX-2TE1-T1")]
        PAMCX2TE1T1,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("PA-MCX-2TE1-E1")]
        PAMCX2TE1E1,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("PA-MCX-4TE1-T1")]
        PAMCX4TE1T1,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("PA-MCX-4TE1-E1")]
        PAMCX4TE1E1,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("PA-MCX-6TE1-T1")]
        PAMCX6TE1T1,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("PA-MCX-6TE1-E1")]
        PAMCX6TE1E1,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("PA-MCX-8TE1-T1")]
        PAMCX8TE1T1,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("PA-MCX-8TE1-E1")]
        PAMCX8TE1E1,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("VIC-8FXO")]
        VIC8FXO,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("WS-U4604-8FXO-2FXS")]
        WSU46048FXO2FXS,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("WS-U4604-16FXS")]
        WSU460416FXS,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("VIC-2BRI")]
        VIC2BRI,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("VIC-2FXS-SCCP")]
        VIC2FXSSCCP,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("VIC-4FXS-SCCP")]
        VIC4FXSSCCP,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("VIC2-2FXS-SCCP")]
        VIC22FXSSCCP,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("VIC2-2BRI-NT/TE-SCCP")]
        VIC22BRINTTESCCP,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("NM-HDA-4FXS-SCCP")]
        NMHDA4FXSSCCP,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("EM-8FXS-EM0-SCCP")]
        EM8FXSEM0SCCP,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("24FXS-SCCP")]
        Item24FXSSCCP,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("EM-8FXS-EM1-SCCP")]
        EM8FXSEM1SCCP,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("WS-SVC-CMM-ACT")]
        WSSVCCMMACT,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("VIC2-2FXS")]
        VIC22FXS,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("VIC2-2FXO")]
        VIC22FXO,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("VIC2-2BRI")]
        VIC22BRI,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("VIC-4FXS/DID")]
        VIC4FXSDID,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("VIC2-4FXO")]
        VIC24FXO,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("NM-HDV2-ONBOARD-T1")]
        NMHDV2ONBOARDT1,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("NM-HDV2-ONBOARD-E1")]
        NMHDV2ONBOARDE1,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("VWIC2-1MFT-T1E1-T1")]
        VWIC21MFTT1E1T1,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("VWIC2-1MFT-T1E1-E1")]
        VWIC21MFTT1E1E1,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("VWIC2-2MFT-T1E1-T1")]
        VWIC22MFTT1E1T1,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("VWIC2-2MFT-T1E1-E1")]
        VWIC22MFTT1E1E1,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("VWIC2-1MFT-G703-T1")]
        VWIC21MFTG703T1,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("VWIC2-1MFT-G703-E1")]
        VWIC21MFTG703E1,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("VWIC2-2MFT-G703-T1")]
        VWIC22MFTG703T1,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("VWIC2-2MFT-G703-E1")]
        VWIC22MFTG703E1,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("EVM-HD-8FXS/DID")]
        EVMHD8FXSDID,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("EM-4BRI-NT/TE-EM0")]
        EM4BRINTTEEM0,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("EM-4BRI-NT/TE-EM1")]
        EM4BRINTTEEM1,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("24FXS")]
        Item24FXS,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("NM-HDV2-ONBOARD-T1-2PORT")]
        NMHDV2ONBOARDT12PORT,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("NM-HDV2-ONBOARD-E1-2PORT")]
        NMHDV2ONBOARDE12PORT,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("EM-HDA-8FXS")]
        EMHDA8FXS,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("EM-HDA-6FXO")]
        EMHDA6FXO,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("EM-HDA-3FXS/4FXO")]
        EMHDA3FXS4FXO,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("EM2-HDA-4FXO")]
        EM2HDA4FXO,
    
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("EM-4BRI-NT/TE")]
        EM4BRINTTE,
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
    public class XMGCPEndpoints 
    {
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("deviceName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("endpoint", typeof(XGateway), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public object[] Items;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute(DataType="positiveInteger")]
        public string max;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("addMGCPUnit", Namespace="http://www.cisco.com/AXL/API/1.0", IsNullable=false)]
    public class AddMGCPUnitReq 
    {
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("uuid", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("domainName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")]
        public string Item;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public ItemChoiceType27 ItemElementName;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XMGCPUnit unit;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public System.UInt64 sequence;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool sequenceSpecified;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
    public enum ItemChoiceType27 
    {
    
        /// <remarks/>
        uuid,
    
        /// <remarks/>
        domainName,
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("addMGCPSubunit", Namespace="http://www.cisco.com/AXL/API/1.0", IsNullable=false)]
    public class AddMGCPSubunitReq 
    {
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("uuid", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("domainName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")]
        public string Item;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public ItemChoiceType83 ItemElementName;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public AddMGCPSubunitReqUnit unit;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XMGCPSubunit subunit;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public System.UInt64 sequence;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool sequenceSpecified;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
    public enum ItemChoiceType83 
    {
    
        /// <remarks/>
        uuid,
    
        /// <remarks/>
        domainName,
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class AddMGCPSubunitReqUnit 
    {
    
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute(DataType="nonNegativeInteger")]
        public string index;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("addMGCPEndpoint", Namespace="http://www.cisco.com/AXL/API/1.0", IsNullable=false)]
    public class AddMGCPEndpointReq 
    {
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("uuid", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("domainName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")]
        public string Item;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public ItemChoiceType80 ItemElementName;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public AddMGCPEndpointReqUnit unit;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public AddMGCPEndpointReqSubunit subunit;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public AddMGCPEndpointReqEndpoint endpoint;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public System.UInt64 sequence;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool sequenceSpecified;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
    public enum ItemChoiceType80 
    {
    
        /// <remarks/>
        uuid,
    
        /// <remarks/>
        domainName,
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class AddMGCPEndpointReqUnit 
    {
    
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute(DataType="nonNegativeInteger")]
        public string index;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class AddMGCPEndpointReqSubunit 
    {
    
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute(DataType="nonNegativeInteger")]
        public string index;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class AddMGCPEndpointReqEndpoint : XMGCPEndpoint 
    {
    
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute(DataType="nonNegativeInteger")]
        public string index;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("getMGCP", Namespace="http://www.cisco.com/AXL/API/1.0", IsNullable=false)]
    public class GetMGCPReq 
    {
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("uuid", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("domainName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")]
        public string Item;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public ItemChoiceType52 ItemElementName;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public System.UInt64 sequence;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool sequenceSpecified;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
    public enum ItemChoiceType52 
    {
    
        /// <remarks/>
        uuid,
    
        /// <remarks/>
        domainName,
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("getMGCPResponse", Namespace="http://www.cisco.com/AXL/API/1.0", IsNullable=false)]
    public class GetMGCPRes 
    {
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public GetMGCPResReturn @return;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public System.UInt64 sequence;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool sequenceSpecified;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class GetMGCPResReturn 
    {
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XMGCP mgcp;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("removeMGCP", Namespace="http://www.cisco.com/AXL/API/1.0", IsNullable=false)]
    public class RemoveMGCPReq 
    {
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("uuid", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("domainName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")]
        public string Item;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public ItemChoiceType29 ItemElementName;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public System.UInt64 sequence;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool sequenceSpecified;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
    public enum ItemChoiceType29 
    {
    
        /// <remarks/>
        uuid,
    
        /// <remarks/>
        domainName,
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("removeMGCPUnit", Namespace="http://www.cisco.com/AXL/API/1.0", IsNullable=false)]
    public class RemoveMGCPUnitReq 
    {
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("uuid", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("domainName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")]
        public string Item;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public ItemChoiceType64 ItemElementName;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public RemoveMGCPUnitReqUnit unit;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public System.UInt64 sequence;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool sequenceSpecified;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
    public enum ItemChoiceType64 
    {
    
        /// <remarks/>
        uuid,
    
        /// <remarks/>
        domainName,
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class RemoveMGCPUnitReqUnit 
    {
    
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute(DataType="nonNegativeInteger")]
        public string index;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("removeMGCPSubunit", Namespace="http://www.cisco.com/AXL/API/1.0", IsNullable=false)]
    public class RemoveMGCPSubunitReq 
    {
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("uuid", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("domainName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")]
        public string Item;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public ItemChoiceType61 ItemElementName;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public RemoveMGCPSubunitReqUnit unit;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public RemoveMGCPSubunitReqSubunit subunit;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public System.UInt64 sequence;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool sequenceSpecified;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
    public enum ItemChoiceType61 
    {
    
        /// <remarks/>
        uuid,
    
        /// <remarks/>
        domainName,
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class RemoveMGCPSubunitReqUnit 
    {
    
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute(DataType="nonNegativeInteger")]
        public string index;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class RemoveMGCPSubunitReqSubunit 
    {
    
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute(DataType="nonNegativeInteger")]
        public string index;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("removeMGCPEndpoint", Namespace="http://www.cisco.com/AXL/API/1.0", IsNullable=false)]
    public class RemoveMGCPEndpointReq 
    {
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("uuid", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("domainName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")]
        public string Item;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public ItemChoiceType76 ItemElementName;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public RemoveMGCPEndpointReqUnit unit;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public RemoveMGCPEndpointReqSubunit subunit;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public RemoveMGCPEndpointReqEndpoint endpoint;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public System.UInt64 sequence;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool sequenceSpecified;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
    public enum ItemChoiceType76 
    {
    
        /// <remarks/>
        uuid,
    
        /// <remarks/>
        domainName,
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class RemoveMGCPEndpointReqUnit 
    {
    
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute(DataType="nonNegativeInteger")]
        public string index;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class RemoveMGCPEndpointReqSubunit 
    {
    
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute(DataType="nonNegativeInteger")]
        public string index;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class RemoveMGCPEndpointReqEndpoint 
    {
    
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute(DataType="nonNegativeInteger")]
        public string index;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("updateMGCP", Namespace="http://www.cisco.com/AXL/API/1.0", IsNullable=false)]
    public class UpdateMGCPReq 
    {
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("uuid", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("domainName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")]
        public string Item;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public ItemChoiceType28 ItemElementName;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string newDomainName;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string description;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XProduct product;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool productSpecified;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XModel model;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool modelSpecified;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("callManagerGroupName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("callManagerGroup", typeof(XCallManagerGroup), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public object Item1;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="Name")]
        public string scratch;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public System.Xml.XmlElement vendorConfig;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string versionStamp;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XLoadInformation loadInformation;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public System.UInt64 sequence;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool sequenceSpecified;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
    public enum ItemChoiceType28 
    {
    
        /// <remarks/>
        uuid,
    
        /// <remarks/>
        domainName,
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("addCallManager", Namespace="http://www.cisco.com/AXL/API/1.0", IsNullable=false)]
    public class AddCallManagerReq 
    {
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XCallManager callManager;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public System.UInt64 sequence;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool sequenceSpecified;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("updateCallManager", Namespace="http://www.cisco.com/AXL/API/1.0", IsNullable=false)]
    public class UpdateCallManagerReq 
    {
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("name", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("uuid", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")]
        public string Item;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public ItemChoiceType31 ItemElementName;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string newName;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string description;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public UpdateCallManagerReqAutoRegistration autoRegistration;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public UpdateCallManagerReqPorts ports;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public System.UInt64 sequence;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool sequenceSpecified;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
    public enum ItemChoiceType31 
    {
    
        /// <remarks/>
        name,
    
        /// <remarks/>
        uuid,
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class UpdateCallManagerReqAutoRegistration 
    {
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string startDN;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string endDN;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string nextDN;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("routePartitionId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("routePartitionName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")]
        public string Item;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public ItemChoiceType32 ItemElementName;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string e164Mask;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
    public enum ItemChoiceType32 
    {
    
        /// <remarks/>
        routePartitionId,
    
        /// <remarks/>
        routePartitionName,
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class UpdateCallManagerReqPorts 
    {
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="nonNegativeInteger")]
        public string analogAccessPort;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="nonNegativeInteger")]
        public string digitalAccessPort;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="nonNegativeInteger")]
        public string ethernetPhonePort;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public UpdateCallManagerReqPortsMgcpPorts mgcpPorts;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class UpdateCallManagerReqPortsMgcpPorts 
    {
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="nonNegativeInteger")]
        public string listen;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="nonNegativeInteger")]
        public string keepAlive;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("getCallManagerResponse", Namespace="http://www.cisco.com/AXL/API/1.0", IsNullable=false)]
    public class GetCallManagerRes 
    {
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public GetCallManagerResReturn @return;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public System.UInt64 sequence;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool sequenceSpecified;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class GetCallManagerResReturn 
    {
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XCallManager callManager;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("addProcessNode", Namespace="http://www.cisco.com/AXL/API/1.0", IsNullable=false)]
    public class AddProcessNodeReq 
    {
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XProcessNode processNode;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public System.UInt64 sequence;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool sequenceSpecified;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("updateProcessNode", Namespace="http://www.cisco.com/AXL/API/1.0", IsNullable=false)]
    public class UpdateProcessNodeReq 
    {
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("name", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("uuid", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")]
        public string Item;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public ItemChoiceType82 ItemElementName;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="Name")]
        public string newName;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string description;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string mac;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public System.UInt64 sequence;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool sequenceSpecified;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
    public enum ItemChoiceType82 
    {
    
        /// <remarks/>
        name,
    
        /// <remarks/>
        uuid,
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("getProcessNodeResponse", Namespace="http://www.cisco.com/AXL/API/1.0", IsNullable=false)]
    public class GetProcessNodeRes 
    {
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public GetProcessNodeResReturn @return;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public System.UInt64 sequence;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool sequenceSpecified;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class GetProcessNodeResReturn 
    {
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XProcessNode processNode;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("listAllProcessNodes", Namespace="http://www.cisco.com/AXL/API/1.0", IsNullable=false)]
    public class ListAllProcessNodesReq 
    {
    
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public System.UInt64 sequence;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool sequenceSpecified;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("listAllProcessNodesResponse", Namespace="http://www.cisco.com/AXL/API/1.0", IsNullable=false)]
    public class ListAllProcessNodesRes 
    {
    
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute("processNode", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public XProcessNode[] @return;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public System.UInt64 sequence;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool sequenceSpecified;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("listProcessNodesByService", Namespace="http://www.cisco.com/AXL/API/1.0", IsNullable=false)]
    public class ListProcessNodesByServiceReq 
    {
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XService service;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public System.UInt64 sequence;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool sequenceSpecified;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("listProcessNodesByServiceResponse", Namespace="http://www.cisco.com/AXL/API/1.0", IsNullable=false)]
    public class ListProcessNodesByServiceRes 
    {
    
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute("processNode", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public XProcessNode[] @return;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public System.UInt64 sequence;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool sequenceSpecified;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("getProcessNodeService", Namespace="http://www.cisco.com/AXL/API/1.0", IsNullable=false)]
    public class GetProcessNodeServiceReq 
    {
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("uuid", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("processNodeId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("processNodeName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("service", typeof(XService), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")]
        public object Item;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public ItemChoiceType42 ItemElementName;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public System.UInt64 sequence;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool sequenceSpecified;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
    public enum ItemChoiceType42 
    {
    
        /// <remarks/>
        uuid,
    
        /// <remarks/>
        processNodeId,
    
        /// <remarks/>
        processNodeName,
    
        /// <remarks/>
        service,
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("getProcessNodeServiceResponse", Namespace="http://www.cisco.com/AXL/API/1.0", IsNullable=false)]
    public class GetProcessNodeServiceRes 
    {
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public GetProcessNodeServiceResReturn @return;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public System.UInt64 sequence;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool sequenceSpecified;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class GetProcessNodeServiceResReturn 
    {
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XProcessNodeService processNodeService;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
    public class XProcessNodeService 
    {
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("processNodeName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("processNode", typeof(XProcessNode), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public object Item;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XService service;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string fileName;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="nonNegativeInteger")]
        [System.ComponentModel.DefaultValueAttribute("0")]
        public string traceLevel = "0";
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="nonNegativeInteger")]
        [System.ComponentModel.DefaultValueAttribute("0")]
        public string userCategories = "0";
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(false)]
        public bool enable = false;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="nonNegativeInteger")]
        [System.ComponentModel.DefaultValueAttribute("250")]
        public string numFiles = "250";
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="nonNegativeInteger")]
        [System.ComponentModel.DefaultValueAttribute("10000")]
        public string numLines = "10000";
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="nonNegativeInteger")]
        [System.ComponentModel.DefaultValueAttribute("1440")]
        public string numMinutes = "1440";
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(false)]
        public bool includeNonDeviceTraces = false;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool useXML;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string serverName;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(false)]
        public bool deviceNameMonitorFlag = false;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool deviceTypeMonitorFlag;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(false)]
        public bool fileTraceFlag = false;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(false)]
        public bool outputDebugStringFlag = false;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string uuid;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("updateProcessNodeService", Namespace="http://www.cisco.com/AXL/API/1.0", IsNullable=false)]
    public class UpdateProcessNodeServiceReq 
    {
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("uuid", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("processNodeId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("processNodeName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("service", typeof(XService), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")]
        public object Item;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public ItemChoiceType54 ItemElementName;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string fileName;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="nonNegativeInteger")]
        public string traceLevel;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="nonNegativeInteger")]
        public string userCategories;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool enable;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool enableSpecified;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="nonNegativeInteger")]
        public string numFiles;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="nonNegativeInteger")]
        public string numLines;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="nonNegativeInteger")]
        public string numMinutes;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool includeNonDeviceTraces;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool includeNonDeviceTracesSpecified;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool useXML;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool useXMLSpecified;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string serverName;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool deviceNameMonitorFlag;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool deviceNameMonitorFlagSpecified;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool deviceTypeMonitorFlag;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool deviceTypeMonitorFlagSpecified;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool fileTraceFlag;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool fileTraceFlagSpecified;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool outputDebugStringFlag;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool outputDebugStringFlagSpecified;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public System.UInt64 sequence;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool sequenceSpecified;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
    public enum ItemChoiceType54 
    {
    
        /// <remarks/>
        uuid,
    
        /// <remarks/>
        processNodeId,
    
        /// <remarks/>
        processNodeName,
    
        /// <remarks/>
        service,
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("listRoutePartitionByName", Namespace="http://www.cisco.com/AXL/API/1.0", IsNullable=false)]
    public class ListBySearchString 
    {
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string searchString;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public System.UInt64 sequence;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool sequenceSpecified;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("listRoutePartitionByNameResponse", Namespace="http://www.cisco.com/AXL/API/1.0", IsNullable=false)]
    public class ListRoutePartitionRes 
    {
    
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute("routePartition", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public XRoutePartition[] @return;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public System.UInt64 sequence;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool sequenceSpecified;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("listDevicePoolByNameResponse", Namespace="http://www.cisco.com/AXL/API/1.0", IsNullable=false)]
    public class ListDevicePoolRes 
    {
    
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute("devicePool", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public ListDevicePoolResDevicePool[] @return;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public System.UInt64 sequence;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool sequenceSpecified;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class ListDevicePoolResDevicePool 
    {
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string name;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string uuid;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("listPhoneTemplateByNameResponse", Namespace="http://www.cisco.com/AXL/API/1.0", IsNullable=false)]
    public class ListPhoneTemplateRes 
    {
    
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute("phoneTemplate", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public ListPhoneTemplateResPhoneTemplate[] @return;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class ListPhoneTemplateResPhoneTemplate 
    {
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string name;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string uuid;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("listDeviceByNameAndClass", Namespace="http://www.cisco.com/AXL/API/1.0", IsNullable=false)]
    public class ListDeviceByNameAndClassReq 
    {
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string searchString;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XClass @class;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public System.UInt64 sequence;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool sequenceSpecified;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("listDeviceByNameAndClassResponse", Namespace="http://www.cisco.com/AXL/API/1.0", IsNullable=false)]
    public class ListDeviceRes 
    {
    
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute("device", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public ListDeviceResDevice[] @return;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public System.UInt64 sequence;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool sequenceSpecified;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class ListDeviceResDevice 
    {
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string name;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XProduct product;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XModel model;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string uuid;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("listDeviceByServiceNameResponse", Namespace="http://www.cisco.com/AXL/API/1.0", IsNullable=false)]
    public class ListDeviceByServiceNameRes 
    {
    
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute("device", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public ListDeviceByServiceNameResDevice[] @return;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public System.UInt64 sequence;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool sequenceSpecified;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class ListDeviceByServiceNameResDevice 
    {
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string name;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string uuid;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("listMOHAudioSourceByNameResponse", Namespace="http://www.cisco.com/AXL/API/1.0", IsNullable=false)]
    public class ListMOHAudioSourceRes 
    {
    
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute("mohAudioSource", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public ListMOHAudioSourceResMohAudioSource[] @return;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public System.UInt64 sequence;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool sequenceSpecified;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class ListMOHAudioSourceResMohAudioSource 
    {
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="nonNegativeInteger")]
        public string sourceId;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string name;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string uuid;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("updateMOHAudioSource", Namespace="http://www.cisco.com/AXL/API/1.0", IsNullable=false)]
    public class UpdateMOHAudioSourceReq 
    {
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("sourceId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="nonNegativeInteger")]
        [System.Xml.Serialization.XmlElementAttribute("uuid", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")]
        public string Item;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public ItemChoiceType75 ItemElementName;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string name;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string sourceFile;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool multicast;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool multicastSpecified;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool repeat;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool repeatSpecified;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public System.UInt64 sequence;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool sequenceSpecified;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
    public enum ItemChoiceType75 
    {
    
        /// <remarks/>
        sourceId,
    
        /// <remarks/>
        uuid,
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("getMOHAudioSource", Namespace="http://www.cisco.com/AXL/API/1.0", IsNullable=false)]
    public class GetMOHAudioSourceByIDAndSourceReq 
    {
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("sourceId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="nonNegativeInteger")]
        [System.Xml.Serialization.XmlElementAttribute("uuid", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")]
        public string Item;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public ItemChoiceType45 ItemElementName;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public System.UInt64 sequence;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool sequenceSpecified;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
    public enum ItemChoiceType45 
    {
    
        /// <remarks/>
        sourceId,
    
        /// <remarks/>
        uuid,
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("getMOHAudioSourceResponse", Namespace="http://www.cisco.com/AXL/API/1.0", IsNullable=false)]
    public class GetMOHAudioSourceRes 
    {
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public GetMOHAudioSourceResReturn @return;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public System.UInt64 sequence;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool sequenceSpecified;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class GetMOHAudioSourceResReturn 
    {
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XMOHAudioSource mohAudioSource;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
    public class XMOHAudioSource 
    {
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="nonNegativeInteger")]
        public string sourceId;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string name;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string sourceFile;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool multicast;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool repeat;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string uuid;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("listMediaResourceListByNameResponse", Namespace="http://www.cisco.com/AXL/API/1.0", IsNullable=false)]
    public class ListMediaResourceListRes 
    {
    
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute("mediaResourceList", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public ListMediaResourceListResMediaResourceList[] @return;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public System.UInt64 sequence;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool sequenceSpecified;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class ListMediaResourceListResMediaResourceList 
    {
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string name;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string uuid;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("addMediaResourceList", Namespace="http://www.cisco.com/AXL/API/1.0", IsNullable=false)]
    public class AddMediaResourceListReq 
    {
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XMediaResourceList mediaResourceList;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public System.UInt64 sequence;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool sequenceSpecified;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("getMediaResourceListResponse", Namespace="http://www.cisco.com/AXL/API/1.0", IsNullable=false)]
    public class GetMediaResourceListRes 
    {
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public GetMediaResourceListResReturn @return;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public System.UInt64 sequence;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool sequenceSpecified;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class GetMediaResourceListResReturn 
    {
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XMediaResourceList mediaResourceList;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("updateMediaResourceList", Namespace="http://www.cisco.com/AXL/API/1.0", IsNullable=false)]
    public class UpdateMediaResourceListReq 
    {
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("name", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("uuid", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")]
        public string Item;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public ItemChoiceType37 ItemElementName;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string newName;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute("member", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public XMediaResourceListMember[] members;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public System.UInt64 sequence;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool sequenceSpecified;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
    public enum ItemChoiceType37 
    {
    
        /// <remarks/>
        name,
    
        /// <remarks/>
        uuid,
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("listMediaResourceGroupByNameResponse", Namespace="http://www.cisco.com/AXL/API/1.0", IsNullable=false)]
    public class ListMediaResourceGroupRes 
    {
    
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute("mediaResourceGroup", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public ListMediaResourceGroupResMediaResourceGroup[] @return;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public System.UInt64 sequence;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool sequenceSpecified;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class ListMediaResourceGroupResMediaResourceGroup 
    {
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string name;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string uuid;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("addMediaResourceGroup", Namespace="http://www.cisco.com/AXL/API/1.0", IsNullable=false)]
    public class AddMediaResourceGroupReq 
    {
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XMediaResourceGroup mediaResourceGroup;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public System.UInt64 sequence;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool sequenceSpecified;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("getMediaResourceGroupResponse", Namespace="http://www.cisco.com/AXL/API/1.0", IsNullable=false)]
    public class GetMediaResourceGroupRes 
    {
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public GetMediaResourceGroupResReturn @return;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public System.UInt64 sequence;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool sequenceSpecified;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class GetMediaResourceGroupResReturn 
    {
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XMediaResourceGroup mediaResourceGroup;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("updateMediaResourceGroup", Namespace="http://www.cisco.com/AXL/API/1.0", IsNullable=false)]
    public class UpdateMediaResourceGroupReq 
    {
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("name", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("uuid", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")]
        public string Item;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public ItemChoiceType65 ItemElementName;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string newName;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string description;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool multicast;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool multicastSpecified;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute("member", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public XMediaResourceGroupMember[] members;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public System.UInt64 sequence;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool sequenceSpecified;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
    public enum ItemChoiceType65 
    {
    
        /// <remarks/>
        name,
    
        /// <remarks/>
        uuid,
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("listLocationByNameResponse", Namespace="http://www.cisco.com/AXL/API/1.0", IsNullable=false)]
    public class ListLocationRes 
    {
    
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute("location", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public XLocation[] @return;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public System.UInt64 sequence;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool sequenceSpecified;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("listAARGroupByNameResponse", Namespace="http://www.cisco.com/AXL/API/1.0", IsNullable=false)]
    public class ListAARGroupRes 
    {
    
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute("aarGroup", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public XAARNeighborhood[] @return;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public System.UInt64 sequence;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool sequenceSpecified;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("listVoiceMailProfileByNameResponse", Namespace="http://www.cisco.com/AXL/API/1.0", IsNullable=false)]
    public class ListVoiceMailProfileRes 
    {
    
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute("voiceMailProfile", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public XVoiceMailProfile[] @return;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public System.UInt64 sequence;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool sequenceSpecified;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("listGatekeeperByNameResponse", Namespace="http://www.cisco.com/AXL/API/1.0", IsNullable=false)]
    public class ListGatekeeperRes 
    {
    
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute("gatekeeper", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public ListGatekeeperResGatekeeper[] @return;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public System.UInt64 sequence;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool sequenceSpecified;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class ListGatekeeperResGatekeeper 
    {
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string name;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string uuid;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("addGatekeeper", Namespace="http://www.cisco.com/AXL/API/1.0", IsNullable=false)]
    public class AddGatekeeperReq 
    {
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XGatekeeper gatekeeper;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public System.UInt64 sequence;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool sequenceSpecified;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("getGatekeeperResponse", Namespace="http://www.cisco.com/AXL/API/1.0", IsNullable=false)]
    public class GetGatekeeperRes 
    {
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public GetGatekeeperResReturn @return;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public System.UInt64 sequence;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool sequenceSpecified;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class GetGatekeeperResReturn 
    {
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XGatekeeper gatekeeper;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("updateGatekeeper", Namespace="http://www.cisco.com/AXL/API/1.0", IsNullable=false)]
    public class UpdateGatekeeperReq 
    {
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("name", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("uuid", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")]
        public string Item;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public ItemChoiceType84 ItemElementName;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string newName;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string description;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="nonNegativeInteger")]
        public string rrqTimeToLive;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool retryTimeout;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool retryTimeoutSpecified;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool enableDevice;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool enableDeviceSpecified;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public System.UInt64 sequence;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool sequenceSpecified;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
    public enum ItemChoiceType84 
    {
    
        /// <remarks/>
        name,
    
        /// <remarks/>
        uuid,
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("addH323Phone", Namespace="http://www.cisco.com/AXL/API/1.0", IsNullable=false)]
    public class AddH323PhoneReq 
    {
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XH323Phone phone;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public System.UInt64 sequence;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool sequenceSpecified;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("addH323Gateway", Namespace="http://www.cisco.com/AXL/API/1.0", IsNullable=false)]
    public class AddH323GatewayReq 
    {
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XH323Gateway gateway;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public System.UInt64 sequence;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool sequenceSpecified;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("addH323Trunk", Namespace="http://www.cisco.com/AXL/API/1.0", IsNullable=false)]
    public class AddH323TrunkReq 
    {
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XH323Trunk trunk;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public System.UInt64 sequence;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool sequenceSpecified;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("getH323PhoneResponse", Namespace="http://www.cisco.com/AXL/API/1.0", IsNullable=false)]
    public class GetH323PhoneRes 
    {
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public GetH323PhoneResReturn @return;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public System.UInt64 sequence;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool sequenceSpecified;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class GetH323PhoneResReturn 
    {
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XH323Phone phone;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("getH323GatewayResponse", Namespace="http://www.cisco.com/AXL/API/1.0", IsNullable=false)]
    public class GetH323GatewayRes 
    {
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public GetH323GatewayResReturn @return;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public System.UInt64 sequence;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool sequenceSpecified;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class GetH323GatewayResReturn 
    {
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XH323Gateway gateway;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("getH323TrunkResponse", Namespace="http://www.cisco.com/AXL/API/1.0", IsNullable=false)]
    public class GetH323Trunk 
    {
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public GetH323TrunkReturn @return;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public System.UInt64 sequence;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool sequenceSpecified;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class GetH323TrunkReturn 
    {
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XH323Gateway trunk;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("updateH323Phone", Namespace="http://www.cisco.com/AXL/API/1.0", IsNullable=false)]
    public class UpdateH323PhoneReq 
    {
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("name", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("uuid", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")]
        public string Item;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public ItemChoiceType40 ItemElementName;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string newName;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string description;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("callingSearchSpaceId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("callingSearchSpaceName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("Item1ElementName")]
        public string Item1;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public Item1ChoiceType8 Item1ElementName;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("devicePoolName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("devicePoolId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("Item2ElementName")]
        public string Item2;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public Item2ChoiceType5 Item2ElementName;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XNetworkLocation networkLocation;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool networkLocationSpecified;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("locationName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("locationId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("Item3ElementName")]
        public string Item3;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public Item3ChoiceType4 Item3ElementName;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("mediaResourceListId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("mediaResourceListName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("Item4ElementName")]
        public string Item4;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public Item4ChoiceType4 Item4ElementName;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="nonNegativeInteger")]
        public string networkHoldMOHAudioSourceId;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="nonNegativeInteger")]
        public string userHoldMOHAudioSourceId;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("automatedAlternateRoutingCSSId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("automatedAlternateRoutingCSSName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("Item5ElementName")]
        public string Item5;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public Item5ChoiceType4 Item5ElementName;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("aarNeighborhoodName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("aarNeighborhoodId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("Item6ElementName")]
        public string Item6;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public Item6ChoiceType3 Item6ElementName;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool retryVideoCallAsAudio;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool retryVideoCallAsAudioSpecified;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool waitForFarEndH245TerminalSet;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool waitForFarEndH245TerminalSetSpecified;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool mtpRequired;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool mtpRequiredSpecified;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string callerIdDN;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XCallingPartySelection callingPartySelection;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool callingPartySelectionSpecified;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XPresentationBit callingLineIdPresentation;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool callingLineIdPresentationSpecified;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool displayIEDelivery;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool displayIEDeliverySpecified;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool redirectOutboundNumberIE;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool redirectOutboundNumberIESpecified;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool redirectInboundNumberIE;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool redirectInboundNumberIESpecified;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool enableInboundFaststart;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool enableInboundFaststartSpecified;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool enableOutboundFaststart;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool enableOutboundFaststartSpecified;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string ownerUserId;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="nonNegativeInteger")]
        public string signalingPort;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public UpdateH323PhoneReqGatekeeperInfo gatekeeperInfo;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute("line", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public XLine[] lines;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(false)]
        public bool ignorePresentationIndicators = false;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public System.UInt64 sequence;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool sequenceSpecified;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
    public enum ItemChoiceType40 
    {
    
        /// <remarks/>
        name,
    
        /// <remarks/>
        uuid,
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
    public enum Item1ChoiceType8 
    {
    
        /// <remarks/>
        callingSearchSpaceId,
    
        /// <remarks/>
        callingSearchSpaceName,
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
    public enum Item2ChoiceType5 
    {
    
        /// <remarks/>
        devicePoolName,
    
        /// <remarks/>
        devicePoolId,
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
    public enum Item3ChoiceType4 
    {
    
        /// <remarks/>
        locationName,
    
        /// <remarks/>
        locationId,
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
    public enum Item4ChoiceType4 
    {
    
        /// <remarks/>
        mediaResourceListId,
    
        /// <remarks/>
        mediaResourceListName,
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
    public enum Item5ChoiceType4 
    {
    
        /// <remarks/>
        automatedAlternateRoutingCSSId,
    
        /// <remarks/>
        automatedAlternateRoutingCSSName,
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
    public enum Item6ChoiceType3 
    {
    
        /// <remarks/>
        aarNeighborhoodName,
    
        /// <remarks/>
        aarNeighborhoodId,
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class UpdateH323PhoneReqGatekeeperInfo 
    {
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("gatekeeperName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("gatekeeperId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")]
        public string Item;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public ItemChoiceType41 ItemElementName;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string e164;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string technologyPrefix;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string zone;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
    public enum ItemChoiceType41 
    {
    
        /// <remarks/>
        gatekeeperName,
    
        /// <remarks/>
        gatekeeperId,
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(UpdateH323TrunkReq))]
    [System.Xml.Serialization.XmlRootAttribute("updateH323Gateway", Namespace="http://www.cisco.com/AXL/API/1.0", IsNullable=false)]
    public class UpdateH323GatewayReq 
    {
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("name", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("uuid", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")]
        public string Item;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public ItemChoiceType70 ItemElementName;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string newName;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string description;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("callingSearchSpaceId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("callingSearchSpaceName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("Item1ElementName")]
        public string Item1;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public Item1ChoiceType15 Item1ElementName;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("devicePoolName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("devicePoolId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("Item2ElementName")]
        public string Item2;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public Item2ChoiceType12 Item2ElementName;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XNetworkLocation networkLocation;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool networkLocationSpecified;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("locationName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("locationId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("Item3ElementName")]
        public string Item3;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public Item3ChoiceType11 Item3ElementName;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("mediaResourceListId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("mediaResourceListName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("Item4ElementName")]
        public string Item4;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public Item4ChoiceType10 Item4ElementName;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="nonNegativeInteger")]
        public string networkHoldMOHAudioSourceId;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="nonNegativeInteger")]
        public string userHoldMOHAudioSourceId;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("automatedAlternateRoutingCSSId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("automatedAlternateRoutingCSSName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("Item5ElementName")]
        public string Item5;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public Item5ChoiceType8 Item5ElementName;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("aarNeighborhoodName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("aarNeighborhoodId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("Item6ElementName")]
        public string Item6;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public Item6ChoiceType6 Item6ElementName;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool retryVideoCallAsAudio;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool retryVideoCallAsAudioSpecified;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool waitForFarEndH245TerminalSet;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool waitForFarEndH245TerminalSetSpecified;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool mtpRequired;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool mtpRequiredSpecified;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string callerIdDN;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XCallingPartySelection callingPartySelection;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool callingPartySelectionSpecified;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XPresentationBit callingLineIdPresentation;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool callingLineIdPresentationSpecified;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool displayIEDelivery;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool displayIEDeliverySpecified;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool redirectOutboundNumberIE;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool redirectOutboundNumberIESpecified;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool redirectInboundNumberIE;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool redirectInboundNumberIESpecified;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool enableInboundFaststart;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool enableInboundFaststartSpecified;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool enableOutboundFaststart;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool enableOutboundFaststartSpecified;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public UpdateH323GatewayReqSignificantDigits significantDigits;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string prefixDN;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XPriOfNumber calledPartyIENumberType;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool calledPartyIENumberTypeSpecified;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XPriOfNumber callingPartyIENumberType;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool callingPartyIENumberTypeSpecified;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XNumberingPlan calledNumberingPlan;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool calledNumberingPlanSpecified;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XNumberingPlan callingNumberingPlan;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool callingNumberingPlanSpecified;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XTunneledProtocol tunneledProtocol;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(false)]
        public bool pathReplacementSupport = false;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public System.UInt64 sequence;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool sequenceSpecified;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
    public enum ItemChoiceType70 
    {
    
        /// <remarks/>
        name,
    
        /// <remarks/>
        uuid,
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
    public enum Item1ChoiceType15 
    {
    
        /// <remarks/>
        callingSearchSpaceId,
    
        /// <remarks/>
        callingSearchSpaceName,
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
    public enum Item2ChoiceType12 
    {
    
        /// <remarks/>
        devicePoolName,
    
        /// <remarks/>
        devicePoolId,
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
    public enum Item3ChoiceType11 
    {
    
        /// <remarks/>
        locationName,
    
        /// <remarks/>
        locationId,
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
    public enum Item4ChoiceType10 
    {
    
        /// <remarks/>
        mediaResourceListId,
    
        /// <remarks/>
        mediaResourceListName,
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
    public enum Item5ChoiceType8 
    {
    
        /// <remarks/>
        automatedAlternateRoutingCSSId,
    
        /// <remarks/>
        automatedAlternateRoutingCSSName,
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
    public enum Item6ChoiceType6 
    {
    
        /// <remarks/>
        aarNeighborhoodName,
    
        /// <remarks/>
        aarNeighborhoodId,
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class UpdateH323GatewayReqSignificantDigits 
    {
    
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool enable;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute(DataType="nonNegativeInteger")]
        public string Value;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("updateH323Trunk", Namespace="http://www.cisco.com/AXL/API/1.0", IsNullable=false)]
    public class UpdateH323TrunkReq : UpdateH323GatewayReq 
    {
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("remoteServerInfo", typeof(UpdateH323TrunkReqRemoteServerInfo), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("gatekeeperInfo", typeof(UpdateH323TrunkReqGatekeeperInfo), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public object Item7;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class UpdateH323TrunkReqRemoteServerInfo 
    {
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string server1;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string server2;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string server3;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class UpdateH323TrunkReqGatekeeperInfo 
    {
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("gatekeeperName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("gatekeeperId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")]
        public string Item;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public ItemChoiceType71 ItemElementName;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XTerminal terminal;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool terminalSpecified;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string technologyPrefix;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string zone;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
    public enum ItemChoiceType71 
    {
    
        /// <remarks/>
        gatekeeperName,
    
        /// <remarks/>
        gatekeeperId,
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("addSIPTrunk", Namespace="http://www.cisco.com/AXL/API/1.0", IsNullable=false)]
    public class AddSIPTrunkReq 
    {
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XSIPTrunk trunk;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public System.UInt64 sequence;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool sequenceSpecified;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("getSIPTrunkResponse", Namespace="http://www.cisco.com/AXL/API/1.0", IsNullable=false)]
    public class GetSIPTrunk 
    {
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public GetSIPTrunkReturn @return;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public System.UInt64 sequence;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool sequenceSpecified;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class GetSIPTrunkReturn 
    {
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XSIPTrunk trunk;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("updateSIPTrunk", Namespace="http://www.cisco.com/AXL/API/1.0", IsNullable=false)]
    public class UpdateSIPTrunkReq 
    {
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("name", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("uuid", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")]
        public string Item;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public ItemChoiceType59 ItemElementName;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string newName;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string description;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("callingSearchSpaceId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("callingSearchSpaceName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("Item1ElementName")]
        public string Item1;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public Item1ChoiceType11 Item1ElementName;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("devicePoolName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("devicePoolId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("Item2ElementName")]
        public string Item2;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public Item2ChoiceType8 Item2ElementName;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XNetworkLocation networkLocation;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool networkLocationSpecified;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("locationName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("locationId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("Item3ElementName")]
        public string Item3;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public Item3ChoiceType7 Item3ElementName;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("mediaResourceListId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("mediaResourceListName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("Item4ElementName")]
        public string Item4;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public Item4ChoiceType6 Item4ElementName;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="nonNegativeInteger")]
        public string networkHoldMOHAudioSourceId;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="nonNegativeInteger")]
        public string userHoldMOHAudioSourceId;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("automatedAlternateRoutingCSSId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("automatedAlternateRoutingCSSName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("Item5ElementName")]
        public string Item5;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public Item5ChoiceType5 Item5ElementName;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("aarNeighborhoodName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("aarNeighborhoodId", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("Item6ElementName")]
        public string Item6;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public Item6ChoiceType4 Item6ElementName;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int mlppDomainId;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool mlppDomainIdSpecified;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XStatus mlppIndicationStatus;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool mlppIndicationStatusSpecified;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XPreemption preemption;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool preemptionSpecified;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool retryVideoCallAsAudio;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool retryVideoCallAsAudioSpecified;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool mtpRequired;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool mtpRequiredSpecified;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string destinationaddress;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool destAddrIsSRV;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool destAddrIsSRVSpecified;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="integer")]
        [System.ComponentModel.DefaultValueAttribute("0")]
        public string destinationport = "0";
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="integer")]
        public string incomingport;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XSIPCodec tkSipCodec;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool tkSipCodecSpecified;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XTransport OutgoingTransportType;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool OutgoingTransportTypeSpecified;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public UpdateSIPTrunkReqSigDigits sigDigits;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XPresentationBit connectedNamePresentation;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool connectedNamePresentationSpecified;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XPresentationBit connectedPartyIdPresentation;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool connectedPartyIdPresentationSpecified;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XCallingPartySelection callingPartySelection;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool callingPartySelectionSpecified;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XPresentationBit callingname;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool callingnameSpecified;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XPresentationBit callingLineIdPresentation;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool callingLineIdPresentationSpecified;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string prefixDN;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string callerName;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string callerIdDN;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool acceptInboundRDNIS;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool acceptInboundRDNISSpecified;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool acceptOutboundRDNIS;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool acceptOutboundRDNISSpecified;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public System.UInt64 sequence;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool sequenceSpecified;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
    public enum ItemChoiceType59 
    {
    
        /// <remarks/>
        name,
    
        /// <remarks/>
        uuid,
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
    public enum Item1ChoiceType11 
    {
    
        /// <remarks/>
        callingSearchSpaceId,
    
        /// <remarks/>
        callingSearchSpaceName,
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
    public enum Item2ChoiceType8 
    {
    
        /// <remarks/>
        devicePoolName,
    
        /// <remarks/>
        devicePoolId,
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
    public enum Item3ChoiceType7 
    {
    
        /// <remarks/>
        locationName,
    
        /// <remarks/>
        locationId,
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
    public enum Item4ChoiceType6 
    {
    
        /// <remarks/>
        mediaResourceListId,
    
        /// <remarks/>
        mediaResourceListName,
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
    public enum Item5ChoiceType5 
    {
    
        /// <remarks/>
        automatedAlternateRoutingCSSId,
    
        /// <remarks/>
        automatedAlternateRoutingCSSName,
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
    public enum Item6ChoiceType4 
    {
    
        /// <remarks/>
        aarNeighborhoodName,
    
        /// <remarks/>
        aarNeighborhoodId,
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class UpdateSIPTrunkReqSigDigits 
    {
    
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool enable;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute(DataType="nonNegativeInteger")]
        public string Value;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("addPilotPoint", Namespace="http://www.cisco.com/AXL/API/1.0", IsNullable=false)]
    public class AddPilotPointReq 
    {
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XPilotPoint pilotPoint;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public System.UInt64 sequence;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool sequenceSpecified;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/1.0")]
    public class XPilotPoint 
    {
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="Name")]
        public string name;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("devicePoolName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("devicePool", typeof(XDevicePool), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public object Item;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("routePartition", typeof(XRoutePartition), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("routePartitionName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public object Item1;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("callingSearchSpace", typeof(XCallingSearchSpace), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("callingSearchSpaceName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="Name")]
        public object Item2;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string pilotNumber;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool useFirstAvailable;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("location", typeof(XLocation), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("locationName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public object Item3;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("updatePilotPoint", Namespace="http://www.cisco.com/AXL/API/1.0", IsNullable=false)]
    public class UpdatePilotPointReq 
    {
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("name", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("uuid", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")]
        public string Item;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public ItemChoiceType36 ItemElementName;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string newName;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("devicePoolName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("devicePool", typeof(XDevicePool), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public object Item1;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("routePartitionName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("routePartition", typeof(XRoutePartition), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public object Item2;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("callingSearchSpaceName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="Name")]
        [System.Xml.Serialization.XmlElementAttribute("callingSearchSpace", typeof(XCallingSearchSpace), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public object Item3;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string pilotNumber;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool useFirstAvailable;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool useFirstAvailableSpecified;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("locationName", typeof(string), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("location", typeof(XLocation), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public object Item4;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public System.UInt64 sequence;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool sequenceSpecified;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0", IncludeInSchema=false)]
    public enum ItemChoiceType36 
    {
    
        /// <remarks/>
        name,
    
        /// <remarks/>
        uuid,
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("getPilotPointResponse", Namespace="http://www.cisco.com/AXL/API/1.0", IsNullable=false)]
    public class GetPilotPointRes 
    {
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public GetPilotPointResReturn @return;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public System.UInt64 sequence;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool sequenceSpecified;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class GetPilotPointResReturn 
    {
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public XPilotPoint pilotPoint;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("executeSQLQuery", Namespace="http://www.cisco.com/AXL/API/1.0", IsNullable=false)]
    public class ExecuteSQLQueryReq 
    {
    
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string sql;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public System.UInt64 sequence;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool sequenceSpecified;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cisco.com/AXL/API/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("executeSQLQueryResponse", Namespace="http://www.cisco.com/AXL/API/1.0", IsNullable=false)]
    public class ExecuteSQLQueryRes 
    {
    
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute("row", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public object[] @return;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public System.UInt64 sequence;
    
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool sequenceSpecified;
    }

    [System.Xml.Serialization.XmlRootAttribute("addH323Phone", Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class addH323Phone : AddH323PhoneReq
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("removePhoneResponse", Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class removePhoneResponse : StandardResponse
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("removeCSSResponse", Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class removeCSSResponse : StandardResponse
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("removeGatewayEndpoint", Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class removeGatewayEndpoint : NameAndGUIDRequest
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("getTimePeriod", Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class getTimePeriod : NameAndGUIDRequest
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("getTransPattern", Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class getTransPattern : GetTransPatternReq
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("getMGCP", Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class getMGCP : GetMGCPReq
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("addCallManager", Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class addCallManager : AddCallManagerReq
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("getPhone", Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class getPhone : GetPhoneReq
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("updateLocation", Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class updateLocation : UpdateLocationReq
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("addLine", Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class addLine : AddLineReq
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("getRouteListResponse", Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class getRouteListResponse : GetRouteListRes
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("addCallManagerGroup", Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class addCallManagerGroup : AddCallManagerGroupReq
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("addH323TrunkResponse", Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class addH323TrunkResponse : StandardResponse
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("listCSSByName", Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class listCSSByName : ListCSSByNameReq
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("addVoiceMailPort", Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class addVoiceMailPort : AddVoiceMailPortReq
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("getUser", Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class getUser : GetUserReq
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("updateCallPickupGroup", Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class updateCallPickupGroup : UpdateCallPickupGroupReq
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("updateGatewayEndpoint", Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class updateGatewayEndpoint : UpdateGatewayEndpointReq
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("removeDeviceProfile", Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class removeDeviceProfile : RemoveDeviceProfileReq
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("removePilotPointResponse", Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class removePilotPointResponse : StandardResponse
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("removeCallManagerGroupResponse", Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class removeCallManagerGroupResponse : StandardResponse
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("addH323PhoneResponse", Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class addH323PhoneResponse : StandardResponse
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("addH323Trunk", Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class addH323Trunk : AddH323TrunkReq
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("addCallParkResponse", Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class addCallParkResponse : StandardResponse
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("updateFACInfo", Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class updateFACInfo : UpdateFACInfoReq
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("removeMediaResourceList", Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class removeMediaResourceList : NameAndGUIDRequest
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("removePilotPoint", Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class removePilotPoint : NameAndGUIDRequest
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("addRoutePartition", Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class addRoutePartition : AddRoutePartitionReq
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("getVoiceMailPort", Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class getVoiceMailPort : NameAndGUIDRequest
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("updateMediaResourceListResponse", Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class updateMediaResourceListResponse : StandardResponse
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("addTimeScheduleResponse", Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class addTimeScheduleResponse : StandardResponse
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("removeHuntPilotResponse", Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class removeHuntPilotResponse : StandardResponse
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("updateRegionMatrix", Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class updateRegionMatrix : UpdateRegionMatrixReq
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("getMediaResourceGroupResponse", Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class getMediaResourceGroupResponse : GetMediaResourceGroupRes
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("getSIPTrunk", Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class getSIPTrunk : NameAndGUIDRequest
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("updateCSS", Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class updateCSS : UpdateCSSReq
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("getCSS", Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class getCSS : NameAndGUIDRequest
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("updateRegion", Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class updateRegion : UpdateRegionReq
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("listCSSByNameResponse", Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class listCSSByNameResponse : ListCSSByNameRes
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("listAllProcessNodesResponse", Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class listAllProcessNodesResponse : ListAllProcessNodesRes
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("getDialPlan", Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class getDialPlan : NameAndGUIDRequest
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("updateProcessNode", Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class updateProcessNode : UpdateProcessNodeReq
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("removeMediaResourceListResponse", Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class removeMediaResourceListResponse : StandardResponse
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("addHuntList", Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class addHuntList : AddHuntListReq
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("addUser", Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class addUser : AddUserReq
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("listUserByNameResponse", Namespace="http://www.cisco.com/AXL/1.0")]
    public class listUserByNameResponse : ListUserByNameRes
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("removeCSS", Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class removeCSS : NameAndGUIDRequest
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("updateRegionResponse", Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class updateRegionResponse : StandardResponse
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("updateMediaResourceGroup", Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class updateMediaResourceGroup : UpdateMediaResourceGroupReq
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("addMGCPSubunitResponse", Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class addMGCPSubunitResponse : StandardResponse
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("getHuntListList", Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class getHuntListList : NameAndGUIDRequest
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("removeCallManagerResponse", Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class removeCallManagerResponse : StandardResponse
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("getH323Gateway", Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class getH323Gateway : NameAndGUIDRequest
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("getDialPlanResponse", Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class getDialPlanResponse : GetDialPlanRes
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("createAutogeneratedProfileResponse", Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class createAutogeneratedProfileResponse : StandardResponse
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("removeCallPickupGroupResponse", Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class removeCallPickupGroupResponse : StandardResponse
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("addHuntListResponse", Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class addHuntListResponse : StandardResponse
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("updateRoutePatternResponse", Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class updateRoutePatternResponse : StandardResponse
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("addMediaResourceGroup", Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class addMediaResourceGroup : AddMediaResourceGroupReq
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("getLine", Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class getLine : GetLineReq
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("getMOHAudioSource", Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class getMOHAudioSource : GetMOHAudioSourceByIDAndSourceReq
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("getGatekeeperResponse", Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class getGatekeeperResponse : GetGatekeeperRes
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("updateRouteGroup", Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class updateRouteGroup : UpdateRouteGroupReq
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("updateRoutePattern", Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class updateRoutePattern : UpdateRoutePatternReq
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("addH323GatewayResponse", Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class addH323GatewayResponse : StandardResponse
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("listVoiceMailProfileByName", Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class listVoiceMailProfileByName : ListBySearchString
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("removeLineResponse", Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class removeLineResponse : StandardResponse
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("getCallManagerResponse", Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class getCallManagerResponse : GetCallManagerRes
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("removeLocationResponse", Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class removeLocationResponse : StandardResponse
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("removeRoutePattern", Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class removeRoutePattern : RemoveRoutePatternReq
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("getServiceParameter", Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class getServiceParameter : GetServiceParameterReq
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("getGatewayEndpointResponse", Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class getGatewayEndpointResponse : GetGatewayEndpointRes
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("getSIPTrunkResponse", Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class getSIPTrunkResponse : GetSIPTrunk
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("updateLineGroup", Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class updateLineGroup : UpdateLineGroupReq
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("getProcessNode", Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class getProcessNode : NameAndGUIDRequest
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("updateTimePeriod", Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class updateTimePeriod : UpdateTimePeriodReq
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("addRoutePatternResponse", Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class addRoutePatternResponse : StandardResponse
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("addTransPatternResponse", Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class addTransPatternResponse : StandardResponse
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("getCallManager", Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class getCallManager : NameAndGUIDRequest
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("listVoiceMailProfileByNameResponse", Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class listVoiceMailProfileByNameResponse : ListVoiceMailProfileRes
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("updateMOHAudioSource", Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class updateMOHAudioSource : UpdateMOHAudioSourceReq
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("addDDI", Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class addDDI : AddDDIReq
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("updateDeviceProfileResponse", Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class updateDeviceProfileResponse : StandardResponse
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("removeRouteList", Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class removeRouteList : NameAndGUIDRequest
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("addMGCPEndpoint", Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class addMGCPEndpoint : AddMGCPEndpointReq
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("addDeviceProfile", Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class addDeviceProfile : AddDeviceProfileReq
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("updateDevicePoolResponse", Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class updateDevicePoolResponse : StandardResponse
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("updateCMCInfo", Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class updateCMCInfo : UpdateCMCInfoReq
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("updateGatewayEndpointResponse", Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class updateGatewayEndpointResponse : StandardResponse
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("createAutogeneratedProfile", Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class createAutogeneratedProfile : CreateAutogeneratedProfileReq
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("addCallManagerResponse", Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class addCallManagerResponse : StandardResponse
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("addPilotPoint", Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class addPilotPoint : AddPilotPointReq
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("listDeviceByServiceName", Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class listDeviceByServiceName : ListDeviceByNameAndClassReq
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("addSIPTrunk", Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class addSIPTrunk : AddSIPTrunkReq
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("addPilotPointResponse", Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class addPilotPointResponse : StandardResponse
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("addRouteFilter", Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class addRouteFilter : AddRouteFilterReq
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("updatePhoneResponse", Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class updatePhoneResponse : StandardResponse
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("removeRouteListResponse", Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class removeRouteListResponse : StandardResponse
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("removeFACInfoResponse", Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class removeFACInfoResponse : StandardResponse
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("getLocation", Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class getLocation : NameAndGUIDRequest
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("addFACInfo", Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class addFACInfo : AddFACInfoReq
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("addTimePeriod", Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class addTimePeriod : AddTimePeriodReq
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("removeCMCInfoResponse", Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class removeCMCInfoResponse : StandardResponse
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("getDeviceProfile", Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class getDeviceProfile : GetDeviceProfileReq
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("updateCallManagerGroupResponse", Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class updateCallManagerGroupResponse : StandardResponse
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("removeCallParkResponse", Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class removeCallParkResponse : StandardResponse
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("addMGCPUnit", Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class addMGCPUnit : AddMGCPUnitReq
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("addGatekeeperResponse", Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class addGatekeeperResponse : StandardResponse
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("removeH323Trunk", Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class removeH323Trunk : NameAndGUIDRequest
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("getTimePeriodResponse", Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class getTimePeriodResponse : GetTimePeriodRes
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("removeH323Gateway", Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class removeH323Gateway : NameAndGUIDRequest
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("addDevicePoolResponse", Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class addDevicePoolResponse : StandardResponse
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("removeRoutePatternResponse", Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class removeRoutePatternResponse : StandardResponse
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("listAARGroupByNameResponse", Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class listAARGroupByNameResponse : ListAARGroupRes
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("removeRouteGroupResponse", Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class removeRouteGroupResponse : StandardResponse
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("addCTIRoutePointResponse", Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class addCTIRoutePointResponse : StandardResponse
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("addRouteList", Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class addRouteList : AddRouteListReq
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("addRouteGroupResponse", Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class addRouteGroupResponse : StandardResponse
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("addDialPlanResponse", Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class addDialPlanResponse : StandardResponse
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("getMGCPResponse", Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class getMGCPResponse : GetMGCPRes
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("removeTimeScheduleResponse", Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class removeTimeScheduleResponse : StandardResponse
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("addRegionResponse", Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class addRegionResponse : StandardResponse
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("updateProcessNodeServiceResponse", Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class updateProcessNodeServiceResponse : StandardResponse
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("removeDialPlanResponse", Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class removeDialPlanResponse : StandardResponse
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("getCallManagerGroupResponse", Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class getCallManagerGroupResponse : GetCallManagerGroupRes
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("updateRouteFilter", Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class updateRouteFilter : UpdateRouteFilterReq
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("addDialPlan", Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class addDialPlan : AddDialPlanReq
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("removeMGCPUnit", Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class removeMGCPUnit : RemoveMGCPUnitReq
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("removeSIPTrunk", Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class removeSIPTrunk : NameAndGUIDRequest
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("updateDDI", Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class updateDDI : UpdateDDIReq
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("updateCMCInfoResponse", Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class updateCMCInfoResponse : StandardResponse
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("updateRouteListResponse", Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class updateRouteListResponse : StandardResponse
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("getCSSResponse", Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class getCSSResponse : GetCSSRes
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("updateMGCP", Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class updateMGCP : UpdateMGCPReq
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("getProcessNodeService", Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class getProcessNodeService : GetProcessNodeServiceReq
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("removeMGCPEndpoint", Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class removeMGCPEndpoint : RemoveMGCPEndpointReq
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("updatePhone", Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class updatePhone : UpdatePhoneReq
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("listDeviceByServiceNameResponse", Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class listDeviceByServiceNameResponse : ListDeviceByServiceNameRes
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("updateRouteGroupResponse", Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class updateRouteGroupResponse : StandardResponse
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("addTimePeriodResponse", Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class addTimePeriodResponse : StandardResponse
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("removeCallPickupGroup", Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class removeCallPickupGroup : RemoveCallPickupGroupReq
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("listRoutePartitionByName", Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class listRoutePartitionByName : ListBySearchString
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("updateHuntList", Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class updateHuntList : UpdateHuntListReq
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("removeGatekeeperResponse", Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class removeGatekeeperResponse : StandardResponse
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("getCallPickupGroup", Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class getCallPickupGroup : GetCallPickupGroupReq
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("updateLineGroupResponse", Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class updateLineGroupResponse : StandardResponse
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("doDeviceLoginResponse", Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class doDeviceLoginResponse : DeviceLoginResponse
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("getRoutePartition", Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class getRoutePartition : GetRoutePartitionReq
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("removeTimeSchedule", Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class removeTimeSchedule : NameAndGUIDRequest
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("updateRoutePartitionResponse", Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class updateRoutePartitionResponse : StandardResponse
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("listAARGroupByName", Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class listAARGroupByName : ListBySearchString
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("updateDialPlanTagResponse", Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class updateDialPlanTagResponse : StandardResponse
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("removeHuntList", Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class removeHuntList : NameAndGUIDRequest
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("removeTimePeriod", Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class removeTimePeriod : NameAndGUIDRequest
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("getRoutePartitionResponse", Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class getRoutePartitionResponse : GetRoutePartitionRes
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("updateRouteFilterResponse", Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class updateRouteFilterResponse : StandardResponse
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("removeMediaResourceGroupResponse", Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class removeMediaResourceGroupResponse : StandardResponse
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("updateCallParkResponse", Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class updateCallParkResponse : StandardResponse
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("getHuntPilotResponse", Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class getHuntPilotResponse : GetHuntPilotRes
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("executeSQLQuery", Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class executeSQLQuery : ExecuteSQLQueryReq
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("updateHuntPilot", Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class updateHuntPilot : UpdateHuntPilotReq
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("addLocation", Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class addLocation : AddLocationReq
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("getCMCInfo", Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class getCMCInfo : GUIDRequest
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("addCallPickupGroup", Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class addCallPickupGroup : AddCallPickupGroupReq
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("getGatewayEndpoint", Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class getGatewayEndpoint : NameAndGUIDRequest
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("listMOHAudioSourceByName", Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class listMOHAudioSourceByName : ListBySearchString
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("updateFACInfoResponse", Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class updateFACInfoResponse : StandardResponse
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("listPhoneTemplateByName", Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class listPhoneTemplateByName : ListBySearchString
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("updateLocationResponse", Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class updateLocationResponse : StandardResponse
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("updateRoutePartition", Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class updateRoutePartition : UpdateRoutePartitionReq
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("listPhoneByDescriptionResponse", Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class listPhoneByDescriptionResponse : ListPhoneByDescriptionRes
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("addMGCP", Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class addMGCP : AddMGCPReq
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("removeMGCPSubunit", Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class removeMGCPSubunit : RemoveMGCPSubunitReq
    {
    }

	[System.Xml.Serialization.XmlRootAttribute("getHuntList", Namespace="http://www.cisco.com/AXL/1.0")]
	public class getHuntList : NameAndGUIDRequest
	{
	}

    [System.Xml.Serialization.XmlRootAttribute("removeRoutePartition", Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class removeRoutePartition : RemoveRoutePartitionReq
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("getPilotPoint", Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class getPilotPoint : NameAndGUIDRequest
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("removeMOHAudioSourceResponse", Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class removeMOHAudioSourceResponse : StandardResponse
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("listDevicePoolByNameResponse", Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class listDevicePoolByNameResponse : ListDevicePoolRes
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("getCallPark", Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class getCallPark : GetCallParkReq
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("getRouteFilterResponse", Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class getRouteFilterResponse : GetRouteFilterRes
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("removeVoiceMailPort", Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class removeVoiceMailPort : NameAndGUIDRequest
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("listPhoneByDescription", Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class listPhoneByDescription : ListPhoneByDescriptionReq
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("addCSSResponse", Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class addCSSResponse : StandardResponse
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("removeDialPlanTag", Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class removeDialPlanTag : NameAndGUIDRequest
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("removeLineGroup", Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class removeLineGroup : NameAndGUIDRequest
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("getHuntPilot", Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class getHuntPilot : GetHuntPilotReq
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("getRouteGroup", Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class getRouteGroup : NameAndGUIDRequest
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("addCallPark", Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class addCallPark : AddCallParkReq
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("removeMediaResourceGroup", Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class removeMediaResourceGroup : NameAndGUIDRequest
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("addProcessNodeResponse", Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class addProcessNodeResponse : StandardResponse
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("removeLocation", Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class removeLocation : NameAndGUIDRequest
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("removeMGCPSubunitResponse", Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class removeMGCPSubunitResponse : StandardResponse
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("removeRouteGroup", Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class removeRouteGroup : NameAndGUIDRequest
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("listPhoneByNameResponse", Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class listPhoneByNameResponse : ListPhoneByNameRes
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("removeUserResponse", Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class removeUserResponse : StandardResponse
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("updateGatekeeper", Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class updateGatekeeper : UpdateGatekeeperReq
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("addDDIResponse", Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class addDDIResponse : StandardResponse
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("updateCallManagerResponse", Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class updateCallManagerResponse : StandardResponse
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("removeRegionResponse", Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class removeRegionResponse : StandardResponse
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("listProcessNodesByServiceResponse", Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class listProcessNodesByServiceResponse : ListProcessNodesByServiceRes
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("removeMGCPUnitResponse", Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class removeMGCPUnitResponse : StandardResponse
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("removeLineGroupResponse", Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class removeLineGroupResponse : StandardResponse
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("getMediaResourceGroup", Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class getMediaResourceGroup : NameAndGUIDRequest
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("removeH323TrunkResponse", Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class removeH323TrunkResponse : StandardResponse
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("addMGCPEndpointResponse", Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class addMGCPEndpointResponse : StandardResponse
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("addGatekeeper", Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class addGatekeeper : AddGatekeeperReq
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("addDeviceProfileResponse", Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class addDeviceProfileResponse : StandardResponse
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("getH323Phone", Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class getH323Phone : NameAndGUIDRequest
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("addRoutePartitionResponse", Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class addRoutePartitionResponse : StandardResponse
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("removeVoiceMailPortResponse", Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class removeVoiceMailPortResponse : StandardResponse
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("removeSIPTrunkResponse", Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class removeSIPTrunkResponse : StandardResponse
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("updateH323PhoneResponse", Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class updateH323PhoneResponse : StandardResponse
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("updatePilotPoint", Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class updatePilotPoint : UpdatePilotPointReq
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("getDeviceProfileResponse", Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class getDeviceProfileResponse : GetDeviceProfileRes
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("executeSQLQueryResponse", Namespace="http://www.cisco.com/AXL/1.0")]
    public class executeSQLQueryResponse : ExecuteSQLQueryRes
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("updateH323Phone", Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class updateH323Phone : UpdateH323PhoneReq
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("doDeviceLogin", Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class doDeviceLogin : DeviceLoginReq
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("addCMCInfoResponse", Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class addCMCInfoResponse : StandardResponse
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("addHuntPilot", Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class addHuntPilot : AddHuntPilotReq
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("addCallPickupGroupResponse", Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class addCallPickupGroupResponse : StandardResponse
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("getCTIRoutePoint", Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class getCTIRoutePoint : NameAndGUIDRequest
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("updateUser", Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class updateUser : UpdateUserReq
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("listMediaResourceListByNameResponse", Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class listMediaResourceListByNameResponse : ListMediaResourceListRes
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("removeRouteFilter", Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class removeRouteFilter : NameAndGUIDRequest
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("listMOHAudioSourceByNameResponse", Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class listMOHAudioSourceByNameResponse : ListMOHAudioSourceRes
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("updateTransPattern", Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class updateTransPattern : UpdateTransPatternReq
    {
    }

    // Added by MSC to overcome .net limitation with update trans pattern
    [System.Xml.Serialization.XmlRootAttribute("updateTransPattern", Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class updateTransPattern2 : UpdateTransPatternReq2
    {
    }


    [System.Xml.Serialization.XmlRootAttribute("removeGatewayEndpointResponse", Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class removeGatewayEndpointResponse : StandardResponse
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("getLocationResponse", Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class getLocationResponse : GetLocationRes
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("removeCallPark", Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class removeCallPark : RemoveCallParkReq
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("getH323GatewayResponse", Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class getH323GatewayResponse : GetH323GatewayRes
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("getVoiceMailPortResponse", Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class getVoiceMailPortResponse : GetVoiceMailPortRes
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("addMGCPSubunit", Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class addMGCPSubunit : AddMGCPSubunitReq
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("getMediaResourceList", Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class getMediaResourceList : NameAndGUIDRequest
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("removeMGCPResponse", Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class removeMGCPResponse : StandardResponse
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("getTimeSchedule", Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class getTimeSchedule : NameAndGUIDRequest
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("getCMCInfoResponse", Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class getCMCInfoResponse : GetCMCInfoRes
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("removeH323PhoneResponse", Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class removeH323PhoneResponse : StandardResponse
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("updateRouteList", Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class updateRouteList : UpdateRouteListReq
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("getMOHAudioSourceResponse", Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class getMOHAudioSourceResponse : GetMOHAudioSourceRes
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("addVoiceMailPortResponse", Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class addVoiceMailPortResponse : StandardResponse
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("addCallManagerGroupResponse", Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class addCallManagerGroupResponse : StandardResponse
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("updateMOHAudioSourceResponse", Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class updateMOHAudioSourceResponse : StandardResponse
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("listRoutePartitionByNameResponse", Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class listRoutePartitionByNameResponse : ListRoutePartitionRes
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("getLineGroup", Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class getLineGroup : NameAndGUIDRequest
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("updateH323Gateway", Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class updateH323Gateway : UpdateH323GatewayReq
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("addRoutePattern", Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class addRoutePattern : AddRoutePatternReq
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("getServiceParameterResponse", Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class getServiceParameterResponse : GetServiceParameterRes
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("listServiceParameters", Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class listServiceParameters : ListServiceParametersReq
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("addCSS", Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class addCSS : AddCSSReq
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("getFACInfo", Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class getFACInfo : GUIDRequest
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("doDeviceLogout", Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class doDeviceLogout : DeviceLogoutReq
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("removeDDIResponse", Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class removeDDIResponse : StandardResponse
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("updateMediaResourceGroupResponse", Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class updateMediaResourceGroupResponse : StandardResponse
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("removeGatekeeper", Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class removeGatekeeper : NameAndGUIDRequest
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("removeUser", Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class removeUser : RemoveUserReq
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("updateHuntPilotResponse", Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class updateHuntPilotResponse : StandardResponse
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("getRoutePattern", Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class getRoutePattern : GetRoutePatternReq
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("listLocationByName", Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class listLocationByName : ListBySearchString
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("listAllProcessNodes", Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class listAllProcessNodes : ListAllProcessNodesReq
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("updateUserResponse", Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class updateUserResponse : StandardResponse
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("listUserByName", Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class listUserByName : ListUserByNameReq
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("addGatewayEndpointResponse", Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class addGatewayEndpointResponse : StandardResponse
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("updateTimeSchedule", Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class updateTimeSchedule : UpdateTimeScheduleReq
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("addRouteListResponse", Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class addRouteListResponse : StandardResponse
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("getNumDevicesResponse", Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class getNumDevicesResponse : GetNumDevicesRes
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("addMGCPUnitResponse", Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class addMGCPUnitResponse : StandardResponse
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("updateVoiceMailPortResponse", Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class updateVoiceMailPortResponse : StandardResponse
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("updateSIPTrunkResponse", Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class updateSIPTrunkResponse : StandardResponse
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("updatePilotPointResponse", Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class updatePilotPointResponse : StandardResponse
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("updateCallPark", Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class updateCallPark : UpdateCallParkReq
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("getH323TrunkResponse", Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class getH323TrunkResponse : GetH323Trunk
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("addMediaResourceListResponse", Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class addMediaResourceListResponse : StandardResponse
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("addRouteFilterResponse", Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class addRouteFilterResponse : StandardResponse
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("updateH323GatewayResponse", Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class updateH323GatewayResponse : StandardResponse
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("getFACInfoResponse", Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class getFACInfoResponse : GetFACInfoRes
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("removeDeviceProfileResponse", Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class removeDeviceProfileResponse : StandardResponse
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("addGatewayEndpoint", Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class addGatewayEndpoint : AddGatewayEndpointReq
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("removeDialPlan", Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class removeDialPlan : NameAndGUIDRequest
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("getLineResponse", Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class getLineResponse : GetLineRes
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("updateDeviceProfile", Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class updateDeviceProfile : UpdateDeviceProfileReq
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("removeH323Phone", Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class removeH323Phone : NameAndGUIDRequest
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("updateTimeScheduleResponse", Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class updateTimeScheduleResponse : StandardResponse
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("getProcessNodeServiceResponse", Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class getProcessNodeServiceResponse : GetProcessNodeServiceRes
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("getCTIRoutePointResponse", Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class getCTIRoutePointResponse : GetCTIRoutePointRes
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("removeCMCInfo", Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class removeCMCInfo : GUIDRequest
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("getHuntListResponse", Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class getHuntListResponse : GetHuntListRes
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("addLineGroup", Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class addLineGroup : AddLineGroupReq
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("addLocationResponse", Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class addLocationResponse : StandardResponse
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("updateMGCPResponse", Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class updateMGCPResponse : StandardResponse
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("listServiceParametersResponse", Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class listServiceParametersResponse : ListServiceParametersRes
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("removeCallManager", Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class removeCallManager : NameAndGUIDRequest
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("listDeviceByNameAndClass", Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class listDeviceByNameAndClass : ListDeviceByNameAndClassReq
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("addFACInfoResponse", Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class addFACInfoResponse : StandardResponse
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("addMGCPResponse", Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class addMGCPResponse : StandardResponse
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("listMediaResourceGroupByName", Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class listMediaResourceGroupByName : ListBySearchString
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("listProcessNodesByService", Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class listProcessNodesByService : ListProcessNodesByServiceReq
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("addProcessNode", Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class addProcessNode : AddProcessNodeReq
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("removeDDI", Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class removeDDI : NameAndGUIDRequest
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("updateDialPlan", Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class updateDialPlan : UpdateDialPlanReq
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("removeHuntPilot", Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class removeHuntPilot : RemoveHuntPilotReq
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("addPhoneResponse", Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class addPhoneResponse : StandardResponse
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("addUserResponse", Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class addUserResponse : StandardResponse
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("listRoutePlanByTypeResponse", Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class listRoutePlanByTypeResponse : ListRoutePlanByTypeRes
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("removeHuntListResponse", Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class removeHuntListResponse : StandardResponse
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("addMediaResourceGroupResponse", Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class addMediaResourceGroupResponse : StandardResponse
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("updateCTIRoutePoint", Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class updateCTIRoutePoint : UpdateCTIRoutePointReq
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("removeDevicePool", Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class removeDevicePool : NameAndGUIDRequest
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("getRouteFilter", Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class getRouteFilter : NameAndGUIDRequest
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("removeTimePeriodResponse", Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class removeTimePeriodResponse : StandardResponse
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("removeTransPatternResponse", Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class removeTransPatternResponse : StandardResponse
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("listGatekeeperByName", Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class listGatekeeperByName : ListBySearchString
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("addLineGroupResponse", Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class addLineGroupResponse : StandardResponse
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("updateH323TrunkResponse", Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class updateH323TrunkResponse : StandardResponse
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("removeRoutePartitionResponse", Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class removeRoutePartitionResponse : StandardResponse
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("getCallParkResponse", Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class getCallParkResponse : GetCallParkRes
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("addPhone", Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class addPhone : AddPhoneReq
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("updateRegionMatrixResponse", Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class updateRegionMatrixResponse : StandardResponse
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("listMediaResourceListByName", Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class listMediaResourceListByName : ListBySearchString
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("updateDialPlanTag", Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class updateDialPlanTag : UpdateDialPlanTagReq
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("updateTransPatternResponse", Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class updateTransPatternResponse : StandardResponse
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("addSIPTrunkResponse", Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class addSIPTrunkResponse : StandardResponse
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("addCMCInfo", Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class addCMCInfo : AddCMCInfoReq
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("removeCTIRoutePointResponse", Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class removeCTIRoutePointResponse : StandardResponse
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("listLocationByNameResponse", Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class listLocationByNameResponse : ListLocationRes
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("doDeviceLogoutResponse", Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class doDeviceLogoutResponse : DeviceLogoutRes
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("updateDDIResponse", Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class updateDDIResponse : StandardResponse
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("updateVoiceMailPort", Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class updateVoiceMailPort : UpdateVoiceMailPortReq
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("removeLine", Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class removeLine : RemoveLineReq
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("removePhone", Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class removePhone : RemovePhoneReq
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("updateTimePeriodResponse", Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class updateTimePeriodResponse : StandardResponse
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("getTimeScheduleResponse", Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class getTimeScheduleResponse : GetTimeScheduleRes
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("addLineResponse", Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class addLineResponse : StandardResponse
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("updateDevicePool", Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class updateDevicePool : UpdateDevicePoolReq
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("listMediaResourceGroupByNameResponse", Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class listMediaResourceGroupByNameResponse : ListMediaResourceGroupRes
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("getDevicePool", Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class getDevicePool : NameAndGUIDRequest
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("removeProcessNodeResponse", Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class removeProcessNodeResponse : StandardResponse
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("updateCallPickupGroupResponse", Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class updateCallPickupGroupResponse : StandardResponse
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("getDDIResponse", Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class getDDIResponse : GetDDIRes
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("addTransPattern", Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class addTransPattern : AddTransPatternReq
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("listDevicePoolByName", Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class listDevicePoolByName : ListBySearchString
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("updateGatekeeperResponse", Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class updateGatekeeperResponse : StandardResponse
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("updateSIPTrunk", Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class updateSIPTrunk : UpdateSIPTrunkReq
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("updateHuntListResponse", Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class updateHuntListResponse : StandardResponse
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("removeDialPlanTagResponse", Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class removeDialPlanTagResponse : StandardResponse
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("listGatekeeperByNameResponse", Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class listGatekeeperByNameResponse : ListGatekeeperRes
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("addRouteGroup", Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class addRouteGroup : AddRouteGroupReq
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("updateCSSResponse", Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class updateCSSResponse : StandardResponse
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("getUserResponse", Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class getUserResponse : GetUserRes
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("getRoutePatternResponse", Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class getRoutePatternResponse : GetRoutePatternRes
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("getGatekeeper", Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class getGatekeeper : NameAndGUIDRequest
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("getDialPlanTagResponse", Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class getDialPlanTagResponse : GetDialPlanTagRes
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("listDeviceByNameAndClassResponse", Namespace="http://www.cisco.com/AXL/1.0")]
    public class listDeviceByNameAndClassResponse : ListDeviceRes
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("getCallManagerGroup", Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class getCallManagerGroup : NameAndGUIDRequest
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("addTimeSchedule", Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class addTimeSchedule : AddTimeScheduleReq
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("addH323Gateway", Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class addH323Gateway : AddH323GatewayReq
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("listPhoneTemplateByNameResponse", Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class listPhoneTemplateByNameResponse : ListPhoneTemplateRes
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("getRouteGroupResponse", Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class getRouteGroupResponse : GetRouteGroupRes
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("getH323PhoneResponse", Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class getH323PhoneResponse : GetH323PhoneRes
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("removeRegion", Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class removeRegion : NameAndGUIDRequest
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("getRegion", Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class getRegion : NameAndGUIDRequest
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("getNumDevices", Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class getNumDevices : GetNumDevicesReq
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("updateCallManager", Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class updateCallManager : UpdateCallManagerReq
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("removeMGCPEndpointResponse", Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class removeMGCPEndpointResponse : StandardResponse
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("removeFACInfo", Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class removeFACInfo : GUIDRequest
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("getCallPickupGroupResponse", Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class getCallPickupGroupResponse : GetCallPickupGroupRes
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("updateProcessNodeService", Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class updateProcessNodeService : UpdateProcessNodeServiceReq
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("addRegion", Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class addRegion : AddRegionReq
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("getMediaResourceListResponse", Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class getMediaResourceListResponse : GetMediaResourceListRes
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("removeCTIRoutePoint", Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class removeCTIRoutePoint : NameAndGUIDRequest
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("getRouteList", Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class getRouteList : NameAndGUIDRequest
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("getProcessNodeResponse", Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class getProcessNodeResponse : GetProcessNodeRes
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("updateH323Trunk", Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class updateH323Trunk : UpdateH323TrunkReq
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("listPhoneByName", Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class listPhoneByName : ListPhoneByNameReq
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("updateProcessNodeResponse", Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class updateProcessNodeResponse : StandardResponse
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("getPhoneResponse", Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class getPhoneResponse : GetPhoneRes
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("getRegionResponse", Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class getRegionResponse : GetRegionRes
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("updateServiceParameter", Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class updateServiceParameter : UpdateServiceParameterReq
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("removeMOHAudioSource", Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class removeMOHAudioSource : GetMOHAudioSourceByIDAndSourceReq
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("doDeviceResetResponse", Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class doDeviceResetResponse : DeviceResetRes
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("getLineGroupResponse", Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class getLineGroupResponse : GetLineGroupRes
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("getH323Trunk", Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class getH323Trunk : NameAndGUIDRequest
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("addHuntPilotResponse", Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class addHuntPilotResponse : StandardResponse
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("getDevicePoolResponse", Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class getDevicePoolResponse : GetDevicePoolRes
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("listRoutePlanByType", Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class listRoutePlanByType : ListRoutePlanByTypeReq
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("updateLineResponse", Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class updateLineResponse : StandardResponse
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("removeMGCP", Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class removeMGCP : RemoveMGCPReq
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("removeDevicePoolResponse", Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class removeDevicePoolResponse : StandardResponse
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("updateServiceParameterResponse", Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class updateServiceParameterResponse : StandardResponse
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("removeH323GatewayResponse", Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class removeH323GatewayResponse : StandardResponse
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("removeProcessNode", Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class removeProcessNode : NameAndGUIDRequest
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("getPilotPointResponse", Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class getPilotPointResponse : GetPilotPointRes
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("removeRouteFilterResponse", Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class removeRouteFilterResponse : StandardResponse
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("doDeviceReset", Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class doDeviceReset : DeviceResetReq
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("addDevicePool", Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class addDevicePool : AddDevicePoolReq
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("addMediaResourceList", Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class addMediaResourceList : AddMediaResourceListReq
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("getTransPatternResponse", Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class getTransPatternResponse : GetTransPatternRes
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("addCTIRoutePoint", Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class addCTIRoutePoint : AddCTIRoutePointReq
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("updateDialPlanResponse", Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class updateDialPlanResponse : StandardResponse
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("removeCallManagerGroup", Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class removeCallManagerGroup : NameAndGUIDRequest
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("updateLine", Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class updateLine : UpdateLineReq
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("removeTransPattern", Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class removeTransPattern : RemoveTransPatternReq
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("addDialPlanTagResponse", Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class addDialPlanTagResponse : StandardResponse
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("updateCallManagerGroup", Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class updateCallManagerGroup : UpdateCallManagerGroupReq
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("addDialPlanTag", Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class addDialPlanTag : AddDialPlanTagReq
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("updateCTIRoutePointResponse", Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class updateCTIRoutePointResponse : StandardResponse
    {
    }

    [System.Xml.Serialization.XmlRootAttribute("updateMediaResourceList", Namespace="http://www.cisco.com/AXL/API/1.0")]
    public class updateMediaResourceList : UpdateMediaResourceListReq
    {
    }

    [SoapService("http://www.cisco.com/AXLAPIService/")]
    public class AXLAPIService : SoapClient 
    {
        public AXLAPIService(string callManagerIP, string username, string password) : base( new Uri("http://" + callManagerIP + "/CCMApi/AXL/V1/SOAPISAPI.dll") )
        {
            SoapHttpOutputChannel channel = this.Channel as SoapHttpOutputChannel;
            channel.Options.PreAuthenticate = true;
            channel.Options.Credentials = new System.Net.NetworkCredential(username, password);
        }

        [SoapMethod("http://www.cisco.com/AXLPort/addPhone")]
        public addPhoneResponse addPhone( addPhone request )
        {
            return (addPhoneResponse)base.SendRequestResponse("addPhone", request).GetBodyObject( typeof(addPhoneResponse), SoapServiceAttribute.TargetNamespace);
        }

        public IAsyncResult BeginaddPhone( addPhone request, System.AsyncCallback callback, object asyncState)
        {
            return base.BeginSendRequestResponse("addPhone", request, callback, asyncState);
        }

        public addPhoneResponse EndaddPhone( System.IAsyncResult asyncResult )
        {
            return (addPhoneResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject( typeof(addPhoneResponse), SoapServiceAttribute.TargetNamespace);
        }

        [SoapMethod("http://www.cisco.com/AXLPort/removePhone")]
        public removePhoneResponse removePhone( removePhone request )
        {
            return (removePhoneResponse)base.SendRequestResponse("removePhone", request).GetBodyObject( typeof(removePhoneResponse), SoapServiceAttribute.TargetNamespace);
        }

        public IAsyncResult BeginremovePhone( removePhone request, System.AsyncCallback callback, object asyncState)
        {
            return base.BeginSendRequestResponse("removePhone", request, callback, asyncState);
        }

        public removePhoneResponse EndremovePhone( System.IAsyncResult asyncResult )
        {
            return (removePhoneResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject( typeof(removePhoneResponse), SoapServiceAttribute.TargetNamespace);
        }

        [SoapMethod("http://www.cisco.com/AXLPort/updatePhone")]
        public updatePhoneResponse updatePhone( updatePhone request )
        {
            return (updatePhoneResponse)base.SendRequestResponse("updatePhone", request).GetBodyObject( typeof(updatePhoneResponse), SoapServiceAttribute.TargetNamespace);
        }

        public IAsyncResult BeginupdatePhone( updatePhone request, System.AsyncCallback callback, object asyncState)
        {
            return base.BeginSendRequestResponse("updatePhone", request, callback, asyncState);
        }

        public updatePhoneResponse EndupdatePhone( System.IAsyncResult asyncResult )
        {
            return (updatePhoneResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject( typeof(updatePhoneResponse), SoapServiceAttribute.TargetNamespace);
        }

        [SoapMethod("http://www.cisco.com/AXLPort/getPhone")]
        public getPhoneResponse getPhone( getPhone request )
        {
            return (getPhoneResponse)base.SendRequestResponse("getPhone", request).GetBodyObject( typeof(getPhoneResponse), SoapServiceAttribute.TargetNamespace);
        }

        public IAsyncResult BegingetPhone( getPhone request, System.AsyncCallback callback, object asyncState)
        {
            return base.BeginSendRequestResponse("getPhone", request, callback, asyncState);
        }

        public getPhoneResponse EndgetPhone( System.IAsyncResult asyncResult )
        {
            return (getPhoneResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject( typeof(getPhoneResponse), SoapServiceAttribute.TargetNamespace);
        }

        [SoapMethod("http://www.cisco.com/AXLPort/doDeviceLogin")]
        public doDeviceLoginResponse doDeviceLogin( doDeviceLogin request )
        {
            return (doDeviceLoginResponse)base.SendRequestResponse("doDeviceLogin", request).GetBodyObject( typeof(doDeviceLoginResponse), SoapServiceAttribute.TargetNamespace);
        }

        public IAsyncResult BegindoDeviceLogin( doDeviceLogin request, System.AsyncCallback callback, object asyncState)
        {
            return base.BeginSendRequestResponse("doDeviceLogin", request, callback, asyncState);
        }

        public doDeviceLoginResponse EnddoDeviceLogin( System.IAsyncResult asyncResult )
        {
            return (doDeviceLoginResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject( typeof(doDeviceLoginResponse), SoapServiceAttribute.TargetNamespace);
        }

        [SoapMethod("http://www.cisco.com/AXLPort/doDeviceLogout")]
        public doDeviceLogoutResponse doDeviceLogout( doDeviceLogout request )
        {
            return (doDeviceLogoutResponse)base.SendRequestResponse("doDeviceLogout", request).GetBodyObject( typeof(doDeviceLogoutResponse), SoapServiceAttribute.TargetNamespace);
        }

        public IAsyncResult BegindoDeviceLogout( doDeviceLogout request, System.AsyncCallback callback, object asyncState)
        {
            return base.BeginSendRequestResponse("doDeviceLogout", request, callback, asyncState);
        }

        public doDeviceLogoutResponse EnddoDeviceLogout( System.IAsyncResult asyncResult )
        {
            return (doDeviceLogoutResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject( typeof(doDeviceLogoutResponse), SoapServiceAttribute.TargetNamespace);
        }

        [SoapMethod("http://www.cisco.com/AXLPort/doDeviceReset")]
        public doDeviceResetResponse doDeviceReset( doDeviceReset request )
        {
            return (doDeviceResetResponse)base.SendRequestResponse("doDeviceReset", request).GetBodyObject( typeof(doDeviceResetResponse), SoapServiceAttribute.TargetNamespace);
        }

        public IAsyncResult BegindoDeviceReset( doDeviceReset request, System.AsyncCallback callback, object asyncState)
        {
            return base.BeginSendRequestResponse("doDeviceReset", request, callback, asyncState);
        }

        public doDeviceResetResponse EnddoDeviceReset( System.IAsyncResult asyncResult )
        {
            return (doDeviceResetResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject( typeof(doDeviceResetResponse), SoapServiceAttribute.TargetNamespace);
        }

        [SoapMethod("http://www.cisco.com/AXLPort/addLine")]
        public addLineResponse addLine( addLine request )
        {
            return (addLineResponse)base.SendRequestResponse("addLine", request).GetBodyObject( typeof(addLineResponse), SoapServiceAttribute.TargetNamespace);
        }

        public IAsyncResult BeginaddLine( addLine request, System.AsyncCallback callback, object asyncState)
        {
            return base.BeginSendRequestResponse("addLine", request, callback, asyncState);
        }

        public addLineResponse EndaddLine( System.IAsyncResult asyncResult )
        {
            return (addLineResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject( typeof(addLineResponse), SoapServiceAttribute.TargetNamespace);
        }

        [SoapMethod("http://www.cisco.com/AXLPort/removeLine")]
        public removeLineResponse removeLine( removeLine request )
        {
            return (removeLineResponse)base.SendRequestResponse("removeLine", request).GetBodyObject( typeof(removeLineResponse), SoapServiceAttribute.TargetNamespace);
        }

        public IAsyncResult BeginremoveLine( removeLine request, System.AsyncCallback callback, object asyncState)
        {
            return base.BeginSendRequestResponse("removeLine", request, callback, asyncState);
        }

        public removeLineResponse EndremoveLine( System.IAsyncResult asyncResult )
        {
            return (removeLineResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject( typeof(removeLineResponse), SoapServiceAttribute.TargetNamespace);
        }

        [SoapMethod("http://www.cisco.com/AXLPort/updateLine")]
        public updateLineResponse updateLine( updateLine request )
        {
            return (updateLineResponse)base.SendRequestResponse("updateLine", request).GetBodyObject( typeof(updateLineResponse), SoapServiceAttribute.TargetNamespace);
        }

        public IAsyncResult BeginupdateLine( updateLine request, System.AsyncCallback callback, object asyncState)
        {
            return base.BeginSendRequestResponse("updateLine", request, callback, asyncState);
        }

        public updateLineResponse EndupdateLine( System.IAsyncResult asyncResult )
        {
            return (updateLineResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject( typeof(updateLineResponse), SoapServiceAttribute.TargetNamespace);
        }

        [SoapMethod("http://www.cisco.com/AXLPort/getLine")]
        public getLineResponse getLine( getLine request )
        {
            return (getLineResponse)base.SendRequestResponse("getLine", request).GetBodyObject( typeof(getLineResponse), SoapServiceAttribute.TargetNamespace);
        }

        public IAsyncResult BegingetLine( getLine request, System.AsyncCallback callback, object asyncState)
        {
            return base.BeginSendRequestResponse("getLine", request, callback, asyncState);
        }

        public getLineResponse EndgetLine( System.IAsyncResult asyncResult )
        {
            return (getLineResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject( typeof(getLineResponse), SoapServiceAttribute.TargetNamespace);
        }

        [SoapMethod("http://www.cisco.com/AXLPort/addUser")]
        public addUserResponse addUser( addUser request )
        {
            return (addUserResponse)base.SendRequestResponse("addUser", request).GetBodyObject( typeof(addUserResponse), SoapServiceAttribute.TargetNamespace);
        }

        public IAsyncResult BeginaddUser( addUser request, System.AsyncCallback callback, object asyncState)
        {
            return base.BeginSendRequestResponse("addUser", request, callback, asyncState);
        }

        public addUserResponse EndaddUser( System.IAsyncResult asyncResult )
        {
            return (addUserResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject( typeof(addUserResponse), SoapServiceAttribute.TargetNamespace);
        }

        [SoapMethod("http://www.cisco.com/AXLPort/removeUser")]
        public removeUserResponse removeUser( removeUser request )
        {
            return (removeUserResponse)base.SendRequestResponse("removeUser", request).GetBodyObject( typeof(removeUserResponse), SoapServiceAttribute.TargetNamespace);
        }

        public IAsyncResult BeginremoveUser( removeUser request, System.AsyncCallback callback, object asyncState)
        {
            return base.BeginSendRequestResponse("removeUser", request, callback, asyncState);
        }

        public removeUserResponse EndremoveUser( System.IAsyncResult asyncResult )
        {
            return (removeUserResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject( typeof(removeUserResponse), SoapServiceAttribute.TargetNamespace);
        }

        [SoapMethod("http://www.cisco.com/AXLPort/updateUser")]
        public updateUserResponse updateUser( updateUser request )
        {
            return (updateUserResponse)base.SendRequestResponse("updateUser", request).GetBodyObject( typeof(updateUserResponse), SoapServiceAttribute.TargetNamespace);
        }

        public IAsyncResult BeginupdateUser( updateUser request, System.AsyncCallback callback, object asyncState)
        {
            return base.BeginSendRequestResponse("updateUser", request, callback, asyncState);
        }

        public updateUserResponse EndupdateUser( System.IAsyncResult asyncResult )
        {
            return (updateUserResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject( typeof(updateUserResponse), SoapServiceAttribute.TargetNamespace);
        }

        [SoapMethod("http://www.cisco.com/AXLPort/getUser")]
        public getUserResponse getUser( getUser request )
        {
            return (getUserResponse)base.SendRequestResponse("getUser", request).GetBodyObject( typeof(getUserResponse), SoapServiceAttribute.TargetNamespace);
        }

        public IAsyncResult BegingetUser( getUser request, System.AsyncCallback callback, object asyncState)
        {
            return base.BeginSendRequestResponse("getUser", request, callback, asyncState);
        }

        public getUserResponse EndgetUser( System.IAsyncResult asyncResult )
        {
            return (getUserResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject( typeof(getUserResponse), SoapServiceAttribute.TargetNamespace);
        }

        [SoapMethod("http://www.cisco.com/AXLPort/addDeviceProfile")]
        public addDeviceProfileResponse addDeviceProfile( addDeviceProfile request )
        {
            return (addDeviceProfileResponse)base.SendRequestResponse("addDeviceProfile", request).GetBodyObject( typeof(addDeviceProfileResponse), SoapServiceAttribute.TargetNamespace);
        }

        public IAsyncResult BeginaddDeviceProfile( addDeviceProfile request, System.AsyncCallback callback, object asyncState)
        {
            return base.BeginSendRequestResponse("addDeviceProfile", request, callback, asyncState);
        }

        public addDeviceProfileResponse EndaddDeviceProfile( System.IAsyncResult asyncResult )
        {
            return (addDeviceProfileResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject( typeof(addDeviceProfileResponse), SoapServiceAttribute.TargetNamespace);
        }

        [SoapMethod("http://www.cisco.com/AXLPort/removeDeviceProfile")]
        public removeDeviceProfileResponse removeDeviceProfile( removeDeviceProfile request )
        {
            return (removeDeviceProfileResponse)base.SendRequestResponse("removeDeviceProfile", request).GetBodyObject( typeof(removeDeviceProfileResponse), SoapServiceAttribute.TargetNamespace);
        }

        public IAsyncResult BeginremoveDeviceProfile( removeDeviceProfile request, System.AsyncCallback callback, object asyncState)
        {
            return base.BeginSendRequestResponse("removeDeviceProfile", request, callback, asyncState);
        }

        public removeDeviceProfileResponse EndremoveDeviceProfile( System.IAsyncResult asyncResult )
        {
            return (removeDeviceProfileResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject( typeof(removeDeviceProfileResponse), SoapServiceAttribute.TargetNamespace);
        }

        [SoapMethod("http://www.cisco.com/AXLPort/updateDeviceProfile")]
        public updateDeviceProfileResponse updateDeviceProfile( updateDeviceProfile request )
        {
            return (updateDeviceProfileResponse)base.SendRequestResponse("updateDeviceProfile", request).GetBodyObject( typeof(updateDeviceProfileResponse), SoapServiceAttribute.TargetNamespace);
        }

        public IAsyncResult BeginupdateDeviceProfile( updateDeviceProfile request, System.AsyncCallback callback, object asyncState)
        {
            return base.BeginSendRequestResponse("updateDeviceProfile", request, callback, asyncState);
        }

        public updateDeviceProfileResponse EndupdateDeviceProfile( System.IAsyncResult asyncResult )
        {
            return (updateDeviceProfileResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject( typeof(updateDeviceProfileResponse), SoapServiceAttribute.TargetNamespace);
        }

        [SoapMethod("http://www.cisco.com/AXLPort/getDeviceProfile")]
        public getDeviceProfileResponse getDeviceProfile( getDeviceProfile request )
        {
            return (getDeviceProfileResponse)base.SendRequestResponse("getDeviceProfile", request).GetBodyObject( typeof(getDeviceProfileResponse), SoapServiceAttribute.TargetNamespace);
        }

        public IAsyncResult BegingetDeviceProfile( getDeviceProfile request, System.AsyncCallback callback, object asyncState)
        {
            return base.BeginSendRequestResponse("getDeviceProfile", request, callback, asyncState);
        }

        public getDeviceProfileResponse EndgetDeviceProfile( System.IAsyncResult asyncResult )
        {
            return (getDeviceProfileResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject( typeof(getDeviceProfileResponse), SoapServiceAttribute.TargetNamespace);
        }

        [SoapMethod("http://www.cisco.com/AXLPort/addRoutePartition")]
        public addRoutePartitionResponse addRoutePartition( addRoutePartition request )
        {
            return (addRoutePartitionResponse)base.SendRequestResponse("addRoutePartition", request).GetBodyObject( typeof(addRoutePartitionResponse), SoapServiceAttribute.TargetNamespace);
        }

        public IAsyncResult BeginaddRoutePartition( addRoutePartition request, System.AsyncCallback callback, object asyncState)
        {
            return base.BeginSendRequestResponse("addRoutePartition", request, callback, asyncState);
        }

        public addRoutePartitionResponse EndaddRoutePartition( System.IAsyncResult asyncResult )
        {
            return (addRoutePartitionResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject( typeof(addRoutePartitionResponse), SoapServiceAttribute.TargetNamespace);
        }

        [SoapMethod("http://www.cisco.com/AXLPort/updateRoutePartition")]
        public updateRoutePartitionResponse updateRoutePartition( updateRoutePartition request )
        {
            return (updateRoutePartitionResponse)base.SendRequestResponse("updateRoutePartition", request).GetBodyObject( typeof(updateRoutePartitionResponse), SoapServiceAttribute.TargetNamespace);
        }

        public IAsyncResult BeginupdateRoutePartition( updateRoutePartition request, System.AsyncCallback callback, object asyncState)
        {
            return base.BeginSendRequestResponse("updateRoutePartition", request, callback, asyncState);
        }

        public updateRoutePartitionResponse EndupdateRoutePartition( System.IAsyncResult asyncResult )
        {
            return (updateRoutePartitionResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject( typeof(updateRoutePartitionResponse), SoapServiceAttribute.TargetNamespace);
        }

        [SoapMethod("http://www.cisco.com/AXLPort/removeRoutePartition")]
        public removeRoutePartitionResponse removeRoutePartition( removeRoutePartition request )
        {
            return (removeRoutePartitionResponse)base.SendRequestResponse("removeRoutePartition", request).GetBodyObject( typeof(removeRoutePartitionResponse), SoapServiceAttribute.TargetNamespace);
        }

        public IAsyncResult BeginremoveRoutePartition( removeRoutePartition request, System.AsyncCallback callback, object asyncState)
        {
            return base.BeginSendRequestResponse("removeRoutePartition", request, callback, asyncState);
        }

        public removeRoutePartitionResponse EndremoveRoutePartition( System.IAsyncResult asyncResult )
        {
            return (removeRoutePartitionResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject( typeof(removeRoutePartitionResponse), SoapServiceAttribute.TargetNamespace);
        }

        [SoapMethod("http://www.cisco.com/AXLPort/getRoutePartition")]
        public getRoutePartitionResponse getRoutePartition( getRoutePartition request )
        {
            return (getRoutePartitionResponse)base.SendRequestResponse("getRoutePartition", request).GetBodyObject( typeof(getRoutePartitionResponse), SoapServiceAttribute.TargetNamespace);
        }

        public IAsyncResult BegingetRoutePartition( getRoutePartition request, System.AsyncCallback callback, object asyncState)
        {
            return base.BeginSendRequestResponse("getRoutePartition", request, callback, asyncState);
        }

        public getRoutePartitionResponse EndgetRoutePartition( System.IAsyncResult asyncResult )
        {
            return (getRoutePartitionResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject( typeof(getRoutePartitionResponse), SoapServiceAttribute.TargetNamespace);
        }

        [SoapMethod("http://www.cisco.com/AXLPort/getCSS")]
        public getCSSResponse getCSS( getCSS request )
        {
            return (getCSSResponse)base.SendRequestResponse("getCSS", request).GetBodyObject( typeof(getCSSResponse), SoapServiceAttribute.TargetNamespace);
        }

        public IAsyncResult BegingetCSS( getCSS request, System.AsyncCallback callback, object asyncState)
        {
            return base.BeginSendRequestResponse("getCSS", request, callback, asyncState);
        }

        public getCSSResponse EndgetCSS( System.IAsyncResult asyncResult )
        {
            return (getCSSResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject( typeof(getCSSResponse), SoapServiceAttribute.TargetNamespace);
        }

        [SoapMethod("http://www.cisco.com/AXLPort/removeCSS")]
        public removeCSSResponse removeCSS( removeCSS request )
        {
            return (removeCSSResponse)base.SendRequestResponse("removeCSS", request).GetBodyObject( typeof(removeCSSResponse), SoapServiceAttribute.TargetNamespace);
        }

        public IAsyncResult BeginremoveCSS( removeCSS request, System.AsyncCallback callback, object asyncState)
        {
            return base.BeginSendRequestResponse("removeCSS", request, callback, asyncState);
        }

        public removeCSSResponse EndremoveCSS( System.IAsyncResult asyncResult )
        {
            return (removeCSSResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject( typeof(removeCSSResponse), SoapServiceAttribute.TargetNamespace);
        }

        [SoapMethod("http://www.cisco.com/AXLPort/addCSS")]
        public addCSSResponse addCSS( addCSS request )
        {
            return (addCSSResponse)base.SendRequestResponse("addCSS", request).GetBodyObject( typeof(addCSSResponse), SoapServiceAttribute.TargetNamespace);
        }

        public IAsyncResult BeginaddCSS( addCSS request, System.AsyncCallback callback, object asyncState)
        {
            return base.BeginSendRequestResponse("addCSS", request, callback, asyncState);
        }

        public addCSSResponse EndaddCSS( System.IAsyncResult asyncResult )
        {
            return (addCSSResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject( typeof(addCSSResponse), SoapServiceAttribute.TargetNamespace);
        }

        [SoapMethod("http://www.cisco.com/AXLPort/updateCSS")]
        public updateCSSResponse updateCSS( updateCSS request )
        {
            return (updateCSSResponse)base.SendRequestResponse("updateCSS", request).GetBodyObject( typeof(updateCSSResponse), SoapServiceAttribute.TargetNamespace);
        }

        public IAsyncResult BeginupdateCSS( updateCSS request, System.AsyncCallback callback, object asyncState)
        {
            return base.BeginSendRequestResponse("updateCSS", request, callback, asyncState);
        }

        public updateCSSResponse EndupdateCSS( System.IAsyncResult asyncResult )
        {
            return (updateCSSResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject( typeof(updateCSSResponse), SoapServiceAttribute.TargetNamespace);
        }

        [SoapMethod("http://www.cisco.com/AXLPort/getTransPattern")]
        public getTransPatternResponse getTransPattern( getTransPattern request )
        {
            return (getTransPatternResponse)base.SendRequestResponse("getTransPattern", request).GetBodyObject( typeof(getTransPatternResponse), SoapServiceAttribute.TargetNamespace);
        }

        public IAsyncResult BegingetTransPattern( getTransPattern request, System.AsyncCallback callback, object asyncState)
        {
            return base.BeginSendRequestResponse("getTransPattern", request, callback, asyncState);
        }

        public getTransPatternResponse EndgetTransPattern( System.IAsyncResult asyncResult )
        {
            return (getTransPatternResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject( typeof(getTransPatternResponse), SoapServiceAttribute.TargetNamespace);
        }

        [SoapMethod("http://www.cisco.com/AXLPort/removeTransPattern")]
        public removeTransPatternResponse removeTransPattern( removeTransPattern request )
        {
            return (removeTransPatternResponse)base.SendRequestResponse("removeTransPattern", request).GetBodyObject( typeof(removeTransPatternResponse), SoapServiceAttribute.TargetNamespace);
        }

        public IAsyncResult BeginremoveTransPattern( removeTransPattern request, System.AsyncCallback callback, object asyncState)
        {
            return base.BeginSendRequestResponse("removeTransPattern", request, callback, asyncState);
        }

        public removeTransPatternResponse EndremoveTransPattern( System.IAsyncResult asyncResult )
        {
            return (removeTransPatternResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject( typeof(removeTransPatternResponse), SoapServiceAttribute.TargetNamespace);
        }

        [SoapMethod("http://www.cisco.com/AXLPort/addTransPattern")]
        public addTransPatternResponse addTransPattern( addTransPattern request )
        {
            return (addTransPatternResponse)base.SendRequestResponse("addTransPattern", request).GetBodyObject( typeof(addTransPatternResponse), SoapServiceAttribute.TargetNamespace);
        }

        public IAsyncResult BeginaddTransPattern( addTransPattern request, System.AsyncCallback callback, object asyncState)
        {
            return base.BeginSendRequestResponse("addTransPattern", request, callback, asyncState);
        }

        public addTransPatternResponse EndaddTransPattern( System.IAsyncResult asyncResult )
        {
            return (addTransPatternResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject( typeof(addTransPatternResponse), SoapServiceAttribute.TargetNamespace);
        }

        [SoapMethod("http://www.cisco.com/AXLPort/updateTransPattern")]
        public updateTransPatternResponse updateTransPattern( updateTransPattern request )
        {
            return (updateTransPatternResponse)base.SendRequestResponse("updateTransPattern", request).GetBodyObject( typeof(updateTransPatternResponse), SoapServiceAttribute.TargetNamespace);
        }

        [SoapMethod("http://www.cisco.com/AXLPort/updateTransPattern")]
        public updateTransPatternResponse updateTransPattern2( updateTransPattern2 request )
        {
            return (updateTransPatternResponse)base.SendRequestResponse("updateTransPattern", request).GetBodyObject( typeof(updateTransPatternResponse), SoapServiceAttribute.TargetNamespace);
        }

        public IAsyncResult BeginupdateTransPattern( updateTransPattern request, System.AsyncCallback callback, object asyncState)
        {
            return base.BeginSendRequestResponse("updateTransPattern", request, callback, asyncState);
        }

        public updateTransPatternResponse EndupdateTransPattern( System.IAsyncResult asyncResult )
        {
            return (updateTransPatternResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject( typeof(updateTransPatternResponse), SoapServiceAttribute.TargetNamespace);
        }

        [SoapMethod("http://www.cisco.com/AXLPort/getRoutePattern")]
        public getRoutePatternResponse getRoutePattern( getRoutePattern request )
        {
            return (getRoutePatternResponse)base.SendRequestResponse("getRoutePattern", request).GetBodyObject( typeof(getRoutePatternResponse), SoapServiceAttribute.TargetNamespace);
        }

        public IAsyncResult BegingetRoutePattern( getRoutePattern request, System.AsyncCallback callback, object asyncState)
        {
            return base.BeginSendRequestResponse("getRoutePattern", request, callback, asyncState);
        }

        public getRoutePatternResponse EndgetRoutePattern( System.IAsyncResult asyncResult )
        {
            return (getRoutePatternResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject( typeof(getRoutePatternResponse), SoapServiceAttribute.TargetNamespace);
        }

        [SoapMethod("http://www.cisco.com/AXLPort/removeRoutePattern")]
        public removeRoutePatternResponse removeRoutePattern( removeRoutePattern request )
        {
            return (removeRoutePatternResponse)base.SendRequestResponse("removeRoutePattern", request).GetBodyObject( typeof(removeRoutePatternResponse), SoapServiceAttribute.TargetNamespace);
        }

        public IAsyncResult BeginremoveRoutePattern( removeRoutePattern request, System.AsyncCallback callback, object asyncState)
        {
            return base.BeginSendRequestResponse("removeRoutePattern", request, callback, asyncState);
        }

        public removeRoutePatternResponse EndremoveRoutePattern( System.IAsyncResult asyncResult )
        {
            return (removeRoutePatternResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject( typeof(removeRoutePatternResponse), SoapServiceAttribute.TargetNamespace);
        }

        [SoapMethod("http://www.cisco.com/AXLPort/addRoutePattern")]
        public addRoutePatternResponse addRoutePattern( addRoutePattern request )
        {
            return (addRoutePatternResponse)base.SendRequestResponse("addRoutePattern", request).GetBodyObject( typeof(addRoutePatternResponse), SoapServiceAttribute.TargetNamespace);
        }

        public IAsyncResult BeginaddRoutePattern( addRoutePattern request, System.AsyncCallback callback, object asyncState)
        {
            return base.BeginSendRequestResponse("addRoutePattern", request, callback, asyncState);
        }

        public addRoutePatternResponse EndaddRoutePattern( System.IAsyncResult asyncResult )
        {
            return (addRoutePatternResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject( typeof(addRoutePatternResponse), SoapServiceAttribute.TargetNamespace);
        }

        [SoapMethod("http://www.cisco.com/AXLPort/updateRoutePattern")]
        public updateRoutePatternResponse updateRoutePattern( updateRoutePattern request )
        {
            return (updateRoutePatternResponse)base.SendRequestResponse("updateRoutePattern", request).GetBodyObject( typeof(updateRoutePatternResponse), SoapServiceAttribute.TargetNamespace);
        }

        public IAsyncResult BeginupdateRoutePattern( updateRoutePattern request, System.AsyncCallback callback, object asyncState)
        {
            return base.BeginSendRequestResponse("updateRoutePattern", request, callback, asyncState);
        }

        public updateRoutePatternResponse EndupdateRoutePattern( System.IAsyncResult asyncResult )
        {
            return (updateRoutePatternResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject( typeof(updateRoutePatternResponse), SoapServiceAttribute.TargetNamespace);
        }

        [SoapMethod("http://www.cisco.com/AXLPort/addRouteGroup")]
        public addRouteGroupResponse addRouteGroup( addRouteGroup request )
        {
            return (addRouteGroupResponse)base.SendRequestResponse("addRouteGroup", request).GetBodyObject( typeof(addRouteGroupResponse), SoapServiceAttribute.TargetNamespace);
        }

        public IAsyncResult BeginaddRouteGroup( addRouteGroup request, System.AsyncCallback callback, object asyncState)
        {
            return base.BeginSendRequestResponse("addRouteGroup", request, callback, asyncState);
        }

        public addRouteGroupResponse EndaddRouteGroup( System.IAsyncResult asyncResult )
        {
            return (addRouteGroupResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject( typeof(addRouteGroupResponse), SoapServiceAttribute.TargetNamespace);
        }

        [SoapMethod("http://www.cisco.com/AXLPort/updateRouteGroup")]
        public updateRouteGroupResponse updateRouteGroup( updateRouteGroup request )
        {
            return (updateRouteGroupResponse)base.SendRequestResponse("updateRouteGroup", request).GetBodyObject( typeof(updateRouteGroupResponse), SoapServiceAttribute.TargetNamespace);
        }

        public IAsyncResult BeginupdateRouteGroup( updateRouteGroup request, System.AsyncCallback callback, object asyncState)
        {
            return base.BeginSendRequestResponse("updateRouteGroup", request, callback, asyncState);
        }

        public updateRouteGroupResponse EndupdateRouteGroup( System.IAsyncResult asyncResult )
        {
            return (updateRouteGroupResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject( typeof(updateRouteGroupResponse), SoapServiceAttribute.TargetNamespace);
        }

        [SoapMethod("http://www.cisco.com/AXLPort/getRouteGroup")]
        public getRouteGroupResponse getRouteGroup( getRouteGroup request )
        {
            return (getRouteGroupResponse)base.SendRequestResponse("getRouteGroup", request).GetBodyObject( typeof(getRouteGroupResponse), SoapServiceAttribute.TargetNamespace);
        }

        public IAsyncResult BegingetRouteGroup( getRouteGroup request, System.AsyncCallback callback, object asyncState)
        {
            return base.BeginSendRequestResponse("getRouteGroup", request, callback, asyncState);
        }

        public getRouteGroupResponse EndgetRouteGroup( System.IAsyncResult asyncResult )
        {
            return (getRouteGroupResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject( typeof(getRouteGroupResponse), SoapServiceAttribute.TargetNamespace);
        }

        [SoapMethod("http://www.cisco.com/AXLPort/removeRouteGroup")]
        public removeRouteGroupResponse removeRouteGroup( removeRouteGroup request )
        {
            return (removeRouteGroupResponse)base.SendRequestResponse("removeRouteGroup", request).GetBodyObject( typeof(removeRouteGroupResponse), SoapServiceAttribute.TargetNamespace);
        }

        public IAsyncResult BeginremoveRouteGroup( removeRouteGroup request, System.AsyncCallback callback, object asyncState)
        {
            return base.BeginSendRequestResponse("removeRouteGroup", request, callback, asyncState);
        }

        public removeRouteGroupResponse EndremoveRouteGroup( System.IAsyncResult asyncResult )
        {
            return (removeRouteGroupResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject( typeof(removeRouteGroupResponse), SoapServiceAttribute.TargetNamespace);
        }

        [SoapMethod("http://www.cisco.com/AXLPort/addRouteList")]
        public addRouteListResponse addRouteList( addRouteList request )
        {
            return (addRouteListResponse)base.SendRequestResponse("addRouteList", request).GetBodyObject( typeof(addRouteListResponse), SoapServiceAttribute.TargetNamespace);
        }

        public IAsyncResult BeginaddRouteList( addRouteList request, System.AsyncCallback callback, object asyncState)
        {
            return base.BeginSendRequestResponse("addRouteList", request, callback, asyncState);
        }

        public addRouteListResponse EndaddRouteList( System.IAsyncResult asyncResult )
        {
            return (addRouteListResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject( typeof(addRouteListResponse), SoapServiceAttribute.TargetNamespace);
        }

        [SoapMethod("http://www.cisco.com/AXLPort/updateRouteList")]
        public updateRouteListResponse updateRouteList( updateRouteList request )
        {
            return (updateRouteListResponse)base.SendRequestResponse("updateRouteList", request).GetBodyObject( typeof(updateRouteListResponse), SoapServiceAttribute.TargetNamespace);
        }

        public IAsyncResult BeginupdateRouteList( updateRouteList request, System.AsyncCallback callback, object asyncState)
        {
            return base.BeginSendRequestResponse("updateRouteList", request, callback, asyncState);
        }

        public updateRouteListResponse EndupdateRouteList( System.IAsyncResult asyncResult )
        {
            return (updateRouteListResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject( typeof(updateRouteListResponse), SoapServiceAttribute.TargetNamespace);
        }

        [SoapMethod("http://www.cisco.com/AXLPort/getRouteList")]
        public getRouteListResponse getRouteList( getRouteList request )
        {
            return (getRouteListResponse)base.SendRequestResponse("getRouteList", request).GetBodyObject( typeof(getRouteListResponse), SoapServiceAttribute.TargetNamespace);
        }

        public IAsyncResult BegingetRouteList( getRouteList request, System.AsyncCallback callback, object asyncState)
        {
            return base.BeginSendRequestResponse("getRouteList", request, callback, asyncState);
        }

        public getRouteListResponse EndgetRouteList( System.IAsyncResult asyncResult )
        {
            return (getRouteListResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject( typeof(getRouteListResponse), SoapServiceAttribute.TargetNamespace);
        }

        [SoapMethod("http://www.cisco.com/AXLPort/removeRouteList")]
        public removeRouteListResponse removeRouteList( removeRouteList request )
        {
            return (removeRouteListResponse)base.SendRequestResponse("removeRouteList", request).GetBodyObject( typeof(removeRouteListResponse), SoapServiceAttribute.TargetNamespace);
        }

        public IAsyncResult BeginremoveRouteList( removeRouteList request, System.AsyncCallback callback, object asyncState)
        {
            return base.BeginSendRequestResponse("removeRouteList", request, callback, asyncState);
        }

        public removeRouteListResponse EndremoveRouteList( System.IAsyncResult asyncResult )
        {
            return (removeRouteListResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject( typeof(removeRouteListResponse), SoapServiceAttribute.TargetNamespace);
        }

		[SoapMethod("addLineGroup")]
		public addLineGroupResponse addLineGroup( addLineGroup request )
		{
			return (addLineGroupResponse)base.SendRequestResponse("addLineGroup", request).GetBodyObject( typeof(addLineGroupResponse), SoapServiceAttribute.TargetNamespace);
		}

		public IAsyncResult BeginaddLineGroup( addLineGroup request, System.AsyncCallback callback, object asyncState)
		{
			return base.BeginSendRequestResponse("addLineGroup", request, callback, asyncState);
		}

		public addLineGroupResponse EndaddLineGroup( System.IAsyncResult asyncResult )
		{
			return (addLineGroupResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject( typeof(addLineGroupResponse), SoapServiceAttribute.TargetNamespace);
		}

		[SoapMethod("getLineGroup")]
		public getLineGroupResponse getLineGroup( getLineGroup request )
		{
			return (getLineGroupResponse)base.SendRequestResponse("getLineGroup", request).GetBodyObject( typeof(getLineGroupResponse), SoapServiceAttribute.TargetNamespace);
		}

		public IAsyncResult BegingetLineGroup( getLineGroup request, System.AsyncCallback callback, object asyncState)
		{
			return base.BeginSendRequestResponse("getLineGroup", request, callback, asyncState);
		}

		public getLineGroupResponse EndgetLineGroup( System.IAsyncResult asyncResult )
		{
			return (getLineGroupResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject( typeof(getLineGroupResponse), SoapServiceAttribute.TargetNamespace);
		}

		[SoapMethod("updateLineGroup")]
		public updateLineGroupResponse updateLineGroup( updateLineGroup request )
		{
			return (updateLineGroupResponse)base.SendRequestResponse("updateLineGroup", request).GetBodyObject( typeof(updateLineGroupResponse), SoapServiceAttribute.TargetNamespace);
		}

		public IAsyncResult BeginupdateLineGroup( updateLineGroup request, System.AsyncCallback callback, object asyncState)
		{
			return base.BeginSendRequestResponse("updateLineGroup", request, callback, asyncState);
		}

		public updateLineGroupResponse EndupdateLineGroup( System.IAsyncResult asyncResult )
		{
			return (updateLineGroupResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject( typeof(updateLineGroupResponse), SoapServiceAttribute.TargetNamespace);
		}

		[SoapMethod("removeLineGroup")]
		public removeLineGroupResponse removeLineGroup( removeLineGroup request )
		{
			return (removeLineGroupResponse)base.SendRequestResponse("removeLineGroup", request).GetBodyObject( typeof(removeLineGroupResponse), SoapServiceAttribute.TargetNamespace);
		}

		public IAsyncResult BeginremoveLineGroup( removeLineGroup request, System.AsyncCallback callback, object asyncState)
		{
			return base.BeginSendRequestResponse("removeLineGroup", request, callback, asyncState);
		}

		public removeLineGroupResponse EndremoveLineGroup( System.IAsyncResult asyncResult )
		{
			return (removeLineGroupResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject( typeof(removeLineGroupResponse), SoapServiceAttribute.TargetNamespace);
		}

		[SoapMethod("addHuntList")]
		public addHuntListResponse addHuntList( addHuntList request )
		{
			return (addHuntListResponse)base.SendRequestResponse("addHuntList", request).GetBodyObject( typeof(addHuntListResponse), SoapServiceAttribute.TargetNamespace);
		}

		public IAsyncResult BeginaddHuntList( addHuntList request, System.AsyncCallback callback, object asyncState)
		{
			return base.BeginSendRequestResponse("addHuntList", request, callback, asyncState);
		}

		public addHuntListResponse EndaddHuntList( System.IAsyncResult asyncResult )
		{
			return (addHuntListResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject( typeof(addHuntListResponse), SoapServiceAttribute.TargetNamespace);
		}

		[SoapMethod("getHuntList")]
		public getHuntListResponse getHuntList( getHuntList request )
		{
			return (getHuntListResponse)base.SendRequestResponse("getHuntList", request).GetBodyObject( typeof(getHuntListResponse), SoapServiceAttribute.TargetNamespace);
		}

		public IAsyncResult BegingetHuntList( getHuntList request, System.AsyncCallback callback, object asyncState)
		{
			return base.BeginSendRequestResponse("getHuntList", request, callback, asyncState);
		}

		public getHuntListResponse EndgetHuntList( System.IAsyncResult asyncResult )
		{
			return (getHuntListResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject( typeof(getHuntListResponse), SoapServiceAttribute.TargetNamespace);
		}

		[SoapMethod("updateHuntList")]
		public updateHuntListResponse updateHuntList( updateHuntList request )
		{
			return (updateHuntListResponse)base.SendRequestResponse("updateHuntList", request).GetBodyObject( typeof(updateHuntListResponse), SoapServiceAttribute.TargetNamespace);
		}

		public IAsyncResult BeginupdateHuntList( updateHuntList request, System.AsyncCallback callback, object asyncState)
		{
			return base.BeginSendRequestResponse("updateHuntList", request, callback, asyncState);
		}

		public updateHuntListResponse EndupdateHuntList( System.IAsyncResult asyncResult )
		{
			return (updateHuntListResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject( typeof(updateHuntListResponse), SoapServiceAttribute.TargetNamespace);
		}

		[SoapMethod("removeHuntList")]
		public removeHuntListResponse removeHuntList( removeHuntList request )
		{
			return (removeHuntListResponse)base.SendRequestResponse("removeHuntList", request).GetBodyObject( typeof(removeHuntListResponse), SoapServiceAttribute.TargetNamespace);
		}

		public IAsyncResult BeginremoveHuntList( removeHuntList request, System.AsyncCallback callback, object asyncState)
		{
			return base.BeginSendRequestResponse("removeHuntList", request, callback, asyncState);
		}

		public removeHuntListResponse EndremoveHuntList( System.IAsyncResult asyncResult )
		{
			return (removeHuntListResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject( typeof(removeHuntListResponse), SoapServiceAttribute.TargetNamespace);
		}

		[SoapMethod("addHuntPilot")]
		public addHuntPilotResponse addHuntPilot( addHuntPilot request )
		{
			return (addHuntPilotResponse)base.SendRequestResponse("addHuntPilot", request).GetBodyObject( typeof(addHuntPilotResponse), SoapServiceAttribute.TargetNamespace);
		}

		public IAsyncResult BeginaddHuntPilot( addHuntPilot request, System.AsyncCallback callback, object asyncState)
		{
			return base.BeginSendRequestResponse("addHuntPilot", request, callback, asyncState);
		}

		public addHuntPilotResponse EndaddHuntPilot( System.IAsyncResult asyncResult )
		{
			return (addHuntPilotResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject( typeof(addHuntPilotResponse), SoapServiceAttribute.TargetNamespace);
		}

		[SoapMethod("getHuntPilot")]
		public getHuntPilotResponse getHuntPilot( getHuntPilot request )
		{
			return (getHuntPilotResponse)base.SendRequestResponse("getHuntPilot", request).GetBodyObject( typeof(getHuntPilotResponse), SoapServiceAttribute.TargetNamespace);
		}

		public IAsyncResult BegingetHuntPilot( getHuntPilot request, System.AsyncCallback callback, object asyncState)
		{
			return base.BeginSendRequestResponse("getHuntPilot", request, callback, asyncState);
		}

		public getHuntPilotResponse EndgetHuntPilot( System.IAsyncResult asyncResult )
		{
			return (getHuntPilotResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject( typeof(getHuntPilotResponse), SoapServiceAttribute.TargetNamespace);
		}

		[SoapMethod("updateHuntPilot")]
		public updateHuntPilotResponse updateHuntPilot( updateHuntPilot request )
		{
			return (updateHuntPilotResponse)base.SendRequestResponse("updateHuntPilot", request).GetBodyObject( typeof(updateHuntPilotResponse), SoapServiceAttribute.TargetNamespace);
		}

		public IAsyncResult BeginupdateHuntPilot( updateHuntPilot request, System.AsyncCallback callback, object asyncState)
		{
			return base.BeginSendRequestResponse("updateHuntPilot", request, callback, asyncState);
		}

		public updateHuntPilotResponse EndupdateHuntPilot( System.IAsyncResult asyncResult )
		{
			return (updateHuntPilotResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject( typeof(updateHuntPilotResponse), SoapServiceAttribute.TargetNamespace);
		}

		[SoapMethod("removeHuntPilot")]
		public removeHuntPilotResponse removeHuntPilot( removeHuntPilot request )
		{
			return (removeHuntPilotResponse)base.SendRequestResponse("removeHuntPilot", request).GetBodyObject( typeof(removeHuntPilotResponse), SoapServiceAttribute.TargetNamespace);
		}

		public IAsyncResult BeginremoveHuntPilot( removeHuntPilot request, System.AsyncCallback callback, object asyncState)
		{
			return base.BeginSendRequestResponse("removeHuntPilot", request, callback, asyncState);
		}

		public removeHuntPilotResponse EndremoveHuntPilot( System.IAsyncResult asyncResult )
		{
			return (removeHuntPilotResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject( typeof(removeHuntPilotResponse), SoapServiceAttribute.TargetNamespace);
		}

        [SoapMethod("http://www.cisco.com/AXLPort/addCTIRoutePoint")]
        public addCTIRoutePointResponse addCTIRoutePoint( addCTIRoutePoint request )
        {
            return (addCTIRoutePointResponse)base.SendRequestResponse("addCTIRoutePoint", request).GetBodyObject( typeof(addCTIRoutePointResponse), SoapServiceAttribute.TargetNamespace);
        }

        public IAsyncResult BeginaddCTIRoutePoint( addCTIRoutePoint request, System.AsyncCallback callback, object asyncState)
        {
            return base.BeginSendRequestResponse("addCTIRoutePoint", request, callback, asyncState);
        }

        public addCTIRoutePointResponse EndaddCTIRoutePoint( System.IAsyncResult asyncResult )
        {
            return (addCTIRoutePointResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject( typeof(addCTIRoutePointResponse), SoapServiceAttribute.TargetNamespace);
        }

        [SoapMethod("http://www.cisco.com/AXLPort/updateCTIRoutePoint")]
        public updateCTIRoutePointResponse updateCTIRoutePoint( updateCTIRoutePoint request )
        {
            return (updateCTIRoutePointResponse)base.SendRequestResponse("updateCTIRoutePoint", request).GetBodyObject( typeof(updateCTIRoutePointResponse), SoapServiceAttribute.TargetNamespace);
        }

        public IAsyncResult BeginupdateCTIRoutePoint( updateCTIRoutePoint request, System.AsyncCallback callback, object asyncState)
        {
            return base.BeginSendRequestResponse("updateCTIRoutePoint", request, callback, asyncState);
        }

        public updateCTIRoutePointResponse EndupdateCTIRoutePoint( System.IAsyncResult asyncResult )
        {
            return (updateCTIRoutePointResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject( typeof(updateCTIRoutePointResponse), SoapServiceAttribute.TargetNamespace);
        }

        [SoapMethod("http://www.cisco.com/AXLPort/getCTIRoutePoint")]
        public getCTIRoutePointResponse getCTIRoutePoint( getCTIRoutePoint request )
        {
            return (getCTIRoutePointResponse)base.SendRequestResponse("getCTIRoutePoint", request).GetBodyObject( typeof(getCTIRoutePointResponse), SoapServiceAttribute.TargetNamespace);
        }

        public IAsyncResult BegingetCTIRoutePoint( getCTIRoutePoint request, System.AsyncCallback callback, object asyncState)
        {
            return base.BeginSendRequestResponse("getCTIRoutePoint", request, callback, asyncState);
        }

        public getCTIRoutePointResponse EndgetCTIRoutePoint( System.IAsyncResult asyncResult )
        {
            return (getCTIRoutePointResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject( typeof(getCTIRoutePointResponse), SoapServiceAttribute.TargetNamespace);
        }

        [SoapMethod("http://www.cisco.com/AXLPort/removeCTIRoutePoint")]
        public removeCTIRoutePointResponse removeCTIRoutePoint( removeCTIRoutePoint request )
        {
            return (removeCTIRoutePointResponse)base.SendRequestResponse("removeCTIRoutePoint", request).GetBodyObject( typeof(removeCTIRoutePointResponse), SoapServiceAttribute.TargetNamespace);
        }

        public IAsyncResult BeginremoveCTIRoutePoint( removeCTIRoutePoint request, System.AsyncCallback callback, object asyncState)
        {
            return base.BeginSendRequestResponse("removeCTIRoutePoint", request, callback, asyncState);
        }

        public removeCTIRoutePointResponse EndremoveCTIRoutePoint( System.IAsyncResult asyncResult )
        {
            return (removeCTIRoutePointResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject( typeof(removeCTIRoutePointResponse), SoapServiceAttribute.TargetNamespace);
        }

        [SoapMethod("http://www.cisco.com/AXLPort/addDialPlan")]
        public addDialPlanResponse addDialPlan( addDialPlan request )
        {
            return (addDialPlanResponse)base.SendRequestResponse("addDialPlan", request).GetBodyObject( typeof(addDialPlanResponse), SoapServiceAttribute.TargetNamespace);
        }

        public IAsyncResult BeginaddDialPlan( addDialPlan request, System.AsyncCallback callback, object asyncState)
        {
            return base.BeginSendRequestResponse("addDialPlan", request, callback, asyncState);
        }

        public addDialPlanResponse EndaddDialPlan( System.IAsyncResult asyncResult )
        {
            return (addDialPlanResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject( typeof(addDialPlanResponse), SoapServiceAttribute.TargetNamespace);
        }

        [SoapMethod("http://www.cisco.com/AXLPort/updateDialPlan")]
        public updateDialPlanResponse updateDialPlan( updateDialPlan request )
        {
            return (updateDialPlanResponse)base.SendRequestResponse("updateDialPlan", request).GetBodyObject( typeof(updateDialPlanResponse), SoapServiceAttribute.TargetNamespace);
        }

        public IAsyncResult BeginupdateDialPlan( updateDialPlan request, System.AsyncCallback callback, object asyncState)
        {
            return base.BeginSendRequestResponse("updateDialPlan", request, callback, asyncState);
        }

        public updateDialPlanResponse EndupdateDialPlan( System.IAsyncResult asyncResult )
        {
            return (updateDialPlanResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject( typeof(updateDialPlanResponse), SoapServiceAttribute.TargetNamespace);
        }

        [SoapMethod("http://www.cisco.com/AXLPort/getDialPlan")]
        public getDialPlanResponse getDialPlan( getDialPlan request )
        {
            return (getDialPlanResponse)base.SendRequestResponse("getDialPlan", request).GetBodyObject( typeof(getDialPlanResponse), SoapServiceAttribute.TargetNamespace);
        }

        public IAsyncResult BegingetDialPlan( getDialPlan request, System.AsyncCallback callback, object asyncState)
        {
            return base.BeginSendRequestResponse("getDialPlan", request, callback, asyncState);
        }

        public getDialPlanResponse EndgetDialPlan( System.IAsyncResult asyncResult )
        {
            return (getDialPlanResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject( typeof(getDialPlanResponse), SoapServiceAttribute.TargetNamespace);
        }

        [SoapMethod("http://www.cisco.com/AXLPort/removeDialPlan")]
        public removeDialPlanResponse removeDialPlan( removeDialPlan request )
        {
            return (removeDialPlanResponse)base.SendRequestResponse("removeDialPlan", request).GetBodyObject( typeof(removeDialPlanResponse), SoapServiceAttribute.TargetNamespace);
        }

        public IAsyncResult BeginremoveDialPlan( removeDialPlan request, System.AsyncCallback callback, object asyncState)
        {
            return base.BeginSendRequestResponse("removeDialPlan", request, callback, asyncState);
        }

        public removeDialPlanResponse EndremoveDialPlan( System.IAsyncResult asyncResult )
        {
            return (removeDialPlanResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject( typeof(removeDialPlanResponse), SoapServiceAttribute.TargetNamespace);
        }

        [SoapMethod("http://www.cisco.com/AXLPort/addDialPlanTag")]
        public addDialPlanTagResponse addDialPlanTag( addDialPlanTag request )
        {
            return (addDialPlanTagResponse)base.SendRequestResponse("addDialPlanTag", request).GetBodyObject( typeof(addDialPlanTagResponse), SoapServiceAttribute.TargetNamespace);
        }

        public IAsyncResult BeginaddDialPlanTag( addDialPlanTag request, System.AsyncCallback callback, object asyncState)
        {
            return base.BeginSendRequestResponse("addDialPlanTag", request, callback, asyncState);
        }

        public addDialPlanTagResponse EndaddDialPlanTag( System.IAsyncResult asyncResult )
        {
            return (addDialPlanTagResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject( typeof(addDialPlanTagResponse), SoapServiceAttribute.TargetNamespace);
        }

        [SoapMethod("http://www.cisco.com/AXLPort/updateDialPlanTag")]
        public updateDialPlanTagResponse updateDialPlanTag( updateDialPlanTag request )
        {
            return (updateDialPlanTagResponse)base.SendRequestResponse("updateDialPlanTag", request).GetBodyObject( typeof(updateDialPlanTagResponse), SoapServiceAttribute.TargetNamespace);
        }

        public IAsyncResult BeginupdateDialPlanTag( updateDialPlanTag request, System.AsyncCallback callback, object asyncState)
        {
            return base.BeginSendRequestResponse("updateDialPlanTag", request, callback, asyncState);
        }

        public updateDialPlanTagResponse EndupdateDialPlanTag( System.IAsyncResult asyncResult )
        {
            return (updateDialPlanTagResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject( typeof(updateDialPlanTagResponse), SoapServiceAttribute.TargetNamespace);
        }

        [SoapMethod("http://www.cisco.com/AXLPort/getDialPlanTag")]
        public getDialPlanTagResponse getDialPlanTag( getDialPlanTag request )
        {
            return (getDialPlanTagResponse)base.SendRequestResponse("getDialPlanTag", request).GetBodyObject( typeof(getDialPlanTagResponse), SoapServiceAttribute.TargetNamespace);
        }

        public IAsyncResult BegingetDialPlanTag( getDialPlanTag request, System.AsyncCallback callback, object asyncState)
        {
            return base.BeginSendRequestResponse("getDialPlanTag", request, callback, asyncState);
        }

        public getDialPlanTagResponse EndgetDialPlanTag( System.IAsyncResult asyncResult )
        {
            return (getDialPlanTagResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject( typeof(getDialPlanTagResponse), SoapServiceAttribute.TargetNamespace);
        }

        [SoapMethod("http://www.cisco.com/AXLPort/removeDialPlanTag")]
        public removeDialPlanTagResponse removeDialPlanTag( removeDialPlanTag request )
        {
            return (removeDialPlanTagResponse)base.SendRequestResponse("removeDialPlanTag", request).GetBodyObject( typeof(removeDialPlanTagResponse), SoapServiceAttribute.TargetNamespace);
        }

        public IAsyncResult BeginremoveDialPlanTag( removeDialPlanTag request, System.AsyncCallback callback, object asyncState)
        {
            return base.BeginSendRequestResponse("removeDialPlanTag", request, callback, asyncState);
        }

        public removeDialPlanTagResponse EndremoveDialPlanTag( System.IAsyncResult asyncResult )
        {
            return (removeDialPlanTagResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject( typeof(removeDialPlanTagResponse), SoapServiceAttribute.TargetNamespace);
        }

        [SoapMethod("http://www.cisco.com/AXLPort/addCallPark")]
        public addCallParkResponse addCallPark( addCallPark request )
        {
            return (addCallParkResponse)base.SendRequestResponse("addCallPark", request).GetBodyObject( typeof(addCallParkResponse), SoapServiceAttribute.TargetNamespace);
        }

        public IAsyncResult BeginaddCallPark( addCallPark request, System.AsyncCallback callback, object asyncState)
        {
            return base.BeginSendRequestResponse("addCallPark", request, callback, asyncState);
        }

        public addCallParkResponse EndaddCallPark( System.IAsyncResult asyncResult )
        {
            return (addCallParkResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject( typeof(addCallParkResponse), SoapServiceAttribute.TargetNamespace);
        }

        [SoapMethod("http://www.cisco.com/AXLPort/updateCallPark")]
        public updateCallParkResponse updateCallPark( updateCallPark request )
        {
            return (updateCallParkResponse)base.SendRequestResponse("updateCallPark", request).GetBodyObject( typeof(updateCallParkResponse), SoapServiceAttribute.TargetNamespace);
        }

        public IAsyncResult BeginupdateCallPark( updateCallPark request, System.AsyncCallback callback, object asyncState)
        {
            return base.BeginSendRequestResponse("updateCallPark", request, callback, asyncState);
        }

        public updateCallParkResponse EndupdateCallPark( System.IAsyncResult asyncResult )
        {
            return (updateCallParkResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject( typeof(updateCallParkResponse), SoapServiceAttribute.TargetNamespace);
        }

        [SoapMethod("http://www.cisco.com/AXLPort/getCallPark")]
        public getCallParkResponse getCallPark( getCallPark request )
        {
            return (getCallParkResponse)base.SendRequestResponse("getCallPark", request).GetBodyObject( typeof(getCallParkResponse), SoapServiceAttribute.TargetNamespace);
        }

        public IAsyncResult BegingetCallPark( getCallPark request, System.AsyncCallback callback, object asyncState)
        {
            return base.BeginSendRequestResponse("getCallPark", request, callback, asyncState);
        }

        public getCallParkResponse EndgetCallPark( System.IAsyncResult asyncResult )
        {
            return (getCallParkResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject( typeof(getCallParkResponse), SoapServiceAttribute.TargetNamespace);
        }

        [SoapMethod("http://www.cisco.com/AXLPort/removeCallPark")]
        public removeCallParkResponse removeCallPark( removeCallPark request )
        {
            return (removeCallParkResponse)base.SendRequestResponse("removeCallPark", request).GetBodyObject( typeof(removeCallParkResponse), SoapServiceAttribute.TargetNamespace);
        }

        public IAsyncResult BeginremoveCallPark( removeCallPark request, System.AsyncCallback callback, object asyncState)
        {
            return base.BeginSendRequestResponse("removeCallPark", request, callback, asyncState);
        }

        public removeCallParkResponse EndremoveCallPark( System.IAsyncResult asyncResult )
        {
            return (removeCallParkResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject( typeof(removeCallParkResponse), SoapServiceAttribute.TargetNamespace);
        }

        [SoapMethod("http://www.cisco.com/AXLPort/addCallPickupGroup")]
        public addCallPickupGroupResponse addCallPickupGroup( addCallPickupGroup request )
        {
            return (addCallPickupGroupResponse)base.SendRequestResponse("addCallPickupGroup", request).GetBodyObject( typeof(addCallPickupGroupResponse), SoapServiceAttribute.TargetNamespace);
        }

        public IAsyncResult BeginaddCallPickupGroup( addCallPickupGroup request, System.AsyncCallback callback, object asyncState)
        {
            return base.BeginSendRequestResponse("addCallPickupGroup", request, callback, asyncState);
        }

        public addCallPickupGroupResponse EndaddCallPickupGroup( System.IAsyncResult asyncResult )
        {
            return (addCallPickupGroupResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject( typeof(addCallPickupGroupResponse), SoapServiceAttribute.TargetNamespace);
        }

        [SoapMethod("http://www.cisco.com/AXLPort/updateCallPickupGroup")]
        public updateCallPickupGroupResponse updateCallPickupGroup( updateCallPickupGroup request )
        {
            return (updateCallPickupGroupResponse)base.SendRequestResponse("updateCallPickupGroup", request).GetBodyObject( typeof(updateCallPickupGroupResponse), SoapServiceAttribute.TargetNamespace);
        }

        public IAsyncResult BeginupdateCallPickupGroup( updateCallPickupGroup request, System.AsyncCallback callback, object asyncState)
        {
            return base.BeginSendRequestResponse("updateCallPickupGroup", request, callback, asyncState);
        }

        public updateCallPickupGroupResponse EndupdateCallPickupGroup( System.IAsyncResult asyncResult )
        {
            return (updateCallPickupGroupResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject( typeof(updateCallPickupGroupResponse), SoapServiceAttribute.TargetNamespace);
        }

        [SoapMethod("http://www.cisco.com/AXLPort/getCallPickupGroup")]
        public getCallPickupGroupResponse getCallPickupGroup( getCallPickupGroup request )
        {
            return (getCallPickupGroupResponse)base.SendRequestResponse("getCallPickupGroup", request).GetBodyObject( typeof(getCallPickupGroupResponse), SoapServiceAttribute.TargetNamespace);
        }

        public IAsyncResult BegingetCallPickupGroup( getCallPickupGroup request, System.AsyncCallback callback, object asyncState)
        {
            return base.BeginSendRequestResponse("getCallPickupGroup", request, callback, asyncState);
        }

        public getCallPickupGroupResponse EndgetCallPickupGroup( System.IAsyncResult asyncResult )
        {
            return (getCallPickupGroupResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject( typeof(getCallPickupGroupResponse), SoapServiceAttribute.TargetNamespace);
        }

        [SoapMethod("http://www.cisco.com/AXLPort/removeCallPickupGroup")]
        public removeCallPickupGroupResponse removeCallPickupGroup( removeCallPickupGroup request )
        {
            return (removeCallPickupGroupResponse)base.SendRequestResponse("removeCallPickupGroup", request).GetBodyObject( typeof(removeCallPickupGroupResponse), SoapServiceAttribute.TargetNamespace);
        }

        public IAsyncResult BeginremoveCallPickupGroup( removeCallPickupGroup request, System.AsyncCallback callback, object asyncState)
        {
            return base.BeginSendRequestResponse("removeCallPickupGroup", request, callback, asyncState);
        }

        public removeCallPickupGroupResponse EndremoveCallPickupGroup( System.IAsyncResult asyncResult )
        {
            return (removeCallPickupGroupResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject( typeof(removeCallPickupGroupResponse), SoapServiceAttribute.TargetNamespace);
        }

        [SoapMethod("http://www.cisco.com/AXLPort/addDDI")]
        public addDDIResponse addDDI( addDDI request )
        {
            return (addDDIResponse)base.SendRequestResponse("addDDI", request).GetBodyObject( typeof(addDDIResponse), SoapServiceAttribute.TargetNamespace);
        }

        public IAsyncResult BeginaddDDI( addDDI request, System.AsyncCallback callback, object asyncState)
        {
            return base.BeginSendRequestResponse("addDDI", request, callback, asyncState);
        }

        public addDDIResponse EndaddDDI( System.IAsyncResult asyncResult )
        {
            return (addDDIResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject( typeof(addDDIResponse), SoapServiceAttribute.TargetNamespace);
        }

        [SoapMethod("http://www.cisco.com/AXLPort/updateDDI")]
        public updateDDIResponse updateDDI( updateDDI request )
        {
            return (updateDDIResponse)base.SendRequestResponse("updateDDI", request).GetBodyObject( typeof(updateDDIResponse), SoapServiceAttribute.TargetNamespace);
        }

        public IAsyncResult BeginupdateDDI( updateDDI request, System.AsyncCallback callback, object asyncState)
        {
            return base.BeginSendRequestResponse("updateDDI", request, callback, asyncState);
        }

        public updateDDIResponse EndupdateDDI( System.IAsyncResult asyncResult )
        {
            return (updateDDIResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject( typeof(updateDDIResponse), SoapServiceAttribute.TargetNamespace);
        }

        [SoapMethod("http://www.cisco.com/AXLPort/getDDI")]
        public getDDIResponse getDDI( getDDI request )
        {
            return (getDDIResponse)base.SendRequestResponse("getDDI", request).GetBodyObject( typeof(getDDIResponse), SoapServiceAttribute.TargetNamespace);
        }

        public IAsyncResult BegingetDDI( getDDI request, System.AsyncCallback callback, object asyncState)
        {
            return base.BeginSendRequestResponse("getDDI", request, callback, asyncState);
        }

        public getDDIResponse EndgetDDI( System.IAsyncResult asyncResult )
        {
            return (getDDIResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject( typeof(getDDIResponse), SoapServiceAttribute.TargetNamespace);
        }

        [SoapMethod("http://www.cisco.com/AXLPort/removeDDI")]
        public removeDDIResponse removeDDI( removeDDI request )
        {
            return (removeDDIResponse)base.SendRequestResponse("removeDDI", request).GetBodyObject( typeof(removeDDIResponse), SoapServiceAttribute.TargetNamespace);
        }

        public IAsyncResult BeginremoveDDI( removeDDI request, System.AsyncCallback callback, object asyncState)
        {
            return base.BeginSendRequestResponse("removeDDI", request, callback, asyncState);
        }

        public removeDDIResponse EndremoveDDI( System.IAsyncResult asyncResult )
        {
            return (removeDDIResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject( typeof(removeDDIResponse), SoapServiceAttribute.TargetNamespace);
        }

        [SoapMethod("http://www.cisco.com/AXLPort/createAutogeneratedProfile")]
        public createAutogeneratedProfileResponse createAutogeneratedProfile( createAutogeneratedProfile request )
        {
            return (createAutogeneratedProfileResponse)base.SendRequestResponse("createAutogeneratedProfile", request).GetBodyObject( typeof(createAutogeneratedProfileResponse), SoapServiceAttribute.TargetNamespace);
        }

        public IAsyncResult BegincreateAutogeneratedProfile( createAutogeneratedProfile request, System.AsyncCallback callback, object asyncState)
        {
            return base.BeginSendRequestResponse("createAutogeneratedProfile", request, callback, asyncState);
        }

        public createAutogeneratedProfileResponse EndcreateAutogeneratedProfile( System.IAsyncResult asyncResult )
        {
            return (createAutogeneratedProfileResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject( typeof(createAutogeneratedProfileResponse), SoapServiceAttribute.TargetNamespace);
        }

        [SoapMethod("http://www.cisco.com/AXLPort/listPhoneByName")]
        public listPhoneByNameResponse listPhoneByName( listPhoneByName request )
        {
            return (listPhoneByNameResponse)base.SendRequestResponse("listPhoneByName", request).GetBodyObject( typeof(listPhoneByNameResponse), SoapServiceAttribute.TargetNamespace);
        }

        public IAsyncResult BeginlistPhoneByName( listPhoneByName request, System.AsyncCallback callback, object asyncState)
        {
            return base.BeginSendRequestResponse("listPhoneByName", request, callback, asyncState);
        }

        public listPhoneByNameResponse EndlistPhoneByName( System.IAsyncResult asyncResult )
        {
            return (listPhoneByNameResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject( typeof(listPhoneByNameResponse), SoapServiceAttribute.TargetNamespace);
        }

        [SoapMethod("http://www.cisco.com/AXLPort/listPhoneByDescription")]
        public listPhoneByDescriptionResponse listPhoneByDescription( listPhoneByDescription request )
        {
            return (listPhoneByDescriptionResponse)base.SendRequestResponse("listPhoneByDescription", request).GetBodyObject( typeof(listPhoneByDescriptionResponse), SoapServiceAttribute.TargetNamespace);
        }

        public IAsyncResult BeginlistPhoneByDescription( listPhoneByDescription request, System.AsyncCallback callback, object asyncState)
        {
            return base.BeginSendRequestResponse("listPhoneByDescription", request, callback, asyncState);
        }

        public listPhoneByDescriptionResponse EndlistPhoneByDescription( System.IAsyncResult asyncResult )
        {
            return (listPhoneByDescriptionResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject( typeof(listPhoneByDescriptionResponse), SoapServiceAttribute.TargetNamespace);
        }

        [SoapMethod("http://www.cisco.com/AXLPort/listUserByName")]
        public listUserByNameResponse listUserByName( listUserByName request )
        {
            return (listUserByNameResponse)base.SendRequestResponse("listUserByName", request).GetBodyObject( typeof(listUserByNameResponse), SoapServiceAttribute.TargetNamespace);
        }

        public IAsyncResult BeginlistUserByName( listUserByName request, System.AsyncCallback callback, object asyncState)
        {
            return base.BeginSendRequestResponse("listUserByName", request, callback, asyncState);
        }

        public listUserByNameResponse EndlistUserByName( System.IAsyncResult asyncResult )
        {
            return (listUserByNameResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject( typeof(listUserByNameResponse), SoapServiceAttribute.TargetNamespace);
        }

        [SoapMethod("http://www.cisco.com/AXLPort/listRoutePlanByType")]
        public listRoutePlanByTypeResponse listRoutePlanByType( listRoutePlanByType request )
        {
            return (listRoutePlanByTypeResponse)base.SendRequestResponse("listRoutePlanByType", request).GetBodyObject( typeof(listRoutePlanByTypeResponse), SoapServiceAttribute.TargetNamespace);
        }

        public IAsyncResult BeginlistRoutePlanByType( listRoutePlanByType request, System.AsyncCallback callback, object asyncState)
        {
            return base.BeginSendRequestResponse("listRoutePlanByType", request, callback, asyncState);
        }

        public listRoutePlanByTypeResponse EndlistRoutePlanByType( System.IAsyncResult asyncResult )
        {
            return (listRoutePlanByTypeResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject( typeof(listRoutePlanByTypeResponse), SoapServiceAttribute.TargetNamespace);
        }

        [SoapMethod("http://www.cisco.com/AXLPort/getNumDevices")]
        public getNumDevicesResponse getNumDevices( getNumDevices request )
        {
            return (getNumDevicesResponse)base.SendRequestResponse("getNumDevices", request).GetBodyObject( typeof(getNumDevicesResponse), SoapServiceAttribute.TargetNamespace);
        }

        public IAsyncResult BegingetNumDevices( getNumDevices request, System.AsyncCallback callback, object asyncState)
        {
            return base.BeginSendRequestResponse("getNumDevices", request, callback, asyncState);
        }

        public getNumDevicesResponse EndgetNumDevices( System.IAsyncResult asyncResult )
        {
            return (getNumDevicesResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject( typeof(getNumDevicesResponse), SoapServiceAttribute.TargetNamespace);
        }

        [SoapMethod("http://www.cisco.com/AXLPort/listServiceParameters")]
        public listServiceParametersResponse listServiceParameters( listServiceParameters request )
        {
            return (listServiceParametersResponse)base.SendRequestResponse("listServiceParameters", request).GetBodyObject( typeof(listServiceParametersResponse), SoapServiceAttribute.TargetNamespace);
        }

        public IAsyncResult BeginlistServiceParameters( listServiceParameters request, System.AsyncCallback callback, object asyncState)
        {
            return base.BeginSendRequestResponse("listServiceParameters", request, callback, asyncState);
        }

        public listServiceParametersResponse EndlistServiceParameters( System.IAsyncResult asyncResult )
        {
            return (listServiceParametersResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject( typeof(listServiceParametersResponse), SoapServiceAttribute.TargetNamespace);
        }

        [SoapMethod("http://www.cisco.com/AXLPort/listCSSByName")]
        public listCSSByNameResponse listCSSByName( listCSSByName request )
        {
            return (listCSSByNameResponse)base.SendRequestResponse("listCSSByName", request).GetBodyObject( typeof(listCSSByNameResponse), SoapServiceAttribute.TargetNamespace);
        }

        public IAsyncResult BeginlistCSSByName( listCSSByName request, System.AsyncCallback callback, object asyncState)
        {
            return base.BeginSendRequestResponse("listCSSByName", request, callback, asyncState);
        }

        public listCSSByNameResponse EndlistCSSByName( System.IAsyncResult asyncResult )
        {
            return (listCSSByNameResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject( typeof(listCSSByNameResponse), SoapServiceAttribute.TargetNamespace);
        }

        [SoapMethod("http://www.cisco.com/AXLPort/addDevicePool")]
        public addDevicePoolResponse addDevicePool( addDevicePool request )
        {
            return (addDevicePoolResponse)base.SendRequestResponse("addDevicePool", request).GetBodyObject( typeof(addDevicePoolResponse), SoapServiceAttribute.TargetNamespace);
        }

        public IAsyncResult BeginaddDevicePool( addDevicePool request, System.AsyncCallback callback, object asyncState)
        {
            return base.BeginSendRequestResponse("addDevicePool", request, callback, asyncState);
        }

        public addDevicePoolResponse EndaddDevicePool( System.IAsyncResult asyncResult )
        {
            return (addDevicePoolResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject( typeof(addDevicePoolResponse), SoapServiceAttribute.TargetNamespace);
        }

        [SoapMethod("http://www.cisco.com/AXLPort/updateDevicePool")]
        public updateDevicePoolResponse updateDevicePool( updateDevicePool request )
        {
            return (updateDevicePoolResponse)base.SendRequestResponse("updateDevicePool", request).GetBodyObject( typeof(updateDevicePoolResponse), SoapServiceAttribute.TargetNamespace);
        }

        public IAsyncResult BeginupdateDevicePool( updateDevicePool request, System.AsyncCallback callback, object asyncState)
        {
            return base.BeginSendRequestResponse("updateDevicePool", request, callback, asyncState);
        }

        public updateDevicePoolResponse EndupdateDevicePool( System.IAsyncResult asyncResult )
        {
            return (updateDevicePoolResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject( typeof(updateDevicePoolResponse), SoapServiceAttribute.TargetNamespace);
        }

        [SoapMethod("http://www.cisco.com/AXLPort/getDevicePool")]
        public getDevicePoolResponse getDevicePool( getDevicePool request )
        {
            return (getDevicePoolResponse)base.SendRequestResponse("getDevicePool", request).GetBodyObject( typeof(getDevicePoolResponse), SoapServiceAttribute.TargetNamespace);
        }

        public IAsyncResult BegingetDevicePool( getDevicePool request, System.AsyncCallback callback, object asyncState)
        {
            return base.BeginSendRequestResponse("getDevicePool", request, callback, asyncState);
        }

        public getDevicePoolResponse EndgetDevicePool( System.IAsyncResult asyncResult )
        {
            return (getDevicePoolResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject( typeof(getDevicePoolResponse), SoapServiceAttribute.TargetNamespace);
        }

        [SoapMethod("http://www.cisco.com/AXLPort/removeDevicePool")]
        public removeDevicePoolResponse removeDevicePool( removeDevicePool request )
        {
            return (removeDevicePoolResponse)base.SendRequestResponse("removeDevicePool", request).GetBodyObject( typeof(removeDevicePoolResponse), SoapServiceAttribute.TargetNamespace);
        }

        public IAsyncResult BeginremoveDevicePool( removeDevicePool request, System.AsyncCallback callback, object asyncState)
        {
            return base.BeginSendRequestResponse("removeDevicePool", request, callback, asyncState);
        }

        public removeDevicePoolResponse EndremoveDevicePool( System.IAsyncResult asyncResult )
        {
            return (removeDevicePoolResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject( typeof(removeDevicePoolResponse), SoapServiceAttribute.TargetNamespace);
        }

        [SoapMethod("http://www.cisco.com/AXLPort/addCallManagerGroup")]
        public addCallManagerGroupResponse addCallManagerGroup( addCallManagerGroup request )
        {
            return (addCallManagerGroupResponse)base.SendRequestResponse("addCallManagerGroup", request).GetBodyObject( typeof(addCallManagerGroupResponse), SoapServiceAttribute.TargetNamespace);
        }

        public IAsyncResult BeginaddCallManagerGroup( addCallManagerGroup request, System.AsyncCallback callback, object asyncState)
        {
            return base.BeginSendRequestResponse("addCallManagerGroup", request, callback, asyncState);
        }

        public addCallManagerGroupResponse EndaddCallManagerGroup( System.IAsyncResult asyncResult )
        {
            return (addCallManagerGroupResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject( typeof(addCallManagerGroupResponse), SoapServiceAttribute.TargetNamespace);
        }

        [SoapMethod("http://www.cisco.com/AXLPort/updateCallManagerGroup")]
        public updateCallManagerGroupResponse updateCallManagerGroup( updateCallManagerGroup request )
        {
            return (updateCallManagerGroupResponse)base.SendRequestResponse("updateCallManagerGroup", request).GetBodyObject( typeof(updateCallManagerGroupResponse), SoapServiceAttribute.TargetNamespace);
        }

        public IAsyncResult BeginupdateCallManagerGroup( updateCallManagerGroup request, System.AsyncCallback callback, object asyncState)
        {
            return base.BeginSendRequestResponse("updateCallManagerGroup", request, callback, asyncState);
        }

        public updateCallManagerGroupResponse EndupdateCallManagerGroup( System.IAsyncResult asyncResult )
        {
            return (updateCallManagerGroupResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject( typeof(updateCallManagerGroupResponse), SoapServiceAttribute.TargetNamespace);
        }

        [SoapMethod("http://www.cisco.com/AXLPort/getCallManagerGroup")]
        public getCallManagerGroupResponse getCallManagerGroup( getCallManagerGroup request )
        {
            return (getCallManagerGroupResponse)base.SendRequestResponse("getCallManagerGroup", request).GetBodyObject( typeof(getCallManagerGroupResponse), SoapServiceAttribute.TargetNamespace);
        }

        public IAsyncResult BegingetCallManagerGroup( getCallManagerGroup request, System.AsyncCallback callback, object asyncState)
        {
            return base.BeginSendRequestResponse("getCallManagerGroup", request, callback, asyncState);
        }

        public getCallManagerGroupResponse EndgetCallManagerGroup( System.IAsyncResult asyncResult )
        {
            return (getCallManagerGroupResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject( typeof(getCallManagerGroupResponse), SoapServiceAttribute.TargetNamespace);
        }

        [SoapMethod("http://www.cisco.com/AXLPort/removeCallManagerGroup")]
        public removeCallManagerGroupResponse removeCallManagerGroup( removeCallManagerGroup request )
        {
            return (removeCallManagerGroupResponse)base.SendRequestResponse("removeCallManagerGroup", request).GetBodyObject( typeof(removeCallManagerGroupResponse), SoapServiceAttribute.TargetNamespace);
        }

        public IAsyncResult BeginremoveCallManagerGroup( removeCallManagerGroup request, System.AsyncCallback callback, object asyncState)
        {
            return base.BeginSendRequestResponse("removeCallManagerGroup", request, callback, asyncState);
        }

        public removeCallManagerGroupResponse EndremoveCallManagerGroup( System.IAsyncResult asyncResult )
        {
            return (removeCallManagerGroupResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject( typeof(removeCallManagerGroupResponse), SoapServiceAttribute.TargetNamespace);
        }

        [SoapMethod("http://www.cisco.com/AXLPort/addVoiceMailPort")]
        public addVoiceMailPortResponse addVoiceMailPort( addVoiceMailPort request )
        {
            return (addVoiceMailPortResponse)base.SendRequestResponse("addVoiceMailPort", request).GetBodyObject( typeof(addVoiceMailPortResponse), SoapServiceAttribute.TargetNamespace);
        }

        public IAsyncResult BeginaddVoiceMailPort( addVoiceMailPort request, System.AsyncCallback callback, object asyncState)
        {
            return base.BeginSendRequestResponse("addVoiceMailPort", request, callback, asyncState);
        }

        public addVoiceMailPortResponse EndaddVoiceMailPort( System.IAsyncResult asyncResult )
        {
            return (addVoiceMailPortResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject( typeof(addVoiceMailPortResponse), SoapServiceAttribute.TargetNamespace);
        }

        [SoapMethod("http://www.cisco.com/AXLPort/updateVoiceMailPort")]
        public updateVoiceMailPortResponse updateVoiceMailPort( updateVoiceMailPort request )
        {
            return (updateVoiceMailPortResponse)base.SendRequestResponse("updateVoiceMailPort", request).GetBodyObject( typeof(updateVoiceMailPortResponse), SoapServiceAttribute.TargetNamespace);
        }

        public IAsyncResult BeginupdateVoiceMailPort( updateVoiceMailPort request, System.AsyncCallback callback, object asyncState)
        {
            return base.BeginSendRequestResponse("updateVoiceMailPort", request, callback, asyncState);
        }

        public updateVoiceMailPortResponse EndupdateVoiceMailPort( System.IAsyncResult asyncResult )
        {
            return (updateVoiceMailPortResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject( typeof(updateVoiceMailPortResponse), SoapServiceAttribute.TargetNamespace);
        }

        [SoapMethod("http://www.cisco.com/AXLPort/getVoiceMailPort")]
        public getVoiceMailPortResponse getVoiceMailPort( getVoiceMailPort request )
        {
            return (getVoiceMailPortResponse)base.SendRequestResponse("getVoiceMailPort", request).GetBodyObject( typeof(getVoiceMailPortResponse), SoapServiceAttribute.TargetNamespace);
        }

        public IAsyncResult BegingetVoiceMailPort( getVoiceMailPort request, System.AsyncCallback callback, object asyncState)
        {
            return base.BeginSendRequestResponse("getVoiceMailPort", request, callback, asyncState);
        }

        public getVoiceMailPortResponse EndgetVoiceMailPort( System.IAsyncResult asyncResult )
        {
            return (getVoiceMailPortResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject( typeof(getVoiceMailPortResponse), SoapServiceAttribute.TargetNamespace);
        }

        [SoapMethod("http://www.cisco.com/AXLPort/removeVoiceMailPort")]
        public removeVoiceMailPortResponse removeVoiceMailPort( removeVoiceMailPort request )
        {
            return (removeVoiceMailPortResponse)base.SendRequestResponse("removeVoiceMailPort", request).GetBodyObject( typeof(removeVoiceMailPortResponse), SoapServiceAttribute.TargetNamespace);
        }

        public IAsyncResult BeginremoveVoiceMailPort( removeVoiceMailPort request, System.AsyncCallback callback, object asyncState)
        {
            return base.BeginSendRequestResponse("removeVoiceMailPort", request, callback, asyncState);
        }

        public removeVoiceMailPortResponse EndremoveVoiceMailPort( System.IAsyncResult asyncResult )
        {
            return (removeVoiceMailPortResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject( typeof(removeVoiceMailPortResponse), SoapServiceAttribute.TargetNamespace);
        }

        [SoapMethod("http://www.cisco.com/AXLPort/addGatewayEndpoint")]
        public addGatewayEndpointResponse addGatewayEndpoint( addGatewayEndpoint request )
        {
            return (addGatewayEndpointResponse)base.SendRequestResponse("addGatewayEndpoint", request).GetBodyObject( typeof(addGatewayEndpointResponse), SoapServiceAttribute.TargetNamespace);
        }

        public IAsyncResult BeginaddGatewayEndpoint( addGatewayEndpoint request, System.AsyncCallback callback, object asyncState)
        {
            return base.BeginSendRequestResponse("addGatewayEndpoint", request, callback, asyncState);
        }

        public addGatewayEndpointResponse EndaddGatewayEndpoint( System.IAsyncResult asyncResult )
        {
            return (addGatewayEndpointResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject( typeof(addGatewayEndpointResponse), SoapServiceAttribute.TargetNamespace);
        }

        [SoapMethod("http://www.cisco.com/AXLPort/updateGatewayEndpoint")]
        public updateGatewayEndpointResponse updateGatewayEndpoint( updateGatewayEndpoint request )
        {
            return (updateGatewayEndpointResponse)base.SendRequestResponse("updateGatewayEndpoint", request).GetBodyObject( typeof(updateGatewayEndpointResponse), SoapServiceAttribute.TargetNamespace);
        }

        public IAsyncResult BeginupdateGatewayEndpoint( updateGatewayEndpoint request, System.AsyncCallback callback, object asyncState)
        {
            return base.BeginSendRequestResponse("updateGatewayEndpoint", request, callback, asyncState);
        }

        public updateGatewayEndpointResponse EndupdateGatewayEndpoint( System.IAsyncResult asyncResult )
        {
            return (updateGatewayEndpointResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject( typeof(updateGatewayEndpointResponse), SoapServiceAttribute.TargetNamespace);
        }

        [SoapMethod("http://www.cisco.com/AXLPort/getGatewayEndpoint")]
        public getGatewayEndpointResponse getGatewayEndpoint( getGatewayEndpoint request )
        {
            return (getGatewayEndpointResponse)base.SendRequestResponse("getGatewayEndpoint", request).GetBodyObject( typeof(getGatewayEndpointResponse), SoapServiceAttribute.TargetNamespace);
        }

        public IAsyncResult BegingetGatewayEndpoint( getGatewayEndpoint request, System.AsyncCallback callback, object asyncState)
        {
            return base.BeginSendRequestResponse("getGatewayEndpoint", request, callback, asyncState);
        }

        public getGatewayEndpointResponse EndgetGatewayEndpoint( System.IAsyncResult asyncResult )
        {
            return (getGatewayEndpointResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject( typeof(getGatewayEndpointResponse), SoapServiceAttribute.TargetNamespace);
        }

        [SoapMethod("http://www.cisco.com/AXLPort/removeGatewayEndpoint")]
        public removeGatewayEndpointResponse removeGatewayEndpoint( removeGatewayEndpoint request )
        {
            return (removeGatewayEndpointResponse)base.SendRequestResponse("removeGatewayEndpoint", request).GetBodyObject( typeof(removeGatewayEndpointResponse), SoapServiceAttribute.TargetNamespace);
        }

        public IAsyncResult BeginremoveGatewayEndpoint( removeGatewayEndpoint request, System.AsyncCallback callback, object asyncState)
        {
            return base.BeginSendRequestResponse("removeGatewayEndpoint", request, callback, asyncState);
        }

        public removeGatewayEndpointResponse EndremoveGatewayEndpoint( System.IAsyncResult asyncResult )
        {
            return (removeGatewayEndpointResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject( typeof(removeGatewayEndpointResponse), SoapServiceAttribute.TargetNamespace);
        }

        [SoapMethod("http://www.cisco.com/AXLPort/addRouteFilter")]
        public addRouteFilterResponse addRouteFilter( addRouteFilter request )
        {
            return (addRouteFilterResponse)base.SendRequestResponse("addRouteFilter", request).GetBodyObject( typeof(addRouteFilterResponse), SoapServiceAttribute.TargetNamespace);
        }

        public IAsyncResult BeginaddRouteFilter( addRouteFilter request, System.AsyncCallback callback, object asyncState)
        {
            return base.BeginSendRequestResponse("addRouteFilter", request, callback, asyncState);
        }

        public addRouteFilterResponse EndaddRouteFilter( System.IAsyncResult asyncResult )
        {
            return (addRouteFilterResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject( typeof(addRouteFilterResponse), SoapServiceAttribute.TargetNamespace);
        }

        [SoapMethod("http://www.cisco.com/AXLPort/updateRouteFilter")]
        public updateRouteFilterResponse updateRouteFilter( updateRouteFilter request )
        {
            return (updateRouteFilterResponse)base.SendRequestResponse("updateRouteFilter", request).GetBodyObject( typeof(updateRouteFilterResponse), SoapServiceAttribute.TargetNamespace);
        }

        public IAsyncResult BeginupdateRouteFilter( updateRouteFilter request, System.AsyncCallback callback, object asyncState)
        {
            return base.BeginSendRequestResponse("updateRouteFilter", request, callback, asyncState);
        }

        public updateRouteFilterResponse EndupdateRouteFilter( System.IAsyncResult asyncResult )
        {
            return (updateRouteFilterResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject( typeof(updateRouteFilterResponse), SoapServiceAttribute.TargetNamespace);
        }

        [SoapMethod("http://www.cisco.com/AXLPort/getRouteFilter")]
        public getRouteFilterResponse getRouteFilter( getRouteFilter request )
        {
            return (getRouteFilterResponse)base.SendRequestResponse("getRouteFilter", request).GetBodyObject( typeof(getRouteFilterResponse), SoapServiceAttribute.TargetNamespace);
        }

        public IAsyncResult BegingetRouteFilter( getRouteFilter request, System.AsyncCallback callback, object asyncState)
        {
            return base.BeginSendRequestResponse("getRouteFilter", request, callback, asyncState);
        }

        public getRouteFilterResponse EndgetRouteFilter( System.IAsyncResult asyncResult )
        {
            return (getRouteFilterResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject( typeof(getRouteFilterResponse), SoapServiceAttribute.TargetNamespace);
        }

        [SoapMethod("http://www.cisco.com/AXLPort/removeRouteFilter")]
        public removeRouteFilterResponse removeRouteFilter( removeRouteFilter request )
        {
            return (removeRouteFilterResponse)base.SendRequestResponse("removeRouteFilter", request).GetBodyObject( typeof(removeRouteFilterResponse), SoapServiceAttribute.TargetNamespace);
        }

        public IAsyncResult BeginremoveRouteFilter( removeRouteFilter request, System.AsyncCallback callback, object asyncState)
        {
            return base.BeginSendRequestResponse("removeRouteFilter", request, callback, asyncState);
        }

        public removeRouteFilterResponse EndremoveRouteFilter( System.IAsyncResult asyncResult )
        {
            return (removeRouteFilterResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject( typeof(removeRouteFilterResponse), SoapServiceAttribute.TargetNamespace);
        }

        [SoapMethod("http://www.cisco.com/AXLPort/getServiceParameter")]
        public getServiceParameterResponse getServiceParameter( getServiceParameter request )
        {
            return (getServiceParameterResponse)base.SendRequestResponse("getServiceParameter", request).GetBodyObject( typeof(getServiceParameterResponse), SoapServiceAttribute.TargetNamespace);
        }

        public IAsyncResult BegingetServiceParameter( getServiceParameter request, System.AsyncCallback callback, object asyncState)
        {
            return base.BeginSendRequestResponse("getServiceParameter", request, callback, asyncState);
        }

        public getServiceParameterResponse EndgetServiceParameter( System.IAsyncResult asyncResult )
        {
            return (getServiceParameterResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject( typeof(getServiceParameterResponse), SoapServiceAttribute.TargetNamespace);
        }

        [SoapMethod("http://www.cisco.com/AXLPort/updateServiceParameter")]
        public updateServiceParameterResponse updateServiceParameter( updateServiceParameter request )
        {
            return (updateServiceParameterResponse)base.SendRequestResponse("updateServiceParameter", request).GetBodyObject( typeof(updateServiceParameterResponse), SoapServiceAttribute.TargetNamespace);
        }

        public IAsyncResult BeginupdateServiceParameter( updateServiceParameter request, System.AsyncCallback callback, object asyncState)
        {
            return base.BeginSendRequestResponse("updateServiceParameter", request, callback, asyncState);
        }

        public updateServiceParameterResponse EndupdateServiceParameter( System.IAsyncResult asyncResult )
        {
            return (updateServiceParameterResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject( typeof(updateServiceParameterResponse), SoapServiceAttribute.TargetNamespace);
        }

        [SoapMethod("http://www.cisco.com/AXLPort/addLocation")]
        public addLocationResponse addLocation( addLocation request )
        {
            return (addLocationResponse)base.SendRequestResponse("addLocation", request).GetBodyObject( typeof(addLocationResponse), SoapServiceAttribute.TargetNamespace);
        }

        public IAsyncResult BeginaddLocation( addLocation request, System.AsyncCallback callback, object asyncState)
        {
            return base.BeginSendRequestResponse("addLocation", request, callback, asyncState);
        }

        public addLocationResponse EndaddLocation( System.IAsyncResult asyncResult )
        {
            return (addLocationResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject( typeof(addLocationResponse), SoapServiceAttribute.TargetNamespace);
        }

        [SoapMethod("http://www.cisco.com/AXLPort/updateLocation")]
        public updateLocationResponse updateLocation( updateLocation request )
        {
            return (updateLocationResponse)base.SendRequestResponse("updateLocation", request).GetBodyObject( typeof(updateLocationResponse), SoapServiceAttribute.TargetNamespace);
        }

        public IAsyncResult BeginupdateLocation( updateLocation request, System.AsyncCallback callback, object asyncState)
        {
            return base.BeginSendRequestResponse("updateLocation", request, callback, asyncState);
        }

        public updateLocationResponse EndupdateLocation( System.IAsyncResult asyncResult )
        {
            return (updateLocationResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject( typeof(updateLocationResponse), SoapServiceAttribute.TargetNamespace);
        }

        [SoapMethod("http://www.cisco.com/AXLPort/getLocation")]
        public getLocationResponse getLocation( getLocation request )
        {
            return (getLocationResponse)base.SendRequestResponse("getLocation", request).GetBodyObject( typeof(getLocationResponse), SoapServiceAttribute.TargetNamespace);
        }

        public IAsyncResult BegingetLocation( getLocation request, System.AsyncCallback callback, object asyncState)
        {
            return base.BeginSendRequestResponse("getLocation", request, callback, asyncState);
        }

        public getLocationResponse EndgetLocation( System.IAsyncResult asyncResult )
        {
            return (getLocationResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject( typeof(getLocationResponse), SoapServiceAttribute.TargetNamespace);
        }

        [SoapMethod("http://www.cisco.com/AXLPort/removeLocation")]
        public removeLocationResponse removeLocation( removeLocation request )
        {
            return (removeLocationResponse)base.SendRequestResponse("removeLocation", request).GetBodyObject( typeof(removeLocationResponse), SoapServiceAttribute.TargetNamespace);
        }

        public IAsyncResult BeginremoveLocation( removeLocation request, System.AsyncCallback callback, object asyncState)
        {
            return base.BeginSendRequestResponse("removeLocation", request, callback, asyncState);
        }

        public removeLocationResponse EndremoveLocation( System.IAsyncResult asyncResult )
        {
            return (removeLocationResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject( typeof(removeLocationResponse), SoapServiceAttribute.TargetNamespace);
        }

        [SoapMethod("http://www.cisco.com/AXLPort/addRegion")]
        public addRegionResponse addRegion( addRegion request )
        {
            return (addRegionResponse)base.SendRequestResponse("addRegion", request).GetBodyObject( typeof(addRegionResponse), SoapServiceAttribute.TargetNamespace);
        }

        public IAsyncResult BeginaddRegion( addRegion request, System.AsyncCallback callback, object asyncState)
        {
            return base.BeginSendRequestResponse("addRegion", request, callback, asyncState);
        }

        public addRegionResponse EndaddRegion( System.IAsyncResult asyncResult )
        {
            return (addRegionResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject( typeof(addRegionResponse), SoapServiceAttribute.TargetNamespace);
        }

        [SoapMethod("http://www.cisco.com/AXLPort/removeRegion")]
        public removeRegionResponse removeRegion( removeRegion request )
        {
            return (removeRegionResponse)base.SendRequestResponse("removeRegion", request).GetBodyObject( typeof(removeRegionResponse), SoapServiceAttribute.TargetNamespace);
        }

        public IAsyncResult BeginremoveRegion( removeRegion request, System.AsyncCallback callback, object asyncState)
        {
            return base.BeginSendRequestResponse("removeRegion", request, callback, asyncState);
        }

        public removeRegionResponse EndremoveRegion( System.IAsyncResult asyncResult )
        {
            return (removeRegionResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject( typeof(removeRegionResponse), SoapServiceAttribute.TargetNamespace);
        }

        [SoapMethod("http://www.cisco.com/AXLPort/getRegion")]
        public getRegionResponse getRegion( getRegion request )
        {
            return (getRegionResponse)base.SendRequestResponse("getRegion", request).GetBodyObject( typeof(getRegionResponse), SoapServiceAttribute.TargetNamespace);
        }

        public IAsyncResult BegingetRegion( getRegion request, System.AsyncCallback callback, object asyncState)
        {
            return base.BeginSendRequestResponse("getRegion", request, callback, asyncState);
        }

        public getRegionResponse EndgetRegion( System.IAsyncResult asyncResult )
        {
            return (getRegionResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject( typeof(getRegionResponse), SoapServiceAttribute.TargetNamespace);
        }

        [SoapMethod("http://www.cisco.com/AXLPort/updateRegionMatrix")]
        public updateRegionMatrixResponse updateRegionMatrix( updateRegionMatrix request )
        {
            return (updateRegionMatrixResponse)base.SendRequestResponse("updateRegionMatrix", request).GetBodyObject( typeof(updateRegionMatrixResponse), SoapServiceAttribute.TargetNamespace);
        }

        public IAsyncResult BeginupdateRegionMatrix( updateRegionMatrix request, System.AsyncCallback callback, object asyncState)
        {
            return base.BeginSendRequestResponse("updateRegionMatrix", request, callback, asyncState);
        }

        public updateRegionMatrixResponse EndupdateRegionMatrix( System.IAsyncResult asyncResult )
        {
            return (updateRegionMatrixResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject( typeof(updateRegionMatrixResponse), SoapServiceAttribute.TargetNamespace);
        }

        [SoapMethod("http://www.cisco.com/AXLPort/addMGCP")]
        public addMGCPResponse addMGCP( addMGCP request )
        {
            return (addMGCPResponse)base.SendRequestResponse("addMGCP", request).GetBodyObject( typeof(addMGCPResponse), SoapServiceAttribute.TargetNamespace);
        }

        public IAsyncResult BeginaddMGCP( addMGCP request, System.AsyncCallback callback, object asyncState)
        {
            return base.BeginSendRequestResponse("addMGCP", request, callback, asyncState);
        }

        public addMGCPResponse EndaddMGCP( System.IAsyncResult asyncResult )
        {
            return (addMGCPResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject( typeof(addMGCPResponse), SoapServiceAttribute.TargetNamespace);
        }

        [SoapMethod("http://www.cisco.com/AXLPort/addMGCPUnit")]
        public addMGCPUnitResponse addMGCPUnit( addMGCPUnit request )
        {
            return (addMGCPUnitResponse)base.SendRequestResponse("addMGCPUnit", request).GetBodyObject( typeof(addMGCPUnitResponse), SoapServiceAttribute.TargetNamespace);
        }

        public IAsyncResult BeginaddMGCPUnit( addMGCPUnit request, System.AsyncCallback callback, object asyncState)
        {
            return base.BeginSendRequestResponse("addMGCPUnit", request, callback, asyncState);
        }

        public addMGCPUnitResponse EndaddMGCPUnit( System.IAsyncResult asyncResult )
        {
            return (addMGCPUnitResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject( typeof(addMGCPUnitResponse), SoapServiceAttribute.TargetNamespace);
        }

        [SoapMethod("http://www.cisco.com/AXLPort/addMGCPSubunit")]
        public addMGCPSubunitResponse addMGCPSubunit( addMGCPSubunit request )
        {
            return (addMGCPSubunitResponse)base.SendRequestResponse("addMGCPSubunit", request).GetBodyObject( typeof(addMGCPSubunitResponse), SoapServiceAttribute.TargetNamespace);
        }

        public IAsyncResult BeginaddMGCPSubunit( addMGCPSubunit request, System.AsyncCallback callback, object asyncState)
        {
            return base.BeginSendRequestResponse("addMGCPSubunit", request, callback, asyncState);
        }

        public addMGCPSubunitResponse EndaddMGCPSubunit( System.IAsyncResult asyncResult )
        {
            return (addMGCPSubunitResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject( typeof(addMGCPSubunitResponse), SoapServiceAttribute.TargetNamespace);
        }

        [SoapMethod("http://www.cisco.com/AXLPort/addMGCPEndpoint")]
        public addMGCPEndpointResponse addMGCPEndpoint( addMGCPEndpoint request )
        {
            return (addMGCPEndpointResponse)base.SendRequestResponse("addMGCPEndpoint", request).GetBodyObject( typeof(addMGCPEndpointResponse), SoapServiceAttribute.TargetNamespace);
        }

        public IAsyncResult BeginaddMGCPEndpoint( addMGCPEndpoint request, System.AsyncCallback callback, object asyncState)
        {
            return base.BeginSendRequestResponse("addMGCPEndpoint", request, callback, asyncState);
        }

        public addMGCPEndpointResponse EndaddMGCPEndpoint( System.IAsyncResult asyncResult )
        {
            return (addMGCPEndpointResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject( typeof(addMGCPEndpointResponse), SoapServiceAttribute.TargetNamespace);
        }

        [SoapMethod("http://www.cisco.com/AXLPort/getMGCP")]
        public getMGCPResponse getMGCP( getMGCP request )
        {
            return (getMGCPResponse)base.SendRequestResponse("getMGCP", request).GetBodyObject( typeof(getMGCPResponse), SoapServiceAttribute.TargetNamespace);
        }

        public IAsyncResult BegingetMGCP( getMGCP request, System.AsyncCallback callback, object asyncState)
        {
            return base.BeginSendRequestResponse("getMGCP", request, callback, asyncState);
        }

        public getMGCPResponse EndgetMGCP( System.IAsyncResult asyncResult )
        {
            return (getMGCPResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject( typeof(getMGCPResponse), SoapServiceAttribute.TargetNamespace);
        }

        [SoapMethod("http://www.cisco.com/AXLPort/removeMGCP")]
        public removeMGCPResponse removeMGCP( removeMGCP request )
        {
            return (removeMGCPResponse)base.SendRequestResponse("removeMGCP", request).GetBodyObject( typeof(removeMGCPResponse), SoapServiceAttribute.TargetNamespace);
        }

        public IAsyncResult BeginremoveMGCP( removeMGCP request, System.AsyncCallback callback, object asyncState)
        {
            return base.BeginSendRequestResponse("removeMGCP", request, callback, asyncState);
        }

        public removeMGCPResponse EndremoveMGCP( System.IAsyncResult asyncResult )
        {
            return (removeMGCPResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject( typeof(removeMGCPResponse), SoapServiceAttribute.TargetNamespace);
        }

        [SoapMethod("http://www.cisco.com/AXLPort/removeMGCPUnit")]
        public removeMGCPUnitResponse removeMGCPUnit( removeMGCPUnit request )
        {
            return (removeMGCPUnitResponse)base.SendRequestResponse("removeMGCPUnit", request).GetBodyObject( typeof(removeMGCPUnitResponse), SoapServiceAttribute.TargetNamespace);
        }

        public IAsyncResult BeginremoveMGCPUnit( removeMGCPUnit request, System.AsyncCallback callback, object asyncState)
        {
            return base.BeginSendRequestResponse("removeMGCPUnit", request, callback, asyncState);
        }

        public removeMGCPUnitResponse EndremoveMGCPUnit( System.IAsyncResult asyncResult )
        {
            return (removeMGCPUnitResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject( typeof(removeMGCPUnitResponse), SoapServiceAttribute.TargetNamespace);
        }

        [SoapMethod("http://www.cisco.com/AXLPort/removeMGCPSubunit")]
        public removeMGCPSubunitResponse removeMGCPSubunit( removeMGCPSubunit request )
        {
            return (removeMGCPSubunitResponse)base.SendRequestResponse("removeMGCPSubunit", request).GetBodyObject( typeof(removeMGCPSubunitResponse), SoapServiceAttribute.TargetNamespace);
        }

        public IAsyncResult BeginremoveMGCPSubunit( removeMGCPSubunit request, System.AsyncCallback callback, object asyncState)
        {
            return base.BeginSendRequestResponse("removeMGCPSubunit", request, callback, asyncState);
        }

        public removeMGCPSubunitResponse EndremoveMGCPSubunit( System.IAsyncResult asyncResult )
        {
            return (removeMGCPSubunitResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject( typeof(removeMGCPSubunitResponse), SoapServiceAttribute.TargetNamespace);
        }

        [SoapMethod("http://www.cisco.com/AXLPort/removeMGCPEndpoint")]
        public removeMGCPEndpointResponse removeMGCPEndpoint( removeMGCPEndpoint request )
        {
            return (removeMGCPEndpointResponse)base.SendRequestResponse("removeMGCPEndpoint", request).GetBodyObject( typeof(removeMGCPEndpointResponse), SoapServiceAttribute.TargetNamespace);
        }

        public IAsyncResult BeginremoveMGCPEndpoint( removeMGCPEndpoint request, System.AsyncCallback callback, object asyncState)
        {
            return base.BeginSendRequestResponse("removeMGCPEndpoint", request, callback, asyncState);
        }

        public removeMGCPEndpointResponse EndremoveMGCPEndpoint( System.IAsyncResult asyncResult )
        {
            return (removeMGCPEndpointResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject( typeof(removeMGCPEndpointResponse), SoapServiceAttribute.TargetNamespace);
        }

        [SoapMethod("http://www.cisco.com/AXLPort/updateMGCP")]
        public updateMGCPResponse updateMGCP( updateMGCP request )
        {
            return (updateMGCPResponse)base.SendRequestResponse("updateMGCP", request).GetBodyObject( typeof(updateMGCPResponse), SoapServiceAttribute.TargetNamespace);
        }

        public IAsyncResult BeginupdateMGCP( updateMGCP request, System.AsyncCallback callback, object asyncState)
        {
            return base.BeginSendRequestResponse("updateMGCP", request, callback, asyncState);
        }

        public updateMGCPResponse EndupdateMGCP( System.IAsyncResult asyncResult )
        {
            return (updateMGCPResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject( typeof(updateMGCPResponse), SoapServiceAttribute.TargetNamespace);
        }

        [SoapMethod("http://www.cisco.com/AXLPort/addCallManager")]
        public addCallManagerResponse addCallManager( addCallManager request )
        {
            return (addCallManagerResponse)base.SendRequestResponse("addCallManager", request).GetBodyObject( typeof(addCallManagerResponse), SoapServiceAttribute.TargetNamespace);
        }

        public IAsyncResult BeginaddCallManager( addCallManager request, System.AsyncCallback callback, object asyncState)
        {
            return base.BeginSendRequestResponse("addCallManager", request, callback, asyncState);
        }

        public addCallManagerResponse EndaddCallManager( System.IAsyncResult asyncResult )
        {
            return (addCallManagerResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject( typeof(addCallManagerResponse), SoapServiceAttribute.TargetNamespace);
        }

        [SoapMethod("http://www.cisco.com/AXLPort/updateCallManager")]
        public updateCallManagerResponse updateCallManager( updateCallManager request )
        {
            return (updateCallManagerResponse)base.SendRequestResponse("updateCallManager", request).GetBodyObject( typeof(updateCallManagerResponse), SoapServiceAttribute.TargetNamespace);
        }

        public IAsyncResult BeginupdateCallManager( updateCallManager request, System.AsyncCallback callback, object asyncState)
        {
            return base.BeginSendRequestResponse("updateCallManager", request, callback, asyncState);
        }

        public updateCallManagerResponse EndupdateCallManager( System.IAsyncResult asyncResult )
        {
            return (updateCallManagerResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject( typeof(updateCallManagerResponse), SoapServiceAttribute.TargetNamespace);
        }

        [SoapMethod("http://www.cisco.com/AXLPort/getCallManager")]
        public getCallManagerResponse getCallManager( getCallManager request )
        {
            return (getCallManagerResponse)base.SendRequestResponse("getCallManager", request).GetBodyObject( typeof(getCallManagerResponse), SoapServiceAttribute.TargetNamespace);
        }

        public IAsyncResult BegingetCallManager( getCallManager request, System.AsyncCallback callback, object asyncState)
        {
            return base.BeginSendRequestResponse("getCallManager", request, callback, asyncState);
        }

        public getCallManagerResponse EndgetCallManager( System.IAsyncResult asyncResult )
        {
            return (getCallManagerResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject( typeof(getCallManagerResponse), SoapServiceAttribute.TargetNamespace);
        }

        [SoapMethod("http://www.cisco.com/AXLPort/removeCallManager")]
        public removeCallManagerResponse removeCallManager( removeCallManager request )
        {
            return (removeCallManagerResponse)base.SendRequestResponse("removeCallManager", request).GetBodyObject( typeof(removeCallManagerResponse), SoapServiceAttribute.TargetNamespace);
        }

        public IAsyncResult BeginremoveCallManager( removeCallManager request, System.AsyncCallback callback, object asyncState)
        {
            return base.BeginSendRequestResponse("removeCallManager", request, callback, asyncState);
        }

        public removeCallManagerResponse EndremoveCallManager( System.IAsyncResult asyncResult )
        {
            return (removeCallManagerResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject( typeof(removeCallManagerResponse), SoapServiceAttribute.TargetNamespace);
        }

        [SoapMethod("http://www.cisco.com/AXLPort/addProcessNode")]
        public addProcessNodeResponse addProcessNode( addProcessNode request )
        {
            return (addProcessNodeResponse)base.SendRequestResponse("addProcessNode", request).GetBodyObject( typeof(addProcessNodeResponse), SoapServiceAttribute.TargetNamespace);
        }

        public IAsyncResult BeginaddProcessNode( addProcessNode request, System.AsyncCallback callback, object asyncState)
        {
            return base.BeginSendRequestResponse("addProcessNode", request, callback, asyncState);
        }

        public addProcessNodeResponse EndaddProcessNode( System.IAsyncResult asyncResult )
        {
            return (addProcessNodeResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject( typeof(addProcessNodeResponse), SoapServiceAttribute.TargetNamespace);
        }

        [SoapMethod("http://www.cisco.com/AXLPort/updateProcessNode")]
        public updateProcessNodeResponse updateProcessNode( updateProcessNode request )
        {
            return (updateProcessNodeResponse)base.SendRequestResponse("updateProcessNode", request).GetBodyObject( typeof(updateProcessNodeResponse), SoapServiceAttribute.TargetNamespace);
        }

        public IAsyncResult BeginupdateProcessNode( updateProcessNode request, System.AsyncCallback callback, object asyncState)
        {
            return base.BeginSendRequestResponse("updateProcessNode", request, callback, asyncState);
        }

        public updateProcessNodeResponse EndupdateProcessNode( System.IAsyncResult asyncResult )
        {
            return (updateProcessNodeResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject( typeof(updateProcessNodeResponse), SoapServiceAttribute.TargetNamespace);
        }

        [SoapMethod("http://www.cisco.com/AXLPort/getProcessNode")]
        public getProcessNodeResponse getProcessNode( getProcessNode request )
        {
            return (getProcessNodeResponse)base.SendRequestResponse("getProcessNode", request).GetBodyObject( typeof(getProcessNodeResponse), SoapServiceAttribute.TargetNamespace);
        }

        public IAsyncResult BegingetProcessNode( getProcessNode request, System.AsyncCallback callback, object asyncState)
        {
            return base.BeginSendRequestResponse("getProcessNode", request, callback, asyncState);
        }

        public getProcessNodeResponse EndgetProcessNode( System.IAsyncResult asyncResult )
        {
            return (getProcessNodeResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject( typeof(getProcessNodeResponse), SoapServiceAttribute.TargetNamespace);
        }

        [SoapMethod("http://www.cisco.com/AXLPort/removeProcessNode")]
        public removeProcessNodeResponse removeProcessNode( removeProcessNode request )
        {
            return (removeProcessNodeResponse)base.SendRequestResponse("removeProcessNode", request).GetBodyObject( typeof(removeProcessNodeResponse), SoapServiceAttribute.TargetNamespace);
        }

        public IAsyncResult BeginremoveProcessNode( removeProcessNode request, System.AsyncCallback callback, object asyncState)
        {
            return base.BeginSendRequestResponse("removeProcessNode", request, callback, asyncState);
        }

        public removeProcessNodeResponse EndremoveProcessNode( System.IAsyncResult asyncResult )
        {
            return (removeProcessNodeResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject( typeof(removeProcessNodeResponse), SoapServiceAttribute.TargetNamespace);
        }

        [SoapMethod("http://www.cisco.com/AXLPort/listAllProcessNodes")]
        public listAllProcessNodesResponse listAllProcessNodes( listAllProcessNodes request )
        {
            return (listAllProcessNodesResponse)base.SendRequestResponse("listAllProcessNodes", request).GetBodyObject( typeof(listAllProcessNodesResponse), SoapServiceAttribute.TargetNamespace);
        }

        public IAsyncResult BeginlistAllProcessNodes( listAllProcessNodes request, System.AsyncCallback callback, object asyncState)
        {
            return base.BeginSendRequestResponse("listAllProcessNodes", request, callback, asyncState);
        }

        public listAllProcessNodesResponse EndlistAllProcessNodes( System.IAsyncResult asyncResult )
        {
            return (listAllProcessNodesResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject( typeof(listAllProcessNodesResponse), SoapServiceAttribute.TargetNamespace);
        }

        [SoapMethod("http://www.cisco.com/AXLPort/listProcessNodesByService")]
        public listProcessNodesByServiceResponse listProcessNodesByService( listProcessNodesByService request )
        {
            return (listProcessNodesByServiceResponse)base.SendRequestResponse("listProcessNodesByService", request).GetBodyObject( typeof(listProcessNodesByServiceResponse), SoapServiceAttribute.TargetNamespace);
        }

        public IAsyncResult BeginlistProcessNodesByService( listProcessNodesByService request, System.AsyncCallback callback, object asyncState)
        {
            return base.BeginSendRequestResponse("listProcessNodesByService", request, callback, asyncState);
        }

        public listProcessNodesByServiceResponse EndlistProcessNodesByService( System.IAsyncResult asyncResult )
        {
            return (listProcessNodesByServiceResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject( typeof(listProcessNodesByServiceResponse), SoapServiceAttribute.TargetNamespace);
        }

        [SoapMethod("http://www.cisco.com/AXLPort/getProcessNodeService")]
        public getProcessNodeServiceResponse getProcessNodeService( getProcessNodeService request )
        {
            return (getProcessNodeServiceResponse)base.SendRequestResponse("getProcessNodeService", request).GetBodyObject( typeof(getProcessNodeServiceResponse), SoapServiceAttribute.TargetNamespace);
        }

        public IAsyncResult BegingetProcessNodeService( getProcessNodeService request, System.AsyncCallback callback, object asyncState)
        {
            return base.BeginSendRequestResponse("getProcessNodeService", request, callback, asyncState);
        }

        public getProcessNodeServiceResponse EndgetProcessNodeService( System.IAsyncResult asyncResult )
        {
            return (getProcessNodeServiceResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject( typeof(getProcessNodeServiceResponse), SoapServiceAttribute.TargetNamespace);
        }

        [SoapMethod("http://www.cisco.com/AXLPort/updateProcessNodeService")]
        public updateProcessNodeServiceResponse updateProcessNodeService( updateProcessNodeService request )
        {
            return (updateProcessNodeServiceResponse)base.SendRequestResponse("updateProcessNodeService", request).GetBodyObject( typeof(updateProcessNodeServiceResponse), SoapServiceAttribute.TargetNamespace);
        }

        public IAsyncResult BeginupdateProcessNodeService( updateProcessNodeService request, System.AsyncCallback callback, object asyncState)
        {
            return base.BeginSendRequestResponse("updateProcessNodeService", request, callback, asyncState);
        }

        public updateProcessNodeServiceResponse EndupdateProcessNodeService( System.IAsyncResult asyncResult )
        {
            return (updateProcessNodeServiceResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject( typeof(updateProcessNodeServiceResponse), SoapServiceAttribute.TargetNamespace);
        }

        [SoapMethod("http://www.cisco.com/AXLPort/listRoutePartitionByName")]
        public listRoutePartitionByNameResponse listRoutePartitionByName( listRoutePartitionByName request )
        {
            return (listRoutePartitionByNameResponse)base.SendRequestResponse("listRoutePartitionByName", request).GetBodyObject( typeof(listRoutePartitionByNameResponse), SoapServiceAttribute.TargetNamespace);
        }

        public IAsyncResult BeginlistRoutePartitionByName( listRoutePartitionByName request, System.AsyncCallback callback, object asyncState)
        {
            return base.BeginSendRequestResponse("listRoutePartitionByName", request, callback, asyncState);
        }

        public listRoutePartitionByNameResponse EndlistRoutePartitionByName( System.IAsyncResult asyncResult )
        {
            return (listRoutePartitionByNameResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject( typeof(listRoutePartitionByNameResponse), SoapServiceAttribute.TargetNamespace);
        }

        [SoapMethod("http://www.cisco.com/AXLPort/listDevicePoolByName")]
        public listDevicePoolByNameResponse listDevicePoolByName( listDevicePoolByName request )
        {
            return (listDevicePoolByNameResponse)base.SendRequestResponse("listDevicePoolByName", request).GetBodyObject( typeof(listDevicePoolByNameResponse), SoapServiceAttribute.TargetNamespace);
        }

        public IAsyncResult BeginlistDevicePoolByName( listDevicePoolByName request, System.AsyncCallback callback, object asyncState)
        {
            return base.BeginSendRequestResponse("listDevicePoolByName", request, callback, asyncState);
        }

        public listDevicePoolByNameResponse EndlistDevicePoolByName( System.IAsyncResult asyncResult )
        {
            return (listDevicePoolByNameResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject( typeof(listDevicePoolByNameResponse), SoapServiceAttribute.TargetNamespace);
        }

        [SoapMethod("http://www.cisco.com/AXLPort/listPhoneTemplateByName")]
        public listPhoneTemplateByNameResponse listPhoneTemplateByName( listPhoneTemplateByName request )
        {
            return (listPhoneTemplateByNameResponse)base.SendRequestResponse("listPhoneTemplateByName", request).GetBodyObject( typeof(listPhoneTemplateByNameResponse), SoapServiceAttribute.TargetNamespace);
        }

        public IAsyncResult BeginlistPhoneTemplateByName( listPhoneTemplateByName request, System.AsyncCallback callback, object asyncState)
        {
            return base.BeginSendRequestResponse("listPhoneTemplateByName", request, callback, asyncState);
        }

        public listPhoneTemplateByNameResponse EndlistPhoneTemplateByName( System.IAsyncResult asyncResult )
        {
            return (listPhoneTemplateByNameResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject( typeof(listPhoneTemplateByNameResponse), SoapServiceAttribute.TargetNamespace);
        }

        [SoapMethod("http://www.cisco.com/AXLPort/listDeviceByNameAndClass")]
        public listDeviceByNameAndClassResponse listDeviceByNameAndClass( listDeviceByNameAndClass request )
        {
            return (listDeviceByNameAndClassResponse)base.SendRequestResponse("listDeviceByNameAndClass", request).GetBodyObject( typeof(listDeviceByNameAndClassResponse), SoapServiceAttribute.TargetNamespace);
        }

        public IAsyncResult BeginlistDeviceByNameAndClass( listDeviceByNameAndClass request, System.AsyncCallback callback, object asyncState)
        {
            return base.BeginSendRequestResponse("listDeviceByNameAndClass", request, callback, asyncState);
        }

        public listDeviceByNameAndClassResponse EndlistDeviceByNameAndClass( System.IAsyncResult asyncResult )
        {
            return (listDeviceByNameAndClassResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject( typeof(listDeviceByNameAndClassResponse), SoapServiceAttribute.TargetNamespace);
        }

        [SoapMethod("http://www.cisco.com/AXLPort/listMOHAudioSourceByName")]
        public listMOHAudioSourceByNameResponse listMOHAudioSourceByName( listMOHAudioSourceByName request )
        {
            return (listMOHAudioSourceByNameResponse)base.SendRequestResponse("listMOHAudioSourceByName", request).GetBodyObject( typeof(listMOHAudioSourceByNameResponse), SoapServiceAttribute.TargetNamespace);
        }

        public IAsyncResult BeginlistMOHAudioSourceByName( listMOHAudioSourceByName request, System.AsyncCallback callback, object asyncState)
        {
            return base.BeginSendRequestResponse("listMOHAudioSourceByName", request, callback, asyncState);
        }

        public listMOHAudioSourceByNameResponse EndlistMOHAudioSourceByName( System.IAsyncResult asyncResult )
        {
            return (listMOHAudioSourceByNameResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject( typeof(listMOHAudioSourceByNameResponse), SoapServiceAttribute.TargetNamespace);
        }

        [SoapMethod("http://www.cisco.com/AXLPort/updateMOHAudioSource")]
        public updateMOHAudioSourceResponse updateMOHAudioSource( updateMOHAudioSource request )
        {
            return (updateMOHAudioSourceResponse)base.SendRequestResponse("updateMOHAudioSource", request).GetBodyObject( typeof(updateMOHAudioSourceResponse), SoapServiceAttribute.TargetNamespace);
        }

        public IAsyncResult BeginupdateMOHAudioSource( updateMOHAudioSource request, System.AsyncCallback callback, object asyncState)
        {
            return base.BeginSendRequestResponse("updateMOHAudioSource", request, callback, asyncState);
        }

        public updateMOHAudioSourceResponse EndupdateMOHAudioSource( System.IAsyncResult asyncResult )
        {
            return (updateMOHAudioSourceResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject( typeof(updateMOHAudioSourceResponse), SoapServiceAttribute.TargetNamespace);
        }

        [SoapMethod("http://www.cisco.com/AXLPort/getMOHAudioSource")]
        public getMOHAudioSourceResponse getMOHAudioSource( getMOHAudioSource request )
        {
            return (getMOHAudioSourceResponse)base.SendRequestResponse("getMOHAudioSource", request).GetBodyObject( typeof(getMOHAudioSourceResponse), SoapServiceAttribute.TargetNamespace);
        }

        public IAsyncResult BegingetMOHAudioSource( getMOHAudioSource request, System.AsyncCallback callback, object asyncState)
        {
            return base.BeginSendRequestResponse("getMOHAudioSource", request, callback, asyncState);
        }

        public getMOHAudioSourceResponse EndgetMOHAudioSource( System.IAsyncResult asyncResult )
        {
            return (getMOHAudioSourceResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject( typeof(getMOHAudioSourceResponse), SoapServiceAttribute.TargetNamespace);
        }

        [SoapMethod("http://www.cisco.com/AXLPort/removeMOHAudioSource")]
        public removeMOHAudioSourceResponse removeMOHAudioSource( removeMOHAudioSource request )
        {
            return (removeMOHAudioSourceResponse)base.SendRequestResponse("removeMOHAudioSource", request).GetBodyObject( typeof(removeMOHAudioSourceResponse), SoapServiceAttribute.TargetNamespace);
        }

        public IAsyncResult BeginremoveMOHAudioSource( removeMOHAudioSource request, System.AsyncCallback callback, object asyncState)
        {
            return base.BeginSendRequestResponse("removeMOHAudioSource", request, callback, asyncState);
        }

        public removeMOHAudioSourceResponse EndremoveMOHAudioSource( System.IAsyncResult asyncResult )
        {
            return (removeMOHAudioSourceResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject( typeof(removeMOHAudioSourceResponse), SoapServiceAttribute.TargetNamespace);
        }

        [SoapMethod("http://www.cisco.com/AXLPort/listMediaResourceListByName")]
        public listMediaResourceListByNameResponse listMediaResourceListByName( listMediaResourceListByName request )
        {
            return (listMediaResourceListByNameResponse)base.SendRequestResponse("listMediaResourceListByName", request).GetBodyObject( typeof(listMediaResourceListByNameResponse), SoapServiceAttribute.TargetNamespace);
        }

        public IAsyncResult BeginlistMediaResourceListByName( listMediaResourceListByName request, System.AsyncCallback callback, object asyncState)
        {
            return base.BeginSendRequestResponse("listMediaResourceListByName", request, callback, asyncState);
        }

        public listMediaResourceListByNameResponse EndlistMediaResourceListByName( System.IAsyncResult asyncResult )
        {
            return (listMediaResourceListByNameResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject( typeof(listMediaResourceListByNameResponse), SoapServiceAttribute.TargetNamespace);
        }

        [SoapMethod("http://www.cisco.com/AXLPort/addMediaResourceList")]
        public addMediaResourceListResponse addMediaResourceList( addMediaResourceList request )
        {
            return (addMediaResourceListResponse)base.SendRequestResponse("addMediaResourceList", request).GetBodyObject( typeof(addMediaResourceListResponse), SoapServiceAttribute.TargetNamespace);
        }

        public IAsyncResult BeginaddMediaResourceList( addMediaResourceList request, System.AsyncCallback callback, object asyncState)
        {
            return base.BeginSendRequestResponse("addMediaResourceList", request, callback, asyncState);
        }

        public addMediaResourceListResponse EndaddMediaResourceList( System.IAsyncResult asyncResult )
        {
            return (addMediaResourceListResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject( typeof(addMediaResourceListResponse), SoapServiceAttribute.TargetNamespace);
        }

        [SoapMethod("http://www.cisco.com/AXLPort/getMediaResourceList")]
        public getMediaResourceListResponse getMediaResourceList( getMediaResourceList request )
        {
            return (getMediaResourceListResponse)base.SendRequestResponse("getMediaResourceList", request).GetBodyObject( typeof(getMediaResourceListResponse), SoapServiceAttribute.TargetNamespace);
        }

        public IAsyncResult BegingetMediaResourceList( getMediaResourceList request, System.AsyncCallback callback, object asyncState)
        {
            return base.BeginSendRequestResponse("getMediaResourceList", request, callback, asyncState);
        }

        public getMediaResourceListResponse EndgetMediaResourceList( System.IAsyncResult asyncResult )
        {
            return (getMediaResourceListResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject( typeof(getMediaResourceListResponse), SoapServiceAttribute.TargetNamespace);
        }

        [SoapMethod("http://www.cisco.com/AXLPort/removeMediaResourceList")]
        public removeMediaResourceListResponse removeMediaResourceList( removeMediaResourceList request )
        {
            return (removeMediaResourceListResponse)base.SendRequestResponse("removeMediaResourceList", request).GetBodyObject( typeof(removeMediaResourceListResponse), SoapServiceAttribute.TargetNamespace);
        }

        public IAsyncResult BeginremoveMediaResourceList( removeMediaResourceList request, System.AsyncCallback callback, object asyncState)
        {
            return base.BeginSendRequestResponse("removeMediaResourceList", request, callback, asyncState);
        }

        public removeMediaResourceListResponse EndremoveMediaResourceList( System.IAsyncResult asyncResult )
        {
            return (removeMediaResourceListResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject( typeof(removeMediaResourceListResponse), SoapServiceAttribute.TargetNamespace);
        }

        [SoapMethod("http://www.cisco.com/AXLPort/updateMediaResourceList")]
        public updateMediaResourceListResponse updateMediaResourceList( updateMediaResourceList request )
        {
            return (updateMediaResourceListResponse)base.SendRequestResponse("updateMediaResourceList", request).GetBodyObject( typeof(updateMediaResourceListResponse), SoapServiceAttribute.TargetNamespace);
        }

        public IAsyncResult BeginupdateMediaResourceList( updateMediaResourceList request, System.AsyncCallback callback, object asyncState)
        {
            return base.BeginSendRequestResponse("updateMediaResourceList", request, callback, asyncState);
        }

        public updateMediaResourceListResponse EndupdateMediaResourceList( System.IAsyncResult asyncResult )
        {
            return (updateMediaResourceListResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject( typeof(updateMediaResourceListResponse), SoapServiceAttribute.TargetNamespace);
        }

        [SoapMethod("http://www.cisco.com/AXLPort/listMediaResourceGroupByName")]
        public listMediaResourceGroupByNameResponse listMediaResourceGroupByName( listMediaResourceGroupByName request )
        {
            return (listMediaResourceGroupByNameResponse)base.SendRequestResponse("listMediaResourceGroupByName", request).GetBodyObject( typeof(listMediaResourceGroupByNameResponse), SoapServiceAttribute.TargetNamespace);
        }

        public IAsyncResult BeginlistMediaResourceGroupByName( listMediaResourceGroupByName request, System.AsyncCallback callback, object asyncState)
        {
            return base.BeginSendRequestResponse("listMediaResourceGroupByName", request, callback, asyncState);
        }

        public listMediaResourceGroupByNameResponse EndlistMediaResourceGroupByName( System.IAsyncResult asyncResult )
        {
            return (listMediaResourceGroupByNameResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject( typeof(listMediaResourceGroupByNameResponse), SoapServiceAttribute.TargetNamespace);
        }

        [SoapMethod("http://www.cisco.com/AXLPort/addMediaResourceGroup")]
        public addMediaResourceGroupResponse addMediaResourceGroup( addMediaResourceGroup request )
        {
            return (addMediaResourceGroupResponse)base.SendRequestResponse("addMediaResourceGroup", request).GetBodyObject( typeof(addMediaResourceGroupResponse), SoapServiceAttribute.TargetNamespace);
        }

        public IAsyncResult BeginaddMediaResourceGroup( addMediaResourceGroup request, System.AsyncCallback callback, object asyncState)
        {
            return base.BeginSendRequestResponse("addMediaResourceGroup", request, callback, asyncState);
        }

        public addMediaResourceGroupResponse EndaddMediaResourceGroup( System.IAsyncResult asyncResult )
        {
            return (addMediaResourceGroupResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject( typeof(addMediaResourceGroupResponse), SoapServiceAttribute.TargetNamespace);
        }

        [SoapMethod("http://www.cisco.com/AXLPort/getMediaResourceGroup")]
        public getMediaResourceGroupResponse getMediaResourceGroup( getMediaResourceGroup request )
        {
            return (getMediaResourceGroupResponse)base.SendRequestResponse("getMediaResourceGroup", request).GetBodyObject( typeof(getMediaResourceGroupResponse), SoapServiceAttribute.TargetNamespace);
        }

        public IAsyncResult BegingetMediaResourceGroup( getMediaResourceGroup request, System.AsyncCallback callback, object asyncState)
        {
            return base.BeginSendRequestResponse("getMediaResourceGroup", request, callback, asyncState);
        }

        public getMediaResourceGroupResponse EndgetMediaResourceGroup( System.IAsyncResult asyncResult )
        {
            return (getMediaResourceGroupResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject( typeof(getMediaResourceGroupResponse), SoapServiceAttribute.TargetNamespace);
        }

        [SoapMethod("http://www.cisco.com/AXLPort/removeMediaResourceGroup")]
        public removeMediaResourceGroupResponse removeMediaResourceGroup( removeMediaResourceGroup request )
        {
            return (removeMediaResourceGroupResponse)base.SendRequestResponse("removeMediaResourceGroup", request).GetBodyObject( typeof(removeMediaResourceGroupResponse), SoapServiceAttribute.TargetNamespace);
        }

        public IAsyncResult BeginremoveMediaResourceGroup( removeMediaResourceGroup request, System.AsyncCallback callback, object asyncState)
        {
            return base.BeginSendRequestResponse("removeMediaResourceGroup", request, callback, asyncState);
        }

        public removeMediaResourceGroupResponse EndremoveMediaResourceGroup( System.IAsyncResult asyncResult )
        {
            return (removeMediaResourceGroupResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject( typeof(removeMediaResourceGroupResponse), SoapServiceAttribute.TargetNamespace);
        }

        [SoapMethod("http://www.cisco.com/AXLPort/updateMediaResourceGroup")]
        public updateMediaResourceGroupResponse updateMediaResourceGroup( updateMediaResourceGroup request )
        {
            return (updateMediaResourceGroupResponse)base.SendRequestResponse("updateMediaResourceGroup", request).GetBodyObject( typeof(updateMediaResourceGroupResponse), SoapServiceAttribute.TargetNamespace);
        }

        public IAsyncResult BeginupdateMediaResourceGroup( updateMediaResourceGroup request, System.AsyncCallback callback, object asyncState)
        {
            return base.BeginSendRequestResponse("updateMediaResourceGroup", request, callback, asyncState);
        }

        public updateMediaResourceGroupResponse EndupdateMediaResourceGroup( System.IAsyncResult asyncResult )
        {
            return (updateMediaResourceGroupResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject( typeof(updateMediaResourceGroupResponse), SoapServiceAttribute.TargetNamespace);
        }

        [SoapMethod("http://www.cisco.com/AXLPort/listLocationByName")]
        public listLocationByNameResponse listLocationByName( listLocationByName request )
        {
            return (listLocationByNameResponse)base.SendRequestResponse("listLocationByName", request).GetBodyObject( typeof(listLocationByNameResponse), SoapServiceAttribute.TargetNamespace);
        }

        public IAsyncResult BeginlistLocationByName( listLocationByName request, System.AsyncCallback callback, object asyncState)
        {
            return base.BeginSendRequestResponse("listLocationByName", request, callback, asyncState);
        }

        public listLocationByNameResponse EndlistLocationByName( System.IAsyncResult asyncResult )
        {
            return (listLocationByNameResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject( typeof(listLocationByNameResponse), SoapServiceAttribute.TargetNamespace);
        }

        [SoapMethod("http://www.cisco.com/AXLPort/listAARGroupByName")]
        public listAARGroupByNameResponse listAARGroupByName( listAARGroupByName request )
        {
            return (listAARGroupByNameResponse)base.SendRequestResponse("listAARGroupByName", request).GetBodyObject( typeof(listAARGroupByNameResponse), SoapServiceAttribute.TargetNamespace);
        }

        public IAsyncResult BeginlistAARGroupByName( listAARGroupByName request, System.AsyncCallback callback, object asyncState)
        {
            return base.BeginSendRequestResponse("listAARGroupByName", request, callback, asyncState);
        }

        public listAARGroupByNameResponse EndlistAARGroupByName( System.IAsyncResult asyncResult )
        {
            return (listAARGroupByNameResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject( typeof(listAARGroupByNameResponse), SoapServiceAttribute.TargetNamespace);
        }

        [SoapMethod("http://www.cisco.com/AXLPort/listVoiceMailProfileByName")]
        public listVoiceMailProfileByNameResponse listVoiceMailProfileByName( listVoiceMailProfileByName request )
        {
            return (listVoiceMailProfileByNameResponse)base.SendRequestResponse("listVoiceMailProfileByName", request).GetBodyObject( typeof(listVoiceMailProfileByNameResponse), SoapServiceAttribute.TargetNamespace);
        }

        public IAsyncResult BeginlistVoiceMailProfileByName( listVoiceMailProfileByName request, System.AsyncCallback callback, object asyncState)
        {
            return base.BeginSendRequestResponse("listVoiceMailProfileByName", request, callback, asyncState);
        }

        public listVoiceMailProfileByNameResponse EndlistVoiceMailProfileByName( System.IAsyncResult asyncResult )
        {
            return (listVoiceMailProfileByNameResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject( typeof(listVoiceMailProfileByNameResponse), SoapServiceAttribute.TargetNamespace);
        }

        [SoapMethod("http://www.cisco.com/AXLPort/listGatekeeperByName")]
        public listGatekeeperByNameResponse listGatekeeperByName( listGatekeeperByName request )
        {
            return (listGatekeeperByNameResponse)base.SendRequestResponse("listGatekeeperByName", request).GetBodyObject( typeof(listGatekeeperByNameResponse), SoapServiceAttribute.TargetNamespace);
        }

        public IAsyncResult BeginlistGatekeeperByName( listGatekeeperByName request, System.AsyncCallback callback, object asyncState)
        {
            return base.BeginSendRequestResponse("listGatekeeperByName", request, callback, asyncState);
        }

        public listGatekeeperByNameResponse EndlistGatekeeperByName( System.IAsyncResult asyncResult )
        {
            return (listGatekeeperByNameResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject( typeof(listGatekeeperByNameResponse), SoapServiceAttribute.TargetNamespace);
        }

        [SoapMethod("http://www.cisco.com/AXLPort/addGatekeeper")]
        public addGatekeeperResponse addGatekeeper( addGatekeeper request )
        {
            return (addGatekeeperResponse)base.SendRequestResponse("addGatekeeper", request).GetBodyObject( typeof(addGatekeeperResponse), SoapServiceAttribute.TargetNamespace);
        }

        public IAsyncResult BeginaddGatekeeper( addGatekeeper request, System.AsyncCallback callback, object asyncState)
        {
            return base.BeginSendRequestResponse("addGatekeeper", request, callback, asyncState);
        }

        public addGatekeeperResponse EndaddGatekeeper( System.IAsyncResult asyncResult )
        {
            return (addGatekeeperResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject( typeof(addGatekeeperResponse), SoapServiceAttribute.TargetNamespace);
        }

        [SoapMethod("http://www.cisco.com/AXLPort/getGatekeeper")]
        public getGatekeeperResponse getGatekeeper( getGatekeeper request )
        {
            return (getGatekeeperResponse)base.SendRequestResponse("getGatekeeper", request).GetBodyObject( typeof(getGatekeeperResponse), SoapServiceAttribute.TargetNamespace);
        }

        public IAsyncResult BegingetGatekeeper( getGatekeeper request, System.AsyncCallback callback, object asyncState)
        {
            return base.BeginSendRequestResponse("getGatekeeper", request, callback, asyncState);
        }

        public getGatekeeperResponse EndgetGatekeeper( System.IAsyncResult asyncResult )
        {
            return (getGatekeeperResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject( typeof(getGatekeeperResponse), SoapServiceAttribute.TargetNamespace);
        }

        [SoapMethod("http://www.cisco.com/AXLPort/removeGatekeeper")]
        public removeGatekeeperResponse removeGatekeeper( removeGatekeeper request )
        {
            return (removeGatekeeperResponse)base.SendRequestResponse("removeGatekeeper", request).GetBodyObject( typeof(removeGatekeeperResponse), SoapServiceAttribute.TargetNamespace);
        }

        public IAsyncResult BeginremoveGatekeeper( removeGatekeeper request, System.AsyncCallback callback, object asyncState)
        {
            return base.BeginSendRequestResponse("removeGatekeeper", request, callback, asyncState);
        }

        public removeGatekeeperResponse EndremoveGatekeeper( System.IAsyncResult asyncResult )
        {
            return (removeGatekeeperResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject( typeof(removeGatekeeperResponse), SoapServiceAttribute.TargetNamespace);
        }

        [SoapMethod("http://www.cisco.com/AXLPort/updateGatekeeper")]
        public updateGatekeeperResponse updateGatekeeper( updateGatekeeper request )
        {
            return (updateGatekeeperResponse)base.SendRequestResponse("updateGatekeeper", request).GetBodyObject( typeof(updateGatekeeperResponse), SoapServiceAttribute.TargetNamespace);
        }

        public IAsyncResult BeginupdateGatekeeper( updateGatekeeper request, System.AsyncCallback callback, object asyncState)
        {
            return base.BeginSendRequestResponse("updateGatekeeper", request, callback, asyncState);
        }

        public updateGatekeeperResponse EndupdateGatekeeper( System.IAsyncResult asyncResult )
        {
            return (updateGatekeeperResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject( typeof(updateGatekeeperResponse), SoapServiceAttribute.TargetNamespace);
        }

        [SoapMethod("http://www.cisco.com/AXLPort/addH323Phone")]
        public addH323PhoneResponse addH323Phone( addH323Phone request )
        {
            return (addH323PhoneResponse)base.SendRequestResponse("addH323Phone", request).GetBodyObject( typeof(addH323PhoneResponse), SoapServiceAttribute.TargetNamespace);
        }

        public IAsyncResult BeginaddH323Phone( addH323Phone request, System.AsyncCallback callback, object asyncState)
        {
            return base.BeginSendRequestResponse("addH323Phone", request, callback, asyncState);
        }

        public addH323PhoneResponse EndaddH323Phone( System.IAsyncResult asyncResult )
        {
            return (addH323PhoneResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject( typeof(addH323PhoneResponse), SoapServiceAttribute.TargetNamespace);
        }

        [SoapMethod("http://www.cisco.com/AXLPort/addH323Gateway")]
        public addH323GatewayResponse addH323Gateway( addH323Gateway request )
        {
            return (addH323GatewayResponse)base.SendRequestResponse("addH323Gateway", request).GetBodyObject( typeof(addH323GatewayResponse), SoapServiceAttribute.TargetNamespace);
        }

        public IAsyncResult BeginaddH323Gateway( addH323Gateway request, System.AsyncCallback callback, object asyncState)
        {
            return base.BeginSendRequestResponse("addH323Gateway", request, callback, asyncState);
        }

        public addH323GatewayResponse EndaddH323Gateway( System.IAsyncResult asyncResult )
        {
            return (addH323GatewayResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject( typeof(addH323GatewayResponse), SoapServiceAttribute.TargetNamespace);
        }

        [SoapMethod("http://www.cisco.com/AXLPort/addH323Trunk")]
        public SoapEnvelope addH323Trunk()
        {
            return base.SendRequestResponse("addH323Trunk", new SoapEnvelope());
        }

        public IAsyncResult BeginaddH323Trunk(System.AsyncCallback callback, object asyncState)
        {
            return base.BeginSendRequestResponse("addH323Trunk", new SoapEnvelope(), callback, asyncState);
        }

        public SoapEnvelope EndaddH323Trunk( System.IAsyncResult asyncResult )
        {
            return base.EndSendRequestResponse(asyncResult);
        }

        [SoapMethod("http://www.cisco.com/AXLPort/getH323Phone")]
        public getH323PhoneResponse getH323Phone( getH323Phone request )
        {
            return (getH323PhoneResponse)base.SendRequestResponse("getH323Phone", request).GetBodyObject( typeof(getH323PhoneResponse), SoapServiceAttribute.TargetNamespace);
        }

        public IAsyncResult BegingetH323Phone( getH323Phone request, System.AsyncCallback callback, object asyncState)
        {
            return base.BeginSendRequestResponse("getH323Phone", request, callback, asyncState);
        }

        public getH323PhoneResponse EndgetH323Phone( System.IAsyncResult asyncResult )
        {
            return (getH323PhoneResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject( typeof(getH323PhoneResponse), SoapServiceAttribute.TargetNamespace);
        }

        [SoapMethod("http://www.cisco.com/AXLPort/getH323Gateway")]
        public getH323GatewayResponse getH323Gateway( getH323Gateway request )
        {
            return (getH323GatewayResponse)base.SendRequestResponse("getH323Gateway", request).GetBodyObject( typeof(getH323GatewayResponse), SoapServiceAttribute.TargetNamespace);
        }

        public IAsyncResult BegingetH323Gateway( getH323Gateway request, System.AsyncCallback callback, object asyncState)
        {
            return base.BeginSendRequestResponse("getH323Gateway", request, callback, asyncState);
        }

        public getH323GatewayResponse EndgetH323Gateway( System.IAsyncResult asyncResult )
        {
            return (getH323GatewayResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject( typeof(getH323GatewayResponse), SoapServiceAttribute.TargetNamespace);
        }

        [SoapMethod("http://www.cisco.com/AXLPort/getH323Trunk")]
        public getH323TrunkResponse getH323Trunk( getH323Trunk request )
        {
            return (getH323TrunkResponse)base.SendRequestResponse("getH323Trunk", request).GetBodyObject( typeof(getH323TrunkResponse), SoapServiceAttribute.TargetNamespace);
        }

        public IAsyncResult BegingetH323Trunk( getH323Trunk request, System.AsyncCallback callback, object asyncState)
        {
            return base.BeginSendRequestResponse("getH323Trunk", request, callback, asyncState);
        }

        public getH323TrunkResponse EndgetH323Trunk( System.IAsyncResult asyncResult )
        {
            return (getH323TrunkResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject( typeof(getH323TrunkResponse), SoapServiceAttribute.TargetNamespace);
        }

        [SoapMethod("http://www.cisco.com/AXLPort/removeH323Phone")]
        public removeH323PhoneResponse removeH323Phone( removeH323Phone request )
        {
            return (removeH323PhoneResponse)base.SendRequestResponse("removeH323Phone", request).GetBodyObject( typeof(removeH323PhoneResponse), SoapServiceAttribute.TargetNamespace);
        }

        public IAsyncResult BeginremoveH323Phone( removeH323Phone request, System.AsyncCallback callback, object asyncState)
        {
            return base.BeginSendRequestResponse("removeH323Phone", request, callback, asyncState);
        }

        public removeH323PhoneResponse EndremoveH323Phone( System.IAsyncResult asyncResult )
        {
            return (removeH323PhoneResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject( typeof(removeH323PhoneResponse), SoapServiceAttribute.TargetNamespace);
        }

        [SoapMethod("http://www.cisco.com/AXLPort/removeH323Gateway")]
        public removeH323GatewayResponse removeH323Gateway( removeH323Gateway request )
        {
            return (removeH323GatewayResponse)base.SendRequestResponse("removeH323Gateway", request).GetBodyObject( typeof(removeH323GatewayResponse), SoapServiceAttribute.TargetNamespace);
        }

        public IAsyncResult BeginremoveH323Gateway( removeH323Gateway request, System.AsyncCallback callback, object asyncState)
        {
            return base.BeginSendRequestResponse("removeH323Gateway", request, callback, asyncState);
        }

        public removeH323GatewayResponse EndremoveH323Gateway( System.IAsyncResult asyncResult )
        {
            return (removeH323GatewayResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject( typeof(removeH323GatewayResponse), SoapServiceAttribute.TargetNamespace);
        }

        [SoapMethod("http://www.cisco.com/AXLPort/removeH323Trunk")]
        public removeH323TrunkResponse removeH323Trunk( removeH323Trunk request )
        {
            return (removeH323TrunkResponse)base.SendRequestResponse("removeH323Trunk", request).GetBodyObject( typeof(removeH323TrunkResponse), SoapServiceAttribute.TargetNamespace);
        }

        public IAsyncResult BeginremoveH323Trunk( removeH323Trunk request, System.AsyncCallback callback, object asyncState)
        {
            return base.BeginSendRequestResponse("removeH323Trunk", request, callback, asyncState);
        }

        public removeH323TrunkResponse EndremoveH323Trunk( System.IAsyncResult asyncResult )
        {
            return (removeH323TrunkResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject( typeof(removeH323TrunkResponse), SoapServiceAttribute.TargetNamespace);
        }

        [SoapMethod("http://www.cisco.com/AXLPort/updateH323Phone")]
        public updateH323PhoneResponse updateH323Phone( updateH323Phone request )
        {
            return (updateH323PhoneResponse)base.SendRequestResponse("updateH323Phone", request).GetBodyObject( typeof(updateH323PhoneResponse), SoapServiceAttribute.TargetNamespace);
        }

        public IAsyncResult BeginupdateH323Phone( updateH323Phone request, System.AsyncCallback callback, object asyncState)
        {
            return base.BeginSendRequestResponse("updateH323Phone", request, callback, asyncState);
        }

        public updateH323PhoneResponse EndupdateH323Phone( System.IAsyncResult asyncResult )
        {
            return (updateH323PhoneResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject( typeof(updateH323PhoneResponse), SoapServiceAttribute.TargetNamespace);
        }

        [SoapMethod("http://www.cisco.com/AXLPort/updateH323Gateway")]
        public updateH323GatewayResponse updateH323Gateway( updateH323Gateway request )
        {
            return (updateH323GatewayResponse)base.SendRequestResponse("updateH323Gateway", request).GetBodyObject( typeof(updateH323GatewayResponse), SoapServiceAttribute.TargetNamespace);
        }

        public IAsyncResult BeginupdateH323Gateway( updateH323Gateway request, System.AsyncCallback callback, object asyncState)
        {
            return base.BeginSendRequestResponse("updateH323Gateway", request, callback, asyncState);
        }

        public updateH323GatewayResponse EndupdateH323Gateway( System.IAsyncResult asyncResult )
        {
            return (updateH323GatewayResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject( typeof(updateH323GatewayResponse), SoapServiceAttribute.TargetNamespace);
        }

        [SoapMethod("http://www.cisco.com/AXLPort/updateH323Trunk")]
        public SoapEnvelope updateH323Trunk()
        {
            return base.SendRequestResponse("updateH323Trunk", new SoapEnvelope());
        }

        public IAsyncResult BeginupdateH323Trunk(System.AsyncCallback callback, object asyncState)
        {
            return base.BeginSendRequestResponse("updateH323Trunk", new SoapEnvelope(), callback, asyncState);
        }

        public SoapEnvelope EndupdateH323Trunk( System.IAsyncResult asyncResult )
        {
            return base.EndSendRequestResponse(asyncResult);
        }

        [SoapMethod("http://www.cisco.com/AXLPort/executeSQLQuery")]
        public executeSQLQueryResponse executeSQLQuery( executeSQLQuery request )
        {
            return (executeSQLQueryResponse)base.SendRequestResponse("executeSQLQuery", request).GetBodyObject( typeof(executeSQLQueryResponse), SoapServiceAttribute.TargetNamespace);
        }

        public IAsyncResult BeginexecuteSQLQuery( executeSQLQuery request, System.AsyncCallback callback, object asyncState)
        {
            return base.BeginSendRequestResponse("executeSQLQuery", request, callback, asyncState);
        }

        public executeSQLQueryResponse EndexecuteSQLQuery( System.IAsyncResult asyncResult )
        {
            return (executeSQLQueryResponse)base.EndSendRequestResponse(asyncResult).GetBodyObject( typeof(executeSQLQueryResponse), SoapServiceAttribute.TargetNamespace);
        }

    }

}